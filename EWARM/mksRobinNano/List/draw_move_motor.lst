###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_move_motor.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_move_motor.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp
      1          #include "draw_move_motor.h"
      2          #include "gui.h"
      3          #include "button.h"
      4          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      5          #include "draw_print_file.h"
      6          #include "fontLib.h"
      7          //#include "printer.h"
      8          //#include "gcode.h"
      9          #include <math.h>
     10          #include <stdint.h>
     11          #include "stdint.h"
     12          //#include "mks_tft_fifo.h"
     13          //#include "mks_tft_com.h"
     14          #include "Marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     15          
     16          #ifndef GUI_FLASH
     17          #define GUI_FLASH
     18          #endif
     19          
     20          

   \                                 In section .bss, align 4
     21          static BUTTON_STRUCT buttonXI, buttonXD, buttonYI, buttonYD, buttonZI, buttonZD, buttonV,  buttonRet;
     22          GUI_HWIN hMoveMotorWnd;
   \                     hMoveMotorWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonYI:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonZI:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonV:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     23          
     24          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     25          //extern TFT_FIFO gcodeCmdTxFIFO;		//gcode ÷∏¡Ó∑¢ÀÕ∂”¡–
     26          //extern TFT_FIFO gcodeCmdRxFIFO;		//gcode	÷∏¡ÓΩ” ’∂”¡–
     27          extern unsigned char positionSaveFlag;
     28          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     29          //extern PR_STATUS printerStaus;
     30          
     31          //int16_t curXSpeed = 3000;
     32          //int16_t curYSpeed = 3000;
     33          //int16_t curZSpeed = 3000;
     34          
     35          

   \                                 In section .text, align 2, keep-with-next
     36          static void cbMoveMotorWin(WM_MESSAGE * pMsg) {
   \                     _Z14cbMoveMotorWinP10WM_MESSAGE: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     37          	
     38          	struct PressEvt *press_event;
                 	                 ^
Warning[Pe550]: variable "press_event" was set but never used
     39          	char buf[30] = {0};
   \   00000004   0xA901             ADD      R1,SP,#+4
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x4614             MOV      R4,R2
   \   0000000C   0x4615             MOV      R5,R2
   \   0000000E   0xC13C             STM      R1!,{R2-R5}
   \   00000010   0xC13C             STM      R1!,{R2-R5}
     40          
     41          	switch (pMsg->MsgId) {
   \   00000012   0x6801             LDR      R1,[R0, #+0]
   \   00000014   0x290C             CMP      R1,#+12
   \   00000016   0xBF1C             ITT      NE 
   \   00000018   0x290D             CMPNE    R1,#+13
   \   0000001A   0x290F             CMPNE    R1,#+15
   \   0000001C   0xF000 0x80D8      BEQ.W    ??cbMoveMotorWin_0
   \   00000020   0x2926             CMP      R1,#+38
   \   00000022   0xF040 0x80D3      BNE.W    ??cbMoveMotorWin_1
     42          	case WM_PAINT:
     43          	//GUI_SetBkColor(GUI_BLACK);
     44          	//	GUI_Clear();
     45          	//GUI_DispString("window");
     46          		break;
     47          	case WM_TOUCH:
     48          	 	press_event = (struct PressEvt *)pMsg->Data.p;
     49          		
     50          		break;
     51          	case WM_TOUCH_CHILD:
     52          	  press_event = (struct PressEvt *)pMsg->Data.p;
     53          		
     54          	  break;
     55          
     56          	case WM_NOTIFY_PARENT:
     57          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   00000026   0x6881             LDR      R1,[R0, #+8]
   \   00000028   0x2902             CMP      R1,#+2
   \   0000002A   0xF040 0x80D1      BNE.W    ??cbMoveMotorWin_0
     58          		{
     59          		
     60          			press_event = (struct PressEvt *)pMsg->Data.p;
     61          
     62          
     63          			if(pMsg->hWinSrc == buttonXI.btnHandle)
   \   0000002E   0x.... 0x....      LDR.W    R5,??DataTable21
   \   00000032   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000036   0xF9B5 0x1004      LDRSH    R1,[R5, #+4]
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xD110             BNE.N    ??cbMoveMotorWin_2
     64          			{
     65          
     66          			#if 0
     67          				//**gCfgItems.move_dist = fabs(gCfgItems.move_dist);
     68          				//**uid.executeAction(UI_ACTION_XPOSITION);
     69          				//if(printer_state >= PRINTER_CONNECT_OK)
     70          				{
     71          					//////printf(RELATIVE_COORD_COMMAN);
     72          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
     73          					MOVE_X_COMMAN(buf, gCfgItems.move_dist, gCfgItems.moveSpeed);
     74          					//////printf(buf);
     75          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
     76          					////////printf(ABSOLUTE_COORD_COMMAN);
     77          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
     78          				 	
     79          				}
     80          				//2015/09/22
     81          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
     82          					if(printerStaus == pr_pause)
     83          						positionSaveFlag = 1;
     84          			
     85          			#endif
     86          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   0000003E   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   00000040   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
     87          			sprintf(buf, "G1 X%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   00000048   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   0000004C   0x9000             STR      R0,[SP, #+0]
   \   0000004E   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   00000052   0x.... 0x....      BL       __aeabi_f2d
   \   00000056   0x460B             MOV      R3,R1
   \   00000058   0x4602             MOV      R2,R0
   \   0000005A   0x.... 0x....      ADR.W    R1,`?<Constant "G1 X%3.1f F%d\\n">`
   \   0000005E   0xE069             B.N      ??cbMoveMotorWin_3
     88          			enqueue_and_echo_commands_P(PSTR(buf));
     89          			enqueue_and_echo_commands_P(PSTR("G90"));
     90          				
     91          			}
     92          			
     93          			else if(pMsg->hWinSrc == buttonXD.btnHandle)
   \                     ??cbMoveMotorWin_2: (+1)
   \   00000060   0xF9B5 0x101C      LDRSH    R1,[R5, #+28]
   \   00000064   0x4288             CMP      R0,R1
   \   00000066   0xD110             BNE.N    ??cbMoveMotorWin_4
     94          			{
     95          			#if 0
     96          				//**gCfgItems.move_dist = (float)0 - fabs(gCfgItems.move_dist);
     97          				//**uid.executeAction(UI_ACTION_XPOSITION);
     98          				//if(printer_state >= PRINTER_CONNECT_OK)
     99          				{
    100          					//////printf(RELATIVE_COORD_COMMAN);
    101          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    102          					MOVE_X_COMMAN(buf, (float)0 - gCfgItems.move_dist,  gCfgItems.moveSpeed );
    103          					//////printf(buf);
    104          					pushFIFO(&gcodeCmdTxFIFO,(unsigned char *) buf);
    105          					////////printf(ABSOLUTE_COORD_COMMAN);
    106          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    107          				}
    108          				//2015/09/22
    109          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    110          				if(printerStaus == pr_pause)
    111          					positionSaveFlag = 1;
    112          #endif
    113          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   00000068   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   0000006A   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    114          			sprintf(buf, "G1 X-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   0000006E   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   00000072   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   00000076   0x9000             STR      R0,[SP, #+0]
   \   00000078   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   0000007C   0x.... 0x....      BL       __aeabi_f2d
   \   00000080   0x460B             MOV      R3,R1
   \   00000082   0x4602             MOV      R2,R0
   \   00000084   0x.... 0x....      ADR.W    R1,`?<Constant "G1 X-%3.1f F%d\\n">`
   \   00000088   0xE054             B.N      ??cbMoveMotorWin_3
    115          			enqueue_and_echo_commands_P(PSTR(buf));
    116          			enqueue_and_echo_commands_P(PSTR("G90"));
    117          
    118          			}
    119          			else if(pMsg->hWinSrc == buttonYI.btnHandle)
   \                     ??cbMoveMotorWin_4: (+1)
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable21_2
   \   0000008E   0x5E8A             LDRSH    R2,[R1, R2]
   \   00000090   0x4290             CMP      R0,R2
   \   00000092   0xD110             BNE.N    ??cbMoveMotorWin_5
    120          			{
    121          #if 0
    122          				//**gCfgItems.move_dist = fabs(gCfgItems.move_dist);
    123          				//**uid.executeAction(UI_ACTION_YPOSITION);
    124          				//if(printer_state >= PRINTER_CONNECT_OK)
    125          				{
    126          					//////printf(RELATIVE_COORD_COMMAN);
    127          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    128          					MOVE_Y_COMMAN(buf, gCfgItems.move_dist,  gCfgItems.moveSpeed);
    129          					//////printf(buf);
    130          					pushFIFO(&gcodeCmdTxFIFO,(unsigned char *) buf);
    131          					////////printf(ABSOLUTE_COORD_COMMAN);
    132          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    133          				}
    134          				//2015/09/22
    135          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    136          					if(printerStaus == pr_pause)
    137          						positionSaveFlag = 1;
    138          					#endif
    139          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   00000094   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   00000096   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    140          			sprintf(buf, "G1 Y%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   0000009A   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   0000009E   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   000000A2   0x9000             STR      R0,[SP, #+0]
   \   000000A4   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   000000A8   0x.... 0x....      BL       __aeabi_f2d
   \   000000AC   0x460B             MOV      R3,R1
   \   000000AE   0x4602             MOV      R2,R0
   \   000000B0   0x.... 0x....      ADR.W    R1,`?<Constant "G1 Y%3.1f F%d\\n">`
   \   000000B4   0xE03E             B.N      ??cbMoveMotorWin_3
    141          			enqueue_and_echo_commands_P(PSTR(buf));
    142          			enqueue_and_echo_commands_P(PSTR("G90"));
    143          			}
    144          			else if(pMsg->hWinSrc == buttonYD.btnHandle)
   \                     ??cbMoveMotorWin_5: (+1)
   \   000000B6   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   000000BA   0x4288             CMP      R0,R1
   \   000000BC   0xD110             BNE.N    ??cbMoveMotorWin_6
    145          			{
    146          			#if 0
    147          				//**gCfgItems.move_dist = (float)0 - fabs(gCfgItems.move_dist);
    148          				//**uid.executeAction(UI_ACTION_YPOSITION);
    149          				//if(printer_state >= PRINTER_CONNECT_OK)
    150          				{
    151          					//////printf(RELATIVE_COORD_COMMAN);
    152          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    153          					MOVE_Y_COMMAN(buf, (float)0 - gCfgItems.move_dist,  gCfgItems.moveSpeed);
    154          					//////printf(buf);
    155          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    156          					////////printf(ABSOLUTE_COORD_COMMAN);
    157          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    158          				}
    159          				//2015/09/22
    160          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    161          					if(printerStaus == pr_pause)
    162          						positionSaveFlag = 1;
    163          					#endif
    164          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   000000BE   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   000000C0   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    165          			sprintf(buf, "G1 Y-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   000000C4   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   000000C8   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   000000CC   0x9000             STR      R0,[SP, #+0]
   \   000000CE   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   000000D2   0x.... 0x....      BL       __aeabi_f2d
   \   000000D6   0x460B             MOV      R3,R1
   \   000000D8   0x4602             MOV      R2,R0
   \   000000DA   0x.... 0x....      ADR.W    R1,`?<Constant "G1 Y-%3.1f F%d\\n">`
   \   000000DE   0xE029             B.N      ??cbMoveMotorWin_3
    166          			enqueue_and_echo_commands_P(PSTR(buf));
    167          			enqueue_and_echo_commands_P(PSTR("G90"));
    168          			}
    169          			else if(pMsg->hWinSrc == buttonZI.btnHandle)
   \                     ??cbMoveMotorWin_6: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable21_3
   \   000000E4   0x5ECA             LDRSH    R2,[R1, R3]
   \   000000E6   0x4290             CMP      R0,R2
   \   000000E8   0xD110             BNE.N    ??cbMoveMotorWin_7
    170          			{
    171          			#if 0
    172          				//**gCfgItems.move_dist = fabs(gCfgItems.move_dist);
    173          				//**uid.executeAction(UI_ACTION_ZPOSITION);
    174          				//if(printer_state >= PRINTER_CONNECT_OK)
    175          				{
    176          					//////printf(RELATIVE_COORD_COMMAN);
    177          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    178          					MOVE_Z_COMMAN(buf, gCfgItems.move_dist,  gCfgItems.moveSpeed);
    179          					//////printf(buf);
    180          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    181          					////////printf(ABSOLUTE_COORD_COMMAN);
    182          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    183          					if((printerStaus != pr_pause) && (printerStaus != pr_reprint))  //**
    184          					{
    185          						gCfgItems.getzpos_flg = 1;
    186          					}
    187          				}
    188          				//2015/09/22
    189          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    190          					if(printerStaus == pr_pause)
    191          						positionSaveFlag = 1;	
    192          					#endif
    193          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   000000EA   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   000000EC   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    194          			sprintf(buf, "G1 Z%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   000000F0   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   000000F4   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   000000F8   0x9000             STR      R0,[SP, #+0]
   \   000000FA   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   000000FE   0x.... 0x....      BL       __aeabi_f2d
   \   00000102   0x460B             MOV      R3,R1
   \   00000104   0x4602             MOV      R2,R0
   \   00000106   0x.... 0x....      ADR.W    R1,`?<Constant "G1 Z%3.1f F%d\\n">`
   \   0000010A   0xE013             B.N      ??cbMoveMotorWin_3
    195          			enqueue_and_echo_commands_P(PSTR(buf));
    196          			enqueue_and_echo_commands_P(PSTR("G90"));
    197          			}
    198          			else if(pMsg->hWinSrc == buttonZD.btnHandle)
   \                     ??cbMoveMotorWin_7: (+1)
   \   0000010C   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   00000110   0x4288             CMP      R0,R1
   \   00000112   0xD11A             BNE.N    ??cbMoveMotorWin_8
    199          			{
    200          
    201          			#if 0
    202          				//**gCfgItems.move_dist = (float)0 - fabs(gCfgItems.move_dist);
    203          				//**uid.executeAction(UI_ACTION_ZPOSITION);
    204          				//if(printer_state >= PRINTER_CONNECT_OK)
    205          				{
    206          					//////printf(RELATIVE_COORD_COMMAN);
    207          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    208          					MOVE_Z_COMMAN(buf, (float)0 - gCfgItems.move_dist,  gCfgItems.moveSpeed);
    209          					//////printf(buf);
    210          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    211          					////////printf(ABSOLUTE_COORD_COMMAN);
    212          					pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    213          					if((printerStaus != pr_pause) && (printerStaus != pr_reprint))  //**
    214          					{ 
    215          						gCfgItems.getzpos_flg = 1;
    216          					}
    217          				}
    218          				//2015/09/22
    219          				//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    220          					if(printerStaus == pr_pause)
    221          						positionSaveFlag = 1;	
    222          					#endif
    223          			enqueue_and_echo_commands_P(PSTR("G91"));
   \   00000114   0x....             ADR.N    R0,??DataTable19  ;; "G91"
   \   00000116   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    224          			sprintf(buf, "G1 Z-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
   \   0000011A   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   0000011E   0xF9B4 0x00BE      LDRSH    R0,[R4, #+190]
   \   00000122   0x9000             STR      R0,[SP, #+0]
   \   00000124   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   00000128   0x.... 0x....      BL       __aeabi_f2d
   \   0000012C   0x460B             MOV      R3,R1
   \   0000012E   0x4602             MOV      R2,R0
   \   00000130   0x.... 0x....      ADR.W    R1,`?<Constant "G1 Z-%3.1f F%d\\n">`
   \                     ??cbMoveMotorWin_3: (+1)
   \   00000134   0xA801             ADD      R0,SP,#+4
   \   00000136   0x.... 0x....      BL       sprintf
    225          			enqueue_and_echo_commands_P(PSTR(buf));
   \   0000013A   0xA801             ADD      R0,SP,#+4
   \   0000013C   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    226          			enqueue_and_echo_commands_P(PSTR("G90"));					
   \   00000140   0x....             ADR.N    R0,??DataTable19_1  ;; "G90"
   \   00000142   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
    227          			}
    228          			else if(pMsg->hWinSrc == buttonRet.btnHandle)
    229          			{
    230          			    feedrate_mm_s = gCfgItems.moveSpeed_bak;
    231          				last_disp_state = MOVE_MOTOR_UI;
    232          				Clear_move_motor();
    233          				draw_return_ui();
    234          								
    235          			}
    236          			else if(pMsg->hWinSrc == buttonV.btnHandle)
    237          			{
    238          				if(abs(10 * (int)gCfgItems.move_dist) == 100)
    239          				{
    240          					gCfgItems.move_dist = 0.1;
    241          				}
    242          				else
    243          				{
    244          					gCfgItems.move_dist *= (float)10;
    245          				}
    246          				
    247          				disp_move_dist();
    248          				
    249          			}		
    250          			
    251          		}
    252          		break;
    253          	default:
    254          	WM_DefaultProc(pMsg);
    255          	}
    256          }
   \   00000146   0xB009             ADD      SP,SP,#+36
   \   00000148   0xBD30             POP      {R4,R5,PC}
   \                     ??cbMoveMotorWin_8: (+1)
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   0000014E   0xF9B1 0x2018      LDRSH    R2,[R1, #+24]
   \   00000152   0x4290             CMP      R0,R2
   \   00000154   0xD11C             BNE.N    ??cbMoveMotorWin_9
   \   00000156   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   0000015A   0xF9B4 0x00C2      LDRSH    R0,[R4, #+194]
   \   0000015E   0x.... 0x....      BL       __aeabi_i2f
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable21_5
   \   00000166   0x6008             STR      R0,[R1, #+0]
   \   00000168   0x2004             MOVS     R0,#+4
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable21_6
   \   0000016E   0x7008             STRB     R0,[R1, #+0]
   \   00000170   0x6960             LDR      R0,[R4, #+20]
   \   00000172   0x.... 0x....      BL       GUI_SetBkColor
   \   00000176   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000017A   0x.... 0x....      BL       WM_IsWindow
   \   0000017E   0xB118             CBZ.N    R0,??cbMoveMotorWin_10
   \   00000180   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000184   0x.... 0x....      BL       WM_DeleteWindow
   \                     ??cbMoveMotorWin_10: (+1)
   \   00000188   0x.... 0x....      BL       draw_return_ui
   \   0000018C   0xB009             ADD      SP,SP,#+36
   \   0000018E   0xBD30             POP      {R4,R5,PC}
   \                     ??cbMoveMotorWin_9: (+1)
   \   00000190   0x5EC9             LDRSH    R1,[R1, R3]
   \   00000192   0x4288             CMP      R0,R1
   \   00000194   0xD11C             BNE.N    ??cbMoveMotorWin_0
   \   00000196   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   0000019A   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \   0000019E   0x.... 0x....      BL       __aeabi_f2iz
   \   000001A2   0xEB00 0x0180      ADD      R1,R0,R0, LSL #+2
   \   000001A6   0x0048             LSLS     R0,R1,#+1
   \   000001A8   0xBF48             IT       MI 
   \   000001AA   0x4240             RSBMI    R0,R0,#+0
   \   000001AC   0x2864             CMP      R0,#+100
   \   000001AE   0xBF0F             ITEEE    EQ 
   \   000001B0   0x.... 0x....      LDREQ.W  R0,??DataTable21_7  ;; 0x3dcccccd
   \   000001B4   0xF8D4 0x10C4      LDRNE    R1,[R4, #+196]
   \   000001B8   0x.... 0x....      LDRNE.W  R0,??DataTable21_8  ;; 0x41200000
   \   000001BC   0x.... 0x....      BLNE     __aeabi_fmul
   \   000001C0   0xF8C4 0x00C4      STR      R0,[R4, #+196]
   \   000001C4   0x.... 0x....      BL       disp_move_dist
   \   000001C8   0xB009             ADD      SP,SP,#+36
   \   000001CA   0xBD30             POP      {R4,R5,PC}
   \                     ??cbMoveMotorWin_1: (+1)
   \   000001CC   0x.... 0x....      BL       WM_DefaultProc
   \                     ??cbMoveMotorWin_0: (+1)
   \   000001D0   0xB009             ADD      SP,SP,#+36
   \   000001D2   0xBD30             POP      {R4,R5,PC}       ;; return
    257          
    258          

   \                                 In section .text, align 2, keep-with-next
    259          void draw_move_motor()
    260          {
   \                     draw_move_motor: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    261          	
    262            	char buffer_z[15]={0};
                   	     ^
Warning[Pe177]: variable "buffer_z" was declared but never referenced
    263          	
    264          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != MOVE_MOTOR_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable21_9
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A04             CMP      R2,#+4
   \   00000012   0xD005             BEQ.N    ??draw_move_motor_0
    265          	{
    266          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    267          		disp_state_stack._disp_state[disp_state_stack._disp_index] = MOVE_MOTOR_UI;
   \   0000001A   0x2204             MOVS     R2,#+4
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    268          	}
    269          	disp_state = MOVE_MOTOR_UI;
   \                     ??draw_move_motor_0: (+1)
   \   00000020   0x2004             MOVS     R0,#+4
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable21_10
    270          	
    271          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable21_1
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    272          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    273          	GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    274          
    275          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000003C   0x.... 0x....      BL       creat_title_text
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0x.... 0x....      BL       GUI_DispStringAt
    276          
    277          	hMoveMotorWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbMoveMotorWin, 0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0xF44F 0x738E      MOV      R3,#+284
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable21_11
   \   00000054   0x....             LDR.N    R5,??DataTable21
   \   00000056   0x9001             STR      R0,[SP, #+4]
   \   00000058   0xF44F 0x72F0      MOV      R2,#+480
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x9000             STR      R0,[SP, #+0]
   \   00000060   0x2124             MOVS     R1,#+36
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x.... 0x....      BL       WM_CreateWindow
   \   00000068   0x8028             STRH     R0,[R5, #+0]
    278          
    279          	buttonXI.btnHandle = BUTTON_CreateEx(INTERVAL_V, 0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000006A   0x.... 0x....      BL       alloc_win_id
   \   0000006E   0x9003             STR      R0,[SP, #+12]
   \   00000070   0x238C             MOVS     R3,#+140
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9002             STR      R0,[SP, #+8]
   \   00000076   0x2275             MOVS     R2,#+117
   \   00000078   0x2002             MOVS     R0,#+2
   \   0000007A   0x9001             STR      R0,[SP, #+4]
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000082   0x9000             STR      R0,[SP, #+0]
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000008A   0x80A8             STRH     R0,[R5, #+4]
    280          	buttonYI.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, 0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000008C   0x.... 0x....      BL       alloc_win_id
   \   00000090   0x9003             STR      R0,[SP, #+12]
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x9002             STR      R0,[SP, #+8]
   \   00000096   0x2002             MOVS     R0,#+2
   \   00000098   0x9001             STR      R0,[SP, #+4]
   \   0000009A   0x238C             MOVS     R3,#+140
   \   0000009C   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000A0   0x....             LDR.N    R6,??DataTable21_2
   \   000000A2   0x9000             STR      R0,[SP, #+0]
   \   000000A4   0x2275             MOVS     R2,#+117
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x2079             MOVS     R0,#+121
   \   000000AA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000AE   0x8030             STRH     R0,[R6, #+0]
    281          	buttonZI.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000B0   0x.... 0x....      BL       alloc_win_id
   \   000000B4   0x9003             STR      R0,[SP, #+12]
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x9002             STR      R0,[SP, #+8]
   \   000000BA   0x2002             MOVS     R0,#+2
   \   000000BC   0x9001             STR      R0,[SP, #+4]
   \   000000BE   0x238C             MOVS     R3,#+140
   \   000000C0   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000C4   0x....             LDR.N    R7,??DataTable21_3
   \   000000C6   0x9000             STR      R0,[SP, #+0]
   \   000000C8   0x2275             MOVS     R2,#+117
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x20F0             MOVS     R0,#+240
   \   000000CE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D2   0x8038             STRH     R0,[R7, #+0]
    282          
    283          	
    284          	buttonXD.btnHandle = BUTTON_CreateEx(INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000D4   0x.... 0x....      BL       alloc_win_id
   \   000000D8   0x9003             STR      R0,[SP, #+12]
   \   000000DA   0x238C             MOVS     R3,#+140
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x9002             STR      R0,[SP, #+8]
   \   000000E0   0x2275             MOVS     R2,#+117
   \   000000E2   0x2002             MOVS     R0,#+2
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0x218E             MOVS     R1,#+142
   \   000000E8   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000EC   0x9000             STR      R0,[SP, #+0]
   \   000000EE   0x2002             MOVS     R0,#+2
   \   000000F0   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000F4   0x83A8             STRH     R0,[R5, #+28]
    285          	buttonYD.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000F6   0x.... 0x....      BL       alloc_win_id
   \   000000FA   0x9003             STR      R0,[SP, #+12]
   \   000000FC   0x238C             MOVS     R3,#+140
   \   000000FE   0x2000             MOVS     R0,#+0
   \   00000100   0x9002             STR      R0,[SP, #+8]
   \   00000102   0x2275             MOVS     R2,#+117
   \   00000104   0x2002             MOVS     R0,#+2
   \   00000106   0x9001             STR      R0,[SP, #+4]
   \   00000108   0x218E             MOVS     R1,#+142
   \   0000010A   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000010E   0x9000             STR      R0,[SP, #+0]
   \   00000110   0x2079             MOVS     R0,#+121
   \   00000112   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000116   0x8330             STRH     R0,[R6, #+24]
    286          	buttonZD.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000118   0x.... 0x....      BL       alloc_win_id
   \   0000011C   0x9003             STR      R0,[SP, #+12]
   \   0000011E   0x238C             MOVS     R3,#+140
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x9002             STR      R0,[SP, #+8]
   \   00000124   0x2275             MOVS     R2,#+117
   \   00000126   0x2002             MOVS     R0,#+2
   \   00000128   0x9001             STR      R0,[SP, #+4]
   \   0000012A   0x218E             MOVS     R1,#+142
   \   0000012C   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000130   0x9000             STR      R0,[SP, #+0]
   \   00000132   0x20F0             MOVS     R0,#+240
   \   00000134   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000138   0x8338             STRH     R0,[R7, #+24]
    287          
    288          	buttonV.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000013A   0x.... 0x....      BL       alloc_win_id
   \   0000013E   0x9003             STR      R0,[SP, #+12]
   \   00000140   0xF240 0x1967      MOVW     R9,#+359
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x9002             STR      R0,[SP, #+8]
   \   00000148   0x2002             MOVS     R0,#+2
   \   0000014A   0x9001             STR      R0,[SP, #+4]
   \   0000014C   0x238C             MOVS     R3,#+140
   \   0000014E   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000152   0x.... 0x....      LDR.W    R8,??DataTable21_4
   \   00000156   0x9000             STR      R0,[SP, #+0]
   \   00000158   0x2275             MOVS     R2,#+117
   \   0000015A   0x2100             MOVS     R1,#+0
   \   0000015C   0x4648             MOV      R0,R9
   \   0000015E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000162   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    289          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveMotorWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000166   0x.... 0x....      BL       alloc_win_id
   \   0000016A   0x9003             STR      R0,[SP, #+12]
   \   0000016C   0x238C             MOVS     R3,#+140
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x9002             STR      R0,[SP, #+8]
   \   00000172   0x2275             MOVS     R2,#+117
   \   00000174   0x2002             MOVS     R0,#+2
   \   00000176   0x9001             STR      R0,[SP, #+4]
   \   00000178   0x218E             MOVS     R1,#+142
   \   0000017A   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000017E   0x9000             STR      R0,[SP, #+0]
   \   00000180   0x4648             MOV      R0,R9
   \   00000182   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000186   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    290          
    291          	#if VERSION_WITH_PIC	
    292          
    293          	BUTTON_SetBmpFileName(buttonXI.btnHandle, "bmp_xAdd.bin",1);
   \   0000018A   0x2201             MOVS     R2,#+1
   \   0000018C   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000190   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_xAdd.bin">`
   \   00000194   0x.... 0x....      BL       BUTTON_SetBmpFileName
    294          	BUTTON_SetBmpFileName(buttonXD.btnHandle, "bmp_xDec.bin",1);
   \   00000198   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000019C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_xDec.bin">`
   \   000001A0   0x2201             MOVS     R2,#+1
   \   000001A2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    295          	BUTTON_SetBmpFileName(buttonYI.btnHandle, "bmp_yAdd.bin",1);
   \   000001A6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001AA   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_yAdd.bin">`
   \   000001AE   0x2201             MOVS     R2,#+1
   \   000001B0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    296          	BUTTON_SetBmpFileName(buttonYD.btnHandle, "bmp_yDec.bin",1);
   \   000001B4   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000001B8   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_yDec.bin">`
   \   000001BC   0x2201             MOVS     R2,#+1
   \   000001BE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    297          	BUTTON_SetBmpFileName(buttonZI.btnHandle, "bmp_zAdd.bin",1);
   \   000001C2   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000001C6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zAdd.bin">`
   \   000001CA   0x2201             MOVS     R2,#+1
   \   000001CC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    298          	BUTTON_SetBmpFileName(buttonZD.btnHandle, "bmp_zDec.bin",1);
   \   000001D0   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000001D4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zDec.bin">`
   \   000001D8   0x2201             MOVS     R2,#+1
   \   000001DA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    299          	//
    300          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \   000001DE   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000001E2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   000001E6   0x2201             MOVS     R2,#+1
   \   000001E8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    301          	
    302          	#endif
    303          	BUTTON_SetBitmapEx(buttonXI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001EC   0x.... 0x....      LDR.W    R11,??DataTable21_12
   \   000001F0   0x.... 0x....      LDR.W    R10,??DataTable21_13
   \   000001F4   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001F8   0x.... 0x....      LDR.W    R9,??DataTable21_14
   \   000001FC   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000200   0x9000             STR      R0,[SP, #+0]
   \   00000202   0x464A             MOV      R2,R9
   \   00000204   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000208   0x2100             MOVS     R1,#+0
   \   0000020A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    304          	BUTTON_SetBitmapEx(buttonXD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000020E   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000212   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000216   0x9000             STR      R0,[SP, #+0]
   \   00000218   0x464A             MOV      R2,R9
   \   0000021A   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000021E   0x2100             MOVS     R1,#+0
   \   00000220   0x.... 0x....      BL       BUTTON_SetBitmapEx
    305          	BUTTON_SetBitmapEx(buttonYI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000224   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000228   0x9000             STR      R0,[SP, #+0]
   \   0000022A   0x2100             MOVS     R1,#+0
   \   0000022C   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000230   0x5E70             LDRSH    R0,[R6, R1]
   \   00000232   0x464A             MOV      R2,R9
   \   00000234   0x.... 0x....      BL       BUTTON_SetBitmapEx
    306          	BUTTON_SetBitmapEx(buttonYD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000238   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000023C   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000240   0x9000             STR      R0,[SP, #+0]
   \   00000242   0x464A             MOV      R2,R9
   \   00000244   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000248   0x2100             MOVS     R1,#+0
   \   0000024A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    307          	BUTTON_SetBitmapEx(buttonZI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000024E   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000252   0x9000             STR      R0,[SP, #+0]
   \   00000254   0x2100             MOVS     R1,#+0
   \   00000256   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000025A   0x5E78             LDRSH    R0,[R7, R1]
   \   0000025C   0x464A             MOV      R2,R9
   \   0000025E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    308          	BUTTON_SetBitmapEx(buttonZD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000262   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000266   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000026A   0x9000             STR      R0,[SP, #+0]
   \   0000026C   0x464A             MOV      R2,R9
   \   0000026E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000272   0x2100             MOVS     R1,#+0
   \   00000274   0x.... 0x....      BL       BUTTON_SetBitmapEx
    309          	BUTTON_SetBitmapEx(buttonV.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000278   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000027C   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000280   0x9000             STR      R0,[SP, #+0]
   \   00000282   0x464A             MOV      R2,R9
   \   00000284   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000288   0x2100             MOVS     R1,#+0
   \   0000028A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    310          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000028E   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000292   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000296   0x9000             STR      R0,[SP, #+0]
   \   00000298   0x464A             MOV      R2,R9
   \   0000029A   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   0000029E   0x2100             MOVS     R1,#+0
   \   000002A0   0x.... 0x....      BL       BUTTON_SetBitmapEx
    311          
    312          	if(gCfgItems.multiple_language != 0)
   \   000002A4   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   000002A8   0xB320             CBZ.N    R0,??draw_move_motor_1
    313          	{
    314          		BUTTON_SetText(buttonXI.btnHandle, move_menu.x_add);
   \   000002AA   0x....             LDR.N    R4,??DataTable21_15
   \   000002AC   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000002B0   0x6861             LDR      R1,[R4, #+4]
   \   000002B2   0x.... 0x....      BL       BUTTON_SetText
    315          		BUTTON_SetText(buttonXD.btnHandle,move_menu.x_dec);
   \   000002B6   0x68A1             LDR      R1,[R4, #+8]
   \   000002B8   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002BC   0x.... 0x....      BL       BUTTON_SetText
    316          		BUTTON_SetText(buttonYI.btnHandle, move_menu.y_add);
   \   000002C0   0x68E1             LDR      R1,[R4, #+12]
   \   000002C2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002C6   0x.... 0x....      BL       BUTTON_SetText
    317          		BUTTON_SetText(buttonYD.btnHandle, move_menu.y_dec);
   \   000002CA   0x6921             LDR      R1,[R4, #+16]
   \   000002CC   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000002D0   0x.... 0x....      BL       BUTTON_SetText
    318          		BUTTON_SetText(buttonZI.btnHandle, move_menu.z_add);
   \   000002D4   0x6961             LDR      R1,[R4, #+20]
   \   000002D6   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002DA   0x.... 0x....      BL       BUTTON_SetText
    319          		BUTTON_SetText(buttonZD.btnHandle, move_menu.z_dec);
   \   000002DE   0x69A1             LDR      R1,[R4, #+24]
   \   000002E0   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002E4   0x.... 0x....      BL       BUTTON_SetText
    320          	    BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   000002E8   0x....             LDR.N    R0,??DataTable21_16
   \   000002EA   0x6801             LDR      R1,[R0, #+0]
   \   000002EC   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000002F0   0x.... 0x....      BL       BUTTON_SetText
    321          	}
    322          
    323          	disp_move_dist();
   \                     ??draw_move_motor_1: (+1)
   \   000002F4   0xB005             ADD      SP,SP,#+20
   \   000002F6   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000002FA                      REQUIRE disp_move_dist
   \   000002FA                      ;; // Fall through to label disp_move_dist
    324          
    325          	
    326          	
    327          /////	GUI_Exec();
    328          
    329          	
    330          }
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void disp_move_dist()
    333          {
   \                     disp_move_dist: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    334          	char buf[30] = {0};
                 	     ^
Warning[Pe177]: variable "buf" was declared but never referenced

  			sprintf(buf, "G1 X%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",87  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  			sprintf(buf, "G1 X-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",114  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  			sprintf(buf, "G1 Y%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",140  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  			sprintf(buf, "G1 Y-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",165  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  			sprintf(buf, "G1 Z%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",194  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  			sprintf(buf, "G1 Z-%3.1f F%d\n",gCfgItems.move_dist, gCfgItems.moveSpeed);
  			^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_move_motor.cpp",224  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
    335          		
    336          	if((int)(10 * gCfgItems.move_dist) == 1)
   \   00000002   0x....             LDR.N    R5,??DataTable21_1
   \   00000004   0x....             LDR.N    R4,??DataTable21_8  ;; 0x41200000
   \   00000006   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   0000000A   0x4621             MOV      R1,R4
   \   0000000C   0x.... 0x....      BL       __aeabi_fmul
   \   00000010   0x.... 0x....      BL       __aeabi_f2iz
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD103             BNE.N    ??disp_move_dist_0
    337          	{
    338          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move0_1.bin",1);
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move0_1.bin">`
   \   0000001E   0xE018             B.N      ??disp_move_dist_1
    339          	}
    340          	else if((int)(10 * gCfgItems.move_dist) == 10)
   \                     ??disp_move_dist_0: (+1)
   \   00000020   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   00000024   0x4621             MOV      R1,R4
   \   00000026   0x.... 0x....      BL       __aeabi_fmul
   \   0000002A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000002E   0x280A             CMP      R0,#+10
   \   00000030   0xD103             BNE.N    ??disp_move_dist_2
    341          	{
    342          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move1.bin",1);
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move1.bin">`
   \   00000038   0xE00B             B.N      ??disp_move_dist_1
    343          	}
    344          	else if((int)(10 * gCfgItems.move_dist) == 100)
   \                     ??disp_move_dist_2: (+1)
   \   0000003A   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   0000003E   0x4621             MOV      R1,R4
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x.... 0x....      BL       __aeabi_f2iz
   \   00000048   0x2864             CMP      R0,#+100
   \   0000004A   0xD107             BNE.N    ??disp_move_dist_3
    345          	{
    346          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move10.bin",1);
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move10.bin">`
   \                     ??disp_move_dist_1: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable21_4
   \   00000054   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000058   0x.... 0x....      BL       BUTTON_SetBmpFileName
    347          	}
    348          	if(gCfgItems.multiple_language != 0)
   \                     ??disp_move_dist_3: (+1)
   \   0000005C   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000060   0xB348             CBZ.N    R0,??disp_move_dist_4
    349          	{
    350          		if((int)(10 * gCfgItems.move_dist) == 1)
   \   00000062   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   00000066   0x4621             MOV      R1,R4
   \   00000068   0x.... 0x....      BL       __aeabi_fmul
   \   0000006C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD102             BNE.N    ??disp_move_dist_5
    351          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_01mm);
   \   00000074   0x....             LDR.N    R0,??DataTable21_15
   \   00000076   0x6A41             LDR      R1,[R0, #+36]
   \   00000078   0xE016             B.N      ??disp_move_dist_6
    352          		else if((int)(10 * gCfgItems.move_dist) == 10)
   \                     ??disp_move_dist_5: (+1)
   \   0000007A   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   0000007E   0x4621             MOV      R1,R4
   \   00000080   0x.... 0x....      BL       __aeabi_fmul
   \   00000084   0x.... 0x....      BL       __aeabi_f2iz
   \   00000088   0x280A             CMP      R0,#+10
   \   0000008A   0xD102             BNE.N    ??disp_move_dist_7
    353          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_1mm);
   \   0000008C   0x....             LDR.N    R0,??DataTable21_15
   \   0000008E   0x6A81             LDR      R1,[R0, #+40]
   \   00000090   0xE00A             B.N      ??disp_move_dist_6
    354          		else if((int)(10 * gCfgItems.move_dist) == 100)
   \                     ??disp_move_dist_7: (+1)
   \   00000092   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \   00000096   0x4621             MOV      R1,R4
   \   00000098   0x.... 0x....      BL       __aeabi_fmul
   \   0000009C   0x.... 0x....      BL       __aeabi_f2iz
   \   000000A0   0x2864             CMP      R0,#+100
   \   000000A2   0xD108             BNE.N    ??disp_move_dist_4
    355          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_10mm);
   \   000000A4   0x....             LDR.N    R0,??DataTable21_15
   \   000000A6   0x6AC1             LDR      R1,[R0, #+44]
   \                     ??disp_move_dist_6: (+1)
   \   000000A8   0x....             LDR.N    R0,??DataTable21_4
   \   000000AA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000AE   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   000000B2   0x.... 0x....      B.W      BUTTON_SetText
    356          	}	
    357          
    358          		
    359          	
    360          }
   \                     ??disp_move_dist_4: (+1)
   \   000000B6   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    361          

   \                                 In section .text, align 2, keep-with-next
    362          void Clear_move_motor()
    363          {
   \                     Clear_move_motor: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    364          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable21_1
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    365          	if(WM_IsWindow(hMoveMotorWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable21
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_move_motor_0
    366          	{
    367          		WM_DeleteWindow(hMoveMotorWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    368          		//GUI_Exec();
    369          	}
    370          	
    371          	//GUI_Clear();
    372          }
   \                     ??Clear_move_motor_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x47 0x39          DC8      "G91"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x47 0x39          DC8      "G90"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     hMoveMotorWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x........         DC32     buttonYI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     buttonZI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0x........         DC32     buttonV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \   00000000   0x........         DC32     _Z14cbMoveMotorWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \   00000000   0x........         DC32     move_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 X%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 X%3.1f F%d\012"
   \              0x20 0x58    
   \              0x25 0x33    
   \              0x2E 0x31    
   \              0x66 0x20    
   \              0x46 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 X-%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 X-%3.1f F%d\012"
   \              0x20 0x58    
   \              0x2D 0x25    
   \              0x33 0x2E    
   \              0x31 0x66    
   \              0x20 0x46    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 Y%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 Y%3.1f F%d\012"
   \              0x20 0x59    
   \              0x25 0x33    
   \              0x2E 0x31    
   \              0x66 0x20    
   \              0x46 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 Y-%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 Y-%3.1f F%d\012"
   \              0x20 0x59    
   \              0x2D 0x25    
   \              0x33 0x2E    
   \              0x31 0x66    
   \              0x20 0x46    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 Z%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 Z%3.1f F%d\012"
   \              0x20 0x5A    
   \              0x25 0x33    
   \              0x2E 0x31    
   \              0x66 0x20    
   \              0x46 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 Z-%3.1f F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 Z-%3.1f F%d\012"
   \              0x20 0x5A    
   \              0x2D 0x25    
   \              0x33 0x2E    
   \              0x31 0x66    
   \              0x20 0x46    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_xAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_xAdd.bin"
   \              0x70 0x5F    
   \              0x78 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_xDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_xDec.bin"
   \              0x70 0x5F    
   \              0x78 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_yAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_yAdd.bin"
   \              0x70 0x5F    
   \              0x79 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_yDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_yDec.bin"
   \              0x70 0x5F    
   \              0x79 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zAdd.bin"
   \              0x70 0x5F    
   \              0x7A 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zDec.bin"
   \              0x70 0x5F    
   \              0x7A 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move0_1.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move0_1.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x30    
   \              0x5F 0x31    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move1.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move1.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x31    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move10.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move10.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x31    
   \              0x30 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "G91">`:
   \   00000000   0x47 0x39          DC8 "G91"
   \              0x31 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "G90">`:
   \   00000000   0x47 0x39          DC8 "G90"
   \              0x30 0x00    
    373          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_move_motor
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      48   cbMoveMotorWin(WM_MESSAGE *)
        48   -> GUI_SetBkColor
        48   -> WM_DefaultProc
        48   -> WM_DeleteWindow
        48   -> WM_IsWindow
        48   -> __aeabi_f2d
        48   -> __aeabi_f2iz
        48   -> __aeabi_fmul
        48   -> __aeabi_i2f
        48   -> disp_move_dist
        48   -> draw_return_ui
        48   -> enqueue_and_echo_commands_P(char const *)
        48   -> sprintf
      16   disp_move_dist
        16   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
      56   draw_move_motor
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
         0   -> disp_move_dist


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "G1 X%3.1f F%d\n">
      16  ?<Constant "G1 X-%3.1f F%d\n">
      16  ?<Constant "G1 Y%3.1f F%d\n">
      16  ?<Constant "G1 Y-%3.1f F%d\n">
      16  ?<Constant "G1 Z%3.1f F%d\n">
      16  ?<Constant "G1 Z-%3.1f F%d\n">
       4  ?<Constant "G90">
       4  ?<Constant "G91">
      16  ?<Constant "bmp_return.bin">
      24  ?<Constant "bmp_step_move0_1.bin">
      20  ?<Constant "bmp_step_move1.bin">
      20  ?<Constant "bmp_step_move10.bin">
      16  ?<Constant "bmp_xAdd.bin">
      16  ?<Constant "bmp_xDec.bin">
      16  ?<Constant "bmp_yAdd.bin">
      16  ?<Constant "bmp_yDec.bin">
      16  ?<Constant "bmp_zAdd.bin">
      16  ?<Constant "bmp_zDec.bin">
      32  ?<Constant {'\000'}>
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_2
       4  ??DataTable21_3
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
      36  Clear_move_motor
      48  buttonV
          buttonRet
      48  buttonYI
          buttonYD
      48  buttonZI
          buttonZD
     468  cbMoveMotorWin(WM_MESSAGE *)
     184  disp_move_dist
     762  draw_move_motor
      52  hMoveMotorWnd
          buttonXI
          buttonXD
       1  -- Other

 
   196 bytes in section .bss
    41 bytes in section .rodata
 1 798 bytes in section .text
 
 1 798 bytes of CODE  memory
    40 bytes of CONST memory (+ 1 byte shared)
   196 bytes of DATA  memory

Errors: none
Warnings: 31
