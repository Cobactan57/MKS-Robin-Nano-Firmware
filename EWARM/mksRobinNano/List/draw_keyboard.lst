###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:15
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_keyboard.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_keyboard.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_keyboard.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_keyboard.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_keyboard.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      4          #include "fontLib.h"
      5          #include "LISTBOX.h"
      6          #include "draw_set.h"
      7          #include <ctype.h>
      8          #include<stdlib.h>
      9          #include<stdio.h>
     10          #include "wifi_module.h"
     11          #include "draw_keyboard.h"
     12          #include "draw_Tips.h"
     13          #include "string.h"
     14          #include "stdio.h"
     15          #include "draw_wifi_list.h"
     16          #include "wifi_list.h"
     17          
     18          static GUI_HWIN hKeyboardWnd;
     19          static TEXT_Handle textKeyboardTitle;
     20          static BUTTON_STRUCT buttonRet,buttonJoint;

   \                                 In section .bss, align 4
     21          static BUTTON_STRUCT buttonWifiKey[26];
   \                     buttonWifiKey:
   \   00000000                      DS8 624

   \                                 In section .bss, align 4
     22          static BUTTON_STRUCT buttonSpace,buttondel2,buttonPassword;
   \                     buttonSpace:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonPassword:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
     23          static BUTTON_STRUCT buttonLetter,buttonDigital,buttonSymbol,buttonArrow;
   \                     buttonDigital:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     24          
     25          extern GUI_BITMAP bmp_struct_32x21;
     26          extern GUI_BITMAP bmp_struct_28x21;
     27          
     28          KEYBOARD_STYPE keyboard_stype=UPPER_CASE_LETTER;

   \                                 In section .bss, align 4
     29          KEY_VALUE_CALC key_value_calc;
   \                     key_value_calc:
   \   00000000                      DS8 44
     30          
     31          extern GUI_CONST_STORAGE GUI_FONT GUI_FontHelvetica26;
     32          extern GUI_CONST_STORAGE GUI_FONT GUI_FontHelvetica36;
     33          
     34          extern char buf_to_wifi[256];
     35          

   \                                 In section .text, align 4, keep-with-next
     36          const char digital_key_value[27]={'1', '2', '3', '4', '5', '6', '7', '8', '9', '0',
   \                     digital_key_value:
   \   00000000   0x31 0x32          DC8 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 124, 58, 59, 40, 41, 36
   \              0x33 0x34    
   \              0x35 0x36    
   \              0x37 0x38    
   \              0x39 0x30    
   \              0x2D 0x7C    
   \              0x3A 0x3B    
   \              0x28 0x29    
   \              0x24         
   \   00000011   0x26 0x40          DC8 38, 64, 34, 46, 32, 32, 32, 32, 32, 0, 0
   \              0x22 0x2E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \              0x00         
     37          						   '-', '|', ':', ';', '(', ')', '$', '&', '@', '\"',
     38          						   '.', ' ', ' ', ' ', ' ', ' ',0x00};

   \                                 In section .text, align 4, keep-with-next
     39          const char symbol_key_value[27]={',', '?', '!', '\'', '[', ']', '#', '{', '}', '%',
   \                     symbol_key_value:
   \   00000000   0x2C 0x3F          DC8 44, 63, 33, 39, 91, 93, 35, 123, 125, 37, 94, 42, 43, 61, 95, 92
   \              0x21 0x27    
   \              0x5B 0x5D    
   \              0x23 0x7B    
   \              0x7D 0x25    
   \              0x5E 0x2A    
   \              0x2B 0x3D    
   \              0x5F 0x5C    
   \   00000010   0x2F 0x7E          DC8 47, 126, 60, 62, 32, 32, 32, 32, 32, 32, 0, 0
   \              0x3C 0x3E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00 0x00    

   \                                 In section .data, align 4
   \                     keyboard_stype:
   \   00000000   0x00               DC8 0
   \   00000001   0x00               DC8 0
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000001C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000002C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     40          						   '^', '*', '+', '=', '_', '\\', '/', '~', '<', '>',
     41          						    ' ', ' ', ' ', ' ', ' ', ' ',0x00};
     42          #define VALUE_DISP_HEIGHT 60
     43          #define KEY_WIDTH  (uint8_t)((LCD_WIDTH-6)/7)//67
     44          #define KEY_HEIGHT (uint8_t)((LCD_HEIGHT-VALUE_DISP_HEIGHT-6)/6)//42
     45          
     46          #define FIRST_LINE_WIDTH (uint8_t)((LCD_WIDTH-4)/5)//95
     47          
     48          keyboard_menu_def keyboard_menu;
   \                     keyboard_menu:
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     49          
     50          GUI_BITMAP bmp_struct_32x21 = {
   \                     bmp_struct_32x21:
   \   00000068   0x0020 0x0015      DC16 32, 21, 160, 16
   \              0x00A0 0x0010
   \   00000070   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   
     51            32,//80, /* XSize */
     52            21,//50, /* YSize */
     53            160, /* BytesPerLine */
     54            16, /* BitsPerPixel */
     55            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     56            NULL  /* Pointer to palette */
     57           ,GUI_DRAW_BMPM565
     58          };
     59          
     60          GUI_BITMAP bmp_struct_28x21 = {
   \                     bmp_struct_28x21:
   \   0000007C   0x001C 0x0015      DC16 28, 21, 160, 16
   \              0x00A0 0x0010
   \   00000084   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   
     61            28,//80, /* XSize */
     62            21,//50, /* YSize */
     63            160, /* BytesPerLine */
     64            16, /* BitsPerPixel */
     65            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     66            NULL  /* Pointer to palette */
     67           ,GUI_DRAW_BMPM565
     68          };
     69          

   \                                 In section .text, align 2, keep-with-next
     70          static void cbKeyboardWin(WM_MESSAGE * pMsg) {
   \                     _Z13cbKeyboardWinP10WM_MESSAGE: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0x4683             MOV      R11,R0
   \   00000006   0xB087             SUB      SP,SP,#+28
     71                 char buf[NUMBER_OF_DIGITS+2];
     72          	uint8_t i=0;
     73          	
     74          	char wifi_ret_head = 0xa5;
                 	     ^
Warning[Pe177]: variable "wifi_ret_head" was declared but never referenced
     75          	char wifi_ret_tail = 0xfc;
                 	     ^
Warning[Pe177]: variable "wifi_ret_tail" was declared but never referenced
     76          	char type = 0x08;
                 	     ^
Warning[Pe177]: variable "type" was declared but never referenced
     77          	int data_len = 0;
                 	    ^
Warning[Pe177]: variable "data_len" was declared but never referenced
     78          	int data_offset = 4;
                 	    ^
Warning[Pe177]: variable "data_offset" was declared but never referenced
     79          	char *p=0,*q=0;
                 	      ^
Warning[Pe177]: variable "p" was declared but never referenced

  	char *p=0,*q=0;
  	           ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_keyboard.cpp",79  Warning[Pe177]: 
          variable "q" was declared but never referenced
     80              
     81              struct PressEvt *press_event;
                                      ^
Warning[Pe550]: variable "press_event" was set but never used
     82          
     83              //memset(buf,' ',NUMBER_OF_DIGITS+1);
     84              ///buf[NUMBER_OF_DIGITS+1]=0;
     85          	
     86              switch (pMsg->MsgId)
   \   00000008   0xF8DB 0x0000      LDR      R0,[R11, #+0]
   \   0000000C   0x280F             CMP      R0,#+15
   \   0000000E   0xD003             BEQ.N    ??cbKeyboardWin_0
   \   00000010   0x2826             CMP      R0,#+38
   \   00000012   0xF000 0x808A      BEQ.W    ??cbKeyboardWin_1
     87              {
     88          		case WM_PAINT:
     89          			//GUI_SetColor(BUTTON_PRESS_BK_COLOR);
     90          			//GUI_FillRect(0,titleHeight-2,LCD_WIDTH,titleHeight);
     91                      
     92          			GUI_SetColor(0x979797);
     93          			GUI_FillRect(0,VALUE_DISP_HEIGHT,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1);//∫·œﬂ
     94          	            	GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT+1);
     95          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1*2);
     96          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*2,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*3);
     97          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*3,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4);
     98          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*4,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*5);
     99          
    100          			GUI_FillRect(FIRST_LINE_WIDTH,VALUE_DISP_HEIGHT,FIRST_LINE_WIDTH+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);//µ⁄“ª–– ˙œﬂ
    101          			GUI_FillRect(FIRST_LINE_WIDTH+1+FIRST_LINE_WIDTH*1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
    102          			GUI_FillRect((FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*2+1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*2+1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
    103          			GUI_FillRect((FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*3+1+1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*3+1+1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
    104          
    105          			GUI_FillRect(KEY_WIDTH,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH+1,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+4);// ˙œﬂ
    106          			GUI_FillRect(KEY_WIDTH*2+1,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*2+1*2,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
    107          			GUI_FillRect(KEY_WIDTH*3+1*2,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*3+1*3,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
    108          			GUI_FillRect(KEY_WIDTH*4+1*3,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*4+1*4,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
    109          			GUI_FillRect(KEY_WIDTH*5+1*4,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*5+1*5,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
    110          			GUI_FillRect(KEY_WIDTH*6+1*5,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*6+1*6,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
    111          
    112          			GUI_FillRect(123,VALUE_DISP_HEIGHT+KEY_HEIGHT*4+4+1,123+1,LCD_HEIGHT);//◊Ó∫Û“ª–– ˙œﬂ
    113          			GUI_FillRect(358,VALUE_DISP_HEIGHT+KEY_HEIGHT*4+4+1,358+1,LCD_HEIGHT);
    114          	            
    115          			break;
    116          		case WM_TOUCH:
    117          		 	press_event = (struct PressEvt *)pMsg->Data.p;
    118          			
    119          			break;   
    120          		case WM_TOUCH_CHILD:
    121          			press_event = (struct PressEvt *)pMsg->Data.p;
    122          
    123          			break;
    124          			
    125          		case WM_NOTIFY_PARENT:
    126                      if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
    127                      {
    128                      			if(pMsg->hWinSrc == buttonRet.btnHandle)
    129          				{
    130          					key_value_calc.timer = TIMER_STOP;
    131                                            last_disp_state = KEY_BOARD_UI;
    132          					Clear_Keyboard();				
    133          					draw_return_ui();
    134          				}
    135          				else if(pMsg->hWinSrc == buttonJoint.btnHandle)
    136          				{
    137          					//BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica26);
    138          					if(key_value_calc.cnt > 0)
    139          					{
    140          						key_value_calc.timer = TIMER_STOP;
    141          
    142          						memset((void *)gCfgItems.wifi_ap, 0, sizeof(gCfgItems.wifi_ap));
    143          						memcpy((void *)gCfgItems.wifi_ap, wifi_list.wifiName[wifi_list.nameIndex], 32);
    144          
    145          						memset((void *)gCfgItems.wifi_key, 0, sizeof(gCfgItems.wifi_key));
    146          						memcpy((void *)gCfgItems.wifi_key, key_value_calc.password_value, sizeof(key_value_calc.password_value));
    147          
    148          						gCfgItems.wifi_mode_sel = 2;
    149          						
    150          						package_to_wifi(WIFI_PARA_SET, (char *)0, 0);
    151          
    152          						//¡¨Ω”ƒø«∞≈‰÷√µƒwifi»»µ„
    153          						buf[0] = 0xA5;
    154          						buf[1] = 0x09;
    155          						buf[2] = 0x01;
    156          						buf[3] = 0x00;
    157          						buf[4] = 0x01;
    158          						buf[5] = 0xFC;
    159          						buf[6] = 0x00;
    160          						raw_send_to_wifi(buf, 6);
    161          
    162          						last_disp_state = KEY_BOARD_UI;
    163          						Clear_Keyboard();
    164          						tips_type = TIPS_TYPE_JOINING;
    165          						draw_Tips();
    166          					}
    167          				}       
    168          				else if(pMsg->hWinSrc == buttondel2.btnHandle)
    169          				{
    170          					BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_white.bin",1);
    171                                     		BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,(FIRST_LINE_WIDTH-32)/2, (KEY_HEIGHT-21)/2);
    172          					if(key_value_calc.cnt > 0)
    173          			              {   
    174          			                   key_value_calc.cnt--;  
    175          			              }
    176          		                	key_value_calc.password_value[key_value_calc.cnt] = 0;
    177          					key_value_calc.password_disp[key_value_calc.cnt] = 0;
    178          					if(key_value_calc.cnt  == 0)
    179          					{
    180          						strncpy((char *)key_value_calc.password_disp,keyboard_menu.password,sizeof(key_value_calc.password_disp));
    181          						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
    182              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
    183          					}
    184          					BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    185          				}  
    186          				else if(pMsg->hWinSrc == buttonSpace.btnHandle)
    187          		              {
    188          		              	//BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica20);
    189          		              	if(key_value_calc.cnt == 0)
    190          		              	{
    191          		              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    192          		              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    193              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    194          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    195          		              	}
    196          		                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
    197          					{
    198          						key_value_calc.timer = TIMER_STOP;
    199          						key_value_calc.timer_count = 0;
    200          						if(key_value_calc.cnt > 0)
    201          						{
    202          							key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
    203          						}
    204          						key_value_calc.password_value[key_value_calc.cnt] = ' ';
    205          						key_value_calc.password_disp[key_value_calc.cnt] = ' ';
    206          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    207                              				key_value_calc.cnt++;
    208          						key_value_calc.timer = TIMER_START;
    209          					}
    210          		              }
    211          				else if(pMsg->hWinSrc == buttonLetter.btnHandle)
    212          		              {
    213          		              	//BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26);
    214          		                     keyboard_stype = UPPER_CASE_LETTER;
    215          					update_keyboard_disp();
    216          		              }
    217          				else if(pMsg->hWinSrc == buttonDigital.btnHandle)
    218          		              {
    219          		              	//BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26);
    220          		                     keyboard_stype = DIGITLA;
    221          					update_keyboard_disp();
    222          		              }
    223          				else if(pMsg->hWinSrc == buttonSymbol.btnHandle)
    224          		              {
    225          		              	//BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26);
    226          		                     keyboard_stype = SYMBOL;
    227          					update_keyboard_disp();
    228          		              }
    229          				else if(pMsg->hWinSrc == buttonArrow.btnHandle)
    230          		              {
    231          		                     if(keyboard_stype == UPPER_CASE_LETTER)
    232          		                     {
    233          		                     	keyboard_stype = LOWER_CASE_LETTER;
    234          						BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_White.bin",1);
    235              						BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    236          		                     }
    237          					else if(keyboard_stype == LOWER_CASE_LETTER)
    238          					{
    239          						keyboard_stype = UPPER_CASE_LETTER;
    240          						BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
    241              						BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    242          					}
    243          					update_keyboard_disp();
    244          		              }
    245          				else if(pMsg->hWinSrc == buttonPassword.btnHandle)
    246          				{
    247          					if(key_value_calc.cnt == 0)
    248          		              	{
    249          		              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    250          		              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    251              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    252          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    253          		              	}
    254          				}
    255          				else
    256          				{
    257          					i=26;
    258                                     		while(i--)
    259          	                           	{
    260          						if(pMsg->hWinSrc == buttonWifiKey[i].btnHandle)
    261          						{
    262          							//BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26);
    263          							switch(keyboard_stype)
    264          							{
    265          								case UPPER_CASE_LETTER:
    266          									if(key_value_calc.cnt == 0)
    267          						              	{
    268          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    269          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    270          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    271          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    272          						              	}
    273          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
    274          									{
    275          										key_value_calc.timer = TIMER_STOP;
    276          										key_value_calc.timer_count = 0;
    277          										if(key_value_calc.cnt > 0)
    278          										{
    279          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
    280          										}
    281          										key_value_calc.password_value[key_value_calc.cnt] = 'A' + i;
    282          										key_value_calc.password_disp[key_value_calc.cnt] = 'A' + i;
    283          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    284          				                    				key_value_calc.cnt++;
    285          										key_value_calc.timer = TIMER_START;
    286          									}
    287          									break;
    288          								case LOWER_CASE_LETTER:
    289          									if(key_value_calc.cnt == 0)
    290          						              	{
    291          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    292          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    293          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    294          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    295          						              	}
    296          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
    297          									{
    298          										key_value_calc.timer = TIMER_STOP;
    299          										key_value_calc.timer_count = 0;
    300          										if(key_value_calc.cnt > 0)
    301          										{
    302          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
    303          										}
    304          										key_value_calc.password_value[key_value_calc.cnt] = 'a' + i;
    305          										key_value_calc.password_disp[key_value_calc.cnt] = 'a' + i;
    306          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    307          				                    				key_value_calc.cnt++;
    308          										key_value_calc.timer = TIMER_START;
    309          									}
    310          									break;
    311          								case DIGITLA:
    312          									if(i >= 21)
    313          									{
    314          										continue;
    315          									}
    316          									if(key_value_calc.cnt == 0)
    317          						              	{
    318          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    319          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    320          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    321          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    322          						              	}
    323          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
    324          									{
    325          										key_value_calc.timer = TIMER_STOP;
    326          										key_value_calc.timer_count = 0;
    327          										if(key_value_calc.cnt > 0)
    328          										{
    329          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
    330          										}
    331          										key_value_calc.password_value[key_value_calc.cnt] = (uint8_t)digital_key_value[i];
    332          										key_value_calc.password_disp[key_value_calc.cnt] = (uint8_t)digital_key_value[i];
    333          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    334          				                    				key_value_calc.cnt++;
    335          										key_value_calc.timer = TIMER_START;
    336          									}
    337          									break;
    338          								case SYMBOL:
    339          									if(i >= 20)
    340          									{
    341          										continue;
    342          									}
    343          									if(key_value_calc.cnt == 0)
    344          						              	{
    345          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
    346          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    347          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    348          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    349          						              	}
    350          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
    351          									{
    352          										key_value_calc.timer = TIMER_STOP;
    353          										key_value_calc.timer_count = 0;
    354          										if(key_value_calc.cnt > 0)
    355          										{
    356          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
    357          										}
    358          										key_value_calc.password_value[key_value_calc.cnt] = (uint8_t)symbol_key_value[i];
    359          										key_value_calc.password_disp[key_value_calc.cnt] = (uint8_t)symbol_key_value[i];
    360          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
    361          				                    				key_value_calc.cnt++;
    362          										key_value_calc.timer = TIMER_START;
    363          									}
    364          									break;
    365          								default:
    366          									break;
    367          							}
    368          						}
    369          	                           }
    370          				}   
    371                                      
    372                      }
    373          	     else if(pMsg->Data.v == WM_NOTIFICATION_CLICKED)
    374          	     {
    375          			if(pMsg->hWinSrc == buttonRet.btnHandle)
    376          			{
    377          				//BUTTON_SetFont(buttonRet.btnHandle,&GUI_FontHelvetica26_bold);
    378          			}
    379          			else if(pMsg->hWinSrc == buttonJoint.btnHandle)
    380          			{
    381          				//BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica26_bold);
    382          			}
    383          			  else if(pMsg->hWinSrc == buttondel2.btnHandle)
    384          	                {
    385          	                     BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_black.bin",1);
    386          	    			 BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,18, 11);
    387          	                }
    388          			  else if(pMsg->hWinSrc == buttonSpace.btnHandle)
    389          	                {
    390          	                     //BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica20_bold);
    391          	                }
    392          			  else if(pMsg->hWinSrc == buttonLetter.btnHandle)
    393          	               {
    394          	                     //BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26_bold);
    395          	               }
    396          			 else if(pMsg->hWinSrc == buttonDigital.btnHandle)
    397          	               {
    398          	                     //BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26_bold);
    399          	               }
    400          			 else if(pMsg->hWinSrc == buttonSymbol.btnHandle)
    401          	               {
    402          	                     //BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26_bold);
    403          	               }
    404          			 else if(pMsg->hWinSrc == buttonArrow.btnHandle)
    405          	               {
    406          	               	if(keyboard_stype == UPPER_CASE_LETTER)
    407          	               	{
    408          	               		//BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_Black.bin",1);
    409              					//BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    410          	               	}
    411          	                     else if(keyboard_stype == LOWER_CASE_LETTER)
    412          	                     {
    413          	                     	//BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_Black.bin",1);
    414              					//BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    415          	                     }
    416          	               }
    417          			  else
    418          			  {
    419          			  	i=26;
    420          				while(i--)
    421          				{
    422          					if(pMsg->hWinSrc == buttonWifiKey[i].btnHandle)
    423          					{
    424          						//BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26_bold);
    425          					}
    426          				}
    427          				i=0;
    428          			  }
    429          		  
    430          		}	            
    431                      break;
    432              }
    433          }
   \   00000016   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_0: (+1)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x979797
   \   0000001C   0x.... 0x....      BL       GUI_SetColor
   \   00000020   0x233D             MOVS     R3,#+61
   \   00000022   0xF44F 0x72ED      MOV      R2,#+474
   \   00000026   0x213C             MOVS     R1,#+60
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       GUI_FillRect
   \   0000002E   0x2368             MOVS     R3,#+104
   \   00000030   0xF44F 0x72ED      MOV      R2,#+474
   \   00000034   0x2167             MOVS     R1,#+103
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       GUI_FillRect
   \   0000003C   0x2393             MOVS     R3,#+147
   \   0000003E   0xF44F 0x72ED      MOV      R2,#+474
   \   00000042   0x2192             MOVS     R1,#+146
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       GUI_FillRect
   \   0000004A   0x23BE             MOVS     R3,#+190
   \   0000004C   0xF44F 0x72ED      MOV      R2,#+474
   \   00000050   0x21BD             MOVS     R1,#+189
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      BL       GUI_FillRect
   \   00000058   0x23E9             MOVS     R3,#+233
   \   0000005A   0xF44F 0x72ED      MOV      R2,#+474
   \   0000005E   0x21E8             MOVS     R1,#+232
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      BL       GUI_FillRect
   \   00000066   0xF240 0x1413      MOVW     R4,#+275
   \   0000006A   0xF44F 0x738A      MOV      R3,#+276
   \   0000006E   0xF44F 0x72ED      MOV      R2,#+474
   \   00000072   0x4621             MOV      R1,R4
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       GUI_FillRect
   \   0000007A   0x2367             MOVS     R3,#+103
   \   0000007C   0x2260             MOVS     R2,#+96
   \   0000007E   0x213C             MOVS     R1,#+60
   \   00000080   0x205F             MOVS     R0,#+95
   \   00000082   0x.... 0x....      BL       GUI_FillRect
   \   00000086   0x2367             MOVS     R3,#+103
   \   00000088   0x22C0             MOVS     R2,#+192
   \   0000008A   0x213C             MOVS     R1,#+60
   \   0000008C   0x20BF             MOVS     R0,#+191
   \   0000008E   0x.... 0x....      BL       GUI_FillRect
   \   00000092   0x2367             MOVS     R3,#+103
   \   00000094   0xF44F 0x7290      MOV      R2,#+288
   \   00000098   0x213C             MOVS     R1,#+60
   \   0000009A   0xF240 0x101F      MOVW     R0,#+287
   \   0000009E   0x.... 0x....      BL       GUI_FillRect
   \   000000A2   0x2367             MOVS     R3,#+103
   \   000000A4   0xF44F 0x72C0      MOV      R2,#+384
   \   000000A8   0x213C             MOVS     R1,#+60
   \   000000AA   0xF240 0x107F      MOVW     R0,#+383
   \   000000AE   0x.... 0x....      BL       GUI_FillRect
   \   000000B2   0xF44F 0x7389      MOV      R3,#+274
   \   000000B6   0x2244             MOVS     R2,#+68
   \   000000B8   0x2167             MOVS     R1,#+103
   \   000000BA   0x2043             MOVS     R0,#+67
   \   000000BC   0x.... 0x....      BL       GUI_FillRect
   \   000000C0   0x4623             MOV      R3,R4
   \   000000C2   0x2288             MOVS     R2,#+136
   \   000000C4   0x2167             MOVS     R1,#+103
   \   000000C6   0x2087             MOVS     R0,#+135
   \   000000C8   0x.... 0x....      BL       GUI_FillRect
   \   000000CC   0x4623             MOV      R3,R4
   \   000000CE   0x22CC             MOVS     R2,#+204
   \   000000D0   0x2167             MOVS     R1,#+103
   \   000000D2   0x20CB             MOVS     R0,#+203
   \   000000D4   0x.... 0x....      BL       GUI_FillRect
   \   000000D8   0x4623             MOV      R3,R4
   \   000000DA   0xF44F 0x7288      MOV      R2,#+272
   \   000000DE   0x2167             MOVS     R1,#+103
   \   000000E0   0xF240 0x100F      MOVW     R0,#+271
   \   000000E4   0x.... 0x....      BL       GUI_FillRect
   \   000000E8   0x4623             MOV      R3,R4
   \   000000EA   0xF44F 0x72AA      MOV      R2,#+340
   \   000000EE   0x2167             MOVS     R1,#+103
   \   000000F0   0xF240 0x1053      MOVW     R0,#+339
   \   000000F4   0x.... 0x....      BL       GUI_FillRect
   \   000000F8   0x4623             MOV      R3,R4
   \   000000FA   0xF44F 0x72CC      MOV      R2,#+408
   \   000000FE   0x2167             MOVS     R1,#+103
   \   00000100   0xF240 0x1097      MOVW     R0,#+407
   \   00000104   0x.... 0x....      BL       GUI_FillRect
   \   00000108   0xF44F 0x73A0      MOV      R3,#+320
   \   0000010C   0x227C             MOVS     R2,#+124
   \   0000010E   0x21E9             MOVS     R1,#+233
   \   00000110   0x207B             MOVS     R0,#+123
   \   00000112   0x.... 0x....      BL       GUI_FillRect
   \   00000116   0xF44F 0x73A0      MOV      R3,#+320
   \   0000011A   0xF240 0x1267      MOVW     R2,#+359
   \   0000011E   0x21E9             MOVS     R1,#+233
   \   00000120   0xF44F 0x70B3      MOV      R0,#+358
   \   00000124   0x.... 0x....      BL       GUI_FillRect
   \   00000128   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_1: (+1)
   \   0000012A   0xF8DB 0x0008      LDR      R0,[R11, #+8]
   \   0000012E   0x2802             CMP      R0,#+2
   \   00000130   0xF040 0x823E      BNE.W    ??cbKeyboardWin_2
   \   00000134   0x.... 0x....      LDR.W    R4,??DataTable10_1
   \   00000138   0xF9BB 0x1006      LDRSH    R1,[R11, #+6]
   \   0000013C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000140   0x4281             CMP      R1,R0
   \   00000142   0xD119             BNE.N    ??cbKeyboardWin_3
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0xF881 0x0025      STRB     R0,[R1, #+37]
   \   0000014E   0x2023             MOVS     R0,#+35
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   00000154   0x7008             STRB     R0,[R1, #+0]
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000015A   0x6940             LDR      R0,[R0, #+20]
   \   0000015C   0x.... 0x....      BL       GUI_SetBkColor
   \   00000160   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000164   0x.... 0x....      BL       WM_IsWindow
   \   00000168   0xB118             CBZ.N    R0,??cbKeyboardWin_4
   \   0000016A   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000016E   0x.... 0x....      BL       WM_DeleteWindow
   \                     ??cbKeyboardWin_4: (+1)
   \   00000172   0x.... 0x....      BL       draw_return_ui
   \   00000176   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_3: (+1)
   \   00000178   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000017C   0x4281             CMP      R1,R0
   \   0000017E   0xD161             BNE.N    ??cbKeyboardWin_5
   \   00000180   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   00000184   0x7838             LDRB     R0,[R7, #+0]
   \   00000186   0x2800             CMP      R0,#+0
   \   00000188   0xF000 0x8235      BEQ.W    ??cbKeyboardWin_6
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0xF887 0x0025      STRB     R0,[R7, #+37]
   \   00000192   0xF04F 0x0920      MOV      R9,#+32
   \   00000196   0x.... 0x....      LDR.W    R5,??DataTable10_4
   \   0000019A   0xF205 0x16DB      ADDW     R6,R5,#+475
   \   0000019E   0x4680             MOV      R8,R0
   \   000001A0   0x2200             MOVS     R2,#+0
   \   000001A2   0x4649             MOV      R1,R9
   \   000001A4   0x4630             MOV      R0,R6
   \   000001A6   0x.... 0x....      BL       __aeabi_memset
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   000001AE   0xF990 0x1001      LDRSB    R1,[R0, #+1]
   \   000001B2   0xEB01 0x1141      ADD      R1,R1,R1, LSL #+5
   \   000001B6   0x1808             ADDS     R0,R1,R0
   \   000001B8   0xF100 0x0118      ADD      R1,R0,#+24
   \   000001BC   0x464A             MOV      R2,R9
   \   000001BE   0x4630             MOV      R0,R6
   \   000001C0   0x.... 0x....      BL       __aeabi_memcpy
   \   000001C4   0xF205 0x16FB      ADDW     R6,R5,#+507
   \   000001C8   0x4642             MOV      R2,R8
   \   000001CA   0x2140             MOVS     R1,#+64
   \   000001CC   0x4630             MOV      R0,R6
   \   000001CE   0x.... 0x....      BL       __aeabi_memset
   \   000001D2   0x2212             MOVS     R2,#+18
   \   000001D4   0x1C79             ADDS     R1,R7,#+1
   \   000001D6   0x4630             MOV      R0,R6
   \   000001D8   0x.... 0x....      BL       __aeabi_memcpy
   \   000001DC   0x2002             MOVS     R0,#+2
   \   000001DE   0xF885 0x023B      STRB     R0,[R5, #+571]
   \   000001E2   0x4642             MOV      R2,R8
   \   000001E4   0x4611             MOV      R1,R2
   \   000001E6   0x4608             MOV      R0,R1
   \   000001E8   0x.... 0x....      BL       _Z15package_to_wifi13WIFI_RET_TYPEPci
   \   000001EC   0xF06F 0x005A      MVN      R0,#+90
   \   000001F0   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   000001F4   0x2109             MOVS     R1,#+9
   \   000001F6   0xA801             ADD      R0,SP,#+4
   \   000001F8   0x7041             STRB     R1,[R0, #+1]
   \   000001FA   0xF880 0x8003      STRB     R8,[R0, #+3]
   \   000001FE   0x2101             MOVS     R1,#+1
   \   00000200   0x7081             STRB     R1,[R0, #+2]
   \   00000202   0x7101             STRB     R1,[R0, #+4]
   \   00000204   0xF880 0x8006      STRB     R8,[R0, #+6]
   \   00000208   0xF06F 0x0103      MVN      R1,#+3
   \   0000020C   0xF88D 0x1009      STRB     R1,[SP, #+9]
   \   00000210   0x2106             MOVS     R1,#+6
   \   00000212   0x.... 0x....      BL       _Z16raw_send_to_wifiPci
   \   00000216   0x.... 0x....      LDR.W    R1,??DataTable10_3
   \   0000021A   0x2023             MOVS     R0,#+35
   \   0000021C   0x7008             STRB     R0,[R1, #+0]
   \   0000021E   0x6968             LDR      R0,[R5, #+20]
   \   00000220   0x.... 0x....      BL       GUI_SetBkColor
   \   00000224   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000228   0x.... 0x....      BL       WM_IsWindow
   \   0000022C   0xB118             CBZ.N    R0,??cbKeyboardWin_7
   \   0000022E   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000232   0x.... 0x....      BL       WM_DeleteWindow
   \                     ??cbKeyboardWin_7: (+1)
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   0000023A   0xF881 0x8000      STRB     R8,[R1, #+0]
   \   0000023E   0x.... 0x....      BL       draw_Tips
   \   00000242   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_5: (+1)
   \   00000244   0x.... 0x....      LDR.W    R6,??DataTable10_7
   \   00000248   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000024C   0x4281             CMP      R1,R0
   \   0000024E   0xD135             BNE.N    ??cbKeyboardWin_8
   \   00000250   0x2201             MOVS     R2,#+1
   \   00000252   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_white.bin">`
   \   00000256   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   0000025A   0x200A             MOVS     R0,#+10
   \   0000025C   0x9000             STR      R0,[SP, #+0]
   \   0000025E   0x231F             MOVS     R3,#+31
   \   00000260   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000264   0xF104 0x0268      ADD      R2,R4,#+104
   \   00000268   0x2100             MOVS     R1,#+0
   \   0000026A   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   0000026E   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   00000272   0x7838             LDRB     R0,[R7, #+0]
   \   00000274   0xB108             CBZ.N    R0,??cbKeyboardWin_9
   \   00000276   0x1E40             SUBS     R0,R0,#+1
   \   00000278   0x7038             STRB     R0,[R7, #+0]
   \                     ??cbKeyboardWin_9: (+1)
   \   0000027A   0x2000             MOVS     R0,#+0
   \   0000027C   0x7839             LDRB     R1,[R7, #+0]
   \   0000027E   0x.... 0x....      LDR.W    R6,??DataTable10_8
   \   00000282   0x19C9             ADDS     R1,R1,R7
   \   00000284   0x7048             STRB     R0,[R1, #+1]
   \   00000286   0x7839             LDRB     R1,[R7, #+0]
   \   00000288   0x19C9             ADDS     R1,R1,R7
   \   0000028A   0x74C8             STRB     R0,[R1, #+19]
   \   0000028C   0x7838             LDRB     R0,[R7, #+0]
   \   0000028E   0x2800             CMP      R0,#+0
   \   00000290   0xF040 0x80B2      BNE.W    ??cbKeyboardWin_10
   \   00000294   0x6D61             LDR      R1,[R4, #+84]
   \   00000296   0x2212             MOVS     R2,#+18
   \   00000298   0xF107 0x0013      ADD      R0,R7,#+19
   \   0000029C   0x.... 0x....      BL       strncpy
   \   000002A0   0x.... 0x....      LDR.W    R4,??DataTable10_9  ;; 0x3f3f3f
   \   000002A4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002A8   0x4622             MOV      R2,R4
   \   000002AA   0x2101             MOVS     R1,#+1
   \   000002AC   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000002B0   0x2100             MOVS     R1,#+0
   \   000002B2   0x4622             MOV      R2,R4
   \   000002B4   0x5E70             LDRSH    R0,[R6, R1]
   \   000002B6   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000002BA   0xE09D             B.N      ??cbKeyboardWin_10
   \                     ??cbKeyboardWin_8: (+1)
   \   000002BC   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002C0   0x4281             CMP      R1,R0
   \   000002C2   0xD141             BNE.N    ??cbKeyboardWin_11
   \   000002C4   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   000002C8   0x7838             LDRB     R0,[R7, #+0]
   \   000002CA   0xB9C8             CBNZ.N   R0,??cbKeyboardWin_12
   \   000002CC   0x2112             MOVS     R1,#+18
   \   000002CE   0xF107 0x0013      ADD      R0,R7,#+19
   \   000002D2   0x.... 0x....      BL       __aeabi_memclr
   \   000002D6   0x.... 0x....      LDR.W    R6,??DataTable10_8
   \   000002DA   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002DE   0xF06F 0x447F      MVN      R4,#-16777216
   \   000002E2   0x4622             MOV      R2,R4
   \   000002E4   0x2101             MOVS     R1,#+1
   \   000002E6   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000002EA   0x2100             MOVS     R1,#+0
   \   000002EC   0x4622             MOV      R2,R4
   \   000002EE   0x5E70             LDRSH    R0,[R6, R1]
   \   000002F0   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000002F4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002F8   0xF107 0x0113      ADD      R1,R7,#+19
   \   000002FC   0x.... 0x....      BL       BUTTON_SetText
   \                     ??cbKeyboardWin_12: (+1)
   \   00000300   0x7838             LDRB     R0,[R7, #+0]
   \   00000302   0x4601             MOV      R1,R0
   \   00000304   0x2911             CMP      R1,#+17
   \   00000306   0xF280 0x8176      BGE.W    ??cbKeyboardWin_6
   \   0000030A   0x2200             MOVS     R2,#+0
   \   0000030C   0xF887 0x2025      STRB     R2,[R7, #+37]
   \   00000310   0x62BA             STR      R2,[R7, #+40]
   \   00000312   0xB110             CBZ.N    R0,??cbKeyboardWin_13
   \   00000314   0x19C9             ADDS     R1,R1,R7
   \   00000316   0x2060             MOVS     R0,#+96
   \   00000318   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_13: (+1)
   \   0000031A   0x2020             MOVS     R0,#+32
   \   0000031C   0x7839             LDRB     R1,[R7, #+0]
   \   0000031E   0x19C9             ADDS     R1,R1,R7
   \   00000320   0x7048             STRB     R0,[R1, #+1]
   \   00000322   0x7839             LDRB     R1,[R7, #+0]
   \   00000324   0x19C9             ADDS     R1,R1,R7
   \   00000326   0x74C8             STRB     R0,[R1, #+19]
   \   00000328   0xF107 0x0113      ADD      R1,R7,#+19
   \   0000032C   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   00000330   0x5E80             LDRSH    R0,[R0, R2]
   \   00000332   0x.... 0x....      BL       BUTTON_SetText
   \   00000336   0x7838             LDRB     R0,[R7, #+0]
   \   00000338   0x1C40             ADDS     R0,R0,#+1
   \   0000033A   0x7038             STRB     R0,[R7, #+0]
   \   0000033C   0xB007             ADD      SP,SP,#+28
   \   0000033E   0x2001             MOVS     R0,#+1
   \   00000340   0xF887 0x0025      STRB     R0,[R7, #+37]
   \   00000344   0xE8BD 0x8FF0      POP      {R4-R11,PC}
   \                     ??cbKeyboardWin_11: (+1)
   \   00000348   0x.... 0x....      LDR.W    R6,??DataTable10_8
   \   0000034C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000350   0x4281             CMP      R1,R0
   \   00000352   0xD102             BNE.N    ??cbKeyboardWin_14
   \   00000354   0x2000             MOVS     R0,#+0
   \   00000356   0x7020             STRB     R0,[R4, #+0]
   \   00000358   0xE02F             B.N      ??cbKeyboardWin_15
   \                     ??cbKeyboardWin_14: (+1)
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable10_10
   \   0000035E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000362   0x4291             CMP      R1,R2
   \   00000364   0xD102             BNE.N    ??cbKeyboardWin_16
   \   00000366   0x2002             MOVS     R0,#+2
   \   00000368   0x7020             STRB     R0,[R4, #+0]
   \   0000036A   0xE026             B.N      ??cbKeyboardWin_15
   \                     ??cbKeyboardWin_16: (+1)
   \   0000036C   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   00000370   0x4281             CMP      R1,R0
   \   00000372   0xD102             BNE.N    ??cbKeyboardWin_17
   \   00000374   0x2003             MOVS     R0,#+3
   \   00000376   0x7020             STRB     R0,[R4, #+0]
   \   00000378   0xE01F             B.N      ??cbKeyboardWin_15
   \                     ??cbKeyboardWin_17: (+1)
   \   0000037A   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   0000037E   0x4281             CMP      R1,R0
   \   00000380   0xD11E             BNE.N    ??cbKeyboardWin_18
   \   00000382   0xF994 0x1000      LDRSB    R1,[R4, #+0]
   \   00000386   0xB929             CBNZ.N   R1,??cbKeyboardWin_19
   \   00000388   0x2101             MOVS     R1,#+1
   \   0000038A   0x7021             STRB     R1,[R4, #+0]
   \   0000038C   0x2201             MOVS     R2,#+1
   \   0000038E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Up_Arrow_W...">`
   \   00000392   0xE006             B.N      ??cbKeyboardWin_20
   \                     ??cbKeyboardWin_19: (+1)
   \   00000394   0x2901             CMP      R1,#+1
   \   00000396   0xD110             BNE.N    ??cbKeyboardWin_15
   \   00000398   0x2100             MOVS     R1,#+0
   \   0000039A   0x7021             STRB     R1,[R4, #+0]
   \   0000039C   0x2201             MOVS     R2,#+1
   \   0000039E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \                     ??cbKeyboardWin_20: (+1)
   \   000003A2   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   000003A6   0x200A             MOVS     R0,#+10
   \   000003A8   0x9000             STR      R0,[SP, #+0]
   \   000003AA   0x2321             MOVS     R3,#+33
   \   000003AC   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   000003B0   0xF104 0x027C      ADD      R2,R4,#+124
   \   000003B4   0x2100             MOVS     R1,#+0
   \   000003B6   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \                     ??cbKeyboardWin_15: (+1)
   \   000003BA   0x.... 0x....      BL       update_keyboard_disp
   \   000003BE   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_18: (+1)
   \   000003C0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003C4   0x4281             CMP      R1,R0
   \   000003C6   0xD11E             BNE.N    ??cbKeyboardWin_21
   \   000003C8   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   000003CC   0x7838             LDRB     R0,[R7, #+0]
   \   000003CE   0x2800             CMP      R0,#+0
   \   000003D0   0xF040 0x8111      BNE.W    ??cbKeyboardWin_6
   \   000003D4   0x2112             MOVS     R1,#+18
   \   000003D6   0xF107 0x0013      ADD      R0,R7,#+19
   \   000003DA   0x.... 0x....      BL       __aeabi_memclr
   \   000003DE   0xF06F 0x447F      MVN      R4,#-16777216
   \   000003E2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003E6   0x4622             MOV      R2,R4
   \   000003E8   0x2101             MOVS     R1,#+1
   \   000003EA   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000003EE   0x2100             MOVS     R1,#+0
   \   000003F0   0x4622             MOV      R2,R4
   \   000003F2   0x5E70             LDRSH    R0,[R6, R1]
   \   000003F4   0x.... 0x....      BL       BUTTON_SetTextColor
   \                     ??cbKeyboardWin_10: (+1)
   \   000003F8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003FC   0xF107 0x0113      ADD      R1,R7,#+19
   \   00000400   0x.... 0x....      BL       BUTTON_SetText
   \   00000404   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_21: (+1)
   \   00000406   0x251A             MOVS     R5,#+26
   \   00000408   0x.... 0x....      LDR.W    R9,??DataTable10_11
   \   0000040C   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   00000410   0xF06F 0x4A7F      MVN      R10,#-16777216
   \                     ??cbKeyboardWin_22: (+1)
   \   00000414   0x1E6D             SUBS     R5,R5,#+1
   \   00000416   0xEB05 0x0145      ADD      R1,R5,R5, LSL #+1
   \   0000041A   0x00C9             LSLS     R1,R1,#+3
   \   0000041C   0xF9BB 0x0006      LDRSH    R0,[R11, #+6]
   \   00000420   0xF931 0x1009      LDRSH    R1,[R1, R9]
   \   00000424   0x4288             CMP      R0,R1
   \   00000426   0xF040 0x80BF      BNE.W    ??cbKeyboardWin_23
   \   0000042A   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   0000042E   0xB128             CBZ.N    R0,??cbKeyboardWin_24
   \   00000430   0x2802             CMP      R0,#+2
   \   00000432   0xD054             BEQ.N    ??cbKeyboardWin_25
   \   00000434   0xD32B             BCC.N    ??cbKeyboardWin_26
   \   00000436   0x2803             CMP      R0,#+3
   \   00000438   0xD07B             BEQ.N    ??cbKeyboardWin_27
   \   0000043A   0xE0B5             B.N      ??cbKeyboardWin_23
   \                     ??cbKeyboardWin_24: (+1)
   \   0000043C   0x7838             LDRB     R0,[R7, #+0]
   \   0000043E   0xB9B0             CBNZ.N   R0,??cbKeyboardWin_28
   \   00000440   0x2200             MOVS     R2,#+0
   \   00000442   0x2112             MOVS     R1,#+18
   \   00000444   0xF107 0x0013      ADD      R0,R7,#+19
   \   00000448   0x.... 0x....      BL       __aeabi_memset
   \   0000044C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000450   0x4652             MOV      R2,R10
   \   00000452   0x2101             MOVS     R1,#+1
   \   00000454   0x.... 0x....      BL       BUTTON_SetTextColor
   \   00000458   0x2100             MOVS     R1,#+0
   \   0000045A   0x4652             MOV      R2,R10
   \   0000045C   0x5E70             LDRSH    R0,[R6, R1]
   \   0000045E   0x.... 0x....      BL       BUTTON_SetTextColor
   \   00000462   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000466   0xF107 0x0113      ADD      R1,R7,#+19
   \   0000046A   0x.... 0x....      BL       BUTTON_SetText
   \                     ??cbKeyboardWin_28: (+1)
   \   0000046E   0x7838             LDRB     R0,[R7, #+0]
   \   00000470   0x4601             MOV      R1,R0
   \   00000472   0x2911             CMP      R1,#+17
   \   00000474   0xF280 0x8098      BGE.W    ??cbKeyboardWin_23
   \   00000478   0x2200             MOVS     R2,#+0
   \   0000047A   0xF887 0x2025      STRB     R2,[R7, #+37]
   \   0000047E   0x62BA             STR      R2,[R7, #+40]
   \   00000480   0xB110             CBZ.N    R0,??cbKeyboardWin_29
   \   00000482   0x19C9             ADDS     R1,R1,R7
   \   00000484   0x2060             MOVS     R0,#+96
   \   00000486   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_29: (+1)
   \   00000488   0xF105 0x0041      ADD      R0,R5,#+65
   \   0000048C   0xE07B             B.N      ??cbKeyboardWin_30
   \                     ??cbKeyboardWin_26: (+1)
   \   0000048E   0x7838             LDRB     R0,[R7, #+0]
   \   00000490   0xB9B0             CBNZ.N   R0,??cbKeyboardWin_31
   \   00000492   0x2200             MOVS     R2,#+0
   \   00000494   0x2112             MOVS     R1,#+18
   \   00000496   0xF107 0x0013      ADD      R0,R7,#+19
   \   0000049A   0x.... 0x....      BL       __aeabi_memset
   \   0000049E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000004A2   0x4652             MOV      R2,R10
   \   000004A4   0x2101             MOVS     R1,#+1
   \   000004A6   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000004AA   0x2100             MOVS     R1,#+0
   \   000004AC   0x4652             MOV      R2,R10
   \   000004AE   0x5E70             LDRSH    R0,[R6, R1]
   \   000004B0   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000004B4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000004B8   0xF107 0x0113      ADD      R1,R7,#+19
   \   000004BC   0x.... 0x....      BL       BUTTON_SetText
   \                     ??cbKeyboardWin_31: (+1)
   \   000004C0   0x7838             LDRB     R0,[R7, #+0]
   \   000004C2   0x4601             MOV      R1,R0
   \   000004C4   0x2911             CMP      R1,#+17
   \   000004C6   0xDA6F             BGE.N    ??cbKeyboardWin_23
   \   000004C8   0x2200             MOVS     R2,#+0
   \   000004CA   0xF887 0x2025      STRB     R2,[R7, #+37]
   \   000004CE   0x62BA             STR      R2,[R7, #+40]
   \   000004D0   0xB110             CBZ.N    R0,??cbKeyboardWin_32
   \   000004D2   0x19C9             ADDS     R1,R1,R7
   \   000004D4   0x2060             MOVS     R0,#+96
   \   000004D6   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_32: (+1)
   \   000004D8   0xF105 0x0061      ADD      R0,R5,#+97
   \   000004DC   0xE053             B.N      ??cbKeyboardWin_30
   \                     ??cbKeyboardWin_25: (+1)
   \   000004DE   0x2D15             CMP      R5,#+21
   \   000004E0   0xDA62             BGE.N    ??cbKeyboardWin_23
   \   000004E2   0x7838             LDRB     R0,[R7, #+0]
   \   000004E4   0xB9B0             CBNZ.N   R0,??cbKeyboardWin_33
   \   000004E6   0x2200             MOVS     R2,#+0
   \   000004E8   0x2112             MOVS     R1,#+18
   \   000004EA   0xF107 0x0013      ADD      R0,R7,#+19
   \   000004EE   0x.... 0x....      BL       __aeabi_memset
   \   000004F2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000004F6   0x4652             MOV      R2,R10
   \   000004F8   0x2101             MOVS     R1,#+1
   \   000004FA   0x.... 0x....      BL       BUTTON_SetTextColor
   \   000004FE   0x2100             MOVS     R1,#+0
   \   00000500   0x4652             MOV      R2,R10
   \   00000502   0x5E70             LDRSH    R0,[R6, R1]
   \   00000504   0x.... 0x....      BL       BUTTON_SetTextColor
   \   00000508   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000050C   0xF107 0x0113      ADD      R1,R7,#+19
   \   00000510   0x.... 0x....      BL       BUTTON_SetText
   \                     ??cbKeyboardWin_33: (+1)
   \   00000514   0x7838             LDRB     R0,[R7, #+0]
   \   00000516   0x4601             MOV      R1,R0
   \   00000518   0x2911             CMP      R1,#+17
   \   0000051A   0xDA45             BGE.N    ??cbKeyboardWin_23
   \   0000051C   0x2200             MOVS     R2,#+0
   \   0000051E   0xF887 0x2025      STRB     R2,[R7, #+37]
   \   00000522   0x62BA             STR      R2,[R7, #+40]
   \   00000524   0xB110             CBZ.N    R0,??cbKeyboardWin_34
   \   00000526   0x19C9             ADDS     R1,R1,R7
   \   00000528   0x2060             MOVS     R0,#+96
   \   0000052A   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_34: (+1)
   \   0000052C   0x.... 0x....      ADR.W    R0,digital_key_value
   \   00000530   0xE028             B.N      ??cbKeyboardWin_35
   \                     ??cbKeyboardWin_27: (+1)
   \   00000532   0x2D14             CMP      R5,#+20
   \   00000534   0xDA38             BGE.N    ??cbKeyboardWin_23
   \   00000536   0x7838             LDRB     R0,[R7, #+0]
   \   00000538   0xB9B0             CBNZ.N   R0,??cbKeyboardWin_36
   \   0000053A   0x2200             MOVS     R2,#+0
   \   0000053C   0x2112             MOVS     R1,#+18
   \   0000053E   0xF107 0x0013      ADD      R0,R7,#+19
   \   00000542   0x.... 0x....      BL       __aeabi_memset
   \   00000546   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000054A   0x4652             MOV      R2,R10
   \   0000054C   0x2101             MOVS     R1,#+1
   \   0000054E   0x.... 0x....      BL       BUTTON_SetTextColor
   \   00000552   0x2100             MOVS     R1,#+0
   \   00000554   0x4652             MOV      R2,R10
   \   00000556   0x5E70             LDRSH    R0,[R6, R1]
   \   00000558   0x.... 0x....      BL       BUTTON_SetTextColor
   \   0000055C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000560   0xF107 0x0113      ADD      R1,R7,#+19
   \   00000564   0x.... 0x....      BL       BUTTON_SetText
   \                     ??cbKeyboardWin_36: (+1)
   \   00000568   0x7838             LDRB     R0,[R7, #+0]
   \   0000056A   0x4601             MOV      R1,R0
   \   0000056C   0x2911             CMP      R1,#+17
   \   0000056E   0xDA1B             BGE.N    ??cbKeyboardWin_23
   \   00000570   0x2200             MOVS     R2,#+0
   \   00000572   0xF887 0x2025      STRB     R2,[R7, #+37]
   \   00000576   0x62BA             STR      R2,[R7, #+40]
   \   00000578   0xB110             CBZ.N    R0,??cbKeyboardWin_37
   \   0000057A   0x19C9             ADDS     R1,R1,R7
   \   0000057C   0x2060             MOVS     R0,#+96
   \   0000057E   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_37: (+1)
   \   00000580   0x.... 0x....      ADR.W    R0,symbol_key_value
   \                     ??cbKeyboardWin_35: (+1)
   \   00000584   0x5628             LDRSB    R0,[R5, R0]
   \                     ??cbKeyboardWin_30: (+1)
   \   00000586   0x7839             LDRB     R1,[R7, #+0]
   \   00000588   0x19C9             ADDS     R1,R1,R7
   \   0000058A   0x7048             STRB     R0,[R1, #+1]
   \   0000058C   0x7839             LDRB     R1,[R7, #+0]
   \   0000058E   0x19C9             ADDS     R1,R1,R7
   \   00000590   0x74C8             STRB     R0,[R1, #+19]
   \   00000592   0xF107 0x0113      ADD      R1,R7,#+19
   \   00000596   0x5EB0             LDRSH    R0,[R6, R2]
   \   00000598   0x.... 0x....      BL       BUTTON_SetText
   \   0000059C   0x7838             LDRB     R0,[R7, #+0]
   \   0000059E   0x1C40             ADDS     R0,R0,#+1
   \   000005A0   0x7038             STRB     R0,[R7, #+0]
   \   000005A2   0x2001             MOVS     R0,#+1
   \   000005A4   0xF887 0x0025      STRB     R0,[R7, #+37]
   \                     ??cbKeyboardWin_23: (+1)
   \   000005A8   0x2D00             CMP      R5,#+0
   \   000005AA   0xF47F 0xAF33      BNE.W    ??cbKeyboardWin_22
   \   000005AE   0x....             B.N      ?Subroutine0
   \                     ??cbKeyboardWin_2: (+1)
   \   000005B0   0x2801             CMP      R0,#+1
   \   000005B2   0xD120             BNE.N    ??cbKeyboardWin_6
   \   000005B4   0x.... 0x....      LDR.W    R4,??DataTable10_1
   \   000005B8   0xF9BB 0x1006      LDRSH    R1,[R11, #+6]
   \   000005BC   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000005C0   0x4281             CMP      R1,R0
   \   000005C2   0xBF1C             ITT      NE 
   \   000005C4   0xF9B4 0x001C      LDRSHNE  R0,[R4, #+28]
   \   000005C8   0x4281             CMPNE    R1,R0
   \   000005CA   0xD014             BEQ.N    ??cbKeyboardWin_6
   \   000005CC   0x.... 0x....      LDR.W    R6,??DataTable10_7
   \   000005D0   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000005D4   0x4281             CMP      R1,R0
   \   000005D6   0xD10E             BNE.N    ??cbKeyboardWin_6
   \   000005D8   0x2201             MOVS     R2,#+1
   \   000005DA   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_black.bin">`
   \   000005DE   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   000005E2   0x200B             MOVS     R0,#+11
   \   000005E4   0x9000             STR      R0,[SP, #+0]
   \   000005E6   0x2312             MOVS     R3,#+18
   \   000005E8   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000005EC   0xF104 0x0268      ADD      R2,R4,#+104
   \   000005F0   0x2100             MOVS     R1,#+0
   \   000005F2   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \                     ??cbKeyboardWin_6: (+1)
   \   000005F6                      REQUIRE ?Subroutine0
   \   000005F6                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xB007             ADD      SP,SP,#+28
   \   00000002   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    434          

   \                                 In section .text, align 2, keep-with-next
    435          void draw_Keyboard()
    436          {
   \                     draw_Keyboard: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    437                 char buf[40];
    438          	char cutName[33];
                 	     ^
Warning[Pe177]: variable "cutName" was declared but never referenced

  static TEXT_Handle textKeyboardTitle;
                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_keyboard.cpp",19  Warning[Pe177]: 
          variable "textKeyboardTitle" was declared but never referenced
    439          	uint8_t i=0;
    440              
    441           	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != KEY_BOARD_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10_12
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB08F             SUB      SP,SP,#+60
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A23             CMP      R2,#+35
   \   00000012   0xD005             BEQ.N    ??draw_Keyboard_0
    442          	{
    443          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    444          		disp_state_stack._disp_state[disp_state_stack._disp_index] = KEY_BOARD_UI;
   \   0000001A   0x2223             MOVS     R2,#+35
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    445          	}
    446          	disp_state = KEY_BOARD_UI;
   \                     ??draw_Keyboard_0: (+1)
   \   00000020   0x2023             MOVS     R0,#+35
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable10_13
    447          	
    448              GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable10_4
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    449              GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    450              GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    451          
    452          	
    453          	   //keyboard_menu.pointBold = TEXT_WIFI_POINT_BOLD_EN;
    454          
    455          	   //keyboard_menu.joining = TEXT_WIFI_JOINING_EN;
    456          	   //keyboard_menu.failedJoin = TEXT_WIFI_FAILED_JOIN_EN;
    457          	   //keyboard_menu.wifiConected = TEXT_WIFI_WIFI_CONECTED_EN; 
    458              
    459              hKeyboardWnd = WM_CreateWindow(0, 0, LCD_WIDTH, LCD_HEIGHT, WM_CF_SHOW, cbKeyboardWin, 0);
   \   0000003C   0x.... 0x....      LDR.W    R5,??DataTable10_1
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x9002             STR      R0,[SP, #+8]
   \   00000044   0xF44F 0x73A0      MOV      R3,#+320
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable10_14
   \   0000004C   0x9001             STR      R0,[SP, #+4]
   \   0000004E   0xF44F 0x72F0      MOV      R2,#+480
   \   00000052   0x2002             MOVS     R0,#+2
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       WM_CreateWindow
   \   0000005E   0x8068             STRH     R0,[R5, #+2]
    460              //textKeyboardTitle = TEXT_CreateEx(0,0,LCD_WIDTH,titleHeight, hKeyboardWnd, WM_CF_SHOW, TEXT_CF_HCENTER|TEXT_CF_VCENTER,   GUI_ID_TEXT1, "");
    461              //TEXT_SetFont(textKeyboardTitle,&GUI_FontHelvetica36);
    462              //TEXT_SetTextColor(textKeyboardTitle,BUTTON_PRESS_BK_COLOR);
    463              //memset(buf,0,sizeof(buf));
    464              //memset(cutName,0,sizeof(cutName));
    465              //strcat(buf,wifi_menu.title);
    466              //strcat(buf," ");
    467             // cutWifiName((char * )wifi_list.wifiName[wifi_list.nameIndex], 12, cutName);
    468              //strcat(buf,(const char *)cutName);
    469              //TEXT_SetText(textKeyboardTitle,buf);
    470              
    471              
    472              buttonRet.btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000060   0x.... 0x....      BL       alloc_win_id
   \   00000064   0x9003             STR      R0,[SP, #+12]
   \   00000066   0x232A             MOVS     R3,#+42
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x9002             STR      R0,[SP, #+8]
   \   0000006C   0x2243             MOVS     R2,#+67
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x9001             STR      R0,[SP, #+4]
   \   00000072   0x21E9             MOVS     R1,#+233
   \   00000074   0x5E28             LDRSH    R0,[R5, R0]
   \   00000076   0x9000             STR      R0,[SP, #+0]
   \   00000078   0xF44F 0x70CC      MOV      R0,#+408
   \   0000007C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000080   0x80A8             STRH     R0,[R5, #+4]
    473          
    474              buttonJoint.btnHandle = BUTTON_CreateEx(LCD_WIDTH-80-10,10,80,40, hKeyboardWnd, BUTTON_CF_SHOW, 0, 310);
   \   00000082   0x2328             MOVS     R3,#+40
   \   00000084   0xF44F 0x709B      MOV      R0,#+310
   \   00000088   0x9003             STR      R0,[SP, #+12]
   \   0000008A   0x2250             MOVS     R2,#+80
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x9002             STR      R0,[SP, #+8]
   \   00000090   0x210A             MOVS     R1,#+10
   \   00000092   0x2002             MOVS     R0,#+2
   \   00000094   0x9001             STR      R0,[SP, #+4]
   \   00000096   0x5E28             LDRSH    R0,[R5, R0]
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0xF44F 0x70C3      MOV      R0,#+390
   \   0000009E   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A2   0x83A8             STRH     R0,[R5, #+28]
    475          
    476              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   000000A4   0x2101             MOVS     R1,#+1
   \   000000A6   0x6962             LDR      R2,[R4, #+20]
   \   000000A8   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000AC   0x.... 0x....      BL       BUTTON_SetBkColor
    477              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   000000B0   0x6962             LDR      R2,[R4, #+20]
   \   000000B2   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0x.... 0x....      BL       BUTTON_SetBkColor
    478              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000000BC   0xF24E 0x08E1      MOVW     R8,#+57569
   \   000000C0   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000C4   0x4642             MOV      R2,R8
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x.... 0x....      BL       BUTTON_SetTextColor
    479              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
   \   000000CC   0x6D22             LDR      R2,[R4, #+80]
   \   000000CE   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000D2   0x2100             MOVS     R1,#+0
   \   000000D4   0x.... 0x....      BL       BUTTON_SetTextColor
    480              BUTTON_SetBmpFileName(buttonRet.btnHandle,"bmp_keyboard_return.bin",1);
   \   000000D8   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000DC   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_keyboard_return.bin">`
   \   000000E0   0x2201             MOVS     R2,#+1
   \   000000E2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    481              BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct_32x21,(KEY_WIDTH-32)/2, (KEY_HEIGHT-21)/2);
   \   000000E6   0x200A             MOVS     R0,#+10
   \   000000E8   0x9000             STR      R0,[SP, #+0]
   \   000000EA   0x2311             MOVS     R3,#+17
   \   000000EC   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000F0   0xF105 0x0268      ADD      R2,R5,#+104
   \   000000F4   0x2100             MOVS     R1,#+0
   \   000000F6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    482              
    483              BUTTON_SetBkColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   000000FA   0x6962             LDR      R2,[R4, #+20]
   \   000000FC   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000100   0x2101             MOVS     R1,#+1
   \   00000102   0x.... 0x....      BL       BUTTON_SetBkColor
    484              BUTTON_SetBkColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   00000106   0x6962             LDR      R2,[R4, #+20]
   \   00000108   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000010C   0x2100             MOVS     R1,#+0
   \   0000010E   0x.... 0x....      BL       BUTTON_SetBkColor
    485          	
    486          							
    487              //if(enter_state.join_state == JOIN_STATE_OK)
    488              //{  
    489                	//BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    490              	//BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    491              //}
    492              //else
    493              //{
    494              	BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   00000112   0x.... 0x....      LDR.W    R7,??DataTable10_9  ;; 0x3f3f3f
   \   00000116   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000011A   0x463A             MOV      R2,R7
   \   0000011C   0x2101             MOVS     R1,#+1
   \   0000011E   0x.... 0x....      BL       BUTTON_SetTextColor
    495              	BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   00000122   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000126   0x463A             MOV      R2,R7
   \   00000128   0x2100             MOVS     R1,#+0
   \   0000012A   0x.... 0x....      BL       BUTTON_SetTextColor
    496              //}
    497              BUTTON_SetTextAlign(buttonJoint.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   0000012E   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000132   0x210E             MOVS     R1,#+14
   \   00000134   0x.... 0x....      BL       BUTTON_SetTextAlign
    498          
    499              //BUTTON_SetFont(buttonRet.btnHandle,&GUI_FontHelvetica24);
    500              //BUTTON_SetText(buttonRet.btnHandle, build_cancel_menu.back);
    501              
    502              BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica36);
   \   00000138   0x.... 0x....      LDR.W    R9,??DataTable10_15
   \   0000013C   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000140   0x4649             MOV      R1,R9
   \   00000142   0x.... 0x....      BL       BUTTON_SetFont
    503              BUTTON_SetText(buttonJoint.btnHandle, keyboard_menu.apply);
   \   00000146   0x6D29             LDR      R1,[R5, #+80]
   \   00000148   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000014C   0x.... 0x....      BL       BUTTON_SetText
    504          
    505              buttonPassword.btnHandle = BUTTON_CreateEx(10,10,LCD_WIDTH-100,40, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000150   0x.... 0x....      BL       alloc_win_id
   \   00000154   0x9003             STR      R0,[SP, #+12]
   \   00000156   0x210A             MOVS     R1,#+10
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x9002             STR      R0,[SP, #+8]
   \   0000015C   0x2328             MOVS     R3,#+40
   \   0000015E   0x2002             MOVS     R0,#+2
   \   00000160   0x9001             STR      R0,[SP, #+4]
   \   00000162   0xF44F 0x72BE      MOV      R2,#+380
   \   00000166   0x5E28             LDRSH    R0,[R5, R0]
   \   00000168   0x9000             STR      R0,[SP, #+0]
   \   0000016A   0x4608             MOV      R0,R1
   \   0000016C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000170   0x.... 0x....      LDR.W    R6,??DataTable10_8
   \   00000174   0x8030             STRH     R0,[R6, #+0]
    506              BUTTON_SetBkColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   00000176   0x2101             MOVS     R1,#+1
   \   00000178   0x6962             LDR      R2,[R4, #+20]
   \   0000017A   0x.... 0x....      BL       BUTTON_SetBkColor
    507              BUTTON_SetBkColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   0000017E   0x6962             LDR      R2,[R4, #+20]
   \   00000180   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000184   0x2100             MOVS     R1,#+0
   \   00000186   0x.... 0x....      BL       BUTTON_SetBkColor
    508              BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   0000018A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000018E   0x463A             MOV      R2,R7
   \   00000190   0x2101             MOVS     R1,#+1
   \   00000192   0x.... 0x....      BL       BUTTON_SetTextColor
    509              BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   00000196   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000019A   0x463A             MOV      R2,R7
   \   0000019C   0x2100             MOVS     R1,#+0
   \   0000019E   0x.... 0x....      BL       BUTTON_SetTextColor
    510              BUTTON_SetTextAlign(buttonPassword.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER);
   \   000001A2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001A6   0x210C             MOVS     R1,#+12
   \   000001A8   0x.... 0x....      BL       BUTTON_SetTextAlign
    511              BUTTON_SetFont(buttonPassword.btnHandle,&GUI_FontHelvetica36);
   \   000001AC   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001B0   0x4649             MOV      R1,R9
   \   000001B2   0x.... 0x....      BL       BUTTON_SetFont
    512              BUTTON_SetText(buttonPassword.btnHandle, keyboard_menu.password);
   \   000001B6   0x6D69             LDR      R1,[R5, #+84]
   \   000001B8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001BC   0x.... 0x....      BL       BUTTON_SetText
    513              BUTTON_SetBmpFileName(buttonPassword.btnHandle,NULL,1);
   \   000001C0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001C4   0x2201             MOVS     R2,#+1
   \   000001C6   0x2100             MOVS     R1,#+0
   \   000001C8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    514              
    515          
    516              buttonLetter.btnHandle = BUTTON_CreateEx(FIRST_LINE_WIDTH+1,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000001CC   0x.... 0x....      BL       alloc_win_id
   \   000001D0   0x9003             STR      R0,[SP, #+12]
   \   000001D2   0x232A             MOVS     R3,#+42
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x9002             STR      R0,[SP, #+8]
   \   000001D8   0x225F             MOVS     R2,#+95
   \   000001DA   0x2002             MOVS     R0,#+2
   \   000001DC   0x9001             STR      R0,[SP, #+4]
   \   000001DE   0x213D             MOVS     R1,#+61
   \   000001E0   0x5E28             LDRSH    R0,[R5, R0]
   \   000001E2   0x9000             STR      R0,[SP, #+0]
   \   000001E4   0x2060             MOVS     R0,#+96
   \   000001E6   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001EA   0x8330             STRH     R0,[R6, #+24]
    517              buttonDigital.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*2,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000001EC   0x.... 0x....      BL       alloc_win_id
   \   000001F0   0x9003             STR      R0,[SP, #+12]
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x9002             STR      R0,[SP, #+8]
   \   000001F6   0x2002             MOVS     R0,#+2
   \   000001F8   0x9001             STR      R0,[SP, #+4]
   \   000001FA   0x232A             MOVS     R3,#+42
   \   000001FC   0x5E28             LDRSH    R0,[R5, R0]
   \   000001FE   0x.... 0x....      LDR.W    R7,??DataTable10_10
   \   00000202   0x9000             STR      R0,[SP, #+0]
   \   00000204   0x225F             MOVS     R2,#+95
   \   00000206   0x213D             MOVS     R1,#+61
   \   00000208   0x20C0             MOVS     R0,#+192
   \   0000020A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000020E   0x8038             STRH     R0,[R7, #+0]
    518              buttonSymbol.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*3,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000210   0x.... 0x....      BL       alloc_win_id
   \   00000214   0x9003             STR      R0,[SP, #+12]
   \   00000216   0x232A             MOVS     R3,#+42
   \   00000218   0x2000             MOVS     R0,#+0
   \   0000021A   0x9002             STR      R0,[SP, #+8]
   \   0000021C   0x225F             MOVS     R2,#+95
   \   0000021E   0x2002             MOVS     R0,#+2
   \   00000220   0x9001             STR      R0,[SP, #+4]
   \   00000222   0x213D             MOVS     R1,#+61
   \   00000224   0x5E28             LDRSH    R0,[R5, R0]
   \   00000226   0x9000             STR      R0,[SP, #+0]
   \   00000228   0xF44F 0x7090      MOV      R0,#+288
   \   0000022C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000230   0x8338             STRH     R0,[R7, #+24]
    519              buttonArrow.btnHandle = BUTTON_CreateEx(0,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000232   0x.... 0x....      BL       alloc_win_id
   \   00000236   0x9003             STR      R0,[SP, #+12]
   \   00000238   0x232A             MOVS     R3,#+42
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0x9002             STR      R0,[SP, #+8]
   \   0000023E   0x225F             MOVS     R2,#+95
   \   00000240   0x2002             MOVS     R0,#+2
   \   00000242   0x9001             STR      R0,[SP, #+4]
   \   00000244   0x213D             MOVS     R1,#+61
   \   00000246   0x5E28             LDRSH    R0,[R5, R0]
   \   00000248   0x9000             STR      R0,[SP, #+0]
   \   0000024A   0x2000             MOVS     R0,#+0
   \   0000024C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000250   0x86A8             STRH     R0,[R5, #+52]
    520              
    521              BUTTON_SetBkColor(buttonLetter.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000252   0x4642             MOV      R2,R8
   \   00000254   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000258   0x2101             MOVS     R1,#+1
   \   0000025A   0x.... 0x....      BL       BUTTON_SetBkColor
    522              BUTTON_SetBkColor(buttonLetter.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   0000025E   0x6962             LDR      R2,[R4, #+20]
   \   00000260   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000264   0x2100             MOVS     R1,#+0
   \   00000266   0x.... 0x....      BL       BUTTON_SetBkColor
    523              BUTTON_SetTextColor(buttonLetter.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   0000026A   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000026E   0x2200             MOVS     R2,#+0
   \   00000270   0x2101             MOVS     R1,#+1
   \   00000272   0x.... 0x....      BL       BUTTON_SetTextColor
    524              BUTTON_SetTextColor(buttonLetter.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   00000276   0x6BA2             LDR      R2,[R4, #+56]
   \   00000278   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000027C   0x2100             MOVS     R1,#+0
   \   0000027E   0x.... 0x....      BL       BUTTON_SetTextColor
    525              BUTTON_SetTextAlign(buttonLetter.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000282   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000286   0x210E             MOVS     R1,#+14
   \   00000288   0x.... 0x....      BL       BUTTON_SetTextAlign
    526              BUTTON_SetBmpFileName(buttonLetter.btnHandle,NULL,1);
   \   0000028C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000290   0x2201             MOVS     R2,#+1
   \   00000292   0x2100             MOVS     R1,#+0
   \   00000294   0x.... 0x....      BL       BUTTON_SetBmpFileName
    527              
    528              BUTTON_SetBkColor(buttonDigital.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000298   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000029C   0x4642             MOV      R2,R8
   \   0000029E   0x2101             MOVS     R1,#+1
   \   000002A0   0x.... 0x....      BL       BUTTON_SetBkColor
    529              BUTTON_SetBkColor(buttonDigital.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   000002A4   0x6962             LDR      R2,[R4, #+20]
   \   000002A6   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002AA   0x2100             MOVS     R1,#+0
   \   000002AC   0x.... 0x....      BL       BUTTON_SetBkColor
    530              BUTTON_SetTextColor(buttonDigital.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000002B0   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002B4   0x2200             MOVS     R2,#+0
   \   000002B6   0x2101             MOVS     R1,#+1
   \   000002B8   0x.... 0x....      BL       BUTTON_SetTextColor
    531              BUTTON_SetTextColor(buttonDigital.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   000002BC   0x6BA2             LDR      R2,[R4, #+56]
   \   000002BE   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002C2   0x2100             MOVS     R1,#+0
   \   000002C4   0x.... 0x....      BL       BUTTON_SetTextColor
    532              BUTTON_SetTextAlign(buttonDigital.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   000002C8   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002CC   0x210E             MOVS     R1,#+14
   \   000002CE   0x.... 0x....      BL       BUTTON_SetTextAlign
    533              BUTTON_SetBmpFileName(buttonDigital.btnHandle,NULL,1);
   \   000002D2   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002D6   0x2201             MOVS     R2,#+1
   \   000002D8   0x2100             MOVS     R1,#+0
   \   000002DA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    534              
    535              BUTTON_SetBkColor(buttonSymbol.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000002DE   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002E2   0x4642             MOV      R2,R8
   \   000002E4   0x2101             MOVS     R1,#+1
   \   000002E6   0x.... 0x....      BL       BUTTON_SetBkColor
    536              BUTTON_SetBkColor(buttonSymbol.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   000002EA   0x6962             LDR      R2,[R4, #+20]
   \   000002EC   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002F0   0x2100             MOVS     R1,#+0
   \   000002F2   0x.... 0x....      BL       BUTTON_SetBkColor
    537              BUTTON_SetTextColor(buttonSymbol.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000002F6   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002FA   0x2200             MOVS     R2,#+0
   \   000002FC   0x2101             MOVS     R1,#+1
   \   000002FE   0x.... 0x....      BL       BUTTON_SetTextColor
    538              BUTTON_SetTextColor(buttonSymbol.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   00000302   0x6BA2             LDR      R2,[R4, #+56]
   \   00000304   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000308   0x2100             MOVS     R1,#+0
   \   0000030A   0x.... 0x....      BL       BUTTON_SetTextColor
    539              BUTTON_SetTextAlign(buttonSymbol.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   0000030E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000312   0x210E             MOVS     R1,#+14
   \   00000314   0x.... 0x....      BL       BUTTON_SetTextAlign
    540              BUTTON_SetBmpFileName(buttonSymbol.btnHandle,NULL,1);
   \   00000318   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000031C   0x2201             MOVS     R2,#+1
   \   0000031E   0x2100             MOVS     R1,#+0
   \   00000320   0x.... 0x....      BL       BUTTON_SetBmpFileName
    541              
    542              BUTTON_SetBkColor(buttonArrow.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   00000324   0x6962             LDR      R2,[R4, #+20]
   \   00000326   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000032A   0x2101             MOVS     R1,#+1
   \   0000032C   0x.... 0x....      BL       BUTTON_SetBkColor
    543              BUTTON_SetBkColor(buttonArrow.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   00000330   0x6962             LDR      R2,[R4, #+20]
   \   00000332   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000336   0x2100             MOVS     R1,#+0
   \   00000338   0x.... 0x....      BL       BUTTON_SetBkColor
    544              BUTTON_SetTextColor(buttonArrow.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000033C   0x6BA2             LDR      R2,[R4, #+56]
   \   0000033E   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000342   0x2101             MOVS     R1,#+1
   \   00000344   0x.... 0x....      BL       BUTTON_SetTextColor
    545              BUTTON_SetTextColor(buttonArrow.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   00000348   0x6BA2             LDR      R2,[R4, #+56]
   \   0000034A   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000034E   0x2100             MOVS     R1,#+0
   \   00000350   0x.... 0x....      BL       BUTTON_SetTextColor
    546              BUTTON_SetTextAlign(buttonArrow.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000354   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000358   0x210E             MOVS     R1,#+14
   \   0000035A   0x.... 0x....      BL       BUTTON_SetTextAlign
    547              BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
   \   0000035E   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000362   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \   00000366   0x2201             MOVS     R2,#+1
   \   00000368   0x.... 0x....      BL       BUTTON_SetBmpFileName
    548              BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   0000036C   0x200A             MOVS     R0,#+10
   \   0000036E   0x9000             STR      R0,[SP, #+0]
   \   00000370   0x2321             MOVS     R3,#+33
   \   00000372   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000376   0xF105 0x027C      ADD      R2,R5,#+124
   \   0000037A   0x2100             MOVS     R1,#+0
   \   0000037C   0x.... 0x....      BL       BUTTON_SetBitmapEx
    549          
    550              
    551              BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26);
   \   00000380   0x.... 0x....      LDR.W    R10,??DataTable10_16
   \   00000384   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000388   0x4651             MOV      R1,R10
   \   0000038A   0x.... 0x....      BL       BUTTON_SetFont
    552              BUTTON_SetText(buttonLetter.btnHandle, keyboard_menu.letter);
   \   0000038E   0x6DA9             LDR      R1,[R5, #+88]
   \   00000390   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000394   0x.... 0x....      BL       BUTTON_SetText
    553              BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26);
   \   00000398   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000039C   0x4651             MOV      R1,R10
   \   0000039E   0x.... 0x....      BL       BUTTON_SetFont
    554              BUTTON_SetText(buttonDigital.btnHandle, keyboard_menu.digital);
   \   000003A2   0x6DE9             LDR      R1,[R5, #+92]
   \   000003A4   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000003A8   0x.... 0x....      BL       BUTTON_SetText
    555              BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26);
   \   000003AC   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000003B0   0x4651             MOV      R1,R10
   \   000003B2   0x.... 0x....      BL       BUTTON_SetFont
    556              BUTTON_SetText(buttonSymbol.btnHandle, keyboard_menu.symbol);
   \   000003B6   0x6E29             LDR      R1,[R5, #+96]
   \   000003B8   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000003BC   0x.... 0x....      BL       BUTTON_SetText
    557          
    558              buttonSpace.btnHandle = BUTTON_CreateEx(123+1,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*5,234,KEY_HEIGHT+2, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000003C0   0x.... 0x....      BL       alloc_win_id
   \   000003C4   0x9003             STR      R0,[SP, #+12]
   \   000003C6   0x232C             MOVS     R3,#+44
   \   000003C8   0x2000             MOVS     R0,#+0
   \   000003CA   0x9002             STR      R0,[SP, #+8]
   \   000003CC   0x22EA             MOVS     R2,#+234
   \   000003CE   0x2002             MOVS     R0,#+2
   \   000003D0   0x9001             STR      R0,[SP, #+4]
   \   000003D2   0xF44F 0x718A      MOV      R1,#+276
   \   000003D6   0x5E28             LDRSH    R0,[R5, R0]
   \   000003D8   0x9000             STR      R0,[SP, #+0]
   \   000003DA   0x207C             MOVS     R0,#+124
   \   000003DC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000003E0   0x....             LDR.N    R6,??DataTable10_7
    559          	
    560              BUTTON_SetBkColor(buttonSpace.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000003E2   0x4642             MOV      R2,R8
   \   000003E4   0x8030             STRH     R0,[R6, #+0]
   \   000003E6   0x2101             MOVS     R1,#+1
   \   000003E8   0x.... 0x....      BL       BUTTON_SetBkColor
    561              BUTTON_SetBkColor(buttonSpace.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000003EC   0x6B62             LDR      R2,[R4, #+52]
   \   000003EE   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003F2   0x2100             MOVS     R1,#+0
   \   000003F4   0x.... 0x....      BL       BUTTON_SetBkColor
    562              BUTTON_SetTextColor(buttonSpace.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000003F8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003FC   0x2200             MOVS     R2,#+0
   \   000003FE   0x2101             MOVS     R1,#+1
   \   00000400   0x.... 0x....      BL       BUTTON_SetTextColor
    563              BUTTON_SetTextColor(buttonSpace.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000404   0x6BA2             LDR      R2,[R4, #+56]
   \   00000406   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000040A   0x2100             MOVS     R1,#+0
   \   0000040C   0x.... 0x....      BL       BUTTON_SetTextColor
    564              BUTTON_SetTextAlign(buttonSpace.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000410   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000414   0x210E             MOVS     R1,#+14
   \   00000416   0x.... 0x....      BL       BUTTON_SetTextAlign
    565              BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica26);
   \   0000041A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000041E   0x4651             MOV      R1,R10
   \   00000420   0x.... 0x....      BL       BUTTON_SetFont
    566              BUTTON_SetBmpFileName(buttonSpace.btnHandle,NULL,1);
   \   00000424   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000428   0x2201             MOVS     R2,#+1
   \   0000042A   0x2100             MOVS     R1,#+0
   \   0000042C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    567              BUTTON_SetText(buttonSpace.btnHandle,keyboard_menu.space);
   \   00000430   0x6E69             LDR      R1,[R5, #+100]
   \   00000432   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000436   0x.... 0x....      BL       BUTTON_SetText
    568          
    569              buttondel2.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*4,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000043A   0x.... 0x....      BL       alloc_win_id
   \   0000043E   0x9003             STR      R0,[SP, #+12]
   \   00000440   0x232A             MOVS     R3,#+42
   \   00000442   0x2000             MOVS     R0,#+0
   \   00000444   0x9002             STR      R0,[SP, #+8]
   \   00000446   0x225F             MOVS     R2,#+95
   \   00000448   0x2002             MOVS     R0,#+2
   \   0000044A   0x9001             STR      R0,[SP, #+4]
   \   0000044C   0x213D             MOVS     R1,#+61
   \   0000044E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000450   0x9000             STR      R0,[SP, #+0]
   \   00000452   0xF44F 0x70C0      MOV      R0,#+384
   \   00000456   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000045A   0x8330             STRH     R0,[R6, #+24]
    570              BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_white.bin",1);
   \   0000045C   0x2201             MOVS     R2,#+1
   \   0000045E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_white.bin">`
   \   00000462   0x.... 0x....      BL       BUTTON_SetBmpFileName
    571              BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,(FIRST_LINE_WIDTH-32)/2, (KEY_HEIGHT-21)/2);
   \   00000466   0x200A             MOVS     R0,#+10
   \   00000468   0x9000             STR      R0,[SP, #+0]
   \   0000046A   0x231F             MOVS     R3,#+31
   \   0000046C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000470   0xF105 0x0268      ADD      R2,R5,#+104
   \   00000474   0x2100             MOVS     R1,#+0
   \   00000476   0x.... 0x....      BL       BUTTON_SetBitmapEx
    572              BUTTON_SetBkColor(buttondel2.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   0000047A   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000047E   0x4642             MOV      R2,R8
   \   00000480   0x2101             MOVS     R1,#+1
   \   00000482   0x.... 0x....      BL       BUTTON_SetBkColor
    573              BUTTON_SetBkColor(buttondel2.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000486   0x6B62             LDR      R2,[R4, #+52]
   \   00000488   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000048C   0x2100             MOVS     R1,#+0
   \   0000048E   0x.... 0x....      BL       BUTTON_SetBkColor
    574              BUTTON_SetTextColor(buttondel2.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   00000492   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000496   0x2200             MOVS     R2,#+0
   \   00000498   0x2101             MOVS     R1,#+1
   \   0000049A   0x.... 0x....      BL       BUTTON_SetTextColor
    575              BUTTON_SetTextColor(buttondel2.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000049E   0x6BA2             LDR      R2,[R4, #+56]
   \   000004A0   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000004A4   0x2100             MOVS     R1,#+0
   \   000004A6   0x.... 0x....      BL       BUTTON_SetTextColor
    576          	
    577          
    578          	i=26;
   \   000004AA   0xF04F 0x0B1A      MOV      R11,#+26
   \   000004AE   0x....             LDR.N    R6,??DataTable10_17
   \   000004B0   0xF240 0x69A4      MOVW     R9,#+1700
   \   000004B4   0x2700             MOVS     R7,#+0
   \                     ??draw_Keyboard_1: (+1)
   \   000004B6   0xF1AB 0x0B01      SUB      R11,R11,#+1
    579          	while(i--)
    580          	{
    581          		if(i < 7)
   \   000004BA   0xF1BB 0x0F07      CMP      R11,#+7
   \   000004BE   0xDA0C             BGE.N    ??draw_Keyboard_2
    582          		{
    583          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*i,VALUE_DISP_HEIGHT+1+KEY_HEIGHT+1,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000004C0   0x.... 0x....      BL       alloc_win_id
   \   000004C4   0x9003             STR      R0,[SP, #+12]
   \   000004C6   0x9702             STR      R7,[SP, #+8]
   \   000004C8   0x2002             MOVS     R0,#+2
   \   000004CA   0x9001             STR      R0,[SP, #+4]
   \   000004CC   0x232A             MOVS     R3,#+42
   \   000004CE   0x5E28             LDRSH    R0,[R5, R0]
   \   000004D0   0x9000             STR      R0,[SP, #+0]
   \   000004D2   0x2243             MOVS     R2,#+67
   \   000004D4   0x2168             MOVS     R1,#+104
   \   000004D6   0x4648             MOV      R0,R9
   \   000004D8   0xE034             B.N      ??draw_Keyboard_3
    584          		}
    585          		else if(i >= 7 && i < 14)
   \                     ??draw_Keyboard_2: (+1)
   \   000004DA   0xF1AB 0x0007      SUB      R0,R11,#+7
   \   000004DE   0x2807             CMP      R0,#+7
   \   000004E0   0xD20D             BCS.N    ??draw_Keyboard_4
    586          		{
    587          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 7),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1*2,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000004E2   0x.... 0x....      BL       alloc_win_id
   \   000004E6   0x9003             STR      R0,[SP, #+12]
   \   000004E8   0x9702             STR      R7,[SP, #+8]
   \   000004EA   0x2002             MOVS     R0,#+2
   \   000004EC   0x9001             STR      R0,[SP, #+4]
   \   000004EE   0x232A             MOVS     R3,#+42
   \   000004F0   0x5E28             LDRSH    R0,[R5, R0]
   \   000004F2   0x9000             STR      R0,[SP, #+0]
   \   000004F4   0x2243             MOVS     R2,#+67
   \   000004F6   0x2193             MOVS     R1,#+147
   \   000004F8   0xF5A9 0x70EE      SUB      R0,R9,#+476
   \   000004FC   0xE022             B.N      ??draw_Keyboard_3
    588          		}
    589          		else if(i >= 14 && i < 21)
   \                     ??draw_Keyboard_4: (+1)
   \   000004FE   0xF1AB 0x000E      SUB      R0,R11,#+14
   \   00000502   0x2807             CMP      R0,#+7
   \   00000504   0xD20D             BCS.N    ??draw_Keyboard_5
    590          		{
    591          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 14),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*3,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000506   0x.... 0x....      BL       alloc_win_id
   \   0000050A   0x9003             STR      R0,[SP, #+12]
   \   0000050C   0x9702             STR      R7,[SP, #+8]
   \   0000050E   0x2002             MOVS     R0,#+2
   \   00000510   0x9001             STR      R0,[SP, #+4]
   \   00000512   0x232A             MOVS     R3,#+42
   \   00000514   0x5E28             LDRSH    R0,[R5, R0]
   \   00000516   0x9000             STR      R0,[SP, #+0]
   \   00000518   0x2243             MOVS     R2,#+67
   \   0000051A   0x21BE             MOVS     R1,#+190
   \   0000051C   0xF5A9 0x706E      SUB      R0,R9,#+952
   \   00000520   0xE010             B.N      ??draw_Keyboard_3
    592          		}
    593          		else if(i >= 21 && i < 26)
   \                     ??draw_Keyboard_5: (+1)
   \   00000522   0xF1AB 0x0015      SUB      R0,R11,#+21
   \   00000526   0x2805             CMP      R0,#+5
   \   00000528   0xD20F             BCS.N    ??draw_Keyboard_6
    594          		{
    595          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 20),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000052A   0x.... 0x....      BL       alloc_win_id
   \   0000052E   0x9003             STR      R0,[SP, #+12]
   \   00000530   0x9702             STR      R7,[SP, #+8]
   \   00000532   0x2002             MOVS     R0,#+2
   \   00000534   0x9001             STR      R0,[SP, #+4]
   \   00000536   0x232A             MOVS     R3,#+42
   \   00000538   0x5E28             LDRSH    R0,[R5, R0]
   \   0000053A   0x9000             STR      R0,[SP, #+0]
   \   0000053C   0x2243             MOVS     R2,#+67
   \   0000053E   0x21E9             MOVS     R1,#+233
   \   00000540   0xF5A9 0x60AA      SUB      R0,R9,#+1360
   \                     ??draw_Keyboard_3: (+1)
   \   00000544   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000548   0x8030             STRH     R0,[R6, #+0]
    596          		}
    597          
    598          		memset(buf,0,sizeof(buf));
   \                     ??draw_Keyboard_6: (+1)
   \   0000054A   0x2200             MOVS     R2,#+0
   \   0000054C   0x2128             MOVS     R1,#+40
   \   0000054E   0xA804             ADD      R0,SP,#+16
   \   00000550   0x.... 0x....      BL       __aeabi_memset4
    599          		//sprintf(buf,"%d",0x41 + i);
    600          		buf[0] = 0x41 + i;
   \   00000554   0xF10B 0x0041      ADD      R0,R11,#+65
   \   00000558   0xF88D 0x0010      STRB     R0,[SP, #+16]
    601          		BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   0000055C   0xA904             ADD      R1,SP,#+16
   \   0000055E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000562   0x.... 0x....      BL       BUTTON_SetText
    602          
    603          		BUTTON_SetBkColor(buttonWifiKey[i].btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000566   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000056A   0x4642             MOV      R2,R8
   \   0000056C   0x2101             MOVS     R1,#+1
   \   0000056E   0x.... 0x....      BL       BUTTON_SetBkColor
    604          	    	BUTTON_SetBkColor(buttonWifiKey[i].btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000572   0x6B62             LDR      R2,[R4, #+52]
   \   00000574   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000578   0x4639             MOV      R1,R7
   \   0000057A   0x.... 0x....      BL       BUTTON_SetBkColor
    605          	    	BUTTON_SetTextColor(buttonWifiKey[i].btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   0000057E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000582   0x463A             MOV      R2,R7
   \   00000584   0x2101             MOVS     R1,#+1
   \   00000586   0x.... 0x....      BL       BUTTON_SetTextColor
    606          	    	BUTTON_SetTextColor(buttonWifiKey[i].btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000058A   0x6BA2             LDR      R2,[R4, #+56]
   \   0000058C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000590   0x4639             MOV      R1,R7
   \   00000592   0x.... 0x....      BL       BUTTON_SetTextColor
    607          	    	BUTTON_SetTextAlign(buttonWifiKey[i].btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000596   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000059A   0x210E             MOVS     R1,#+14
   \   0000059C   0x.... 0x....      BL       BUTTON_SetTextAlign
    608          	    	BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26);
   \   000005A0   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000005A4   0x4651             MOV      R1,R10
   \   000005A6   0x.... 0x....      BL       BUTTON_SetFont
    609                          
    610                        BUTTON_SetBmpFileName(buttonWifiKey[i].btnHandle,NULL,1);
   \   000005AA   0xF936 0x0918      LDRSH    R0,[R6], #-24
   \   000005AE   0x2201             MOVS     R2,#+1
   \   000005B0   0x4639             MOV      R1,R7
   \   000005B2   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   000005B6   0xF1A9 0x0944      SUB      R9,R9,#+68
    611          	}
   \   000005BA   0xF1BB 0x0F00      CMP      R11,#+0
   \   000005BE   0xF47F 0xAF7A      BNE.W    ??draw_Keyboard_1
    612              	/*BUTTON_SetText(buttonkey[0].btnHandle, "0");
    613          		BUTTON_SetText(buttonkey[1].btnHandle, "1");
    614          		BUTTON_SetText(buttonkey[2].btnHandle, "2");
    615          		BUTTON_SetText(buttonkey[3].btnHandle, "3");*/
    616          		
    617          	key_value_calc.cnt = 0;
   \   000005C2   0x....             LDR.N    R4,??DataTable10_2
   \   000005C4   0x7027             STRB     R7,[R4, #+0]
    618          	memset(key_value_calc.password_value,0,sizeof(key_value_calc.password_value));
   \   000005C6   0x2612             MOVS     R6,#+18
   \   000005C8   0x2200             MOVS     R2,#+0
   \   000005CA   0x4631             MOV      R1,R6
   \   000005CC   0x1C60             ADDS     R0,R4,#+1
   \   000005CE   0x.... 0x....      BL       __aeabi_memset
    619          	memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   000005D2   0x463A             MOV      R2,R7
   \   000005D4   0x4631             MOV      R1,R6
   \   000005D6   0xF104 0x0013      ADD      R0,R4,#+19
   \   000005DA   0x.... 0x....      BL       __aeabi_memset
    620          	keyboard_stype = UPPER_CASE_LETTER;
   \   000005DE   0x702F             STRB     R7,[R5, #+0]
    621              
    622          }
   \   000005E0   0xB00F             ADD      SP,SP,#+60
   \   000005E2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    623          
    624          
    625          

   \                                 In section .text, align 2, keep-with-next
    626          void update_keyboard_disp(void)
    627          {
   \                     update_keyboard_disp: (+1)
   \   00000000   0xE92D 0x41D0      PUSH     {R4,R6-R8,LR}
    628          	int8_t i;
    629          	char buf[2];
    630          	switch(keyboard_stype)
   \   00000004   0x....             LDR.N    R4,??DataTable10_1
   \   00000006   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   0000000A   0xB085             SUB      SP,SP,#+20
   \   0000000C   0xB128             CBZ.N    R0,??update_keyboard_disp_0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD041             BEQ.N    ??update_keyboard_disp_1
   \   00000012   0xD31A             BCC.N    ??update_keyboard_disp_2
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD054             BEQ.N    ??update_keyboard_disp_3
    631          	{
    632          		case UPPER_CASE_LETTER:
    633          			i=26;
    634          			while(i--)
    635          			{
    636          				memset(buf,0,sizeof(buf));
    637          				buf[0] = 0x41 + i;
    638          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
    639          			}
    640          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
    641              			BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    642          			break;
    643          		case LOWER_CASE_LETTER:
    644          			i=26;
    645          			while(i--)
    646          			{
    647          				memset(buf,0,sizeof(buf));
    648          				buf[0] = 0x61 + i;
    649          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
    650          			}
    651          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_White.bin",1);
    652              			BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
    653          			break;
    654          		case DIGITLA:
    655          			i=26;
    656          			while(i--)
    657          			{
    658          				memset(buf,0,sizeof(buf));
    659          				buf[0] = digital_key_value[i];
    660          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
    661          			}
    662          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,NULL,1);
    663          			break;
    664          		case SYMBOL:
    665          			i=26;
    666          			while(i--)
    667          			{
    668          				memset(buf,0,sizeof(buf));
    669          				buf[0] = symbol_key_value[i];
    670          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
    671          			}
    672          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,NULL,1);
    673          			break;
    674          		default:
    675          			break;
    676          	}
    677          }
   \   00000018   0x....             B.N      ?Subroutine1
   \                     ??update_keyboard_disp_0: (+1)
   \   0000001A   0x271A             MOVS     R7,#+26
   \   0000001C   0x.... 0x....      LDR.W    R8,??DataTable10_17
   \                     ??update_keyboard_disp_4: (+1)
   \   00000020   0x1E7F             SUBS     R7,R7,#+1
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x2102             MOVS     R1,#+2
   \   00000026   0xA801             ADD      R0,SP,#+4
   \   00000028   0x.... 0x....      BL       __aeabi_memset
   \   0000002C   0xF107 0x0041      ADD      R0,R7,#+65
   \   00000030   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000034   0xA901             ADD      R1,SP,#+4
   \   00000036   0xF938 0x0918      LDRSH    R0,[R8], #-24
   \   0000003A   0x.... 0x....      BL       BUTTON_SetText
   \   0000003E   0x2F00             CMP      R7,#+0
   \   00000040   0xD1EE             BNE.N    ??update_keyboard_disp_4
   \   00000042   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0xE016             B.N      ??update_keyboard_disp_5
   \                     ??update_keyboard_disp_2: (+1)
   \   0000004A   0x271A             MOVS     R7,#+26
   \   0000004C   0x.... 0x....      LDR.W    R8,??DataTable10_17
   \                     ??update_keyboard_disp_6: (+1)
   \   00000050   0x1E7F             SUBS     R7,R7,#+1
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x2102             MOVS     R1,#+2
   \   00000056   0xA801             ADD      R0,SP,#+4
   \   00000058   0x.... 0x....      BL       __aeabi_memset
   \   0000005C   0xF107 0x0061      ADD      R0,R7,#+97
   \   00000060   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000064   0xA901             ADD      R1,SP,#+4
   \   00000066   0xF938 0x0918      LDRSH    R0,[R8], #-24
   \   0000006A   0x.... 0x....      BL       BUTTON_SetText
   \   0000006E   0x2F00             CMP      R7,#+0
   \   00000070   0xD1EE             BNE.N    ??update_keyboard_disp_6
   \   00000072   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Up_Arrow_W...">`
   \   00000076   0x2201             MOVS     R2,#+1
   \                     ??update_keyboard_disp_5: (+1)
   \   00000078   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   0000007C   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   00000080   0x200A             MOVS     R0,#+10
   \   00000082   0x9000             STR      R0,[SP, #+0]
   \   00000084   0x2321             MOVS     R3,#+33
   \   00000086   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   0000008A   0xF104 0x027C      ADD      R2,R4,#+124
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   00000094   0x....             B.N      ?Subroutine1
   \                     ??update_keyboard_disp_1: (+1)
   \   00000096   0x.... 0x....      ADR.W    R7,digital_key_value+0x19
   \   0000009A   0x.... 0x....      LDR.W    R8,??DataTable10_17
   \   0000009E   0x261A             MOVS     R6,#+26
   \                     ??update_keyboard_disp_7: (+1)
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x2102             MOVS     R1,#+2
   \   000000A4   0xA801             ADD      R0,SP,#+4
   \   000000A6   0x.... 0x....      BL       __aeabi_memset
   \   000000AA   0xF817 0x0901      LDRB     R0,[R7], #-1
   \   000000AE   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   000000B2   0xA901             ADD      R1,SP,#+4
   \   000000B4   0xF938 0x0918      LDRSH    R0,[R8], #-24
   \   000000B8   0x.... 0x....      BL       BUTTON_SetText
   \   000000BC   0x1E76             SUBS     R6,R6,#+1
   \   000000BE   0xD1EF             BNE.N    ??update_keyboard_disp_7
   \   000000C0   0xE014             B.N      ??update_keyboard_disp_8
   \                     ??update_keyboard_disp_3: (+1)
   \   000000C2   0x.... 0x....      ADR.W    R7,symbol_key_value+0x19
   \   000000C6   0x.... 0x....      LDR.W    R8,??DataTable10_17
   \   000000CA   0x261A             MOVS     R6,#+26
   \                     ??update_keyboard_disp_9: (+1)
   \   000000CC   0x2200             MOVS     R2,#+0
   \   000000CE   0x2102             MOVS     R1,#+2
   \   000000D0   0xA801             ADD      R0,SP,#+4
   \   000000D2   0x.... 0x....      BL       __aeabi_memset
   \   000000D6   0xF817 0x0901      LDRB     R0,[R7], #-1
   \   000000DA   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   000000DE   0xA901             ADD      R1,SP,#+4
   \   000000E0   0xF938 0x0918      LDRSH    R0,[R8], #-24
   \   000000E4   0x.... 0x....      BL       BUTTON_SetText
   \   000000E8   0x1E76             SUBS     R6,R6,#+1
   \   000000EA   0xD1EF             BNE.N    ??update_keyboard_disp_9
   \                     ??update_keyboard_disp_8: (+1)
   \   000000EC   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   000000F0   0x2201             MOVS     R2,#+1
   \   000000F2   0x2100             MOVS     R1,#+0
   \   000000F4   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   000000F8                      REQUIRE ?Subroutine1
   \   000000F8                      ;; // Fall through to label ?Subroutine1

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xB005             ADD      SP,SP,#+20
   \   00000002   0xE8BD 0x81D0      POP      {R4,R6-R8,PC}    ;; return
    678          

   \                                 In section .text, align 2, keep-with-next
    679          void update_password_disp(void)
    680          {
    681          	if(key_value_calc.timer_count >= 1000)
   \                     update_password_disp: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable10_2
   \   00000002   0x6A81             LDR      R1,[R0, #+40]
   \   00000004   0xF5B1 0x7F7A      CMP      R1,#+1000
   \   00000008   0xD30E             BCC.N    ??update_password_disp_0
    682          	{
    683          		key_value_calc.timer = TIMER_STOP;
   \   0000000A   0x2100             MOVS     R1,#+0
    684          		key_value_calc.timer_count = 0;
    685          		
    686          		key_value_calc.password_disp[key_value_calc.cnt-1] = (uint8_t)TEXT_PIONT_BOLD;
   \   0000000C   0x7802             LDRB     R2,[R0, #+0]
   \   0000000E   0xF880 0x1025      STRB     R1,[R0, #+37]
   \   00000012   0x6281             STR      R1,[R0, #+40]
   \   00000014   0x1812             ADDS     R2,R2,R0
   \   00000016   0x2160             MOVS     R1,#+96
   \   00000018   0x7491             STRB     R1,[R2, #+18]
    687          		
    688          		BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   0000001A   0xF100 0x0113      ADD      R1,R0,#+19
   \   0000001E   0x....             LDR.N    R0,??DataTable10_8
   \   00000020   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000024   0x.... 0x....      B.W      BUTTON_SetText
    689          	}
    690          }
   \                     ??update_password_disp_0: (+1)
   \   00000028   0x4770             BX       LR               ;; return
    691          

   \                                 In section .text, align 2, keep-with-next
    692          void update_join_state_disp(void)
    693          {
   \                     update_join_state_disp: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    694          	if(key_value_calc.cnt == 0)
   \   00000002   0x....             LDR.N    R1,??DataTable10_2
   \   00000004   0x....             LDR.N    R4,??DataTable10_1
   \   00000006   0x7809             LDRB     R1,[R1, #+0]
   \   00000008   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xBF0C             ITE      EQ 
    695              	{  
    696                		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   00000010   0x....             LDREQ.N  R5,??DataTable10_9  ;; 0x3f3f3f
    697              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
    698              	}
    699              	else
    700              	{
    701              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   00000012   0xF06F 0x457F      MVNNE    R5,#-16777216
   \   00000016   0x462A             MOV      R2,R5
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x.... 0x....      BL       BUTTON_SetTextColor
    702              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   0000001E   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000022   0x462A             MOV      R2,R5
   \   00000024   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x.... 0x....      B.W      BUTTON_SetTextColor
    703              	}
    704          }
    705          

   \                                 In section .text, align 2, keep-with-next
    706          void Clear_Keyboard()
    707          {
   \                     Clear_Keyboard: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    708          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable10_4
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    709          	if(WM_IsWindow(hKeyboardWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable10_1
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_Keyboard_0
    710          	{
    711          		WM_DeleteWindow(hKeyboardWnd);
   \   00000016   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    712          		//GUI_Exec();   
    713          	}
    714          	
    715          	//GUI_Clear();    
    716          }
   \                     ??Clear_Keyboard_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x00979797         DC32     0x979797

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     keyboard_stype

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     key_value_calc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     wifi_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x........         DC32     tips_type

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     buttonSpace

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     buttonPassword

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x003F3F3F         DC32     0x3f3f3f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     buttonDigital

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0x........         DC32     buttonWifiKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \   00000000   0x........         DC32     _Z13cbKeyboardWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \   00000000   0x........         DC32     GUI_FontHelvetica36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \   00000000   0x........         DC32     GUI_FontHelvetica26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \   00000000   0x........         DC32     buttonWifiKey+0x258

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_backspace_white.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_backspace_white.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x73 0x70    
   \              0x61 0x63    
   \              0x65 0x5F    
   \              0x77 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Up_Arrow_W...">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Up_Arrow_White.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x55    
   \              0x70 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x57 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Down_Arrow...">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Down_Arrow_White.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x44    
   \              0x6F 0x77    
   \              0x6E 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x57 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_backspace_black.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_backspace_black.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x73 0x70    
   \              0x61 0x63    
   \              0x65 0x5F    
   \              0x62 0x6C    
   \              0x61 0x63    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_keyboard_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_keyboard_return.bin"
   \              0x70 0x5F    
   \              0x6B 0x65    
   \              0x79 0x62    
   \              0x6F 0x61    
   \              0x72 0x64    
   \              0x5F 0x72    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
    717          
    718          
    719          
    720          
    721          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_Keyboard
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      64   cbKeyboardWin(WM_MESSAGE *)
        64   -> BUTTON_SetBitmapEx
        64   -> BUTTON_SetBmpFileName
        64   -> BUTTON_SetText
        64   -> BUTTON_SetTextColor
        64   -> GUI_FillRect
        64   -> GUI_SetBkColor
        64   -> GUI_SetColor
        64   -> WM_DeleteWindow
        64   -> WM_IsWindow
        64   -> __aeabi_memclr
        64   -> __aeabi_memcpy
        64   -> __aeabi_memset
        64   -> draw_Tips
        64   -> draw_return_ui
        64   -> package_to_wifi(WIFI_RET_TYPE, char *, int)
        64   -> raw_send_to_wifi(char *, int)
        64   -> strncpy
        64   -> update_keyboard_disp
      96   draw_Keyboard
        96   -> BUTTON_CreateEx
        96   -> BUTTON_SetBitmapEx
        96   -> BUTTON_SetBkColor
        96   -> BUTTON_SetBmpFileName
        96   -> BUTTON_SetFont
        96   -> BUTTON_SetText
        96   -> BUTTON_SetTextAlign
        96   -> BUTTON_SetTextColor
        96   -> GUI_Clear
        96   -> GUI_SetBkColor
        96   -> GUI_SetColor
        96   -> WM_CreateWindow
        96   -> __aeabi_memset
        96   -> __aeabi_memset4
        96   -> alloc_win_id
      16   update_join_state_disp
         0   -> BUTTON_SetTextColor
        16   -> BUTTON_SetTextColor
      40   update_keyboard_disp
        40   -> BUTTON_SetBitmapEx
        40   -> BUTTON_SetBmpFileName
        40   -> BUTTON_SetText
        40   -> __aeabi_memset
       0   update_password_disp
         0   -> BUTTON_SetText


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  ?<Constant "bmp_Toggle_Down_Arrow...">
      32  ?<Constant "bmp_Toggle_Up_Arrow_W...">
      24  ?<Constant "bmp_backspace_black.bin">
      24  ?<Constant "bmp_backspace_white.bin">
      24  ?<Constant "bmp_keyboard_return.bin">
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       6  ?Subroutine0
       6  ?Subroutine1
      36  Clear_Keyboard
      48  buttonDigital
          buttonSymbol
      48  buttonPassword
          buttonLetter
      48  buttonSpace
          buttondel2
     624  buttonWifiKey
    1526  cbKeyboardWin(WM_MESSAGE *)
      28  digital_key_value
    1510  draw_Keyboard
      44  key_value_calc
     144  keyboard_stype
          hKeyboardWnd
          buttonRet
          buttonJoint
          buttonArrow
          keyboard_menu
          bmp_struct_32x21
          bmp_struct_28x21
      28  symbol_key_value
      46  update_join_state_disp
     248  update_keyboard_disp
      42  update_password_disp

 
   812 bytes in section .bss
   144 bytes in section .data
 3 684 bytes in section .text
 
 3 684 bytes of CODE memory
   956 bytes of DATA memory

Errors: none
Warnings: 27
