###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  10:56:26
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_extrusion.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_extrusion.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_extrusion.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          
      9          #include "text.h"
     10          //#include "mks_tft_fifo.h"
     11          //#include "mks_tft_com.h"
     12          #include "Marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     13          #include "temperature.h"

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer
     14          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\Marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     15          
     16          #ifndef GUI_FLASH
     17          #define GUI_FLASH
     18          #endif
     19          

   \                                 In section .bss, align 4
     20          GUI_HWIN hExtrusionWnd;
   \                     hExtrusionWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 24
   \   00000020                      DS8 24
   \   00000038                      DS8 24
   \   00000050                      DS8 4
     21          static TEXT_Handle textPrintTemp, textExtruAmount,textPrintTemp_CHIN;
     22          
     23          //extern TFT_FIFO gcodeCmdTxFIFO;		//gcode ÷∏¡Ó∑¢ÀÕ∂”¡–
     24          //extern TFT_FIFO gcodeCmdRxFIFO;		//gcode	÷∏¡ÓΩ” ’∂”¡
     25          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     26          extern uint8_t  Get_Temperature_Flg;
     27          
     28          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     29          

   \                                 In section .bss, align 4
     30          static BUTTON_STRUCT buttonStepForward, buttonStepBack, buttonSprayType, buttonStep, buttonSpeed,  buttonStepExtru, buttonRet;
   \                     buttonStep:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonRet:
   \   00000000                      DS8 24
     31          
     32          static int32_t extructAmount;
     33          
     34          //extern PR_STATUS printerStaus;
     35          extern unsigned char positionSaveFlag;
     36          
     37          extern float feedrate_mm_s;
     38          

   \                                 In section .text, align 2, keep-with-next
     39          static void cbExtrusionWin(WM_MESSAGE * pMsg) {
   \                     _Z14cbExtrusionWinP10WM_MESSAGE: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     40          
     41          	char buf[30] = {0};
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x4614             MOV      R4,R2
   \   0000000C   0x4615             MOV      R5,R2
   \   0000000E   0xC13C             STM      R1!,{R2-R5}
   \   00000010   0xC13C             STM      R1!,{R2-R5}
     42          
     43          	switch (pMsg->MsgId)
   \   00000012   0x6801             LDR      R1,[R0, #+0]
   \   00000014   0x290C             CMP      R1,#+12
   \   00000016   0xBF1C             ITT      NE 
   \   00000018   0x290D             CMPNE    R1,#+13
   \   0000001A   0x290F             CMPNE    R1,#+15
   \   0000001C   0xF000 0x8117      BEQ.W    ??cbExtrusionWin_0
   \   00000020   0x2926             CMP      R1,#+38
   \   00000022   0xF040 0x8112      BNE.W    ??cbExtrusionWin_1
     44          	{
     45          		case WM_PAINT:			
     46          			//#if defined(TFT70)
     47          			//GUI_SetColor(gCfgItems.state_background_color);
     48          			//GUI_DrawRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     49          			//GUI_SetColor(gCfgItems.state_background_color);
     50          			//GUI_FillRect(BTN_X_PIXEL+INTERVAL_V*2, 0, BTN_X_PIXEL *3+INTERVAL_V*3-1, BTN_Y_PIXEL-1);	
     51          			//#elif defined(TFT35)
     52          			//GUI_SetColor(gCfgItems.state_background_color);
     53          			//GUI_FillRect(BTN_X_PIXEL+INTERVAL_V*2, 0, BTN_X_PIXEL *3+5, BTN_Y_PIXEL);
     54          			//#endif
     55          			break;
     56          		case WM_TOUCH:
     57          		 	
     58          			break;
     59          		case WM_TOUCH_CHILD:
     60          			
     61          			break;
     62          			
     63          		case WM_NOTIFY_PARENT:
     64          			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   00000026   0x6881             LDR      R1,[R0, #+8]
   \   00000028   0x2902             CMP      R1,#+2
   \   0000002A   0xF040 0x8110      BNE.W    ??cbExtrusionWin_0
     65          			{
     66          				if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable28
   \   00000032   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000036   0x5E89             LDRSH    R1,[R1, R2]
   \   00000038   0x4288             CMP      R0,R1
   \   0000003A   0xD13D             BNE.N    ??cbExtrusionWin_2
     67          				{
     68          					if((mksCfg.extruders == 2)
     69          						&&(mksReprint.mks_printer_state!=MKS_IDLE)
     70          						&&(mksReprint.mks_printer_state!=MKS_REPRINTED))
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable28_1
   \   00000040   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   00000044   0x2802             CMP      R0,#+2
   \   00000046   0xD116             BNE.N    ??cbExtrusionWin_3
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable28_2
   \   0000004C   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000050   0x28A6             CMP      R0,#+166
   \   00000052   0xBF18             IT       NE 
   \   00000054   0x28AC             CMPNE    R0,#+172
   \   00000056   0xD00E             BEQ.N    ??cbExtrusionWin_3
     71          					{
     72          						if(gCfgItems.curSprayerChoose_bak == 1)
   \   00000058   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   0000005C   0x35AC             ADDS     R5,R5,#+172
   \   0000005E   0x4611             MOV      R1,R2
   \   00000060   0xF995 0x0001      LDRSB    R0,[R5, #+1]
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xBF0C             ITE      EQ 
     73          						{
     74          							enqueue_and_echo_command("T1");
   \   00000068   0x....             ADREQ.N  R0,??DataTable23  ;; 0x54, 0x31, 0x00, 0x00
     75          						}
     76          						else
     77          						{
     78          							enqueue_and_echo_command("T0");
   \   0000006A   0x....             ADRNE.N  R0,??DataTable23_1  ;; 0x54, 0x30, 0x00, 0x00
   \   0000006C   0x.... 0x....      BL       _Z24enqueue_and_echo_commandPKcb
     79          						}
     80          						feedrate_mm_s = gCfgItems.moveSpeed_bak ;
   \   00000070   0xF9B5 0x0016      LDRSH    R0,[R5, #+22]
   \   00000074   0xE003             B.N      ??cbExtrusionWin_4
     81          					}
     82                              else
     83                              {
     84                                  feedrate_mm_s = gCfgItems.extruSpeed_bak;
   \                     ??cbExtrusionWin_3: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable28_4
   \   0000007A   0xF990 0x0014      LDRSB    R0,[R0, #+20]
   \                     ??cbExtrusionWin_4: (+1)
   \   0000007E   0x.... 0x....      BL       __aeabi_i2f
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable28_5
   \   00000086   0x6008             STR      R0,[R1, #+0]
     85                              }
     86          					
     87          					last_disp_state = EXTRUSION_UI;
   \   00000088   0x2007             MOVS     R0,#+7
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable28_6
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
     88          					Clear_extrusion();
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable28_3
   \   00000094   0x6940             LDR      R0,[R0, #+20]
   \   00000096   0x.... 0x....      BL       GUI_SetBkColor
   \   0000009A   0x.... 0x....      LDR.W    R4,??DataTable28_7
   \   0000009E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000A2   0x.... 0x....      BL       WM_IsWindow
   \   000000A6   0xB118             CBZ.N    R0,??cbExtrusionWin_5
   \   000000A8   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000AC   0x.... 0x....      BL       WM_DeleteWindow
     89          					draw_return_ui();
   \                     ??cbExtrusionWin_5: (+1)
   \   000000B0   0x.... 0x....      BL       draw_return_ui
     90          					
     91          				}
     92          
     93          				else if(pMsg->hWinSrc == buttonStepForward.btnHandle)
     94          				{
     95          					//sprintf((char *)buf,"T%d\n",gCfgItems.curSprayerChoose);
     96          					//enqueue_and_echo_commands_P(PSTR(buf));
     97          					if(thermalManager.current_temperature[gCfgItems.curSprayerChoose]>= EXTRUDE_MINTEMP)
     98          					{
     99          						enqueue_and_echo_commands_P(PSTR("G91"));
    100          						memset(buf,0,sizeof(buf));
    101          						sprintf((char *)buf, "G1 E%d F%d\n", gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
    102          						enqueue_and_echo_commands_P(PSTR(buf));	
    103          						enqueue_and_echo_commands_P(PSTR("G90"));	
    104          						#if 0
    105          						//**gCfgItems.extruStep = abs(gCfgItems.extruStep);
    106          						//**push_cb_stack(UI_ACTION_EPOSITION);
    107          						//**extructAmount += gCfgItems.extruStep;
    108          						//**disp_extru_amount();
    109          						/////printf(RELATIVE_COORD_COMMAN);
    110          						pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    111          						
    112          						if(gCfgItems.sprayerNum == 2)
    113          						{							
    114          							sprintf((char *)buf,"T%d\n",gCfgItems.curSprayerChoose);
    115          							pushFIFO(&gcodeCmdTxFIFO, buf);
    116          							memset(buf,0,sizeof(buf));
    117          							sprintf((char *)buf, "G1 E%d F%d\n", gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
    118          							pushFIFO(&gcodeCmdTxFIFO, buf);	
    119          						}
    120          						else
    121          						{
    122          							MOVE_E_COMMAN((char *)buf, gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
    123          							pushFIFO(&gcodeCmdTxFIFO, buf);
    124          						} 	
    125          						///////printf(buf);
    126          						//pushFIFO(&gcodeCmdTxFIFO, buf);
    127          						////////printf(ABSOLUTE_COORD_COMMAN);
    128          						pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    129          						#endif
    130          
    131          						extructAmount += gCfgItems.extruStep;
    132          						disp_extru_amount();
    133          					}
    134          					//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    135          					//if(printerStaus== pr_pause)
    136          					//	positionSaveFlag = 1;		
    137          				}
    138          				else if(pMsg->hWinSrc == buttonStepBack.btnHandle)
    139          				{
    140          					if(thermalManager.current_temperature[gCfgItems.curSprayerChoose]>= EXTRUDE_MINTEMP)
    141          					{
    142          						//sprintf((char *)buf,"T%d\n",gCfgItems.curSprayerChoose);
    143          						//enqueue_and_echo_commands_P(PSTR(buf));
    144          						enqueue_and_echo_commands_P(PSTR("G91"));
    145          						memset(buf,0,sizeof(buf));
    146          						sprintf((char *)buf, "G1 E%d F%d\n", 0-gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
    147          						enqueue_and_echo_commands_P(PSTR(buf));	
    148          						enqueue_and_echo_commands_P(PSTR("G90"));	
    149          						#if 0
    150          						//**gCfgItems.extruStep = 0 - abs(gCfgItems.extruStep);
    151          						//**push_cb_stack(UI_ACTION_EPOSITION);
    152          						//**extructAmount += gCfgItems.extruStep;
    153          						//**disp_extru_amount();
    154          						//////////printf(RELATIVE_COORD_COMMAN);
    155          
    156          						pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)RELATIVE_COORD_COMMAN);
    157          
    158          						if(gCfgItems.sprayerNum == 2)
    159          						{
    160          							sprintf((char *)buf,"T%d\n",gCfgItems.curSprayerChoose);
    161          							pushFIFO(&gcodeCmdTxFIFO, buf);
    162          							memset(buf,0,sizeof(buf));
    163          							sprintf((char *)buf, "G1 E%d F%d\n",0 - gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);						
    164          							pushFIFO(&gcodeCmdTxFIFO, buf);
    165          						}
    166          						else
    167          						{
    168          							MOVE_E_COMMAN((char *)buf, 0 - gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
    169          							pushFIFO(&gcodeCmdTxFIFO, buf);
    170          						}					
    171          						////printf(buf);
    172          						//pushFIFO(&gcodeCmdTxFIFO, buf);
    173          						////////printf(ABSOLUTE_COORD_COMMAN);
    174          						pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)ABSOLUTE_COORD_COMMAN);
    175          #endif
    176          						extructAmount -= gCfgItems.extruStep;
    177          						disp_extru_amount();
    178          						//“∆∂Ø∫Û¬Ì…œ±£¥Ê ˝æ›
    179          						//if(printerStaus== pr_pause)
    180          						//	positionSaveFlag = 1;
    181          					}
    182          				}
    183          				else if(pMsg->hWinSrc == buttonSprayType.btnHandle)
    184          				{
    185          					/*if (CfgPrinterItems.cfg_num_extruder == 2)
    186          					{
    187          						if(Extruder::current->id == 0)
    188          						{					
    189                                      			Extruder::selectExtruderById(1);
    190          						}
    191          						else if(Extruder::current->id == 1)
    192          						{
    193          							
    194                                     			 Extruder::selectExtruderById(0);
    195          						}
    196          						
    197          					}
    198          					else
    199          					{	
    200          						if(Extruder::current->id != 0)
    201          						{														
    202                                     		 	Extruder::selectExtruderById(0);
    203          						}
    204          					}					
    205          					extructAmount = 0;
    206          					disp_sprayer_temp();
    207          
    208          					disp_sprayer_type();
    209          					
    210          					disp_extru_amount();*/
    211          					if(mksCfg.extruders == 2)
    212          					{
    213          						if(gCfgItems.curSprayerChoose == 0)
    214          						{
    215          							gCfgItems.curSprayerChoose = 1;
    216          							enqueue_and_echo_command("T1");
    217          						}
    218          						else
    219          						{
    220          							gCfgItems.curSprayerChoose = 0;
    221          							enqueue_and_echo_command("T0");
    222          						}
    223          					}
    224          					else
    225          					{
    226          						gCfgItems.curSprayerChoose = 0;
    227          					}
    228          					
    229          					extructAmount = 0;
    230          					disp_sprayer_temp();
    231          
    232          					disp_sprayer_type();
    233          					
    234          					disp_extru_amount();
    235          					
    236          				}
    237          				else if(pMsg->hWinSrc == buttonStep.btnHandle)
    238          				{					
    239          					switch(abs(gCfgItems.extruStep))
    240          					{
    241          						case 1:
    242          							gCfgItems.extruStep = 5;
    243          							break;
    244          
    245          						case 5:
    246          							gCfgItems.extruStep = 10;
    247          							break;
    248          							
    249          						case 10:
    250          							gCfgItems.extruStep = 1;
    251          							break;
    252          
    253          						default:
    254          							break;
    255          					}
    256          					disp_extru_step();
    257          				}
    258          				else if(pMsg->hWinSrc == buttonSpeed.btnHandle)
    259          				{					
    260          					switch(gCfgItems.extruSpeed)
    261          					{
    262          						case 1:
    263          							gCfgItems.extruSpeed = 10;
    264          							break;
    265          
    266          						case 10:
    267          							gCfgItems.extruSpeed = 20;
    268          							break;
    269          
    270          						case 20:
    271          							gCfgItems.extruSpeed = 1;
    272          							break;
    273          						
    274          						default:
    275          							break;
    276          					}
    277          					disp_extru_speed();
    278          				}
    279          
    280          			}
    281          			
    282          			break;
    283          			
    284          		default:
    285          			WM_DefaultProc(pMsg);
    286          		}
    287          	}
   \   000000B4   0xB009             ADD      SP,SP,#+36
   \   000000B6   0xBD30             POP      {R4,R5,PC}
   \                     ??cbExtrusionWin_2: (+1)
   \   000000B8   0x.... 0x....      LDR.W    R4,??DataTable28_7
   \   000000BC   0xF9B4 0x1008      LDRSH    R1,[R4, #+8]
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xD12E             BNE.N    ??cbExtrusionWin_6
   \   000000C4   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   000000CC   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   000000D0   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable28_1
   \   000000D8   0x6AC9             LDR      R1,[R1, #+44]
   \   000000DA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000DE   0xF200 0x80B6      BHI.W    ??cbExtrusionWin_0
   \   000000E2   0x....             ADR.N    R0,??DataTable23_2  ;; "G91"
   \   000000E4   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   000000E8   0x211E             MOVS     R1,#+30
   \   000000EA   0xA800             ADD      R0,SP,#+0
   \   000000EC   0x.... 0x....      BL       __aeabi_memclr4
   \   000000F0   0x35AC             ADDS     R5,R5,#+172
   \   000000F2   0xF995 0x0010      LDRSB    R0,[R5, #+16]
   \   000000F6   0xF995 0x200F      LDRSB    R2,[R5, #+15]
   \   000000FA   0xEBC0 0x1100      RSB      R1,R0,R0, LSL #+4
   \   000000FE   0x008B             LSLS     R3,R1,#+2
   \   00000100   0x.... 0x....      ADR.W    R1,`?<Constant "G1 E%d F%d\\n">`
   \   00000104   0xA800             ADD      R0,SP,#+0
   \   00000106   0x.... 0x....      BL       sprintf
   \   0000010A   0xA800             ADD      R0,SP,#+0
   \   0000010C   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   00000110   0x....             ADR.N    R0,??DataTable23_3  ;; "G90"
   \   00000112   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   00000116   0x6D20             LDR      R0,[R4, #+80]
   \   00000118   0xF995 0x100F      LDRSB    R1,[R5, #+15]
   \   0000011C   0x1808             ADDS     R0,R1,R0
   \   0000011E   0x6520             STR      R0,[R4, #+80]
   \   00000120   0xE057             B.N      ??cbExtrusionWin_7
   \                     ??cbExtrusionWin_6: (+1)
   \   00000122   0xF9B4 0x1020      LDRSH    R1,[R4, #+32]
   \   00000126   0x4288             CMP      R0,R1
   \   00000128   0xD12F             BNE.N    ??cbExtrusionWin_8
   \   0000012A   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   00000132   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   00000136   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable28_1
   \   0000013E   0x6AC9             LDR      R1,[R1, #+44]
   \   00000140   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000144   0xF200 0x8083      BHI.W    ??cbExtrusionWin_0
   \   00000148   0x....             ADR.N    R0,??DataTable23_2  ;; "G91"
   \   0000014A   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   0000014E   0x211E             MOVS     R1,#+30
   \   00000150   0xA800             ADD      R0,SP,#+0
   \   00000152   0x.... 0x....      BL       __aeabi_memclr4
   \   00000156   0x35AC             ADDS     R5,R5,#+172
   \   00000158   0xF995 0x0010      LDRSB    R0,[R5, #+16]
   \   0000015C   0xEBC0 0x1100      RSB      R1,R0,R0, LSL #+4
   \   00000160   0xF995 0x000F      LDRSB    R0,[R5, #+15]
   \   00000164   0x008B             LSLS     R3,R1,#+2
   \   00000166   0x4242             RSBS     R2,R0,#+0
   \   00000168   0x.... 0x....      ADR.W    R1,`?<Constant "G1 E%d F%d\\n">`
   \   0000016C   0xA800             ADD      R0,SP,#+0
   \   0000016E   0x.... 0x....      BL       sprintf
   \   00000172   0xA800             ADD      R0,SP,#+0
   \   00000174   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   00000178   0x....             ADR.N    R0,??DataTable23_3  ;; "G90"
   \   0000017A   0x.... 0x....      BL       _Z27enqueue_and_echo_commands_PPKc
   \   0000017E   0x6D20             LDR      R0,[R4, #+80]
   \   00000180   0xF995 0x100F      LDRSB    R1,[R5, #+15]
   \   00000184   0x1A40             SUBS     R0,R0,R1
   \   00000186   0x6520             STR      R0,[R4, #+80]
   \   00000188   0xE023             B.N      ??cbExtrusionWin_7
   \                     ??cbExtrusionWin_8: (+1)
   \   0000018A   0xF9B4 0x1038      LDRSH    R1,[R4, #+56]
   \   0000018E   0x4288             CMP      R0,R1
   \   00000190   0xD123             BNE.N    ??cbExtrusionWin_9
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable28_1
   \   00000196   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   0000019A   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000019E   0x2802             CMP      R0,#+2
   \   000001A0   0xD10F             BNE.N    ??cbExtrusionWin_10
   \   000001A2   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   000001A6   0xB928             CBNZ.N   R0,??cbExtrusionWin_11
   \   000001A8   0x2001             MOVS     R0,#+1
   \   000001AA   0xF885 0x00AC      STRB     R0,[R5, #+172]
   \   000001AE   0x2100             MOVS     R1,#+0
   \   000001B0   0x....             ADR.N    R0,??DataTable23  ;; 0x54, 0x31, 0x00, 0x00
   \   000001B2   0xE003             B.N      ??cbExtrusionWin_12
   \                     ??cbExtrusionWin_11: (+1)
   \   000001B4   0xF885 0x20AC      STRB     R2,[R5, #+172]
   \   000001B8   0x2100             MOVS     R1,#+0
   \   000001BA   0x....             ADR.N    R0,??DataTable23_1  ;; 0x54, 0x30, 0x00, 0x00
   \                     ??cbExtrusionWin_12: (+1)
   \   000001BC   0x.... 0x....      BL       _Z24enqueue_and_echo_commandPKcb
   \   000001C0   0xE001             B.N      ??cbExtrusionWin_13
   \                     ??cbExtrusionWin_10: (+1)
   \   000001C2   0xF885 0x20AC      STRB     R2,[R5, #+172]
   \                     ??cbExtrusionWin_13: (+1)
   \   000001C6   0x2000             MOVS     R0,#+0
   \   000001C8   0x6520             STR      R0,[R4, #+80]
   \   000001CA   0x.... 0x....      BL       disp_sprayer_temp
   \   000001CE   0x.... 0x....      BL       disp_sprayer_type
   \                     ??cbExtrusionWin_7: (+1)
   \   000001D2   0x.... 0x....      BL       disp_extru_amount
   \   000001D6   0xB009             ADD      SP,SP,#+36
   \   000001D8   0xBD30             POP      {R4,R5,PC}
   \                     ??cbExtrusionWin_9: (+1)
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable28_9
   \   000001DE   0x5E8A             LDRSH    R2,[R1, R2]
   \   000001E0   0x4290             CMP      R0,R2
   \   000001E2   0xD118             BNE.N    ??cbExtrusionWin_14
   \   000001E4   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   000001E8   0x35AC             ADDS     R5,R5,#+172
   \   000001EA   0xF995 0x000F      LDRSB    R0,[R5, #+15]
   \   000001EE   0x2800             CMP      R0,#+0
   \   000001F0   0xBF48             IT       MI 
   \   000001F2   0x4240             RSBMI    R0,R0,#+0
   \   000001F4   0x2801             CMP      R0,#+1
   \   000001F6   0xD004             BEQ.N    ??cbExtrusionWin_15
   \   000001F8   0x2805             CMP      R0,#+5
   \   000001FA   0xD004             BEQ.N    ??cbExtrusionWin_16
   \   000001FC   0x280A             CMP      R0,#+10
   \   000001FE   0xD004             BEQ.N    ??cbExtrusionWin_17
   \   00000200   0xE005             B.N      ??cbExtrusionWin_18
   \                     ??cbExtrusionWin_15: (+1)
   \   00000202   0x2005             MOVS     R0,#+5
   \   00000204   0xE002             B.N      ??cbExtrusionWin_19
   \                     ??cbExtrusionWin_16: (+1)
   \   00000206   0x200A             MOVS     R0,#+10
   \   00000208   0xE000             B.N      ??cbExtrusionWin_19
   \                     ??cbExtrusionWin_17: (+1)
   \   0000020A   0x2001             MOVS     R0,#+1
   \                     ??cbExtrusionWin_19: (+1)
   \   0000020C   0x73E8             STRB     R0,[R5, #+15]
   \                     ??cbExtrusionWin_18: (+1)
   \   0000020E   0x.... 0x....      BL       disp_extru_step
   \   00000212   0xB009             ADD      SP,SP,#+36
   \   00000214   0xBD30             POP      {R4,R5,PC}
   \                     ??cbExtrusionWin_14: (+1)
   \   00000216   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   0000021A   0x4288             CMP      R0,R1
   \   0000021C   0xD117             BNE.N    ??cbExtrusionWin_0
   \   0000021E   0x.... 0x....      LDR.W    R5,??DataTable28_3
   \   00000222   0x35AC             ADDS     R5,R5,#+172
   \   00000224   0xF995 0x0010      LDRSB    R0,[R5, #+16]
   \   00000228   0x2801             CMP      R0,#+1
   \   0000022A   0xD004             BEQ.N    ??cbExtrusionWin_20
   \   0000022C   0x280A             CMP      R0,#+10
   \   0000022E   0xD004             BEQ.N    ??cbExtrusionWin_21
   \   00000230   0x2814             CMP      R0,#+20
   \   00000232   0xD004             BEQ.N    ??cbExtrusionWin_22
   \   00000234   0xE005             B.N      ??cbExtrusionWin_23
   \                     ??cbExtrusionWin_20: (+1)
   \   00000236   0x200A             MOVS     R0,#+10
   \   00000238   0xE002             B.N      ??cbExtrusionWin_24
   \                     ??cbExtrusionWin_21: (+1)
   \   0000023A   0x2014             MOVS     R0,#+20
   \   0000023C   0xE000             B.N      ??cbExtrusionWin_24
   \                     ??cbExtrusionWin_22: (+1)
   \   0000023E   0x2001             MOVS     R0,#+1
   \                     ??cbExtrusionWin_24: (+1)
   \   00000240   0x7428             STRB     R0,[R5, #+16]
   \                     ??cbExtrusionWin_23: (+1)
   \   00000242   0x.... 0x....      BL       disp_extru_speed
   \   00000246   0xB009             ADD      SP,SP,#+36
   \   00000248   0xBD30             POP      {R4,R5,PC}
   \                     ??cbExtrusionWin_1: (+1)
   \   0000024A   0x.... 0x....      BL       WM_DefaultProc
   \                     ??cbExtrusionWin_0: (+1)
   \   0000024E   0xB009             ADD      SP,SP,#+36
   \   00000250   0xBD30             POP      {R4,R5,PC}       ;; return
    288          
    289          

   \                                 In section .text, align 2, keep-with-next
    290          void draw_extrusion()
    291          {
   \                     draw_extrusion: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
    292          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static TEXT_Handle textPrintTemp, textExtruAmount,textPrintTemp_CHIN;
                                                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp",21  Warning[Pe177]: 
          variable "textPrintTemp_CHIN" was declared but never referenced

  static BUTTON_STRUCT buttonStepForward, buttonStepBack, buttonSprayType, buttonStep, buttonSpeed,  buttonStepExtru, buttonRet;
                                                                                                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp",30  Warning[Pe177]: 
          variable "buttonStepExtru" was declared but never referenced

  						sprintf((char *)buf, "G1 E%d F%d\n", gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
  						^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp",101  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  						sprintf((char *)buf, "G1 E%d F%d\n", 0-gCfgItems.extruStep, 60 * gCfgItems.extruSpeed);
  						^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_extrusion.cpp",146  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
    293          
    294          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != EXTRUSION_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable28_10
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB086             SUB      SP,SP,#+24
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A07             CMP      R2,#+7
   \   00000012   0xD005             BEQ.N    ??draw_extrusion_0
    295          	{
    296          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    297          		disp_state_stack._disp_state[disp_state_stack._disp_index] = EXTRUSION_UI;
   \   0000001A   0x2207             MOVS     R2,#+7
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    298          	}
    299          	disp_state = EXTRUSION_UI;
   \                     ??draw_extrusion_0: (+1)
   \   00000020   0x2007             MOVS     R0,#+7
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable28_11
    300          		
    301          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable28_3
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    302          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    303          	GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    304          
    305          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000003C   0x.... 0x....      BL       creat_title_text
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0x.... 0x....      BL       GUI_DispStringAt
    306          	
    307          	hExtrusionWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbExtrusionWin, 0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0xF44F 0x738E      MOV      R3,#+284
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   00000054   0x.... 0x....      LDR.W    R5,??DataTable28_7
   \   00000058   0x9001             STR      R0,[SP, #+4]
   \   0000005A   0xF44F 0x72F0      MOV      R2,#+480
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x2124             MOVS     R1,#+36
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       WM_CreateWindow
   \   0000006A   0x8028             STRH     R0,[R5, #+0]
    308          	buttonStepForward.btnHandle = BUTTON_CreateEx(INTERVAL_V, 0,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000006C   0x.... 0x....      BL       alloc_win_id
   \   00000070   0x9003             STR      R0,[SP, #+12]
   \   00000072   0x238C             MOVS     R3,#+140
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x9002             STR      R0,[SP, #+8]
   \   00000078   0x2275             MOVS     R2,#+117
   \   0000007A   0x2002             MOVS     R0,#+2
   \   0000007C   0x9001             STR      R0,[SP, #+4]
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000084   0x9000             STR      R0,[SP, #+0]
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000008C   0x8128             STRH     R0,[R5, #+8]
    309          	buttonStepBack.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  0,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000008E   0x.... 0x....      BL       alloc_win_id
   \   00000092   0x9003             STR      R0,[SP, #+12]
   \   00000094   0xF240 0x1667      MOVW     R6,#+359
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x9002             STR      R0,[SP, #+8]
   \   0000009C   0x238C             MOVS     R3,#+140
   \   0000009E   0x2002             MOVS     R0,#+2
   \   000000A0   0x9001             STR      R0,[SP, #+4]
   \   000000A2   0x2275             MOVS     R2,#+117
   \   000000A4   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000A8   0x9000             STR      R0,[SP, #+0]
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x4630             MOV      R0,R6
   \   000000AE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000B2   0x8428             STRH     R0,[R5, #+32]
    310          	buttonSprayType.btnHandle = BUTTON_CreateEx(INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, 303);
   \   000000B4   0x238C             MOVS     R3,#+140
   \   000000B6   0xF240 0x102F      MOVW     R0,#+303
   \   000000BA   0x9003             STR      R0,[SP, #+12]
   \   000000BC   0x2275             MOVS     R2,#+117
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x9002             STR      R0,[SP, #+8]
   \   000000C2   0x218E             MOVS     R1,#+142
   \   000000C4   0x2002             MOVS     R0,#+2
   \   000000C6   0x9001             STR      R0,[SP, #+4]
   \   000000C8   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000CC   0x9000             STR      R0,[SP, #+0]
   \   000000CE   0x2002             MOVS     R0,#+2
   \   000000D0   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D4   0x8728             STRH     R0,[R5, #+56]
    311          	buttonStep.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000D6   0x.... 0x....      BL       alloc_win_id
   \   000000DA   0x9003             STR      R0,[SP, #+12]
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x9002             STR      R0,[SP, #+8]
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x9001             STR      R0,[SP, #+4]
   \   000000E4   0x238C             MOVS     R3,#+140
   \   000000E6   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R7,??DataTable28_9
   \   000000EE   0x9000             STR      R0,[SP, #+0]
   \   000000F0   0x2275             MOVS     R2,#+117
   \   000000F2   0x218E             MOVS     R1,#+142
   \   000000F4   0x2079             MOVS     R0,#+121
   \   000000F6   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000FA   0x8038             STRH     R0,[R7, #+0]
    312          	buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000FC   0x.... 0x....      BL       alloc_win_id
   \   00000100   0x9003             STR      R0,[SP, #+12]
   \   00000102   0x238C             MOVS     R3,#+140
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x9002             STR      R0,[SP, #+8]
   \   00000108   0x2275             MOVS     R2,#+117
   \   0000010A   0x2002             MOVS     R0,#+2
   \   0000010C   0x9001             STR      R0,[SP, #+4]
   \   0000010E   0x218E             MOVS     R1,#+142
   \   00000110   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x20F0             MOVS     R0,#+240
   \   00000118   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000011C   0x8338             STRH     R0,[R7, #+24]
    313          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hExtrusionWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000011E   0x.... 0x....      BL       alloc_win_id
   \   00000122   0x9003             STR      R0,[SP, #+12]
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x9002             STR      R0,[SP, #+8]
   \   00000128   0x2002             MOVS     R0,#+2
   \   0000012A   0x9001             STR      R0,[SP, #+4]
   \   0000012C   0x238C             MOVS     R3,#+140
   \   0000012E   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000132   0x.... 0x....      LDR.W    R8,??DataTable28
   \   00000136   0x9000             STR      R0,[SP, #+0]
   \   00000138   0x2275             MOVS     R2,#+117
   \   0000013A   0x218E             MOVS     R1,#+142
   \   0000013C   0x4630             MOV      R0,R6
   \   0000013E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000142   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    314          
    315          	BUTTON_SetBmpFileName(buttonStepForward.btnHandle, "bmp_in.bin",1);
   \   00000146   0x2201             MOVS     R2,#+1
   \   00000148   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   0000014C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_in.bin">`
   \   00000150   0x.... 0x....      BL       BUTTON_SetBmpFileName
    316          	BUTTON_SetBmpFileName(buttonStepBack.btnHandle, "bmp_out.bin",1);
   \   00000154   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   00000158   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_out.bin">`
   \   0000015C   0x2201             MOVS     R2,#+1
   \   0000015E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    317          	
    318          	
    319          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \   00000162   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000166   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   0000016A   0x2201             MOVS     R2,#+1
   \   0000016C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    320          	
    321          	BUTTON_SetBitmapEx(buttonStepForward.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000170   0x.... 0x....      LDR.W    R10,??DataTable28_13
   \   00000174   0x.... 0x....      LDR.W    R9,??DataTable28_14
   \   00000178   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   0000017C   0x.... 0x....      LDR.W    R6,??DataTable28_15
   \   00000180   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   00000184   0x9000             STR      R0,[SP, #+0]
   \   00000186   0x4632             MOV      R2,R6
   \   00000188   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   0000018C   0x2100             MOVS     R1,#+0
   \   0000018E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    322          	BUTTON_SetBitmapEx(buttonStepBack.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000192   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   00000196   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   0000019A   0x9000             STR      R0,[SP, #+0]
   \   0000019C   0x4632             MOV      R2,R6
   \   0000019E   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   000001A2   0x2100             MOVS     R1,#+0
   \   000001A4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    323          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001A8   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001AC   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x4632             MOV      R2,R6
   \   000001B4   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000001B8   0x2100             MOVS     R1,#+0
   \   000001BA   0x.... 0x....      BL       BUTTON_SetBitmapEx
    324          	BUTTON_SetBitmapEx(buttonStep.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001BE   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001C2   0x9000             STR      R0,[SP, #+0]
   \   000001C4   0x2100             MOVS     R1,#+0
   \   000001C6   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001CA   0x5E78             LDRSH    R0,[R7, R1]
   \   000001CC   0x4632             MOV      R2,R6
   \   000001CE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    325          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);	
   \   000001D2   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001D6   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001DA   0x9000             STR      R0,[SP, #+0]
   \   000001DC   0x4632             MOV      R2,R6
   \   000001DE   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000001E2   0x2100             MOVS     R1,#+0
   \   000001E4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    326          
    327          
    328          
    329          	if(gCfgItems.multiple_language != 0)
   \   000001E8   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   000001EC   0xB180             CBZ.N    R0,??draw_extrusion_1
    330          	{
    331          		BUTTON_SetText(buttonStepForward.btnHandle,extrude_menu.in);
   \   000001EE   0x....             LDR.N    R6,??DataTable28_16
   \   000001F0   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   000001F4   0x6871             LDR      R1,[R6, #+4]
   \   000001F6   0x.... 0x....      BL       BUTTON_SetText
    332          		BUTTON_SetText(buttonStepBack.btnHandle,extrude_menu.out);
   \   000001FA   0x68B1             LDR      R1,[R6, #+8]
   \   000001FC   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   00000200   0x.... 0x....      BL       BUTTON_SetText
    333          		BUTTON_SetText(buttonRet.btnHandle,common_menu.text_back);	
   \   00000204   0x....             LDR.N    R0,??DataTable28_17
   \   00000206   0x6801             LDR      R1,[R0, #+0]
   \   00000208   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000020C   0x.... 0x....      BL       BUTTON_SetText
    334          	}
    335          
    336          	textExtruAmount = TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL/4, BTN_X_PIXEL*2+INTERVAL_V,30, hExtrusionWnd, WM_CF_SHOW, TEXT_CF_HCENTER,	GUI_ID_TEXT2, "◊‹º∑≥ˆ¡ø");
   \                     ??draw_extrusion_1: (+1)
   \   00000210   0x.... 0x....      ADR.W    R0,`?<Constant "\\327\\334\\274\\267\\263\\366\\301\\277">`
   \   00000214   0x9004             STR      R0,[SP, #+16]
   \   00000216   0x231E             MOVS     R3,#+30
   \   00000218   0xF44F 0x70B1      MOV      R0,#+354
   \   0000021C   0x9003             STR      R0,[SP, #+12]
   \   0000021E   0x22EC             MOVS     R2,#+236
   \   00000220   0x2002             MOVS     R0,#+2
   \   00000222   0x9002             STR      R0,[SP, #+8]
   \   00000224   0x9001             STR      R0,[SP, #+4]
   \   00000226   0x2123             MOVS     R1,#+35
   \   00000228   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000022C   0x9000             STR      R0,[SP, #+0]
   \   0000022E   0x2079             MOVS     R0,#+121
   \   00000230   0x.... 0x....      BL       TEXT_CreateEx
   \   00000234   0x80A8             STRH     R0,[R5, #+4]
    337          
    338          	textPrintTemp = TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL/2, BTN_X_PIXEL*2+INTERVAL_V, 30, hExtrusionWnd, WM_CF_SHOW, TEXT_CF_HCENTER,	GUI_ID_TEXT1, "≈ÁÕ∑Œ¬∂»");
   \   00000236   0x231E             MOVS     R3,#+30
   \   00000238   0x.... 0x....      ADR.W    R0,`?<Constant "\\305\\347\\315\\267\\316\\302\\266\\310">`
   \   0000023C   0x9004             STR      R0,[SP, #+16]
   \   0000023E   0x22EC             MOVS     R2,#+236
   \   00000240   0xF240 0x1061      MOVW     R0,#+353
   \   00000244   0x9003             STR      R0,[SP, #+12]
   \   00000246   0x2146             MOVS     R1,#+70
   \   00000248   0x2002             MOVS     R0,#+2
   \   0000024A   0x9002             STR      R0,[SP, #+8]
   \   0000024C   0x9001             STR      R0,[SP, #+4]
   \   0000024E   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   00000252   0x9000             STR      R0,[SP, #+0]
   \   00000254   0x2079             MOVS     R0,#+121
   \   00000256   0x.... 0x....      BL       TEXT_CreateEx
   \   0000025A   0x8068             STRH     R0,[R5, #+2]
    339          	
    340          	extructAmount = 0;
   \   0000025C   0x2000             MOVS     R0,#+0
   \   0000025E   0x6528             STR      R0,[R5, #+80]
    341          	
    342          	
    343          
    344          	gCfgItems.curSprayerChoose = active_extruder;
   \   00000260   0x....             LDR.N    R0,??DataTable28_18
   \   00000262   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000266   0xF884 0x00AC      STRB     R0,[R4, #+172]
    345          	disp_sprayer_temp();
   \   0000026A   0x.... 0x....      BL       disp_sprayer_temp
    346          	disp_extru_amount();
   \   0000026E   0x.... 0x....      BL       disp_extru_amount
    347          	disp_sprayer_type();
   \   00000272   0x.... 0x....      BL       disp_sprayer_type
    348          
    349          	disp_extru_speed();
   \   00000276   0x.... 0x....      BL       disp_extru_speed
    350          	disp_extru_step();
   \   0000027A   0xB006             ADD      SP,SP,#+24
   \   0000027C   0xE8BD 0x47F0      POP      {R4-R10,LR}
   \   00000280                      REQUIRE disp_extru_step
   \   00000280                      ;; // Fall through to label disp_extru_step
    351          	
    352          
    353          }
    354          

   \                                 In section .text, align 2, keep-with-next
    355          void disp_extru_step()
    356          {
   \                     disp_extru_step: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    357          	if(gCfgItems.extruStep == 1)
   \   00000002   0x....             LDR.N    R4,??DataTable28_3
   \   00000004   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD103             BNE.N    ??disp_extru_step_0
    358          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step1_mm.bin",1);
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step1_mm.bin">`
   \   00000012   0xE00E             B.N      ??disp_extru_step_1
    359          	else if(gCfgItems.extruStep == 5)
   \                     ??disp_extru_step_0: (+1)
   \   00000014   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000018   0x2805             CMP      R0,#+5
   \   0000001A   0xD103             BNE.N    ??disp_extru_step_2
    360          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step5_mm.bin",1);
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step5_mm.bin">`
   \   00000022   0xE006             B.N      ??disp_extru_step_1
    361          	else if(gCfgItems.extruStep == 10)
   \                     ??disp_extru_step_2: (+1)
   \   00000024   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000028   0x280A             CMP      R0,#+10
   \   0000002A   0xD107             BNE.N    ??disp_extru_step_3
    362          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step10_mm.bin",1);
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step10_mm.bin">`
   \                     ??disp_extru_step_1: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable28_9
   \   00000034   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000038   0x.... 0x....      BL       BUTTON_SetBmpFileName
    363          	
    364          	if(gCfgItems.multiple_language != 0)	
   \                     ??disp_extru_step_3: (+1)
   \   0000003C   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000040   0xB1D0             CBZ.N    R0,??disp_extru_step_4
    365          	{
    366          		if(gCfgItems.extruStep == 1)
   \   00000042   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xD102             BNE.N    ??disp_extru_step_5
    367          			BUTTON_SetText(buttonStep.btnHandle,extrude_menu.step_1mm);	
   \   0000004A   0x....             LDR.N    R0,??DataTable28_16
   \   0000004C   0x6941             LDR      R1,[R0, #+20]
   \   0000004E   0xE00C             B.N      ??disp_extru_step_6
    368          		else if(gCfgItems.extruStep == 5)
   \                     ??disp_extru_step_5: (+1)
   \   00000050   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000054   0x2805             CMP      R0,#+5
   \   00000056   0xD102             BNE.N    ??disp_extru_step_7
    369          			BUTTON_SetText(buttonStep.btnHandle,extrude_menu.step_5mm);
   \   00000058   0x....             LDR.N    R0,??DataTable28_16
   \   0000005A   0x6981             LDR      R1,[R0, #+24]
   \   0000005C   0xE005             B.N      ??disp_extru_step_6
    370          		else if(gCfgItems.extruStep == 10)
   \                     ??disp_extru_step_7: (+1)
   \   0000005E   0xF994 0x00BB      LDRSB    R0,[R4, #+187]
   \   00000062   0x280A             CMP      R0,#+10
   \   00000064   0xD108             BNE.N    ??disp_extru_step_4
    371          			BUTTON_SetText(buttonStep.btnHandle,extrude_menu.step_10mm);		
   \   00000066   0x....             LDR.N    R0,??DataTable28_16
   \   00000068   0x69C1             LDR      R1,[R0, #+28]
   \                     ??disp_extru_step_6: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable28_9
   \   0000006C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000070   0xE8BD 0x4010      POP      {R4,LR}
   \   00000074   0x.... 0x....      B.W      BUTTON_SetText
    372          	}
    373          
    374          
    375          }
   \                     ??disp_extru_step_4: (+1)
   \   00000078   0xBD10             POP      {R4,PC}          ;; return
    376          

   \                                 In section .text, align 2, keep-with-next
    377          void disp_extru_speed()
    378          {
   \                     disp_extru_speed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    379          
    380          	if(gCfgItems.extruSpeed == 20)
   \   00000002   0x....             LDR.N    R4,??DataTable28_9
   \   00000004   0x....             LDR.N    R5,??DataTable28_3
   \   00000006   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   0000000A   0xF995 0x10BC      LDRSB    R1,[R5, #+188]
   \   0000000E   0x2914             CMP      R1,#+20
   \   00000010   0xD103             BNE.N    ??disp_extru_speed_0
    381          		BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed_high.bin",1);
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed_high.bin">`
   \   00000018   0xE009             B.N      ??disp_extru_speed_1
    382          	else if(gCfgItems.extruSpeed == 1)
   \                     ??disp_extru_speed_0: (+1)
   \   0000001A   0xF995 0x10BC      LDRSB    R1,[R5, #+188]
   \   0000001E   0x2901             CMP      R1,#+1
   \   00000020   0xBF07             ITTEE    EQ 
    383          		BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed_slow.bin",1);
   \   00000022   0x2201             MOVEQ    R2,#+1
   \   00000024   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_speed_slow.bin">`
    384          	else
    385          		BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed_normal.bin",1);
   \   00000028   0x2201             MOVNE    R2,#+1
   \   0000002A   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_speed_normal.bin">`
   \                     ??disp_extru_speed_1: (+1)
   \   0000002E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    386          	
    387          	if(gCfgItems.multiple_language != 0)
   \   00000032   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000036   0xB178             CBZ.N    R0,??disp_extru_speed_2
    388          	{
    389          		if(gCfgItems.extruSpeed == 20)
   \   00000038   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   0000003C   0xF995 0x20BC      LDRSB    R2,[R5, #+188]
   \   00000040   0x....             LDR.N    R1,??DataTable28_16
   \   00000042   0x2A14             CMP      R2,#+20
   \   00000044   0xBF08             IT       EQ 
    390          			BUTTON_SetText(buttonSpeed.btnHandle,extrude_menu.high);
   \   00000046   0x6A89             LDREQ    R1,[R1, #+40]
   \   00000048   0xD005             BEQ.N    ??disp_extru_speed_3
    391          		else if(gCfgItems.extruSpeed == 1)	
   \   0000004A   0xF995 0x20BC      LDRSB    R2,[R5, #+188]
   \   0000004E   0x2A01             CMP      R2,#+1
   \   00000050   0xBF0C             ITE      EQ 
    392          			BUTTON_SetText(buttonSpeed.btnHandle,extrude_menu.low);
   \   00000052   0x6A09             LDREQ    R1,[R1, #+32]
    393          		else
    394          			BUTTON_SetText(buttonSpeed.btnHandle,extrude_menu.normal);	
   \   00000054   0x6A49             LDRNE    R1,[R1, #+36]
    395          	}
   \                     ??disp_extru_speed_3: (+1)
   \   00000056   0x....             B.N      ?Subroutine0
    396          
    397          
    398          
    399          
    400          }
   \                     ??disp_extru_speed_2: (+1)
   \   00000058   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000004   0x.... 0x....      B.W      BUTTON_SetText
    401          

   \                                 In section .text, align 2, keep-with-next
    402          void disp_sprayer_type()
    403          {
   \                     disp_sprayer_type: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    404          	if(gCfgItems.curSprayerChoose == 0)
   \   00000002   0x....             LDR.N    R5,??DataTable28_3
   \   00000004   0x....             LDR.N    R4,??DataTable28_7
   \   00000006   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   0000000A   0xB918             CBNZ.N   R0,??disp_sprayer_type_0
    405          	{
    406          		BUTTON_SetBmpFileName(buttonSprayType.btnHandle, "bmp_extru1.bin",1);	
   \   0000000C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extru1.bin">`
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0xE006             B.N      ??disp_sprayer_type_1
    407          	}
    408          	else if(gCfgItems.curSprayerChoose == 1)
   \                     ??disp_sprayer_type_0: (+1)
   \   00000014   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD106             BNE.N    ??disp_sprayer_type_2
    409          	{
    410          		BUTTON_SetBmpFileName(buttonSprayType.btnHandle, "bmp_extru2.bin",1);
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extru2.bin">`
   \                     ??disp_sprayer_type_1: (+1)
   \   00000022   0xF9B4 0x0038      LDRSH    R0,[R4, #+56]
   \   00000026   0x.... 0x....      BL       BUTTON_SetBmpFileName
    411          	}
    412          	BUTTON_SetBitmapEx(buttonSprayType.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??disp_sprayer_type_2: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable28_13
   \   0000002C   0x....             LDR.N    R2,??DataTable28_15
   \   0000002E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000032   0x9000             STR      R0,[SP, #+0]
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x....             LDR.N    R0,??DataTable28_14
   \   00000038   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   0000003C   0xF9B4 0x0038      LDRSH    R0,[R4, #+56]
   \   00000040   0x.... 0x....      BL       BUTTON_SetBitmapEx
    413          	if(gCfgItems.multiple_language != 0)
   \   00000044   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000048   0xB170             CBZ.N    R0,??disp_sprayer_type_3
    414          	{
    415          		if(gCfgItems.curSprayerChoose == 0)
   \   0000004A   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   0000004E   0xB910             CBNZ.N   R0,??disp_sprayer_type_4
    416          			BUTTON_SetText(buttonSprayType.btnHandle,extrude_menu.ext1);
   \   00000050   0x....             LDR.N    R0,??DataTable28_16
   \   00000052   0x68C1             LDR      R1,[R0, #+12]
   \   00000054   0xE005             B.N      ??disp_sprayer_type_5
    417          		else if(gCfgItems.curSprayerChoose == 1)
   \                     ??disp_sprayer_type_4: (+1)
   \   00000056   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   0000005A   0x2801             CMP      R0,#+1
   \   0000005C   0xD104             BNE.N    ??disp_sprayer_type_3
    418          			BUTTON_SetText(buttonSprayType.btnHandle,extrude_menu.ext2); 
   \   0000005E   0x....             LDR.N    R0,??DataTable28_16
   \   00000060   0x6901             LDR      R1,[R0, #+16]
   \                     ??disp_sprayer_type_5: (+1)
   \   00000062   0xF9B4 0x0038      LDRSH    R0,[R4, #+56]
    419          	}	
   \   00000066   0x....             B.N      ?Subroutine0
    420          }
   \                     ??disp_sprayer_type_3: (+1)
   \   00000068   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    421          
    422          

   \                                 In section .text, align 2, keep-with-next
    423          void disp_sprayer_temp()
    424          {
   \                     disp_sprayer_temp: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
    425          	char buf[30] = {0};
   \   00000004   0xA803             ADD      R0,SP,#+12
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
    426          	char buf1[10] = {0};
   \   00000012   0xA800             ADD      R0,SP,#+0
    427          	
    428          	TEXT_SetTextColor(textPrintTemp, gCfgItems.title_color);
   \   00000014   0x....             LDR.N    R4,??DataTable28_7
   \   00000016   0x....             LDR.N    R5,??DataTable28_3
   \   00000018   0xC00E             STM      R0!,{R1-R3}
   \   0000001A   0x69A9             LDR      R1,[R5, #+24]
   \   0000001C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
    429          	TEXT_SetBkColor(textPrintTemp, gCfgItems.background_color);
   \   00000024   0x6969             LDR      R1,[R5, #+20]
   \   00000026   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
    430          #if 0
    431          	if(gCfgItems.curSprayerChoose<1)
    432          	{
    433          		sprintf(buf1, extrude_menu.temp_value, (int)gCfgItems.curSprayerTemp[gCfgItems.curSprayerChoose]);
    434          		sprintf(buf,extrude_menu.temper_text);
    435          		strcat(buf,buf1);
    436          	}
    437          	else
    438          	{
    439          		sprintf(buf1, extrude_menu.temp_value, (int)gCfgItems.curSprayerTemp[gCfgItems.curSprayerChoose]);
    440          		sprintf(buf,extrude_menu.temper_text);
    441          		strcat(buf,buf1);		
    442          	}
    443          #endif
    444          	sprintf(buf1, extrude_menu.temp_value, (int)thermalManager.current_temperature[gCfgItems.curSprayerChoose]);
   \   0000002E   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   00000032   0x....             LDR.N    R1,??DataTable28_8
   \   00000034   0x....             LDR.N    R6,??DataTable28_16
   \   00000036   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000003A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003E   0x6BF1             LDR      R1,[R6, #+60]
   \   00000040   0x4602             MOV      R2,R0
   \   00000042   0xA800             ADD      R0,SP,#+0
   \   00000044   0x.... 0x....      BL       sprintf
    445          	sprintf(buf,extrude_menu.temper_text);
   \   00000048   0x6C31             LDR      R1,[R6, #+64]
   \   0000004A   0xA803             ADD      R0,SP,#+12
   \   0000004C   0x.... 0x....      BL       sprintf
    446          	strcat(buf,buf1);
   \   00000050   0xA900             ADD      R1,SP,#+0
   \   00000052   0xA803             ADD      R0,SP,#+12
   \   00000054   0x.... 0x....      BL       strcat
    447          
    448          	TEXT_SetText(textPrintTemp, buf);
   \   00000058   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000005C   0x....             B.N      ?Subroutine1
    449          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xA903             ADD      R1,SP,#+12
   \   00000002   0x.... 0x....      BL       TEXT_SetText
   \   00000006   0xB00C             ADD      SP,SP,#+48
   \   00000008   0xBD70             POP      {R4-R6,PC}       ;; return
    450          

   \                                 In section .text, align 2, keep-with-next
    451          void disp_extru_amount()
    452          {
   \                     disp_extru_amount: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
    453          	char buf[30] = {0};
   \   00000004   0xA803             ADD      R0,SP,#+12
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
    454          	char buf1[10] = {0};
   \   00000012   0xA800             ADD      R0,SP,#+0
    455          
    456          	TEXT_SetTextColor(textExtruAmount, gCfgItems.title_color);
   \   00000014   0x....             LDR.N    R4,??DataTable28_7
   \   00000016   0x....             LDR.N    R6,??DataTable28_3
   \   00000018   0xC00E             STM      R0!,{R1-R3}
   \   0000001A   0x69B1             LDR      R1,[R6, #+24]
   \   0000001C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
    457          	TEXT_SetBkColor(textExtruAmount, gCfgItems.background_color);	
   \   00000024   0x6971             LDR      R1,[R6, #+20]
   \   00000026   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
    458          
    459          	if(extructAmount < 999 && extructAmount > -99)
   \   0000002E   0x6D22             LDR      R2,[R4, #+80]
   \   00000030   0x....             LDR.N    R5,??DataTable28_16
   \   00000032   0xF102 0x0062      ADD      R0,R2,#+98
   \   00000036   0xF5B0 0x6F89      CMP      R0,#+1096
   \   0000003A   0xBF98             IT       LS 
    460          	{
    461          		sprintf(buf1, extrude_menu.count_value_mm, extructAmount);
   \   0000003C   0x6B29             LDRLS    R1,[R5, #+48]
   \   0000003E   0xD90F             BLS.N    ??disp_extru_amount_0
    462          		if(gCfgItems.curSprayerChoose<1)
    463          		{
    464          			sprintf(buf,extrude_menu.ext1);
    465          		}
    466          		else
    467          		{
    468          			sprintf(buf,extrude_menu.ext2);		
    469          		}
    470          		strcat(buf,buf1);
    471          	}	
    472          	else if(extructAmount < 9999 && extructAmount > -999)
   \   00000040   0xF202 0x30E6      ADDW     R0,R2,#+998
   \   00000044   0xF642 0x21F5      MOVW     R1,#+10997
   \   00000048   0x4288             CMP      R0,R1
   \   0000004A   0xD204             BCS.N    ??disp_extru_amount_1
    473          	{
    474          		sprintf(buf1, extrude_menu.count_value_cm, extructAmount/10);
   \   0000004C   0x200A             MOVS     R0,#+10
   \   0000004E   0x6B69             LDR      R1,[R5, #+52]
   \   00000050   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \   00000054   0xE004             B.N      ??disp_extru_amount_0
    475          		if(gCfgItems.curSprayerChoose<1)
    476          		{
    477          			sprintf(buf,extrude_menu.ext1);
    478          		}
    479          		else
    480          		{
    481          			sprintf(buf,extrude_menu.ext2);		
    482          		}
    483          		strcat(buf,buf1);	
    484          	}
    485          	else
    486          	{
    487          		sprintf(buf1, extrude_menu.count_value_m, extructAmount/1000);
   \                     ??disp_extru_amount_1: (+1)
   \   00000056   0xF44F 0x707A      MOV      R0,#+1000
   \   0000005A   0x6BA9             LDR      R1,[R5, #+56]
   \   0000005C   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \                     ??disp_extru_amount_0: (+1)
   \   00000060   0xA800             ADD      R0,SP,#+0
   \   00000062   0x.... 0x....      BL       sprintf
    488          		if(gCfgItems.curSprayerChoose<1)
   \   00000066   0xF996 0x00AC      LDRSB    R0,[R6, #+172]
   \   0000006A   0x2801             CMP      R0,#+1
   \   0000006C   0xDA04             BGE.N    ??disp_extru_amount_2
    489          		{
    490          			sprintf(buf,extrude_menu.ext1);
   \   0000006E   0x68E9             LDR      R1,[R5, #+12]
   \   00000070   0xA803             ADD      R0,SP,#+12
   \   00000072   0x.... 0x....      BL       sprintf
   \   00000076   0xE003             B.N      ??disp_extru_amount_3
    491          		}
    492          		else
    493          		{
    494          			sprintf(buf,extrude_menu.ext2);		
   \                     ??disp_extru_amount_2: (+1)
   \   00000078   0x6929             LDR      R1,[R5, #+16]
   \   0000007A   0xA803             ADD      R0,SP,#+12
   \   0000007C   0x.... 0x....      BL       sprintf
    495          		}
    496          		strcat(buf,buf1);	
   \                     ??disp_extru_amount_3: (+1)
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0xA803             ADD      R0,SP,#+12
   \   00000084   0x.... 0x....      BL       strcat
    497          	}
    498          	
    499          	TEXT_SetText(textExtruAmount, buf);
   \   00000088   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000008C                      REQUIRE ?Subroutine1
   \   0000008C                      ;; // Fall through to label ?Subroutine1
    500          }
    501          
    502          

   \                                 In section .text, align 2, keep-with-next
    503          void Clear_extrusion()
    504          {
   \                     Clear_extrusion: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    505          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable28_3
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    506          	if(WM_IsWindow(hExtrusionWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable28_7
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_extrusion_0
    507          	{
    508          		WM_DeleteWindow(hExtrusionWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    509          		//GUI_Exec();
    510          	}
    511          	//GUI_Clear();
    512          }
   \                     ??Clear_extrusion_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x54 0x31          DC8      0x54, 0x31, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x54 0x30          DC8      0x54, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x47 0x39          DC8      "G91"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x47 0x39          DC8      "G90"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     buttonRet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \   00000000   0x........         DC32     gCfgItems+0xAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_6:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_7:
   \   00000000   0x........         DC32     hExtrusionWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_8:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_9:
   \   00000000   0x........         DC32     buttonStep

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_10:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_11:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_12:
   \   00000000   0x........         DC32     _Z14cbExtrusionWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_13:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_14:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_15:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_16:
   \   00000000   0x........         DC32     extrude_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_17:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_18:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G1 E%d F%d\\n">`:
   \   00000000   0x47 0x31          DC8 "G1 E%d F%d\012"
   \              0x20 0x45    
   \              0x25 0x64    
   \              0x20 0x46    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_in.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_in.bin"
   \              0x70 0x5F    
   \              0x69 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_out.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_out.bin"
   \              0x70 0x5F    
   \              0x6F 0x75    
   \              0x74 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\327\\334\\274\\267\\263\\366\\301\\277">`:
   \   00000000   0xD7 0xDC          DC8 "\327\334\274\267\263\366\301\277"
   \              0xBC 0xB7    
   \              0xB3 0xF6    
   \              0xC1 0xBF    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\305\\347\\315\\267\\316\\302\\266\\310">`:
   \   00000000   0xC5 0xE7          DC8 "\305\347\315\267\316\302\266\310"
   \              0xCD 0xB7    
   \              0xCE 0xC2    
   \              0xB6 0xC8    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step1_mm.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step1_mm.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x5F    
   \              0x6D 0x6D    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step5_mm.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step5_mm.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x35 0x5F    
   \              0x6D 0x6D    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step10_mm.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step10_mm.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x30    
   \              0x5F 0x6D    
   \              0x6D 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed_high.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed_high.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x68 0x69    
   \              0x67 0x68    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed_slow.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed_slow.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x73 0x6C    
   \              0x6F 0x77    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed_normal.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed_normal.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x6E 0x6F    
   \              0x72 0x6D    
   \              0x61 0x6C    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extru1.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extru1.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x31    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extru2.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extru2.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x32    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "T1">`:
   \   00000000   0x54 0x31          DC8 "T1"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "T0">`:
   \   00000000   0x54 0x30          DC8 "T0"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "G91">`:
   \   00000000   0x47 0x39          DC8 "G91"
   \              0x31 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "G90">`:
   \   00000000   0x47 0x39          DC8 "G90"
   \              0x30 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_2`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_3`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_4`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    513          
    514          
    515          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_extrusion
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      48   cbExtrusionWin(WM_MESSAGE *)
        48   -> GUI_SetBkColor
        48   -> WM_DefaultProc
        48   -> WM_DeleteWindow
        48   -> WM_IsWindow
        48   -> __aeabi_cfrcmple
        48   -> __aeabi_i2f
        48   -> __aeabi_memclr4
        48   -> disp_extru_amount
        48   -> disp_extru_speed
        48   -> disp_extru_step
        48   -> disp_sprayer_temp
        48   -> disp_sprayer_type
        48   -> draw_return_ui
        48   -> enqueue_and_echo_command(char const *, bool)
        48   -> enqueue_and_echo_commands_P(char const *)
        48   -> sprintf
      64   disp_extru_amount
        64   -> TEXT_SetBkColor
        64   -> TEXT_SetText
        64   -> TEXT_SetTextColor
        64   -> sprintf
        64   -> strcat
      16   disp_extru_speed
        16   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
       8   disp_extru_step
         8   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
      64   disp_sprayer_temp
        64   -> TEXT_SetBkColor
        64   -> TEXT_SetText
        64   -> TEXT_SetTextColor
        64   -> __aeabi_f2iz
        64   -> sprintf
        64   -> strcat
      16   disp_sprayer_type
        16   -> BUTTON_SetBitmapEx
        16   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
      56   draw_extrusion
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> TEXT_CreateEx
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
        56   -> disp_extru_amount
        56   -> disp_extru_speed
         0   -> disp_extru_step
        56   -> disp_sprayer_temp
        56   -> disp_sprayer_type


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "G1 E%d F%d\n">
       4  ?<Constant "G90">
       4  ?<Constant "G91">
       4  ?<Constant "T0">
       4  ?<Constant "T1">
      12  ?<Constant "\305\347\315\267\316\302\266\310">
      12  ?<Constant "\327\334\274\267\263\366\301\277">
      16  ?<Constant "bmp_extru1.bin">
      16  ?<Constant "bmp_extru2.bin">
      12  ?<Constant "bmp_in.bin">
      12  ?<Constant "bmp_out.bin">
      16  ?<Constant "bmp_return.bin">
      20  ?<Constant "bmp_speed_high.bin">
      24  ?<Constant "bmp_speed_normal.bin">
      20  ?<Constant "bmp_speed_slow.bin">
      20  ?<Constant "bmp_step10_mm.bin">
      20  ?<Constant "bmp_step1_mm.bin">
      20  ?<Constant "bmp_step5_mm.bin">
      32  ?<Constant {'\000'}>
      32  ?<Constant {'\000'}>_1
      12  ?<Constant {'\000'}>_2
      32  ?<Constant {'\000'}>_3
      12  ?<Constant {'\000'}>_4
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_2
       4  ??DataTable23_3
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_10
       4  ??DataTable28_11
       4  ??DataTable28_12
       4  ??DataTable28_13
       4  ??DataTable28_14
       4  ??DataTable28_15
       4  ??DataTable28_16
       4  ??DataTable28_17
       4  ??DataTable28_18
       4  ??DataTable28_2
       4  ??DataTable28_3
       4  ??DataTable28_4
       4  ??DataTable28_5
       4  ??DataTable28_6
       4  ??DataTable28_7
       4  ??DataTable28_8
       4  ??DataTable28_9
       8  ?Subroutine0
      10  ?Subroutine1
      36  Clear_extrusion
      24  buttonRet
      48  buttonStep
          buttonSpeed
     594  cbExtrusionWin(WM_MESSAGE *)
     140  disp_extru_amount
      90  disp_extru_speed
     122  disp_extru_step
      94  disp_sprayer_temp
     106  disp_sprayer_type
     640  draw_extrusion
      84  hExtrusionWnd
          textPrintTemp
          textExtruAmount
          buttonStepForward
          buttonStepBack
          buttonSprayType
          extructAmount
       1  -- Other

 
   156 bytes in section .bss
   137 bytes in section .rodata
 2 164 bytes in section .text
 
 2 164 bytes of CODE  memory
   136 bytes of CONST memory (+ 1 byte shared)
   156 bytes of DATA  memory

Errors: none
Warnings: 37
