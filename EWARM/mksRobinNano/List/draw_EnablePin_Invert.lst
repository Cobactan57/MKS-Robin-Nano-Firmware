###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_EnablePin_Invert.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_EnablePin_Invert.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_EnablePin_Invert.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_EnablePin_Invert.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_EnablePin_Invert.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      4          
      5          #ifndef GUI_FLASH
      6          #define GUI_FLASH
      7          #endif
      8          

   \                                 In section .bss, align 4
      9          static GUI_HWIN hEnableInvertWnd;
   \                     hEnableInvertWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 4
     10          static BUTTON_STRUCT XEnable_Invert_text,YEnable_Invert_text,ZEnable_Invert_text,EEnable_Invert_text;
   \                     XEnable_Invert_text:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
   \   00000030                      DS8 24
   \   00000048                      DS8 24

   \                                 In section .bss, align 4
     11          static BUTTON_STRUCT XEnable_Invert,YEnable_Invert,ZEnable_Invert,EEnable_Invert;
   \                     ZEnable_Invert:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
     12          static BUTTON_STRUCT button_next,button_previous,button_back;
   \                     button_back:
   \   00000000                      DS8 24
     13          
     14          

   \                                 In section .text, align 2, keep-with-next
     15          static void cbEnableInvertWin(WM_MESSAGE * pMsg) {
     16          
     17              struct PressEvt *press_event;
                                      ^
Warning[Pe550]: variable "press_event" was set but never used
     18              switch (pMsg->MsgId)
   \                     _Z17cbEnableInvertWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbEnableInvertWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbEnableInvertWin_0: (+1)
   \   00000008   0xB570             PUSH     {R4-R6,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xF000 0x811E      BEQ.W    ??cbEnableInvertWin_1
   \   00000010   0x290F             CMP      R1,#+15
   \   00000012   0xD002             BEQ.N    ??cbEnableInvertWin_2
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xD022             BEQ.N    ??cbEnableInvertWin_3
   \   00000018   0xE114             B.N      ??cbEnableInvertWin_4
     19              {
     20              	case WM_PAINT:
     21          			GUI_SetColor(0xff5449);
   \                     ??cbEnableInvertWin_2: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable5  ;; 0xff5449
   \   0000001E   0x.... 0x....      BL       GUI_SetColor
     22          
     23          			GUI_FillRect(10, 90, 470,90);          
   \   00000022   0x235A             MOVS     R3,#+90
   \   00000024   0xF44F 0x72EB      MOV      R2,#+470
   \   00000028   0x215A             MOVS     R1,#+90
   \   0000002A   0x200A             MOVS     R0,#+10
   \   0000002C   0x.... 0x....      BL       GUI_FillRect
     24                      GUI_FillRect(10, 140, 470,140);
   \   00000030   0x238C             MOVS     R3,#+140
   \   00000032   0xF44F 0x72EB      MOV      R2,#+470
   \   00000036   0x4619             MOV      R1,R3
   \   00000038   0x200A             MOVS     R0,#+10
   \   0000003A   0x.... 0x....      BL       GUI_FillRect
     25                      GUI_FillRect(10, 190, 470,190);
   \   0000003E   0x23BE             MOVS     R3,#+190
   \   00000040   0xF44F 0x72EB      MOV      R2,#+470
   \   00000044   0x4619             MOV      R1,R3
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0x.... 0x....      BL       GUI_FillRect
     26                      GUI_FillRect(10, 240, 470,240);
   \   0000004C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000050   0x23F0             MOVS     R3,#+240
   \   00000052   0xF44F 0x72EB      MOV      R2,#+470
   \   00000056   0x4619             MOV      R1,R3
   \   00000058   0x200A             MOVS     R0,#+10
   \   0000005A   0x.... 0x....      B.W      GUI_FillRect
     27          
     28          
     29              		break;
     30              	case WM_TOUCH:
     31              	 	press_event = (struct PressEvt *)pMsg->Data.p;
     32              		
     33              		break;
     34              	case WM_TOUCH_CHILD:
     35              		press_event = (struct PressEvt *)pMsg->Data.p;
     36          
     37              		break;
     38              		
     39              	case WM_NOTIFY_PARENT:
     40              		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \                     ??cbEnableInvertWin_3: (+1)
   \   0000005E   0x6881             LDR      R1,[R0, #+8]
   \   00000060   0x2902             CMP      R1,#+2
   \   00000062   0xF040 0x80F3      BNE.W    ??cbEnableInvertWin_1
     41              		{
     42              			if(pMsg->hWinSrc == button_back.btnHandle)
   \   00000066   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000006E   0x.... 0x....      LDR.W    R6,??DataTable5_2
   \   00000072   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000076   0x4281             CMP      R1,R0
   \   00000078   0xD115             BNE.N    ??cbEnableInvertWin_5
     43              			{
     44              				last_disp_state = ENABLE_INVERT_UI;
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000007E   0x203C             MOVS     R0,#+60
   \   00000080   0x7008             STRB     R0,[R1, #+0]
     45              				Clear_EnableInvert();
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000086   0x6940             LDR      R0,[R0, #+20]
   \   00000088   0x.... 0x....      BL       GUI_SetBkColor
   \   0000008C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000090   0x.... 0x....      BL       WM_IsWindow
   \   00000094   0xB118             CBZ.N    R0,??cbEnableInvertWin_6
   \   00000096   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000009A   0x.... 0x....      BL       WM_DeleteWindow
     46              				draw_return_ui();
   \                     ??cbEnableInvertWin_6: (+1)
   \   0000009E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000A2   0x.... 0x....      B.W      draw_return_ui
     47              			}	               
     48              			else if(pMsg->hWinSrc == XEnable_Invert.btnHandle)
   \                     ??cbEnableInvertWin_5: (+1)
   \   000000A6   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000000AA   0x4281             CMP      R1,R0
   \   000000AC   0xD12F             BNE.N    ??cbEnableInvertWin_7
     49              			{
     50                              if(mksCfg.x_enable_on==1)
   \   000000AE   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   000000B2   0x.... 0x....      LDR.W    R5,??DataTable5_4
   \   000000B6   0xF894 0x1104      LDRB     R1,[R4, #+260]
   \   000000BA   0x2901             CMP      R1,#+1
   \   000000BC   0xD10F             BNE.N    ??cbEnableInvertWin_8
     51                              {
     52                                  mksCfg.x_enable_on=0;
   \   000000BE   0x2100             MOVS     R1,#+0
   \   000000C0   0xF884 0x1104      STRB     R1,[R4, #+260]
     53                                  BUTTON_SetBmpFileName(XEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   000000C4   0x2201             MOVS     R2,#+1
   \   000000C6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   000000CA   0x.... 0x....      BL       BUTTON_SetBmpFileName
     54                                  if(gCfgItems.multiple_language != 0)
   \   000000CE   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   000000D2   0xB1B0             CBZ.N    R0,??cbEnableInvertWin_9
     55                                      BUTTON_SetText(XEnable_Invert.btnHandle, machine_menu.low_level);
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   000000D8   0xF8D0 0x1288      LDR      R1,[R0, #+648]
   \   000000DC   0xE00D             B.N      ??cbEnableInvertWin_10
     56                              }
     57                              else
     58                              {
     59                                  mksCfg.x_enable_on=1;
   \                     ??cbEnableInvertWin_8: (+1)
   \   000000DE   0x2101             MOVS     R1,#+1
   \   000000E0   0xF884 0x1104      STRB     R1,[R4, #+260]
     60                                  BUTTON_SetBmpFileName(XEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   000000E4   0x2201             MOVS     R2,#+1
   \   000000E6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   000000EA   0x.... 0x....      BL       BUTTON_SetBmpFileName
     61                                  if(gCfgItems.multiple_language != 0)
   \   000000EE   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   000000F2   0xB130             CBZ.N    R0,??cbEnableInvertWin_9
     62                                      BUTTON_SetText(XEnable_Invert.btnHandle, machine_menu.high_level);
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   000000F8   0x6841             LDR      R1,[R0, #+4]
   \                     ??cbEnableInvertWin_10: (+1)
   \   000000FA   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000000FE   0x.... 0x....      BL       BUTTON_SetText
     63                              } 
     64                              epr_write_data(EPR_X_ENABLE_ON, (uint8_t *)&mksCfg.x_enable_on,1);
   \                     ??cbEnableInvertWin_9: (+1)
   \   00000102   0x2201             MOVS     R2,#+1
   \   00000104   0xF504 0x7182      ADD      R1,R4,#+260
   \   00000108   0xF240 0x7027      MOVW     R0,#+1831
   \   0000010C   0xE096             B.N      ??cbEnableInvertWin_11
     65          
     66              			}
     67              			else if(pMsg->hWinSrc == YEnable_Invert.btnHandle)
   \                     ??cbEnableInvertWin_7: (+1)
   \   0000010E   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000112   0x4281             CMP      R1,R0
   \   00000114   0xD12D             BNE.N    ??cbEnableInvertWin_12
     68              			{
     69                              if(mksCfg.y_enable_on==1)
   \   00000116   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   0000011A   0x.... 0x....      LDR.W    R5,??DataTable5_4
   \   0000011E   0xF504 0x7182      ADD      R1,R4,#+260
   \   00000122   0x784A             LDRB     R2,[R1, #+1]
   \   00000124   0x2A01             CMP      R2,#+1
   \   00000126   0xD10E             BNE.N    ??cbEnableInvertWin_13
     70                              {
     71                                  mksCfg.y_enable_on=0;
   \   00000128   0x2200             MOVS     R2,#+0
   \   0000012A   0x704A             STRB     R2,[R1, #+1]
     72                                  BUTTON_SetBmpFileName(YEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   0000012C   0x2201             MOVS     R2,#+1
   \   0000012E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   00000132   0x.... 0x....      BL       BUTTON_SetBmpFileName
     73                                  if(gCfgItems.multiple_language != 0)
   \   00000136   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   0000013A   0xB1A0             CBZ.N    R0,??cbEnableInvertWin_14
     74                                      BUTTON_SetText(YEnable_Invert.btnHandle, machine_menu.low_level);
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   00000140   0xF8D0 0x1288      LDR      R1,[R0, #+648]
   \   00000144   0xE00B             B.N      ??cbEnableInvertWin_15
     75                              }
     76                              else
     77                              {
     78                                  mksCfg.y_enable_on=1;
   \                     ??cbEnableInvertWin_13: (+1)
   \   00000146   0x2201             MOVS     R2,#+1
   \   00000148   0x704A             STRB     R2,[R1, #+1]
     79                                  BUTTON_SetBmpFileName(YEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   0000014A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   0000014E   0x.... 0x....      BL       BUTTON_SetBmpFileName
     80                                  if(gCfgItems.multiple_language != 0)
   \   00000152   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000156   0xB130             CBZ.N    R0,??cbEnableInvertWin_14
     81                                      BUTTON_SetText(YEnable_Invert.btnHandle, machine_menu.high_level);
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   0000015C   0x6841             LDR      R1,[R0, #+4]
   \                     ??cbEnableInvertWin_15: (+1)
   \   0000015E   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000162   0x.... 0x....      BL       BUTTON_SetText
     82                              } 
     83                              epr_write_data(EPR_Y_ENABLE_ON, (uint8_t *)&mksCfg.y_enable_on,1);
   \                     ??cbEnableInvertWin_14: (+1)
   \   00000166   0x2201             MOVS     R2,#+1
   \   00000168   0xF204 0x1105      ADDW     R1,R4,#+261
   \   0000016C   0xF44F 0x60E5      MOV      R0,#+1832
   \   00000170   0xE064             B.N      ??cbEnableInvertWin_11
     84          
     85          
     86              			}
     87              			else if(pMsg->hWinSrc == ZEnable_Invert.btnHandle)
   \                     ??cbEnableInvertWin_12: (+1)
   \   00000172   0x.... 0x....      LDR.W    R6,??DataTable5_8
   \   00000176   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000017A   0x4281             CMP      R1,R0
   \   0000017C   0xD12D             BNE.N    ??cbEnableInvertWin_16
     88              			{
     89                              if(mksCfg.z_enable_on==1)
   \   0000017E   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   00000182   0x.... 0x....      LDR.W    R5,??DataTable5_4
   \   00000186   0xF504 0x7182      ADD      R1,R4,#+260
   \   0000018A   0x788A             LDRB     R2,[R1, #+2]
   \   0000018C   0x2A01             CMP      R2,#+1
   \   0000018E   0xD10E             BNE.N    ??cbEnableInvertWin_17
     90                              {
     91                                  mksCfg.z_enable_on=0;
   \   00000190   0x2200             MOVS     R2,#+0
   \   00000192   0x708A             STRB     R2,[R1, #+2]
     92                                  BUTTON_SetBmpFileName(ZEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   00000194   0x2201             MOVS     R2,#+1
   \   00000196   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   0000019A   0x.... 0x....      BL       BUTTON_SetBmpFileName
     93                                  if(gCfgItems.multiple_language != 0)
   \   0000019E   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   000001A2   0xB1A0             CBZ.N    R0,??cbEnableInvertWin_18
     94                                      BUTTON_SetText(ZEnable_Invert.btnHandle, machine_menu.low_level);
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   000001A8   0xF8D0 0x1288      LDR      R1,[R0, #+648]
   \   000001AC   0xE00B             B.N      ??cbEnableInvertWin_19
     95                              }
     96                              else
     97                              {
     98                                  mksCfg.z_enable_on=1;
   \                     ??cbEnableInvertWin_17: (+1)
   \   000001AE   0x2201             MOVS     R2,#+1
   \   000001B0   0x708A             STRB     R2,[R1, #+2]
     99                                  BUTTON_SetBmpFileName(ZEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   000001B2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   000001B6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    100                                  if(gCfgItems.multiple_language != 0)
   \   000001BA   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   000001BE   0xB130             CBZ.N    R0,??cbEnableInvertWin_18
    101                                      BUTTON_SetText(ZEnable_Invert.btnHandle, machine_menu.high_level);
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   000001C4   0x6841             LDR      R1,[R0, #+4]
   \                     ??cbEnableInvertWin_19: (+1)
   \   000001C6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001CA   0x.... 0x....      BL       BUTTON_SetText
    102                              } 
    103                              epr_write_data(EPR_Z_ENABLE_ON, (uint8_t *)&mksCfg.z_enable_on,1);
   \                     ??cbEnableInvertWin_18: (+1)
   \   000001CE   0x2201             MOVS     R2,#+1
   \   000001D0   0xF504 0x7183      ADD      R1,R4,#+262
   \   000001D4   0xF240 0x7029      MOVW     R0,#+1833
   \   000001D8   0xE030             B.N      ??cbEnableInvertWin_11
    104          
    105          
    106              		
    107              			}       
    108              			else if(pMsg->hWinSrc == EEnable_Invert.btnHandle)
   \                     ??cbEnableInvertWin_16: (+1)
   \   000001DA   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000001DE   0x4281             CMP      R1,R0
   \   000001E0   0xD134             BNE.N    ??cbEnableInvertWin_1
    109              			{
    110                              if(mksCfg.e_enable_on==1)
   \   000001E2   0x.... 0x....      LDR.W    R4,??DataTable5_5
   \   000001E6   0x.... 0x....      LDR.W    R5,??DataTable5_4
   \   000001EA   0xF504 0x7182      ADD      R1,R4,#+260
   \   000001EE   0x78CA             LDRB     R2,[R1, #+3]
   \   000001F0   0x2A01             CMP      R2,#+1
   \   000001F2   0xD10E             BNE.N    ??cbEnableInvertWin_20
    111                              {
    112                                  mksCfg.e_enable_on=0;
   \   000001F4   0x2200             MOVS     R2,#+0
   \   000001F6   0x70CA             STRB     R2,[R1, #+3]
    113                                  BUTTON_SetBmpFileName(EEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   000001F8   0x2201             MOVS     R2,#+1
   \   000001FA   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   000001FE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    114                                  if(gCfgItems.multiple_language != 0)
   \   00000202   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000206   0xB1A0             CBZ.N    R0,??cbEnableInvertWin_21
    115                                      BUTTON_SetText(EEnable_Invert.btnHandle, machine_menu.low_level);
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   0000020C   0xF8D0 0x1288      LDR      R1,[R0, #+648]
   \   00000210   0xE00B             B.N      ??cbEnableInvertWin_22
    116                              }
    117                              else
    118                              {
    119                                  mksCfg.e_enable_on=1;
   \                     ??cbEnableInvertWin_20: (+1)
   \   00000212   0x2201             MOVS     R2,#+1
   \   00000214   0x70CA             STRB     R2,[R1, #+3]
    120                                  BUTTON_SetBmpFileName(EEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   00000216   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   0000021A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    121                                  if(gCfgItems.multiple_language != 0)
   \   0000021E   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000222   0xB130             CBZ.N    R0,??cbEnableInvertWin_21
    122                                      BUTTON_SetText(EEnable_Invert.btnHandle, machine_menu.high_level);
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000228   0x6841             LDR      R1,[R0, #+4]
   \                     ??cbEnableInvertWin_22: (+1)
   \   0000022A   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000022E   0x.... 0x....      BL       BUTTON_SetText
    123                              } 
    124                              epr_write_data(EPR_E_ENABLE_ON, (uint8_t *)&mksCfg.e_enable_on,1);
   \                     ??cbEnableInvertWin_21: (+1)
   \   00000232   0x2201             MOVS     R2,#+1
   \   00000234   0xF204 0x1107      ADDW     R1,R4,#+263
   \   00000238   0xF240 0x702A      MOVW     R0,#+1834
   \                     ??cbEnableInvertWin_11: (+1)
   \   0000023C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000240   0x.... 0x....      B.W      epr_write_data
    125              			}
    126                     
    127              		}
    128              		break;
    129              		
    130              	default:
    131              		WM_DefaultProc(pMsg);
   \                     ??cbEnableInvertWin_4: (+1)
   \   00000244   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000248   0x.... 0x....      B.W      WM_DefaultProc
    132              	}
    133          }
   \                     ??cbEnableInvertWin_1: (+1)
   \   0000024C   0xBD70             POP      {R4-R6,PC}       ;; return
    134          
    135          

   \                                 In section .text, align 2, keep-with-next
    136          void draw_EnableInvert()
    137          {   
   \                     draw_EnableInvert: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    138              int i;
                         ^
Warning[Pe177]: variable "i" was declared but never referenced

  static BUTTON_STRUCT button_next,button_previous,button_back;
                       ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_EnablePin_Invert.cpp",12  Warning[Pe177]: 
          variable "button_next" was declared but never referenced

  static BUTTON_STRUCT button_next,button_previous,button_back;
                                   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_EnablePin_Invert.cpp",12  Warning[Pe177]: 
          variable "button_previous" was declared but never referenced
    139              
    140              if(disp_state_stack._disp_state[disp_state_stack._disp_index] != ENABLE_INVERT_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A3C             CMP      R2,#+60
   \   00000012   0xD005             BEQ.N    ??draw_EnableInvert_0
    141              {
    142                  disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    143                  disp_state_stack._disp_state[disp_state_stack._disp_index] = ENABLE_INVERT_UI;
   \   0000001A   0x223C             MOVS     R2,#+60
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    144              }
    145              disp_state = ENABLE_INVERT_UI;
   \                     ??draw_EnableInvert_0: (+1)
   \   00000020   0x203C             MOVS     R0,#+60
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable5_10
    146              
    147              GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable5_4
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    148              GUI_SetColor(gCfgItems.title_color);
   \   00000032   0xF104 0x0014      ADD      R0,R4,#+20
   \   00000036   0x9004             STR      R0,[SP, #+16]
   \   00000038   0x6840             LDR      R0,[R0, #+4]
   \   0000003A   0x.... 0x....      BL       GUI_SetColor
    149              GUI_Clear();
   \   0000003E   0x.... 0x....      BL       GUI_Clear
    150              
    151              GUI_DispStringAt(machine_menu.EnablePinsInvertTitle, TITLE_XPOS, TITLE_YPOS);
   \   00000042   0x.... 0x....      LDR.W    R10,??DataTable5_6
   \   00000046   0xF8DA 0x0238      LDR      R0,[R10, #+568]
   \   0000004A   0x2205             MOVS     R2,#+5
   \   0000004C   0x2103             MOVS     R1,#+3
   \   0000004E   0x.... 0x....      BL       GUI_DispStringAt
    152          
    153              hEnableInvertWnd = WM_CreateWindow(0, 0, LCD_WIDTH, LCD_HEIGHT, WM_CF_SHOW, cbEnableInvertWin, 0);
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x9002             STR      R0,[SP, #+8]
   \   00000056   0xF44F 0x73A0      MOV      R3,#+320
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable5_11
   \   0000005E   0x....             LDR.N    R6,??DataTable5_2
   \   00000060   0x9001             STR      R0,[SP, #+4]
   \   00000062   0xF44F 0x72F0      MOV      R2,#+480
   \   00000066   0x2002             MOVS     R0,#+2
   \   00000068   0x9000             STR      R0,[SP, #+0]
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       WM_CreateWindow
   \   00000072   0x8030             STRH     R0,[R6, #+0]
    154          
    155              XEnable_Invert_text.btnHandle = BUTTON_CreateEx(10,50,360,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000074   0x.... 0x....      BL       alloc_win_id
   \   00000078   0x9003             STR      R0,[SP, #+12]
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x9002             STR      R0,[SP, #+8]
   \   0000007E   0x2002             MOVS     R0,#+2
   \   00000080   0x9001             STR      R0,[SP, #+4]
   \   00000082   0x2328             MOVS     R3,#+40
   \   00000084   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000088   0x....             LDR.N    R7,??DataTable5_12
   \   0000008A   0x9000             STR      R0,[SP, #+0]
   \   0000008C   0xF44F 0x72B4      MOV      R2,#+360
   \   00000090   0x2132             MOVS     R1,#+50
   \   00000092   0x200A             MOVS     R0,#+10
   \   00000094   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000098   0x8038             STRH     R0,[R7, #+0]
    156              XEnable_Invert.btnHandle = BUTTON_CreateEx(370,50,90,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000009A   0x.... 0x....      BL       alloc_win_id
   \   0000009E   0x9003             STR      R0,[SP, #+12]
   \   000000A0   0x2328             MOVS     R3,#+40
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x9002             STR      R0,[SP, #+8]
   \   000000A6   0x225A             MOVS     R2,#+90
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x9001             STR      R0,[SP, #+4]
   \   000000AC   0x2132             MOVS     R1,#+50
   \   000000AE   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000B2   0x9000             STR      R0,[SP, #+0]
   \   000000B4   0xF44F 0x70B9      MOV      R0,#+370
   \   000000B8   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000BC   0x80B0             STRH     R0,[R6, #+4]
    157          
    158              YEnable_Invert_text.btnHandle = BUTTON_CreateEx(10,100,360,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000BE   0x.... 0x....      BL       alloc_win_id
   \   000000C2   0x9003             STR      R0,[SP, #+12]
   \   000000C4   0x2328             MOVS     R3,#+40
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x9002             STR      R0,[SP, #+8]
   \   000000CA   0xF44F 0x72B4      MOV      R2,#+360
   \   000000CE   0x2002             MOVS     R0,#+2
   \   000000D0   0x9001             STR      R0,[SP, #+4]
   \   000000D2   0x2164             MOVS     R1,#+100
   \   000000D4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x200A             MOVS     R0,#+10
   \   000000DC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000E0   0x8338             STRH     R0,[R7, #+24]
    159              YEnable_Invert.btnHandle = BUTTON_CreateEx(370,100,90,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000E2   0x.... 0x....      BL       alloc_win_id
   \   000000E6   0x9003             STR      R0,[SP, #+12]
   \   000000E8   0x2328             MOVS     R3,#+40
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x9002             STR      R0,[SP, #+8]
   \   000000EE   0x225A             MOVS     R2,#+90
   \   000000F0   0x2002             MOVS     R0,#+2
   \   000000F2   0x9001             STR      R0,[SP, #+4]
   \   000000F4   0x2164             MOVS     R1,#+100
   \   000000F6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0xF44F 0x70B9      MOV      R0,#+370
   \   00000100   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000104   0x83B0             STRH     R0,[R6, #+28]
    160          
    161              ZEnable_Invert_text.btnHandle = BUTTON_CreateEx(10,150,360,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000106   0x.... 0x....      BL       alloc_win_id
   \   0000010A   0x9003             STR      R0,[SP, #+12]
   \   0000010C   0x2328             MOVS     R3,#+40
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x9002             STR      R0,[SP, #+8]
   \   00000112   0xF44F 0x72B4      MOV      R2,#+360
   \   00000116   0x2002             MOVS     R0,#+2
   \   00000118   0x9001             STR      R0,[SP, #+4]
   \   0000011A   0x2196             MOVS     R1,#+150
   \   0000011C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000120   0x9000             STR      R0,[SP, #+0]
   \   00000122   0x200A             MOVS     R0,#+10
   \   00000124   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000128   0x8638             STRH     R0,[R7, #+48]
    162              ZEnable_Invert.btnHandle = BUTTON_CreateEx(370,150,90,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000012A   0x.... 0x....      BL       alloc_win_id
   \   0000012E   0x9003             STR      R0,[SP, #+12]
   \   00000130   0x2000             MOVS     R0,#+0
   \   00000132   0x9002             STR      R0,[SP, #+8]
   \   00000134   0x2002             MOVS     R0,#+2
   \   00000136   0x9001             STR      R0,[SP, #+4]
   \   00000138   0x2328             MOVS     R3,#+40
   \   0000013A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000013E   0x.... 0x....      LDR.W    R8,??DataTable5_8
   \   00000142   0x9000             STR      R0,[SP, #+0]
   \   00000144   0x225A             MOVS     R2,#+90
   \   00000146   0x2196             MOVS     R1,#+150
   \   00000148   0xF44F 0x70B9      MOV      R0,#+370
   \   0000014C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000150   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    163          
    164              EEnable_Invert_text.btnHandle = BUTTON_CreateEx(10,200,360,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000154   0x.... 0x....      BL       alloc_win_id
   \   00000158   0x9003             STR      R0,[SP, #+12]
   \   0000015A   0x2328             MOVS     R3,#+40
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x9002             STR      R0,[SP, #+8]
   \   00000160   0xF44F 0x72B4      MOV      R2,#+360
   \   00000164   0x2002             MOVS     R0,#+2
   \   00000166   0x9001             STR      R0,[SP, #+4]
   \   00000168   0x21C8             MOVS     R1,#+200
   \   0000016A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000016E   0x9000             STR      R0,[SP, #+0]
   \   00000170   0x200A             MOVS     R0,#+10
   \   00000172   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000176   0xF8A7 0x0048      STRH     R0,[R7, #+72]
    165              EEnable_Invert.btnHandle = BUTTON_CreateEx(370,200,90,40,hEnableInvertWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000017A   0x.... 0x....      BL       alloc_win_id
   \   0000017E   0x9003             STR      R0,[SP, #+12]
   \   00000180   0x2328             MOVS     R3,#+40
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x9002             STR      R0,[SP, #+8]
   \   00000186   0x225A             MOVS     R2,#+90
   \   00000188   0x2002             MOVS     R0,#+2
   \   0000018A   0x9001             STR      R0,[SP, #+4]
   \   0000018C   0x21C8             MOVS     R1,#+200
   \   0000018E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000192   0x9000             STR      R0,[SP, #+0]
   \   00000194   0xF44F 0x70B9      MOV      R0,#+370
   \   00000198   0x.... 0x....      BL       BUTTON_CreateEx
    166          
    167              if(mksCfg.x_enable_on==1)
   \   0000019C   0x.... 0x....      LDR.W    R9,??DataTable5_5
   \   000001A0   0xF899 0x1104      LDRB     R1,[R9, #+260]
   \   000001A4   0xF8A8 0x0018      STRH     R0,[R8, #+24]
   \   000001A8   0x2901             CMP      R1,#+1
   \   000001AA   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000001AE   0xBF07             ITTEE    EQ 
    168              {
    169                  BUTTON_SetBmpFileName(XEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   000001B0   0x2201             MOVEQ    R2,#+1
   \   000001B2   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    170              }
    171              else
    172              {
    173                  BUTTON_SetBmpFileName(XEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   000001B6   0x2201             MOVNE    R2,#+1
   \   000001B8   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   000001BC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    174              }
    175              if(mksCfg.y_enable_on==1)
   \   000001C0   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   000001C4   0xF509 0x7582      ADD      R5,R9,#+260
   \   000001C8   0x7869             LDRB     R1,[R5, #+1]
   \   000001CA   0x2901             CMP      R1,#+1
   \   000001CC   0xBF07             ITTEE    EQ 
    176              {
    177                  BUTTON_SetBmpFileName(YEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   000001CE   0x2201             MOVEQ    R2,#+1
   \   000001D0   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    178              }
    179              else
    180              {
    181                  BUTTON_SetBmpFileName(YEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   000001D4   0x2201             MOVNE    R2,#+1
   \   000001D6   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   000001DA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    182              }
    183              if(mksCfg.z_enable_on==1)
   \   000001DE   0x78A9             LDRB     R1,[R5, #+2]
   \   000001E0   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000001E4   0x2901             CMP      R1,#+1
   \   000001E6   0xBF07             ITTEE    EQ 
    184              {
    185                  BUTTON_SetBmpFileName(ZEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   000001E8   0x2201             MOVEQ    R2,#+1
   \   000001EA   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    186              }
    187              else
    188              {
    189                  BUTTON_SetBmpFileName(ZEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   000001EE   0x2201             MOVNE    R2,#+1
   \   000001F0   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   000001F4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    190              }     
    191              if(mksCfg.e_enable_on==1)
   \   000001F8   0x78E9             LDRB     R1,[R5, #+3]
   \   000001FA   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000001FE   0x2901             CMP      R1,#+1
   \   00000200   0xBF07             ITTEE    EQ 
    192              {
    193                  BUTTON_SetBmpFileName(EEnable_Invert.btnHandle, "bmp_enable.bin",1);
   \   00000202   0x2201             MOVEQ    R2,#+1
   \   00000204   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    194              }
    195              else
    196              {
    197                  BUTTON_SetBmpFileName(EEnable_Invert.btnHandle, "bmp_disable.bin",1);
   \   00000208   0x2201             MOVNE    R2,#+1
   \   0000020A   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   0000020E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    198              } 
    199          
    200              
    201              BUTTON_SetBmpFileName(XEnable_Invert_text.btnHandle,NULL,1);        
   \   00000212   0x2100             MOVS     R1,#+0
   \   00000214   0x2201             MOVS     R2,#+1
   \   00000216   0x5E78             LDRSH    R0,[R7, R1]
   \   00000218   0x.... 0x....      BL       BUTTON_SetBmpFileName
    202              BUTTON_SetBmpFileName(YEnable_Invert_text.btnHandle,NULL,1);
   \   0000021C   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000220   0x2201             MOVS     R2,#+1
   \   00000222   0x2100             MOVS     R1,#+0
   \   00000224   0x.... 0x....      BL       BUTTON_SetBmpFileName
    203              BUTTON_SetBmpFileName(ZEnable_Invert_text.btnHandle,NULL,1);
   \   00000228   0xF9B7 0x0030      LDRSH    R0,[R7, #+48]
   \   0000022C   0x2201             MOVS     R2,#+1
   \   0000022E   0x2100             MOVS     R1,#+0
   \   00000230   0x.... 0x....      BL       BUTTON_SetBmpFileName
    204              BUTTON_SetBmpFileName(EEnable_Invert_text.btnHandle,NULL,1);
   \   00000234   0xF9B7 0x0048      LDRSH    R0,[R7, #+72]
   \   00000238   0x2201             MOVS     R2,#+1
   \   0000023A   0x2100             MOVS     R1,#+0
   \   0000023C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    205              
    206              BUTTON_SetBitmapEx(XEnable_Invert.btnHandle,0,&bmp_struct90X30,0,5);
   \   00000240   0x2005             MOVS     R0,#+5
   \   00000242   0x9000             STR      R0,[SP, #+0]
   \   00000244   0x2300             MOVS     R3,#+0
   \   00000246   0x.... 0x....      LDR.W    R11,??DataTable5_13
   \   0000024A   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000024E   0x465A             MOV      R2,R11
   \   00000250   0x2100             MOVS     R1,#+0
   \   00000252   0x.... 0x....      BL       BUTTON_SetBitmapEx
    207              BUTTON_SetBitmapEx(YEnable_Invert.btnHandle,0,&bmp_struct90X30,0,5);
   \   00000256   0x2005             MOVS     R0,#+5
   \   00000258   0x9000             STR      R0,[SP, #+0]
   \   0000025A   0x2300             MOVS     R3,#+0
   \   0000025C   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   00000260   0x465A             MOV      R2,R11
   \   00000262   0x4619             MOV      R1,R3
   \   00000264   0x.... 0x....      BL       BUTTON_SetBitmapEx
    208              BUTTON_SetBitmapEx(ZEnable_Invert.btnHandle,0,&bmp_struct90X30,0,5);
   \   00000268   0x2005             MOVS     R0,#+5
   \   0000026A   0x9000             STR      R0,[SP, #+0]
   \   0000026C   0x2300             MOVS     R3,#+0
   \   0000026E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000272   0x465A             MOV      R2,R11
   \   00000274   0x4619             MOV      R1,R3
   \   00000276   0x.... 0x....      BL       BUTTON_SetBitmapEx
    209              BUTTON_SetBitmapEx(EEnable_Invert.btnHandle,0,&bmp_struct90X30,0,5); 
   \   0000027A   0x2005             MOVS     R0,#+5
   \   0000027C   0x9000             STR      R0,[SP, #+0]
   \   0000027E   0x2300             MOVS     R3,#+0
   \   00000280   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000284   0x465A             MOV      R2,R11
   \   00000286   0x4619             MOV      R1,R3
   \   00000288   0x.... 0x....      BL       BUTTON_SetBitmapEx
    210              
    211              BUTTON_SetTextAlign(XEnable_Invert_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   0000028C   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000290   0x210C             MOVS     R1,#+12
   \   00000292   0x.... 0x....      BL       BUTTON_SetTextAlign
    212              BUTTON_SetTextAlign(YEnable_Invert_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   00000296   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000029A   0x210C             MOVS     R1,#+12
   \   0000029C   0x.... 0x....      BL       BUTTON_SetTextAlign
    213              BUTTON_SetTextAlign(ZEnable_Invert_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   000002A0   0xF9B7 0x0030      LDRSH    R0,[R7, #+48]
   \   000002A4   0x210C             MOVS     R1,#+12
   \   000002A6   0x.... 0x....      BL       BUTTON_SetTextAlign
    214              BUTTON_SetTextAlign(EEnable_Invert_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );   
   \   000002AA   0xF9B7 0x0048      LDRSH    R0,[R7, #+72]
   \   000002AE   0x210C             MOVS     R1,#+12
   \   000002B0   0x.... 0x....      BL       BUTTON_SetTextAlign
    215              
    216              BUTTON_SetTextAlign(XEnable_Invert.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002B4   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000002B8   0x210E             MOVS     R1,#+14
   \   000002BA   0x.... 0x....      BL       BUTTON_SetTextAlign
    217              BUTTON_SetTextAlign(YEnable_Invert.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002BE   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   000002C2   0x210E             MOVS     R1,#+14
   \   000002C4   0x.... 0x....      BL       BUTTON_SetTextAlign
    218              BUTTON_SetTextAlign(ZEnable_Invert.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002C8   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000002CC   0x210E             MOVS     R1,#+14
   \   000002CE   0x.... 0x....      BL       BUTTON_SetTextAlign
    219              BUTTON_SetTextAlign(EEnable_Invert.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );   
   \   000002D2   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000002D6   0x210E             MOVS     R1,#+14
   \   000002D8   0x.... 0x....      BL       BUTTON_SetTextAlign
    220              
    221               button_back.btnHandle = BUTTON_CreateEx(400,270,70,40,hEnableInvertWnd,BUTTON_CF_SHOW,0,alloc_win_id());
   \   000002DC   0x.... 0x....      BL       alloc_win_id
   \   000002E0   0x9003             STR      R0,[SP, #+12]
   \   000002E2   0x2328             MOVS     R3,#+40
   \   000002E4   0x2000             MOVS     R0,#+0
   \   000002E6   0x9002             STR      R0,[SP, #+8]
   \   000002E8   0x2246             MOVS     R2,#+70
   \   000002EA   0x2002             MOVS     R0,#+2
   \   000002EC   0x9001             STR      R0,[SP, #+4]
   \   000002EE   0xF44F 0x7187      MOV      R1,#+270
   \   000002F2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002F6   0x9000             STR      R0,[SP, #+0]
   \   000002F8   0xF44F 0x70C8      MOV      R0,#+400
   \   000002FC   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000300   0x.... 0x....      LDR.W    R11,??DataTable5_1
    222               
    223               BUTTON_SetBmpFileName(button_back.btnHandle, "bmp_back70x40.bin",1);        
   \   00000304   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_back70x40.bin">`
   \   00000308   0xF8AB 0x0000      STRH     R0,[R11, #+0]
   \   0000030C   0x2201             MOVS     R2,#+1
   \   0000030E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    224               BUTTON_SetBitmapEx(button_back.btnHandle, 0, &bmp_struct70X40,0, 0);
   \   00000312   0x2000             MOVS     R0,#+0
   \   00000314   0x9000             STR      R0,[SP, #+0]
   \   00000316   0x4603             MOV      R3,R0
   \   00000318   0x4601             MOV      R1,R0
   \   0000031A   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   0000031E   0x....             LDR.N    R2,??DataTable5_14
   \   00000320   0x.... 0x....      BL       BUTTON_SetBitmapEx
    225                      
    226               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   00000324   0x9804             LDR      R0,[SP, #+16]
   \   00000326   0x6B82             LDR      R2,[R0, #+56]
   \   00000328   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   0000032C   0x2101             MOVS     R1,#+1
   \   0000032E   0x.... 0x....      BL       BUTTON_SetBkColor
    227               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color); 
   \   00000332   0x9804             LDR      R0,[SP, #+16]
   \   00000334   0x6B82             LDR      R2,[R0, #+56]
   \   00000336   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   0000033A   0x2100             MOVS     R1,#+0
   \   0000033C   0x.... 0x....      BL       BUTTON_SetBkColor
    228               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   00000340   0x9804             LDR      R0,[SP, #+16]
   \   00000342   0x6BC2             LDR      R2,[R0, #+60]
   \   00000344   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   00000348   0x2101             MOVS     R1,#+1
   \   0000034A   0x.... 0x....      BL       BUTTON_SetTextColor
    229               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor); 
   \   0000034E   0x9804             LDR      R0,[SP, #+16]
   \   00000350   0x6BC2             LDR      R2,[R0, #+60]
   \   00000352   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   00000356   0x2100             MOVS     R1,#+0
   \   00000358   0x.... 0x....      BL       BUTTON_SetTextColor
    230               
    231               BUTTON_SetTextAlign(button_back.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   0000035C   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   00000360   0x210E             MOVS     R1,#+14
   \   00000362   0x.... 0x....      BL       BUTTON_SetTextAlign
    232          
    233               if(gCfgItems.multiple_language != 0)
   \   00000366   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   0000036A   0x2800             CMP      R0,#+0
   \   0000036C   0xD043             BEQ.N    ??draw_EnableInvert_1
    234               {
    235                  BUTTON_SetText(XEnable_Invert_text.btnHandle, machine_menu.XInvert);
   \   0000036E   0xF50A 0x740E      ADD      R4,R10,#+568
   \   00000372   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000376   0x6861             LDR      R1,[R4, #+4]
   \   00000378   0x.... 0x....      BL       BUTTON_SetText
    236                  BUTTON_SetText(YEnable_Invert_text.btnHandle, machine_menu.YInvert);
   \   0000037C   0x68A1             LDR      R1,[R4, #+8]
   \   0000037E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000382   0x.... 0x....      BL       BUTTON_SetText
    237                  BUTTON_SetText(ZEnable_Invert_text.btnHandle, machine_menu.ZInvert);
   \   00000386   0x68E1             LDR      R1,[R4, #+12]
   \   00000388   0xF9B7 0x0030      LDRSH    R0,[R7, #+48]
   \   0000038C   0x.... 0x....      BL       BUTTON_SetText
    238                  BUTTON_SetText(EEnable_Invert_text.btnHandle, machine_menu.EInvert);
   \   00000390   0x6921             LDR      R1,[R4, #+16]
   \   00000392   0xF9B7 0x0048      LDRSH    R0,[R7, #+72]
   \   00000396   0x.... 0x....      BL       BUTTON_SetText
    239                   
    240                  BUTTON_SetText(button_back.btnHandle,common_menu.text_back);
   \   0000039A   0x....             LDR.N    R0,??DataTable5_15
   \   0000039C   0x6801             LDR      R1,[R0, #+0]
   \   0000039E   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   000003A2   0x.... 0x....      BL       BUTTON_SetText
    241          
    242                  if(mksCfg.x_enable_on==1)
   \   000003A6   0xF899 0x1104      LDRB     R1,[R9, #+260]
   \   000003AA   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000003AE   0x2901             CMP      R1,#+1
   \   000003B0   0xBF0C             ITE      EQ 
    243                  {
    244                      BUTTON_SetText(XEnable_Invert.btnHandle, machine_menu.high_level);
   \   000003B2   0x6D61             LDREQ    R1,[R4, #+84]
    245                  }
    246                  else
    247                  {
    248                      BUTTON_SetText(XEnable_Invert.btnHandle, machine_menu.low_level);
   \   000003B4   0x6D21             LDRNE    R1,[R4, #+80]
   \   000003B6   0x.... 0x....      BL       BUTTON_SetText
    249                  } 
    250                  if(mksCfg.y_enable_on==1)
   \   000003BA   0x7869             LDRB     R1,[R5, #+1]
   \   000003BC   0xF9B6 0x001C      LDRSH    R0,[R6, #+28]
   \   000003C0   0x2901             CMP      R1,#+1
   \   000003C2   0xBF0C             ITE      EQ 
    251                  {
    252                      BUTTON_SetText(YEnable_Invert.btnHandle, machine_menu.high_level);
   \   000003C4   0x6D61             LDREQ    R1,[R4, #+84]
    253                  }
    254                  else
    255                  {
    256                      BUTTON_SetText(YEnable_Invert.btnHandle, machine_menu.low_level);
   \   000003C6   0x6D21             LDRNE    R1,[R4, #+80]
   \   000003C8   0x.... 0x....      BL       BUTTON_SetText
    257                  } 
    258                  if(mksCfg.z_enable_on==1)
   \   000003CC   0x78A9             LDRB     R1,[R5, #+2]
   \   000003CE   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000003D2   0x2901             CMP      R1,#+1
   \   000003D4   0xBF0C             ITE      EQ 
    259                  {
    260                      BUTTON_SetText(ZEnable_Invert.btnHandle, machine_menu.high_level);
   \   000003D6   0x6D61             LDREQ    R1,[R4, #+84]
    261                  }
    262                  else
    263                  {
    264                      BUTTON_SetText(ZEnable_Invert.btnHandle, machine_menu.low_level);
   \   000003D8   0x6D21             LDRNE    R1,[R4, #+80]
   \   000003DA   0x.... 0x....      BL       BUTTON_SetText
    265                  }  
    266                  if(mksCfg.e_enable_on==1)
   \   000003DE   0x78E9             LDRB     R1,[R5, #+3]
   \   000003E0   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000003E4   0x2901             CMP      R1,#+1
   \   000003E6   0xBF0C             ITE      EQ 
    267                  {
    268                      BUTTON_SetText(EEnable_Invert.btnHandle, machine_menu.high_level);
   \   000003E8   0x6D61             LDREQ    R1,[R4, #+84]
    269                  }
    270                  else
    271                  {
    272                      BUTTON_SetText(EEnable_Invert.btnHandle, machine_menu.low_level);
   \   000003EA   0x6D21             LDRNE    R1,[R4, #+80]
   \   000003EC   0xB005             ADD      SP,SP,#+20
   \   000003EE   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000003F2   0x.... 0x....      B.W      BUTTON_SetText
    273                  }         
    274               }
    275          
    276          }
   \                     ??draw_EnableInvert_1: (+1)
   \   000003F6   0xB005             ADD      SP,SP,#+20
   \   000003F8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    277          
    278          

   \                                 In section .text, align 2, keep-with-next
    279          void Clear_EnableInvert()
    280          {
   \                     Clear_EnableInvert: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    281          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable5_4
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    282          	if(WM_IsWindow(hEnableInvertWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable5_2
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_EnableInvert_0
    283          	{
    284          		WM_DeleteWindow(hEnableInvertWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    285          	}
    286          }
   \                     ??Clear_EnableInvert_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x00FF5449         DC32     0xff5449

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     button_back

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     hEnableInvertWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     machine_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     machine_menu+0x288

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     ZEnable_Invert

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     _Z17cbEnableInvertWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     XEnable_Invert_text

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     bmp_struct90X30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     bmp_struct70X40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_disable.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_disable.bin"
   \              0x70 0x5F    
   \              0x64 0x69    
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_enable.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_enable.bin"
   \              0x70 0x5F    
   \              0x65 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_back70x40.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_back70x40.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x37 0x30    
   \              0x78 0x34    
   \              0x30 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0
    287          
    288          
    289          
    290          
    291          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_EnableInvert
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      16   cbEnableInvertWin(WM_MESSAGE *)
        16   -> BUTTON_SetBmpFileName
        16   -> BUTTON_SetText
         0   -> GUI_FillRect
        16   -> GUI_FillRect
        16   -> GUI_SetBkColor
        16   -> GUI_SetColor
         0   -> WM_DefaultProc
        16   -> WM_DeleteWindow
        16   -> WM_IsWindow
         0   -> draw_return_ui
         0   -> epr_write_data
      56   draw_EnableInvert
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "bmp_back70x40.bin">
      16  ?<Constant "bmp_disable.bin">
      16  ?<Constant "bmp_enable.bin">
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      36  Clear_EnableInvert
      96  XEnable_Invert_text
          YEnable_Invert_text
          ZEnable_Invert_text
          EEnable_Invert_text
      48  ZEnable_Invert
          EEnable_Invert
      24  button_back
     590  cbEnableInvertWin(WM_MESSAGE *)
    1020  draw_EnableInvert
      52  hEnableInvertWnd
          XEnable_Invert
          YEnable_Invert

 
   220 bytes in section .bss
 1 762 bytes in section .text
 
 1 762 bytes of CODE memory
   220 bytes of DATA memory

Errors: none
Warnings: 21
