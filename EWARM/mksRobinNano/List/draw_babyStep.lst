###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:25:58
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_babyStep.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_babyStep.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_babyStep.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_babyStep.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_babyStep.cpp
      1          #include "draw_babyStep.h"
      2          #include "gui.h"
      3          #include "button.h"
      4          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      5          #include "fontLib.h"
      6          //#include "printer.h"
      7          //#include "gcode.h"
      8          #include <math.h>
      9          #include <stdint.h>
     10          #include "stdint.h"
     11          #include "Marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     12          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\Marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     13          
     14          #ifndef GUI_FLASH
     15          #define GUI_FLASH
     16          #endif
     17          
     18          

   \                                 In section .bss, align 4
     19          static BUTTON_STRUCT buttonXI, buttonXD, buttonYI, buttonYD, buttonZI, buttonZD, buttonV,  buttonRet;
   \                     buttonYI:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonZI:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonRet:
   \   00000000                      DS8 24

   \                                 In section .data, align 4
     20          GUI_HWIN hMoveBabyStepWnd;
     21          
     22          
     23          
     24          
     25          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     26          
     27          static float babystep_dist=0.01;
     28          static uint8_t has_adjust_z = 0; 
   \                     has_adjust_z:
   \   00000000   0x00               DC8 0
   \   00000001   0x00               DC8 0
   \                     hMoveBabyStepWnd:
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000001C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000002C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004C   0x3C23D70A         DC32 3C23D70AH
     29          

   \                                 In section .text, align 2, keep-with-next
     30          static void cbBabyStepMotorWin(WM_MESSAGE * pMsg) {
   \                     _Z18cbBabyStepMotorWinP10WM_MESSAGE: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     31          	
     32          	struct PressEvt *press_event;
                 	                 ^
Warning[Pe550]: variable "press_event" was set but never used
     33          	char baby_buf[30]={0};
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x4614             MOV      R4,R2
   \   0000000C   0x4615             MOV      R5,R2
   \   0000000E   0xC13C             STM      R1!,{R2-R5}
   \   00000010   0xC13C             STM      R1!,{R2-R5}
     34          
     35          	switch (pMsg->MsgId) {
   \   00000012   0x6801             LDR      R1,[R0, #+0]
   \   00000014   0x290C             CMP      R1,#+12
   \   00000016   0xBF1C             ITT      NE 
   \   00000018   0x290D             CMPNE    R1,#+13
   \   0000001A   0x290F             CMPNE    R1,#+15
   \   0000001C   0xF000 0x80B9      BEQ.W    ??cbBabyStepMotorWin_0
   \   00000020   0x2926             CMP      R1,#+38
   \   00000022   0xF040 0x80B4      BNE.W    ??cbBabyStepMotorWin_1
     36          	case WM_PAINT:
     37          	//GUI_SetBkColor(GUI_BLACK);
     38          	//	GUI_Clear();
     39          	//GUI_DispString("window");
     40          		break;
     41          	case WM_TOUCH:
     42          	 	press_event = (struct PressEvt *)pMsg->Data.p;
     43          		
     44          		break;
     45          	case WM_TOUCH_CHILD:
     46          	  press_event = (struct PressEvt *)pMsg->Data.p;
     47          		
     48          	  break;
     49          
     50          	case WM_NOTIFY_PARENT:
     51          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   00000026   0x6881             LDR      R1,[R0, #+8]
   \   00000028   0x2902             CMP      R1,#+2
   \   0000002A   0xF040 0x80B2      BNE.W    ??cbBabyStepMotorWin_0
     52          		{
     53          		
     54          			press_event = (struct PressEvt *)pMsg->Data.p;
     55          
     56          			
     57          			if(pMsg->hWinSrc == buttonXI.btnHandle)
   \   0000002E   0x.... 0x....      LDR.W    R4,??DataTable20
   \   00000032   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000036   0xF9B4 0x1004      LDRSH    R1,[R4, #+4]
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xD10B             BNE.N    ??cbBabyStepMotorWin_2
     58          			{
     59          				memset(baby_buf,0,sizeof(baby_buf));
   \   0000003E   0x211E             MOVS     R1,#+30
   \   00000040   0xA800             ADD      R0,SP,#+0
   \   00000042   0x.... 0x....      BL       __aeabi_memclr4
     60          				sprintf(baby_buf, "M290 X%.3f",babystep_dist);
   \   00000046   0x6CE0             LDR      R0,[R4, #+76]
   \   00000048   0x.... 0x....      BL       __aeabi_f2d
   \   0000004C   0x460B             MOV      R3,R1
   \   0000004E   0x4602             MOV      R2,R0
   \   00000050   0x.... 0x....      ADR.W    R1,`?<Constant "M290 X%.3f">`
   \   00000054   0xE054             B.N      ??cbBabyStepMotorWin_3
     61          				excute_m290(baby_buf);
     62          			}
     63          			else if(pMsg->hWinSrc == buttonXD.btnHandle)
   \                     ??cbBabyStepMotorWin_2: (+1)
   \   00000056   0xF9B4 0x101C      LDRSH    R1,[R4, #+28]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xD10D             BNE.N    ??cbBabyStepMotorWin_4
     64          			{
     65          				memset(baby_buf,0,sizeof(baby_buf));
   \   0000005E   0x211E             MOVS     R1,#+30
   \   00000060   0xA800             ADD      R0,SP,#+0
   \   00000062   0x.... 0x....      BL       __aeabi_memclr4
     66          				sprintf(baby_buf, "M290 X%.3f\n",((float)0-babystep_dist));
   \   00000066   0x6CE0             LDR      R0,[R4, #+76]
   \   00000068   0xF080 0x4000      EOR      R0,R0,#0x80000000
   \   0000006C   0x.... 0x....      BL       __aeabi_f2d
   \   00000070   0x460B             MOV      R3,R1
   \   00000072   0x4602             MOV      R2,R0
   \   00000074   0x.... 0x....      ADR.W    R1,`?<Constant "M290 X%.3f\\n">`
   \   00000078   0xE042             B.N      ??cbBabyStepMotorWin_3
     67          				excute_m290(baby_buf);
     68          			}
     69          			else if(pMsg->hWinSrc == buttonYI.btnHandle)
   \                     ??cbBabyStepMotorWin_4: (+1)
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable20_1
   \   0000007E   0x5E8A             LDRSH    R2,[R1, R2]
   \   00000080   0x4290             CMP      R0,R2
   \   00000082   0xD10B             BNE.N    ??cbBabyStepMotorWin_5
     70          			{
     71          				memset(baby_buf,0,sizeof(baby_buf));
   \   00000084   0x211E             MOVS     R1,#+30
   \   00000086   0xA800             ADD      R0,SP,#+0
   \   00000088   0x.... 0x....      BL       __aeabi_memclr4
     72          				sprintf(baby_buf, "M290 Y%.3f\n",babystep_dist);
   \   0000008C   0x6CE0             LDR      R0,[R4, #+76]
   \   0000008E   0x.... 0x....      BL       __aeabi_f2d
   \   00000092   0x460B             MOV      R3,R1
   \   00000094   0x4602             MOV      R2,R0
   \   00000096   0x.... 0x....      ADR.W    R1,`?<Constant "M290 Y%.3f\\n">`
   \   0000009A   0xE031             B.N      ??cbBabyStepMotorWin_3
     73          				excute_m290(baby_buf);
     74          			}
     75          			else if(pMsg->hWinSrc == buttonYD.btnHandle)
   \                     ??cbBabyStepMotorWin_5: (+1)
   \   0000009C   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   000000A0   0x4288             CMP      R0,R1
   \   000000A2   0xD10D             BNE.N    ??cbBabyStepMotorWin_6
     76          			{
     77          				memset(baby_buf,0,sizeof(baby_buf));
   \   000000A4   0x211E             MOVS     R1,#+30
   \   000000A6   0xA800             ADD      R0,SP,#+0
   \   000000A8   0x.... 0x....      BL       __aeabi_memclr4
     78          				sprintf(baby_buf, "M290 Y%.3f\n",((float)0-babystep_dist));
   \   000000AC   0x6CE0             LDR      R0,[R4, #+76]
   \   000000AE   0xF080 0x4000      EOR      R0,R0,#0x80000000
   \   000000B2   0x.... 0x....      BL       __aeabi_f2d
   \   000000B6   0x460B             MOV      R3,R1
   \   000000B8   0x4602             MOV      R2,R0
   \   000000BA   0x.... 0x....      ADR.W    R1,`?<Constant "M290 Y%.3f\\n">`
   \   000000BE   0xE01F             B.N      ??cbBabyStepMotorWin_3
     79          				excute_m290(baby_buf);
     80          			}
     81          			else if(pMsg->hWinSrc == buttonZI.btnHandle)
   \                     ??cbBabyStepMotorWin_6: (+1)
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable20_2
   \   000000C4   0x5ECA             LDRSH    R2,[R1, R3]
   \   000000C6   0x4290             CMP      R0,R2
   \   000000C8   0xD107             BNE.N    ??cbBabyStepMotorWin_7
     82          			{
     83          				has_adjust_z = 1;
   \   000000CA   0x2001             MOVS     R0,#+1
   \   000000CC   0x7020             STRB     R0,[R4, #+0]
     84          				memset(baby_buf,0,sizeof(baby_buf));
   \   000000CE   0x211E             MOVS     R1,#+30
   \   000000D0   0xA800             ADD      R0,SP,#+0
   \   000000D2   0x.... 0x....      BL       __aeabi_memclr4
     85          				sprintf(baby_buf, "M290 Z%.3f",babystep_dist);
   \   000000D6   0x6CE0             LDR      R0,[R4, #+76]
   \   000000D8   0xE00C             B.N      ??cbBabyStepMotorWin_8
     86          				excute_m290(baby_buf);
     87          			}
     88          			else if(pMsg->hWinSrc == buttonZD.btnHandle)
   \                     ??cbBabyStepMotorWin_7: (+1)
   \   000000DA   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   000000DE   0x4288             CMP      R0,R1
   \   000000E0   0xD116             BNE.N    ??cbBabyStepMotorWin_9
     89          			{
     90          				has_adjust_z = 1;
   \   000000E2   0x2001             MOVS     R0,#+1
   \   000000E4   0x7020             STRB     R0,[R4, #+0]
     91          				memset(baby_buf,0,sizeof(baby_buf));
   \   000000E6   0x211E             MOVS     R1,#+30
   \   000000E8   0xA800             ADD      R0,SP,#+0
   \   000000EA   0x.... 0x....      BL       __aeabi_memclr4
     92          				sprintf(baby_buf, "M290 Z%.3f",((float)0-babystep_dist));
   \   000000EE   0x6CE0             LDR      R0,[R4, #+76]
   \   000000F0   0xF080 0x4000      EOR      R0,R0,#0x80000000
   \                     ??cbBabyStepMotorWin_8: (+1)
   \   000000F4   0x.... 0x....      BL       __aeabi_f2d
   \   000000F8   0x460B             MOV      R3,R1
   \   000000FA   0x4602             MOV      R2,R0
   \   000000FC   0x.... 0x....      ADR.W    R1,`?<Constant "M290 Z%.3f">`
   \                     ??cbBabyStepMotorWin_3: (+1)
   \   00000100   0xA800             ADD      R0,SP,#+0
   \   00000102   0x.... 0x....      BL       sprintf
     93          				excute_m290(baby_buf);
   \   00000106   0xA800             ADD      R0,SP,#+0
   \   00000108   0x.... 0x....      BL       excute_m290
     94          				
     95          			}
     96          			else if(pMsg->hWinSrc == buttonRet.btnHandle)
     97          			{
     98          				 
     99          				if(has_adjust_z == 1)
    100          				{
    101          					excute_m500();
    102          				}
    103          				has_adjust_z = 0;
    104          				
    105          				last_disp_state = BABY_STEP_UI;
    106          				Clear_babyStep();
    107          				draw_return_ui();
    108          								
    109          			}
    110          			else if(pMsg->hWinSrc == buttonV.btnHandle)
    111          			{
    112          				if(abs((int)(100 * babystep_dist)) == 1)
    113          				{
    114          					babystep_dist = 0.05;
    115          				}
    116          				else if(abs((int)(100 * babystep_dist)) == 5)
    117          				{
    118          					babystep_dist = 0.1;
    119          				}
    120          				else 
    121          				{
    122          					babystep_dist = 0.01;
    123          				}
    124          				
    125          				disp_babystep_dist();
    126          				
    127          			}
    128          			
    129          			
    130          		}
    131          		break;
    132          	default:
    133          	WM_DefaultProc(pMsg);
    134          	}
    135          }
   \   0000010C   0xB009             ADD      SP,SP,#+36
   \   0000010E   0xBD30             POP      {R4,R5,PC}
   \                     ??cbBabyStepMotorWin_9: (+1)
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable20_3
   \   00000114   0x5EC9             LDRSH    R1,[R1, R3]
   \   00000116   0x4288             CMP      R0,R1
   \   00000118   0xD11B             BNE.N    ??cbBabyStepMotorWin_10
   \   0000011A   0x7820             LDRB     R0,[R4, #+0]
   \   0000011C   0x2801             CMP      R0,#+1
   \   0000011E   0xBF08             IT       EQ 
   \   00000120   0x.... 0x....      BLEQ     excute_m500
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable20_4
   \   00000128   0x7025             STRB     R5,[R4, #+0]
   \   0000012A   0x203E             MOVS     R0,#+62
   \   0000012C   0x7008             STRB     R0,[R1, #+0]
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable20_5
   \   00000132   0x6940             LDR      R0,[R0, #+20]
   \   00000134   0x.... 0x....      BL       GUI_SetBkColor
   \   00000138   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000013C   0x.... 0x....      BL       WM_IsWindow
   \   00000140   0xB118             CBZ.N    R0,??cbBabyStepMotorWin_11
   \   00000142   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000146   0x.... 0x....      BL       WM_DeleteWindow
   \                     ??cbBabyStepMotorWin_11: (+1)
   \   0000014A   0x.... 0x....      BL       draw_return_ui
   \   0000014E   0xB009             ADD      SP,SP,#+36
   \   00000150   0xBD30             POP      {R4,R5,PC}
   \                     ??cbBabyStepMotorWin_10: (+1)
   \   00000152   0xF9B4 0x1034      LDRSH    R1,[R4, #+52]
   \   00000156   0x4288             CMP      R0,R1
   \   00000158   0xD11B             BNE.N    ??cbBabyStepMotorWin_0
   \   0000015A   0x6CE1             LDR      R1,[R4, #+76]
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable20_6  ;; 0x42c80000
   \   00000160   0x.... 0x....      BL       __aeabi_fmul
   \   00000164   0x.... 0x....      BL       __aeabi_f2iz
   \   00000168   0x0001             MOVS     R1,R0
   \   0000016A   0xBF48             IT       MI 
   \   0000016C   0x4249             RSBMI    R1,R1,#+0
   \   0000016E   0x2901             CMP      R1,#+1
   \   00000170   0xBF08             IT       EQ 
   \   00000172   0x.... 0x....      LDREQ.W  R0,??DataTable20_7  ;; 0x3d4ccccd
   \   00000176   0xD005             BEQ.N    ??cbBabyStepMotorWin_12
   \   00000178   0x2905             CMP      R1,#+5
   \   0000017A   0xBF0C             ITE      EQ 
   \   0000017C   0x.... 0x....      LDREQ.W  R0,??DataTable20_8  ;; 0x3dcccccd
   \   00000180   0x.... 0x....      LDRNE.W  R0,??DataTable20_9  ;; 0x3c23d70a
   \                     ??cbBabyStepMotorWin_12: (+1)
   \   00000184   0x64E0             STR      R0,[R4, #+76]
   \   00000186   0x.... 0x....      BL       disp_babystep_dist
   \   0000018A   0xB009             ADD      SP,SP,#+36
   \   0000018C   0xBD30             POP      {R4,R5,PC}
   \                     ??cbBabyStepMotorWin_1: (+1)
   \   0000018E   0x.... 0x....      BL       WM_DefaultProc
   \                     ??cbBabyStepMotorWin_0: (+1)
   \   00000192   0xB009             ADD      SP,SP,#+36
   \   00000194   0xBD30             POP      {R4,R5,PC}       ;; return
    136          
    137          

   \                                 In section .text, align 2, keep-with-next
    138          void draw_babyStep()
    139          {
   \                     draw_babyStep: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    140          	
    141            	//char buffer_z[15]={0};
    142          	
    143          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != BABY_STEP_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable20_10
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A3E             CMP      R2,#+62
   \   00000012   0xD005             BEQ.N    ??draw_babyStep_0
    144          	{
    145          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    146          		disp_state_stack._disp_state[disp_state_stack._disp_index] = BABY_STEP_UI;
   \   0000001A   0x223E             MOVS     R2,#+62
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    147          	}
    148          	disp_state = BABY_STEP_UI;
   \                     ??draw_babyStep_0: (+1)
   \   00000020   0x203E             MOVS     R0,#+62
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable20_11
    149          	
    150          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable20_5
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    151          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    152          	GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    153          
    154          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000003C   0x.... 0x....      BL       creat_title_text
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0x.... 0x....      BL       GUI_DispStringAt
    155          
    156          	hMoveBabyStepWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbBabyStepMotorWin, 0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0xF44F 0x738E      MOV      R3,#+284
   \   00000050   0x....             LDR.N    R0,??DataTable20_12
   \   00000052   0x9001             STR      R0,[SP, #+4]
   \   00000054   0xF44F 0x72F0      MOV      R2,#+480
   \   00000058   0x2002             MOVS     R0,#+2
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2124             MOVS     R1,#+36
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       WM_CreateWindow
    157          
    158          	buttonXI.btnHandle = BUTTON_CreateEx(INTERVAL_V, 0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 101);
   \   00000064   0x2165             MOVS     R1,#+101
   \   00000066   0x9103             STR      R1,[SP, #+12]
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x9102             STR      R1,[SP, #+8]
   \   0000006C   0x2102             MOVS     R1,#+2
   \   0000006E   0x....             LDR.N    R5,??DataTable20
   \   00000070   0x9101             STR      R1,[SP, #+4]
   \   00000072   0x8068             STRH     R0,[R5, #+2]
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x238C             MOVS     R3,#+140
   \   00000078   0x2275             MOVS     R2,#+117
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000082   0x80A8             STRH     R0,[R5, #+4]
    159          	buttonYI.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, 0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 102);
   \   00000084   0x2066             MOVS     R0,#+102
   \   00000086   0x9003             STR      R0,[SP, #+12]
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x9002             STR      R0,[SP, #+8]
   \   0000008C   0x2002             MOVS     R0,#+2
   \   0000008E   0x9001             STR      R0,[SP, #+4]
   \   00000090   0x238C             MOVS     R3,#+140
   \   00000092   0x5E28             LDRSH    R0,[R5, R0]
   \   00000094   0x....             LDR.N    R6,??DataTable20_1
   \   00000096   0x9000             STR      R0,[SP, #+0]
   \   00000098   0x2275             MOVS     R2,#+117
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x2079             MOVS     R0,#+121
   \   0000009E   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A2   0x8030             STRH     R0,[R6, #+0]
    160          	buttonZI.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 103);
   \   000000A4   0x2067             MOVS     R0,#+103
   \   000000A6   0x9003             STR      R0,[SP, #+12]
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x9002             STR      R0,[SP, #+8]
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x9001             STR      R0,[SP, #+4]
   \   000000B0   0x238C             MOVS     R3,#+140
   \   000000B2   0x5E28             LDRSH    R0,[R5, R0]
   \   000000B4   0x....             LDR.N    R7,??DataTable20_2
   \   000000B6   0x9000             STR      R0,[SP, #+0]
   \   000000B8   0x2275             MOVS     R2,#+117
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x20F0             MOVS     R0,#+240
   \   000000BE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000C2   0x8038             STRH     R0,[R7, #+0]
    161          
    162          	
    163          	buttonXD.btnHandle = BUTTON_CreateEx(INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 105);
   \   000000C4   0x238C             MOVS     R3,#+140
   \   000000C6   0x2069             MOVS     R0,#+105
   \   000000C8   0x9003             STR      R0,[SP, #+12]
   \   000000CA   0x2275             MOVS     R2,#+117
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x9002             STR      R0,[SP, #+8]
   \   000000D0   0x218E             MOVS     R1,#+142
   \   000000D2   0x2002             MOVS     R0,#+2
   \   000000D4   0x9001             STR      R0,[SP, #+4]
   \   000000D6   0x5E28             LDRSH    R0,[R5, R0]
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x2002             MOVS     R0,#+2
   \   000000DC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000E0   0x83A8             STRH     R0,[R5, #+28]
    164          	buttonYD.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 106);
   \   000000E2   0x238C             MOVS     R3,#+140
   \   000000E4   0x206A             MOVS     R0,#+106
   \   000000E6   0x9003             STR      R0,[SP, #+12]
   \   000000E8   0x2275             MOVS     R2,#+117
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x9002             STR      R0,[SP, #+8]
   \   000000EE   0x218E             MOVS     R1,#+142
   \   000000F0   0x2002             MOVS     R0,#+2
   \   000000F2   0x9001             STR      R0,[SP, #+4]
   \   000000F4   0x5E28             LDRSH    R0,[R5, R0]
   \   000000F6   0x9000             STR      R0,[SP, #+0]
   \   000000F8   0x2079             MOVS     R0,#+121
   \   000000FA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000FE   0x8330             STRH     R0,[R6, #+24]
    165          	buttonZD.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 107);
   \   00000100   0x238C             MOVS     R3,#+140
   \   00000102   0x206B             MOVS     R0,#+107
   \   00000104   0x9003             STR      R0,[SP, #+12]
   \   00000106   0x2275             MOVS     R2,#+117
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x9002             STR      R0,[SP, #+8]
   \   0000010C   0x218E             MOVS     R1,#+142
   \   0000010E   0x2002             MOVS     R0,#+2
   \   00000110   0x9001             STR      R0,[SP, #+4]
   \   00000112   0x5E28             LDRSH    R0,[R5, R0]
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x20F0             MOVS     R0,#+240
   \   00000118   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000011C   0x8338             STRH     R0,[R7, #+24]
    166          
    167          	buttonV.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  0,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 108);
   \   0000011E   0xF240 0x1967      MOVW     R9,#+359
   \   00000122   0x206C             MOVS     R0,#+108
   \   00000124   0x9003             STR      R0,[SP, #+12]
   \   00000126   0x238C             MOVS     R3,#+140
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x9002             STR      R0,[SP, #+8]
   \   0000012C   0x2275             MOVS     R2,#+117
   \   0000012E   0x2002             MOVS     R0,#+2
   \   00000130   0x9001             STR      R0,[SP, #+4]
   \   00000132   0x2100             MOVS     R1,#+0
   \   00000134   0x5E28             LDRSH    R0,[R5, R0]
   \   00000136   0x9000             STR      R0,[SP, #+0]
   \   00000138   0x4648             MOV      R0,R9
   \   0000013A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000013E   0x86A8             STRH     R0,[R5, #+52]
    168          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hMoveBabyStepWnd, BUTTON_CF_SHOW, 0, 109);
   \   00000140   0x206D             MOVS     R0,#+109
   \   00000142   0x9003             STR      R0,[SP, #+12]
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x9002             STR      R0,[SP, #+8]
   \   00000148   0x2002             MOVS     R0,#+2
   \   0000014A   0x9001             STR      R0,[SP, #+4]
   \   0000014C   0x238C             MOVS     R3,#+140
   \   0000014E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000150   0x.... 0x....      LDR.W    R8,??DataTable20_3
   \   00000154   0x9000             STR      R0,[SP, #+0]
   \   00000156   0x2275             MOVS     R2,#+117
   \   00000158   0x218E             MOVS     R1,#+142
   \   0000015A   0x4648             MOV      R0,R9
   \   0000015C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000160   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    169          
    170          	#if VERSION_WITH_PIC	
    171          
    172          	BUTTON_SetBmpFileName(buttonXI.btnHandle, "bmp_xAdd.bin",1);
   \   00000164   0x2201             MOVS     R2,#+1
   \   00000166   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000016A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_xAdd.bin">`
   \   0000016E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    173          	BUTTON_SetBmpFileName(buttonXD.btnHandle, "bmp_xDec.bin",1);
   \   00000172   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000176   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_xDec.bin">`
   \   0000017A   0x2201             MOVS     R2,#+1
   \   0000017C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    174          	BUTTON_SetBmpFileName(buttonYI.btnHandle, "bmp_yAdd.bin",1);
   \   00000180   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000184   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_yAdd.bin">`
   \   00000188   0x2201             MOVS     R2,#+1
   \   0000018A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    175          	BUTTON_SetBmpFileName(buttonYD.btnHandle, "bmp_yDec.bin",1);
   \   0000018E   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000192   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_yDec.bin">`
   \   00000196   0x2201             MOVS     R2,#+1
   \   00000198   0x.... 0x....      BL       BUTTON_SetBmpFileName
    176          	BUTTON_SetBmpFileName(buttonZI.btnHandle, "bmp_zAdd.bin",1);
   \   0000019C   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000001A0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zAdd.bin">`
   \   000001A4   0x2201             MOVS     R2,#+1
   \   000001A6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    177          	BUTTON_SetBmpFileName(buttonZD.btnHandle, "bmp_zDec.bin",1);
   \   000001AA   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000001AE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zDec.bin">`
   \   000001B2   0x2201             MOVS     R2,#+1
   \   000001B4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    178          	//
    179          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \   000001B8   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000001BC   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   000001C0   0x2201             MOVS     R2,#+1
   \   000001C2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    180          	
    181          	#endif
    182          
    183          	BUTTON_SetBitmapEx(buttonXI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001C6   0x.... 0x....      LDR.W    R11,??DataTable20_13
   \   000001CA   0x.... 0x....      LDR.W    R10,??DataTable20_14
   \   000001CE   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001D2   0x.... 0x....      LDR.W    R9,??DataTable20_15
   \   000001D6   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001DA   0x9000             STR      R0,[SP, #+0]
   \   000001DC   0x464A             MOV      R2,R9
   \   000001DE   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000001E2   0x2100             MOVS     R1,#+0
   \   000001E4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    184          	BUTTON_SetBitmapEx(buttonXD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001E8   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001EC   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001F0   0x9000             STR      R0,[SP, #+0]
   \   000001F2   0x464A             MOV      R2,R9
   \   000001F4   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000001F8   0x2100             MOVS     R1,#+0
   \   000001FA   0x.... 0x....      BL       BUTTON_SetBitmapEx
    185          	BUTTON_SetBitmapEx(buttonYI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001FE   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000202   0x9000             STR      R0,[SP, #+0]
   \   00000204   0x2100             MOVS     R1,#+0
   \   00000206   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000020A   0x5E70             LDRSH    R0,[R6, R1]
   \   0000020C   0x464A             MOV      R2,R9
   \   0000020E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    186          	BUTTON_SetBitmapEx(buttonYD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000212   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000216   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000021A   0x9000             STR      R0,[SP, #+0]
   \   0000021C   0x464A             MOV      R2,R9
   \   0000021E   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000222   0x2100             MOVS     R1,#+0
   \   00000224   0x.... 0x....      BL       BUTTON_SetBitmapEx
    187          	BUTTON_SetBitmapEx(buttonZI.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000228   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000022C   0x9000             STR      R0,[SP, #+0]
   \   0000022E   0x2100             MOVS     R1,#+0
   \   00000230   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000234   0x5E78             LDRSH    R0,[R7, R1]
   \   00000236   0x464A             MOV      R2,R9
   \   00000238   0x.... 0x....      BL       BUTTON_SetBitmapEx
    188          	BUTTON_SetBitmapEx(buttonZD.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000023C   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000240   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000244   0x9000             STR      R0,[SP, #+0]
   \   00000246   0x464A             MOV      R2,R9
   \   00000248   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000024C   0x2100             MOVS     R1,#+0
   \   0000024E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    189          	BUTTON_SetBitmapEx(buttonV.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000252   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000256   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000025A   0x9000             STR      R0,[SP, #+0]
   \   0000025C   0x464A             MOV      R2,R9
   \   0000025E   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000262   0x2100             MOVS     R1,#+0
   \   00000264   0x.... 0x....      BL       BUTTON_SetBitmapEx
    190          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000268   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000026C   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000270   0x9000             STR      R0,[SP, #+0]
   \   00000272   0x464A             MOV      R2,R9
   \   00000274   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000278   0x2100             MOVS     R1,#+0
   \   0000027A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    191          	
    192          	
    193          
    194          	if(gCfgItems.multiple_language != 0)
   \   0000027E   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000282   0xB320             CBZ.N    R0,??draw_babyStep_1
    195          	{
    196          		BUTTON_SetText(buttonXI.btnHandle, move_menu.x_add);
   \   00000284   0x....             LDR.N    R4,??DataTable20_16
   \   00000286   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000028A   0x6861             LDR      R1,[R4, #+4]
   \   0000028C   0x.... 0x....      BL       BUTTON_SetText
    197          		BUTTON_SetText(buttonXD.btnHandle,move_menu.x_dec);
   \   00000290   0x68A1             LDR      R1,[R4, #+8]
   \   00000292   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000296   0x.... 0x....      BL       BUTTON_SetText
    198          		BUTTON_SetText(buttonYI.btnHandle, move_menu.y_add);
   \   0000029A   0x68E1             LDR      R1,[R4, #+12]
   \   0000029C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002A0   0x.... 0x....      BL       BUTTON_SetText
    199          		BUTTON_SetText(buttonYD.btnHandle, move_menu.y_dec);
   \   000002A4   0x6921             LDR      R1,[R4, #+16]
   \   000002A6   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000002AA   0x.... 0x....      BL       BUTTON_SetText
    200          		BUTTON_SetText(buttonZI.btnHandle, move_menu.z_add);
   \   000002AE   0x6961             LDR      R1,[R4, #+20]
   \   000002B0   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002B4   0x.... 0x....      BL       BUTTON_SetText
    201          		BUTTON_SetText(buttonZD.btnHandle, move_menu.z_dec);
   \   000002B8   0x69A1             LDR      R1,[R4, #+24]
   \   000002BA   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002BE   0x.... 0x....      BL       BUTTON_SetText
    202          	    BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   000002C2   0x....             LDR.N    R0,??DataTable20_17
   \   000002C4   0x6801             LDR      R1,[R0, #+0]
   \   000002C6   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000002CA   0x.... 0x....      BL       BUTTON_SetText
    203          	}
    204          	disp_z_offset_value();
   \                     ??draw_babyStep_1: (+1)
   \   000002CE   0x.... 0x....      BL       disp_z_offset_value
    205          	disp_babystep_dist();
   \   000002D2   0xB005             ADD      SP,SP,#+20
   \   000002D4   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000002D8   0x....             B.N      disp_babystep_dist
    206          
    207          	
    208          	
    209          /////	GUI_Exec();
    210          
    211          	
    212          }
    213          
    214          #if HAS_BED_PROBE
    215          extern float zprobe_zoffset; // Initialized by settings.load()
    216          #endif
    217          

   \                                 In section .text, align 2, keep-with-next
    218          void disp_z_offset_value()
    219          {
   \                     disp_z_offset_value: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    220          	char buf[20];
    221          	memset(buf,0,sizeof(buf));
   \   00000004   0x2114             MOVS     R1,#+20
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    222          	GUI_SetColor(gCfgItems.background_color);
   \   0000000C   0x....             LDR.N    R4,??DataTable20_5
   \   0000000E   0x6960             LDR      R0,[R4, #+20]
   \   00000010   0x.... 0x....      BL       GUI_SetColor
    223          	GUI_FillRect(290, TITLE_YPOS, LCD_WIDTH, titleHeight);
   \   00000014   0x2324             MOVS     R3,#+36
   \   00000016   0xF44F 0x72F0      MOV      R2,#+480
   \   0000001A   0x2105             MOVS     R1,#+5
   \   0000001C   0xF44F 0x7091      MOV      R0,#+290
   \   00000020   0x.... 0x....      BL       GUI_FillRect
    224          	GUI_SetColor(gCfgItems.title_color);
   \   00000024   0x69A0             LDR      R0,[R4, #+24]
   \   00000026   0x.... 0x....      BL       GUI_SetColor
    225          	sprintf(buf,"offset Z: %6.3f",zprobe_zoffset);
   \   0000002A   0x....             LDR.N    R0,??DataTable20_18
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_f2d
   \   00000032   0x4602             MOV      R2,R0
   \   00000034   0x460B             MOV      R3,R1
   \   00000036   0x.... 0x....      ADR.W    R1,`?<Constant "offset Z: %6.3f">`
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x.... 0x....      BL       sprintf
    226          	GUI_DispStringAt((const char *)buf,290, TITLE_YPOS);
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0xF44F 0x7191      MOV      R1,#+290
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0x.... 0x....      BL       GUI_DispStringAt
    227          }
   \   0000004C   0xB006             ADD      SP,SP,#+24
   \   0000004E   0xBD10             POP      {R4,PC}          ;; return
    228          

   \                                 In section .text, align 2, keep-with-next
    229          void disp_babystep_dist()
    230          {
   \                     disp_babystep_dist: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    231          	//char buf[30] = {0};
    232          		
    233          	if((int)(100 *babystep_dist) == 1)
   \   00000002   0x....             LDR.N    R5,??DataTable20
   \   00000004   0x....             LDR.N    R4,??DataTable20_6  ;; 0x42c80000
   \   00000006   0x6CE8             LDR      R0,[R5, #+76]
   \   00000008   0x4621             MOV      R1,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_fmul
   \   0000000E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD103             BNE.N    ??disp_babystep_dist_0
    234          	{
    235          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move0_01.bin",1);
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move0_01.bin">`
   \   0000001C   0xE00A             B.N      ??disp_babystep_dist_1
    236          	}
    237          	else if((int)(100*babystep_dist) == 5)
   \                     ??disp_babystep_dist_0: (+1)
   \   0000001E   0x2805             CMP      R0,#+5
   \   00000020   0xD103             BNE.N    ??disp_babystep_dist_2
    238          	{
    239          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move0_05.bin",1);
   \   00000022   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move0_05.bin">`
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0xE004             B.N      ??disp_babystep_dist_1
    240          	}
    241          	else if((int)(100*babystep_dist) == 10)
   \                     ??disp_babystep_dist_2: (+1)
   \   0000002A   0x280A             CMP      R0,#+10
   \   0000002C   0xD106             BNE.N    ??disp_babystep_dist_3
    242          	{
    243          		BUTTON_SetBmpFileName(buttonV.btnHandle, "bmp_step_move0_1.bin",1);
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step_move0_1.bin">`
   \                     ??disp_babystep_dist_1: (+1)
   \   00000034   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000038   0x.... 0x....      BL       BUTTON_SetBmpFileName
    244          	}
    245          	if(gCfgItems.multiple_language != 0)
   \                     ??disp_babystep_dist_3: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable20_5
   \   0000003E   0xF890 0x01CF      LDRB     R0,[R0, #+463]
   \   00000042   0xB1C8             CBZ.N    R0,??disp_babystep_dist_4
    246          	{
    247          		if((int)(100 * babystep_dist) == 1)
   \   00000044   0x6CE8             LDR      R0,[R5, #+76]
   \   00000046   0x4621             MOV      R1,R4
   \   00000048   0x.... 0x....      BL       __aeabi_fmul
   \   0000004C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD102             BNE.N    ??disp_babystep_dist_5
    248          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_001mm);
   \   00000054   0x....             LDR.N    R0,??DataTable20_16
   \   00000056   0x69C1             LDR      R1,[R0, #+28]
   \   00000058   0xE008             B.N      ??disp_babystep_dist_6
    249          		else if((int)(100 * babystep_dist) == 5)
   \                     ??disp_babystep_dist_5: (+1)
   \   0000005A   0x2805             CMP      R0,#+5
   \   0000005C   0xD102             BNE.N    ??disp_babystep_dist_7
    250          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_005mm);
   \   0000005E   0x....             LDR.N    R0,??DataTable20_16
   \   00000060   0x6A01             LDR      R1,[R0, #+32]
   \   00000062   0xE003             B.N      ??disp_babystep_dist_6
    251          		else if((int)(100 * babystep_dist) == 10)
   \                     ??disp_babystep_dist_7: (+1)
   \   00000064   0x280A             CMP      R0,#+10
   \   00000066   0xD107             BNE.N    ??disp_babystep_dist_4
    252          			BUTTON_SetText(buttonV.btnHandle,move_menu.step_01mm);
   \   00000068   0x....             LDR.N    R0,??DataTable20_16
   \   0000006A   0x6A41             LDR      R1,[R0, #+36]
   \                     ??disp_babystep_dist_6: (+1)
   \   0000006C   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000070   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000074   0x.... 0x....      B.W      BUTTON_SetText
    253          	}	
    254          }
   \                     ??disp_babystep_dist_4: (+1)
   \   00000078   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    255          

   \                                 In section .text, align 2, keep-with-next
    256          void Clear_babyStep()
    257          {
   \                     Clear_babyStep: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    258          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable20_5
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    259          	if(WM_IsWindow(hMoveBabyStepWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable20
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_babyStep_0
    260          	{
    261          		WM_DeleteWindow(hMoveBabyStepWnd);
   \   00000016   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    262          		//GUI_Exec();
    263          	}
    264          	
    265          	//GUI_Clear();
    266          }
   \                     ??Clear_babyStep_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x........         DC32     has_adjust_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \   00000000   0x........         DC32     buttonYI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_2:
   \   00000000   0x........         DC32     buttonZI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_3:
   \   00000000   0x........         DC32     buttonRet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_4:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_5:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_6:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_7:
   \   00000000   0x3D4CCCCD         DC32     0x3d4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_8:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_9:
   \   00000000   0x3C23D70A         DC32     0x3c23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_10:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_11:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_12:
   \   00000000   0x........         DC32     _Z18cbBabyStepMotorWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_13:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_14:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_15:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_16:
   \   00000000   0x........         DC32     move_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_17:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_18:
   \   00000000   0x........         DC32     zprobe_zoffset

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "M290 X%.3f">`:
   \   00000000   0x4D 0x32          DC8 "M290 X%.3f"
   \              0x39 0x30    
   \              0x20 0x58    
   \              0x25 0x2E    
   \              0x33 0x66    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "M290 X%.3f\\n">`:
   \   00000000   0x4D 0x32          DC8 "M290 X%.3f\012"
   \              0x39 0x30    
   \              0x20 0x58    
   \              0x25 0x2E    
   \              0x33 0x66    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "M290 Y%.3f\\n">`:
   \   00000000   0x4D 0x32          DC8 "M290 Y%.3f\012"
   \              0x39 0x30    
   \              0x20 0x59    
   \              0x25 0x2E    
   \              0x33 0x66    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "M290 Z%.3f">`:
   \   00000000   0x4D 0x32          DC8 "M290 Z%.3f"
   \              0x39 0x30    
   \              0x20 0x5A    
   \              0x25 0x2E    
   \              0x33 0x66    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_xAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_xAdd.bin"
   \              0x70 0x5F    
   \              0x78 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_xDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_xDec.bin"
   \              0x70 0x5F    
   \              0x78 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_yAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_yAdd.bin"
   \              0x70 0x5F    
   \              0x79 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_yDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_yDec.bin"
   \              0x70 0x5F    
   \              0x79 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zAdd.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zAdd.bin"
   \              0x70 0x5F    
   \              0x7A 0x41    
   \              0x64 0x64    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zDec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zDec.bin"
   \              0x70 0x5F    
   \              0x7A 0x44    
   \              0x65 0x63    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "offset Z: %6.3f">`:
   \   00000000   0x6F 0x66          DC8 "offset Z: %6.3f"
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x20 0x5A    
   \              0x3A 0x20    
   \              0x25 0x36    
   \              0x2E 0x33    
   \              0x66 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move0_01.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move0_01.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x30    
   \              0x5F 0x30    
   \              0x31 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move0_05.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move0_05.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x30    
   \              0x5F 0x30    
   \              0x35 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step_move0_1.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step_move0_1.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x5F 0x6D    
   \              0x6F 0x76    
   \              0x65 0x30    
   \              0x5F 0x31    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    267          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_babyStep
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      48   cbBabyStepMotorWin(WM_MESSAGE *)
        48   -> GUI_SetBkColor
        48   -> WM_DefaultProc
        48   -> WM_DeleteWindow
        48   -> WM_IsWindow
        48   -> __aeabi_f2d
        48   -> __aeabi_f2iz
        48   -> __aeabi_fmul
        48   -> __aeabi_memclr4
        48   -> disp_babystep_dist
        48   -> draw_return_ui
        48   -> excute_m290
        48   -> excute_m500
        48   -> sprintf
      16   disp_babystep_dist
        16   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
      32   disp_z_offset_value
        32   -> GUI_DispStringAt
        32   -> GUI_FillRect
        32   -> GUI_SetColor
        32   -> __aeabi_f2d
        32   -> __aeabi_memclr4
        32   -> sprintf
      56   draw_babyStep
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> creat_title_text
         0   -> disp_babystep_dist
        56   -> disp_z_offset_value


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "M290 X%.3f">
      12  ?<Constant "M290 X%.3f\n">
      12  ?<Constant "M290 Y%.3f\n">
      12  ?<Constant "M290 Z%.3f">
      16  ?<Constant "bmp_return.bin">
      24  ?<Constant "bmp_step_move0_01.bin">
      24  ?<Constant "bmp_step_move0_05.bin">
      24  ?<Constant "bmp_step_move0_1.bin">
      16  ?<Constant "bmp_xAdd.bin">
      16  ?<Constant "bmp_xDec.bin">
      16  ?<Constant "bmp_yAdd.bin">
      16  ?<Constant "bmp_yDec.bin">
      16  ?<Constant "bmp_zAdd.bin">
      16  ?<Constant "bmp_zDec.bin">
      16  ?<Constant "offset Z: %6.3f">
      32  ?<Constant {'\000'}>
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_10
       4  ??DataTable20_11
       4  ??DataTable20_12
       4  ??DataTable20_13
       4  ??DataTable20_14
       4  ??DataTable20_15
       4  ??DataTable20_16
       4  ??DataTable20_17
       4  ??DataTable20_18
       4  ??DataTable20_2
       4  ??DataTable20_3
       4  ??DataTable20_4
       4  ??DataTable20_5
       4  ??DataTable20_6
       4  ??DataTable20_7
       4  ??DataTable20_8
       4  ??DataTable20_9
      36  Clear_babyStep
      24  buttonRet
      48  buttonYI
          buttonYD
      48  buttonZI
          buttonZD
     406  cbBabyStepMotorWin(WM_MESSAGE *)
     122  disp_babystep_dist
      80  disp_z_offset_value
     730  draw_babyStep
      80  has_adjust_z
          hMoveBabyStepWnd
          buttonXI
          buttonXD
          buttonV
          babystep_dist
       1  -- Other

 
   120 bytes in section .bss
    80 bytes in section .data
    33 bytes in section .rodata
 1 698 bytes in section .text
 
 1 698 bytes of CODE  memory
    32 bytes of CONST memory (+ 1 byte shared)
   200 bytes of DATA  memory

Errors: none
Warnings: 33
