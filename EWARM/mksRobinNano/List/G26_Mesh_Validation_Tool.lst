###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  10:56:46
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\G26_Mesh_Validation_Tool.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\G26_Mesh_Validation_Tool.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp
      1          /**
      2           * Marlin 3D Printer Firmware
      3           * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
      4           *
      5           * Based on Sprinter and grbl.
      6           * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
      7           *
      8           * This program is free software: you can redistribute it and/or modify
      9           * it under the terms of the GNU General Public License as published by
     10           * the Free Software Foundation, either version 3 of the License, or
     11           * (at your option) any later version.
     12           *
     13           * This program is distributed in the hope that it will be useful,
     14           * but WITHOUT ANY WARRANTY; without even the implied warranty of
     15           * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License
     19           * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     20           *
     21           */
     22          
     23          /**
     24           * Marlin Firmware -- G26 - Mesh Validation Tool
     25           */
     26          
     27          #include "MarlinConfig.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once
     28          
     29          #if 1//ENABLED(G26_MESH_VALIDATION)
     30          
     31            #include "Marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

   \                                 In section .text, align 4
   \   __interwork __softfp void serialprintPGM(char const *)
   \                     _Z14serialprintPGMPKc: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4D05             LDR.N    R5,??serialprintPGM_0
   \   00000006   0xE003             B.N      ??serialprintPGM_1
   \                     ??serialprintPGM_2: (+1)
   \   00000008   0xB2C9             UXTB     R1,R1
   \   0000000A   0x4628             MOV      R0,R5
   \   0000000C   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \                     ??serialprintPGM_1: (+1)
   \   00000010   0xF914 0x1B01      LDRSB    R1,[R4], #+1
   \   00000014   0x0008             MOVS     R0,R1
   \   00000016   0xD1F7             BNE.N    ??serialprintPGM_2
   \   00000018   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??serialprintPGM_0:
   \   0000001C   0x........         DC32     Serial3

   \                                 In section .text, align 4
   \   __interwork __softfp bool position_is_reachable_IS_KINEMATIC(float const &, float const &)
   \                     _Z34position_is_reachable_IS_KINEMATICRKfS0_: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x4842             LDR.N    R0,??position_is_reachable_IS_KINEMATIC_0
   \   00000008   0x460C             MOV      R4,R1
   \   0000000A   0xF9B0 0x1058      LDRSH    R1,[R0, #+88]
   \   0000000E   0x078A             LSLS     R2,R1,#+30
   \   00000010   0xD527             BPL.N    ??position_is_reachable_IS_KINEMATIC_1
   \   00000012   0x6D46             LDR      R6,[R0, #+84]
   \   00000014   0xF04F 0x587E      MOV      R8,#+1065353216
   \   00000018   0x2702             MOVS     R7,#+2
   \   0000001A   0x46C1             MOV      R9,R8
   \   0000001C   0xE004             B.N      ??position_is_reachable_IS_KINEMATIC_2
   \                     ??position_is_reachable_IS_KINEMATIC_3: (+1)
   \   0000001E   0x4630             MOV      R0,R6
   \   00000020   0x4631             MOV      R1,R6
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x4606             MOV      R6,R0
   \                     ??position_is_reachable_IS_KINEMATIC_2: (+1)
   \   00000028   0x07F8             LSLS     R0,R7,#+31
   \   0000002A   0xD504             BPL.N    ??position_is_reachable_IS_KINEMATIC_4
   \   0000002C   0x4648             MOV      R0,R9
   \   0000002E   0x4631             MOV      R1,R6
   \   00000030   0x.... 0x....      BL       __aeabi_fmul
   \   00000034   0x4681             MOV      R9,R0
   \                     ??position_is_reachable_IS_KINEMATIC_4: (+1)
   \   00000036   0x087F             LSRS     R7,R7,#+1
   \   00000038   0xD1F1             BNE.N    ??position_is_reachable_IS_KINEMATIC_3
   \   0000003A   0x682E             LDR      R6,[R5, #+0]
   \   0000003C   0x2702             MOVS     R7,#+2
   \   0000003E   0x4645             MOV      R5,R8
   \   00000040   0xE004             B.N      ??position_is_reachable_IS_KINEMATIC_5
   \                     ??position_is_reachable_IS_KINEMATIC_6: (+1)
   \   00000042   0x4630             MOV      R0,R6
   \   00000044   0x4631             MOV      R1,R6
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x4606             MOV      R6,R0
   \                     ??position_is_reachable_IS_KINEMATIC_5: (+1)
   \   0000004C   0x07F8             LSLS     R0,R7,#+31
   \   0000004E   0xD504             BPL.N    ??position_is_reachable_IS_KINEMATIC_7
   \   00000050   0x4628             MOV      R0,R5
   \   00000052   0x4631             MOV      R1,R6
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x4605             MOV      R5,R0
   \                     ??position_is_reachable_IS_KINEMATIC_7: (+1)
   \   0000005A   0x087F             LSRS     R7,R7,#+1
   \   0000005C   0xD1F1             BNE.N    ??position_is_reachable_IS_KINEMATIC_6
   \   0000005E   0x6824             LDR      R4,[R4, #+0]
   \   00000060   0xE038             B.N      ??position_is_reachable_IS_KINEMATIC_8
   \                     ??position_is_reachable_IS_KINEMATIC_1: (+1)
   \   00000062   0xF44F 0x7040      MOV      R0,#+768
   \   00000066   0x4201             TST      R1,R0
   \   00000068   0xD04F             BEQ.N    ??position_is_reachable_IS_KINEMATIC_9
   \   0000006A   0x482A             LDR.N    R0,??position_is_reachable_IS_KINEMATIC_0+0x4
   \   0000006C   0x6801             LDR      R1,[R0, #+0]
   \   0000006E   0x482A             LDR.N    R0,??position_is_reachable_IS_KINEMATIC_0+0x8
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x.... 0x....      BL       __aeabi_fadd
   \   00000076   0xF04F 0x587E      MOV      R8,#+1065353216
   \   0000007A   0x4606             MOV      R6,R0
   \   0000007C   0x2702             MOVS     R7,#+2
   \   0000007E   0x46C1             MOV      R9,R8
   \   00000080   0xE004             B.N      ??position_is_reachable_IS_KINEMATIC_10
   \                     ??position_is_reachable_IS_KINEMATIC_11: (+1)
   \   00000082   0x4630             MOV      R0,R6
   \   00000084   0x4631             MOV      R1,R6
   \   00000086   0x.... 0x....      BL       __aeabi_fmul
   \   0000008A   0x4606             MOV      R6,R0
   \                     ??position_is_reachable_IS_KINEMATIC_10: (+1)
   \   0000008C   0x07F8             LSLS     R0,R7,#+31
   \   0000008E   0xD504             BPL.N    ??position_is_reachable_IS_KINEMATIC_12
   \   00000090   0x4648             MOV      R0,R9
   \   00000092   0x4631             MOV      R1,R6
   \   00000094   0x.... 0x....      BL       __aeabi_fmul
   \   00000098   0x4681             MOV      R9,R0
   \                     ??position_is_reachable_IS_KINEMATIC_12: (+1)
   \   0000009A   0x087F             LSRS     R7,R7,#+1
   \   0000009C   0xD1F1             BNE.N    ??position_is_reachable_IS_KINEMATIC_11
   \   0000009E   0x6829             LDR      R1,[R5, #+0]
   \   000000A0   0x481E             LDR.N    R0,??position_is_reachable_IS_KINEMATIC_0+0xC  ;; 0xc2c80000
   \   000000A2   0x.... 0x....      BL       __aeabi_fadd
   \   000000A6   0x4606             MOV      R6,R0
   \   000000A8   0x2702             MOVS     R7,#+2
   \   000000AA   0x4645             MOV      R5,R8
   \   000000AC   0xE004             B.N      ??position_is_reachable_IS_KINEMATIC_13
   \                     ??position_is_reachable_IS_KINEMATIC_14: (+1)
   \   000000AE   0x4630             MOV      R0,R6
   \   000000B0   0x4631             MOV      R1,R6
   \   000000B2   0x.... 0x....      BL       __aeabi_fmul
   \   000000B6   0x4606             MOV      R6,R0
   \                     ??position_is_reachable_IS_KINEMATIC_13: (+1)
   \   000000B8   0x07F8             LSLS     R0,R7,#+31
   \   000000BA   0xD504             BPL.N    ??position_is_reachable_IS_KINEMATIC_15
   \   000000BC   0x4628             MOV      R0,R5
   \   000000BE   0x4631             MOV      R1,R6
   \   000000C0   0x.... 0x....      BL       __aeabi_fmul
   \   000000C4   0x4605             MOV      R5,R0
   \                     ??position_is_reachable_IS_KINEMATIC_15: (+1)
   \   000000C6   0x087F             LSRS     R7,R7,#+1
   \   000000C8   0xD1F1             BNE.N    ??position_is_reachable_IS_KINEMATIC_14
   \   000000CA   0x6821             LDR      R1,[R4, #+0]
   \   000000CC   0x4814             LDR.N    R0,??position_is_reachable_IS_KINEMATIC_0+0x10  ;; 0x42600000
   \   000000CE   0x.... 0x....      BL       __aeabi_fadd
   \   000000D2   0x4604             MOV      R4,R0
   \                     ??position_is_reachable_IS_KINEMATIC_8: (+1)
   \   000000D4   0x2602             MOVS     R6,#+2
   \   000000D6   0xE004             B.N      ??position_is_reachable_IS_KINEMATIC_16
   \                     ??position_is_reachable_IS_KINEMATIC_17: (+1)
   \   000000D8   0x4620             MOV      R0,R4
   \   000000DA   0x4621             MOV      R1,R4
   \   000000DC   0x.... 0x....      BL       __aeabi_fmul
   \   000000E0   0x4604             MOV      R4,R0
   \                     ??position_is_reachable_IS_KINEMATIC_16: (+1)
   \   000000E2   0x07F0             LSLS     R0,R6,#+31
   \   000000E4   0xD504             BPL.N    ??position_is_reachable_IS_KINEMATIC_18
   \   000000E6   0x4640             MOV      R0,R8
   \   000000E8   0x4621             MOV      R1,R4
   \   000000EA   0x.... 0x....      BL       __aeabi_fmul
   \   000000EE   0x4680             MOV      R8,R0
   \                     ??position_is_reachable_IS_KINEMATIC_18: (+1)
   \   000000F0   0x0876             LSRS     R6,R6,#+1
   \   000000F2   0xD1F1             BNE.N    ??position_is_reachable_IS_KINEMATIC_17
   \   000000F4   0x4628             MOV      R0,R5
   \   000000F6   0x4641             MOV      R1,R8
   \   000000F8   0x.... 0x....      BL       __aeabi_fadd
   \   000000FC   0x4601             MOV      R1,R0
   \   000000FE   0x4648             MOV      R0,R9
   \   00000100   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000104   0xBF94             ITE      LS 
   \   00000106   0x2001             MOVLS    R0,#+1
   \   00000108   0x2000             MOVHI    R0,#+0

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
   \                     ??position_is_reachable_IS_KINEMATIC_9: (+1)
   \   0000010A   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
   \   0000010E   0xBF00             Nop      
   \                     ??position_is_reachable_IS_KINEMATIC_0:
   \   00000110   0x........         DC32     mksCfg
   \   00000114   0x........         DC32     L1
   \   00000118   0x........         DC32     L2
   \   0000011C   0xC2C80000         DC32     0xc2c80000
   \   00000120   0x42600000         DC32     0x42600000

   \                                 In section .text, align 4
   \   __interwork __softfp bool position_is_reachable_IS_CARTESIAN(float const &, float const &)
   \                     _Z34position_is_reachable_IS_CARTESIANRKfS0_: (+1)
   \   00000000   0xE92D 0x4BFC      PUSH     {R2-R9,R11,LR}
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x460F             MOV      R7,R1
   \   00000008   0x.... 0x....      BL       __aeabi_f2d
   \   0000000C   0x4E23             LDR.N    R6,??position_is_reachable_IS_CARTESIAN_0
   \   0000000E   0xF8DF 0x8090      LDR.W    R8,??position_is_reachable_IS_CARTESIAN_0+0x4  ;; 0xd2f1a9fc
   \   00000012   0xF8DF 0x9090      LDR.W    R9,??position_is_reachable_IS_CARTESIAN_0+0x8  ;; 0xbf50624d
   \   00000016   0x4604             MOV      R4,R0
   \   00000018   0x68B0             LDR      R0,[R6, #+8]
   \   0000001A   0x460D             MOV      R5,R1
   \   0000001C   0x.... 0x....      BL       __aeabi_f2d
   \   00000020   0x4642             MOV      R2,R8
   \   00000022   0x464B             MOV      R3,R9
   \   00000024   0x.... 0x....      BL       __aeabi_dadd
   \   00000028   0x4602             MOV      R2,R0
   \   0000002A   0x460B             MOV      R3,R1
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000034   0xD82E             BHI.N    ??position_is_reachable_IS_CARTESIAN_1
   \   00000036   0x6970             LDR      R0,[R6, #+20]
   \   00000038   0xF8DF 0xB06C      LDR.W    R11,??position_is_reachable_IS_CARTESIAN_0+0xC  ;; 0x3f50624d
   \   0000003C   0x.... 0x....      BL       __aeabi_f2d
   \   00000040   0x4642             MOV      R2,R8
   \   00000042   0x465B             MOV      R3,R11
   \   00000044   0x.... 0x....      BL       __aeabi_dadd
   \   00000048   0x4622             MOV      R2,R4
   \   0000004A   0x462B             MOV      R3,R5
   \   0000004C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000050   0xD820             BHI.N    ??position_is_reachable_IS_CARTESIAN_1
   \   00000052   0x6838             LDR      R0,[R7, #+0]
   \   00000054   0x.... 0x....      BL       __aeabi_f2d
   \   00000058   0x4604             MOV      R4,R0
   \   0000005A   0x68F0             LDR      R0,[R6, #+12]
   \   0000005C   0x460D             MOV      R5,R1
   \   0000005E   0x.... 0x....      BL       __aeabi_f2d
   \   00000062   0x4642             MOV      R2,R8
   \   00000064   0x464B             MOV      R3,R9
   \   00000066   0x.... 0x....      BL       __aeabi_dadd
   \   0000006A   0x4602             MOV      R2,R0
   \   0000006C   0x460B             MOV      R3,R1
   \   0000006E   0x4620             MOV      R0,R4
   \   00000070   0x4629             MOV      R1,R5
   \   00000072   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000076   0xD80D             BHI.N    ??position_is_reachable_IS_CARTESIAN_1
   \   00000078   0x69B0             LDR      R0,[R6, #+24]
   \   0000007A   0x.... 0x....      BL       __aeabi_f2d
   \   0000007E   0x4642             MOV      R2,R8
   \   00000080   0x465B             MOV      R3,R11
   \   00000082   0x.... 0x....      BL       __aeabi_dadd
   \   00000086   0x4622             MOV      R2,R4
   \   00000088   0x462B             MOV      R3,R5
   \   0000008A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000008E   0xBF98             IT       LS 
   \   00000090   0x2001             MOVLS    R0,#+1
   \   00000092   0xD900             BLS.N    ??position_is_reachable_IS_CARTESIAN_2
   \                     ??position_is_reachable_IS_CARTESIAN_1: (+1)
   \   00000094   0x2000             MOVS     R0,#+0
   \                     ??position_is_reachable_IS_CARTESIAN_2: (+1)
   \   00000096   0xE8BD 0x8BF6      POP      {R1,R2,R4-R9,R11,PC}  ;; return
   \   0000009A   0xBF00             Nop      
   \                     ??position_is_reachable_IS_CARTESIAN_0:
   \   0000009C   0x........         DC32     mksCfg
   \   000000A0   0xD2F1A9FC         DC32     0xd2f1a9fc
   \   000000A4   0xBF50624D         DC32     0xbf50624d
   \   000000A8   0x3F50624D         DC32     0x3f50624d
     32            #include "planner.h"

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless
     33            #include "stepper.h"
     34            #include "temperature.h"

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

   \                                 In section .text, align 4
   \   __interwork __softfp void Temperature::setTargetBed(float)
   \                     _ZN11Temperature12setTargetBedEf: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4809             LDR.N    R0,??setTargetBed_0
   \   00000006   0xF9B0 0x5032      LDRSH    R5,[R0, #+50]
   \   0000000A   0x4628             MOV      R0,R5
   \   0000000C   0x.... 0x....      BL       __aeabi_i2f
   \   00000010   0x4601             MOV      R1,R0
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000018   0xD202             BCS.N    ??setTargetBed_1
   \   0000001A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000001E   0x4605             MOV      R5,R0
   \                     ??setTargetBed_1: (+1)
   \   00000020   0x4803             LDR.N    R0,??setTargetBed_0+0x4
   \   00000022   0x8005             STRH     R5,[R0, #+0]

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer
   \   00000024   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   00000028   0x.... 0x....      B.W      _ZN11Temperature18start_watching_bedEv
   \                     ??setTargetBed_0:
   \   0000002C   0x........         DC32     mksCfg
   \   00000030   0x........         DC32     _ZN11Temperature22target_temperature_bedE
     35            #include "ultralcd.h"
     36            #include "gcode.h"

   \                                 In section .text, align 4
   \   __interwork __softfp bool GCodeParser::seen(char)
   \                     _ZN11GCodeParser4seenEc: (+1)
   \   00000000   0xF1A0 0x0141      SUB      R1,R0,#+65
   \   00000004   0xB2C9             UXTB     R1,R1
   \   00000006   0x291A             CMP      R1,#+26
   \   00000008   0xD301             BCC.N    ??seen_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x4770             BX       LR
   \                     ??seen_0: (+1)
   \   0000000E   0x08C8             LSRS     R0,R1,#+3
   \   00000010   0x4A08             LDR.N    R2,??seen_1
   \   00000012   0x5C80             LDRB     R0,[R0, R2]
   \   00000014   0xF001 0x0207      AND      R2,R1,#0x7
   \   00000018   0x40D0             LSRS     R0,R0,R2
   \   0000001A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000001E   0xD007             BEQ.N    ??seen_2
   \   00000020   0x4A05             LDR.N    R2,??seen_1+0x4
   \   00000022   0x5C89             LDRB     R1,[R1, R2]
   \   00000024   0x4A05             LDR.N    R2,??seen_1+0x8
   \   00000026   0xB111             CBZ.N    R1,??seen_3
   \   00000028   0x4B05             LDR.N    R3,??seen_1+0xC
   \   0000002A   0x681B             LDR      R3,[R3, #+0]
   \   0000002C   0x18C9             ADDS     R1,R1,R3
   \                     ??seen_3: (+1)
   \   0000002E   0x6011             STR      R1,[R2, #+0]
   \                     ??seen_2: (+1)
   \   00000030   0x4770             BX       LR               ;; return
   \   00000032   0xBF00             Nop      
   \                     ??seen_1:
   \   00000034   0x........         DC32     _ZN11GCodeParser8codebitsE
   \   00000038   0x........         DC32     _ZN11GCodeParser5paramE
   \   0000003C   0x........         DC32     _ZN11GCodeParser9value_ptrE
   \   00000040   0x........         DC32     _ZN11GCodeParser11command_ptrE

   \                                 In section .text, align 4
   \   __interwork __softfp float GCodeParser::value_float()
   \                     _ZN11GCodeParser11value_floatEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4B11             LDR.N    R3,??value_float_0
   \   00000004   0x6818             LDR      R0,[R3, #+0]
   \   00000006   0xB1E8             CBZ.N    R0,??value_float_1
   \   00000008   0x4604             MOV      R4,R0
   \   0000000A   0xE000             B.N      ??value_float_2
   \                     ??value_float_3: (+1)
   \   0000000C   0x1C64             ADDS     R4,R4,#+1
   \                     ??value_float_2: (+1)
   \   0000000E   0xF994 0x5000      LDRSB    R5,[R4, #+0]
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xBF18             IT       NE 
   \   00000016   0x2D20             CMPNE    R5,#+32
   \   00000018   0xD104             BNE.N    ??value_float_4
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x.... 0x....      BL       __iar_Stod
   \   00000022   0xE00B             B.N      ??value_float_5
   \                     ??value_float_4: (+1)
   \   00000024   0x2D45             CMP      R5,#+69
   \   00000026   0xBF18             IT       NE 
   \   00000028   0x2D65             CMPNE    R5,#+101
   \   0000002A   0xD1EF             BNE.N    ??value_float_3
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x7020             STRB     R0,[R4, #+0]
   \   00000030   0x4601             MOV      R1,R0
   \   00000032   0x6818             LDR      R0,[R3, #+0]
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x.... 0x....      BL       __iar_Stod
   \   0000003A   0x7025             STRB     R5,[R4, #+0]
   \                     ??value_float_5: (+1)
   \   0000003C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000040   0x.... 0x....      B.W      __aeabi_d2f
   \                     ??value_float_1: (+1)
   \   00000044   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \   00000046   0xBF00             Nop      
   \                     ??value_float_0:
   \   00000048   0x........         DC32     _ZN11GCodeParser9value_ptrE

   \                                 In section .text, align 4
   \   __interwork __softfp int32_t GCodeParser::value_long()
   \                     _ZN11GCodeParser10value_longEv: (+1)
   \   00000000   0x4804             LDR.N    R0,??value_long_0
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xB120             CBZ.N    R0,??value_long_1
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x220A             MOVS     R2,#+10
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x.... 0x....      B.W      __iar_Stolx
   \                     ??value_long_1: (+1)
   \   00000010   0x4770             BX       LR               ;; return
   \   00000012   0xBF00             Nop      
   \                     ??value_long_0:
   \   00000014   0x........         DC32     _ZN11GCodeParser9value_ptrE

    FORCE_INLINE static millis_t value_millis_from_seconds() { return value_float() * 1000UL; }
                                                                      ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\gcode.h",207  Warning[Pa093]: 
          implicit conversion from floating point to integer

   \                                 In section .text, align 4
   \   __interwork __softfp bool GCodeParser::boolval(char)
   \                     _ZN11GCodeParser7boolvalEc: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x.... 0x....      BL       _ZN11GCodeParser4seenEc
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xBF1E             ITTT     NE 
   \   0000000C   0x4D14             LDRNE.N  R5,??boolval_0
   \   0000000E   0x6828             LDRNE    R0,[R5, #+0]
   \   00000010   0x2800             CMPNE    R0,#+0
   \   00000012   0xD005             BEQ.N    ??boolval_1
   \   00000014   0x.... 0x....      BL       _ZN11GCodeParser10value_longEv
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD506             BPL.N    ??boolval_2
   \                     ??boolval_3: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xBD32             POP      {R1,R4,R5,PC}
   \                     ??boolval_1: (+1)
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \   00000026   0x.... 0x....      B.W      _ZN11GCodeParser4seenEc
   \                     ??boolval_2: (+1)
   \   0000002A   0x6828             LDR      R0,[R5, #+0]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD0F5             BEQ.N    ??boolval_3
   \   00000030   0x2300             MOVS     R3,#+0
   \   00000032   0x220A             MOVS     R2,#+10
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x.... 0x....      BL       __iar_Stolx
   \   0000003A   0x28FF             CMP      R0,#+255
   \   0000003C   0xDC0D             BGT.N    ??boolval_4
   \   0000003E   0x6828             LDR      R0,[R5, #+0]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD0EB             BEQ.N    ??boolval_3
   \   00000044   0x2300             MOVS     R3,#+0
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x.... 0x....      BL       __iar_Stolx
   \   0000004E   0xB2C0             UXTB     R0,R0
   \   00000050   0x1E40             SUBS     R0,R0,#+1
   \   00000052   0x4180             SBCS     R0,R0,R0
   \   00000054   0x43C0             MVNS     R0,R0
   \   00000056   0x0FC0             LSRS     R0,R0,#+31
   \   00000058   0xBD32             POP      {R1,R4,R5,PC}
   \                     ??boolval_4: (+1)
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \   0000005E   0xBF00             Nop      
   \                     ??boolval_0:
   \   00000060   0x........         DC32     _ZN11GCodeParser9value_ptrE
     37            #include "bitmap_flags.h"
     38          
     39            //#if ENABLED(MESH_BED_LEVELING)
     40              #include "mesh_bed_leveling.h"

  				cx= (x - (MESH_MIN_X_IS_KINEMATIC)) * (1.0 / (MESH_X_DIST_IS_KINEMATIC));
  				  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",83  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				cx= (x - (MESH_MIN_X_IS_Cartesian)) * (1.0 / (MESH_X_DIST_IS_Cartesian));
  				  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",87  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				cy= (y - (MESH_MIN_Y_IS_KINEMATIC)) * (1.0 / (MESH_Y_DIST_IS_KINEMATIC));
  				  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",95  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				cy= (y - (MESH_MIN_Y_IS_Cartesian)) * (1.0 / (MESH_Y_DIST_IS_Cartesian));
  				  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",97  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				px = (x - (MESH_MIN_X_IS_KINEMATIC) + 0.5 * (MESH_X_DIST_IS_KINEMATIC)) * (1.0 / (MESH_X_DIST_IS_KINEMATIC));
  				   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",105  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				px = (x - (MESH_MIN_X_IS_Cartesian) + 0.5 * (MESH_X_DIST_IS_Cartesian)) * (1.0 / (MESH_X_DIST_IS_Cartesian));
  				   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",107  Warning[Pa093]: 
          implicit conversion from floating point to integer

        	py = (y - (MESH_MIN_Y_IS_KINEMATIC) + 0.5 * (MESH_Y_DIST_IS_KINEMATIC)) * (1.0 / (MESH_Y_DIST_IS_KINEMATIC));
        	   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",115  Warning[Pa093]: 
          implicit conversion from floating point to integer

  				py = (y - (MESH_MIN_Y_IS_Cartesian) + 0.5 * (MESH_Y_DIST_IS_Cartesian)) * (1.0 / (MESH_Y_DIST_IS_Cartesian));
  				   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\mesh_bed_leveling.h",117  Warning[Pa093]: 
          implicit conversion from floating point to integer
     41            //#elif ENABLED(AUTO_BED_LEVELING_UBL)
     42              #include "ubl.h"

  	#define MESH_X_DIST_IS_KINEMATIC (float(MESH_MAX_X_IS_KINEMATIC - (MESH_MIN_X_IS_KINEMATIC)) / float(GRID_MAX_POINTS_X - 1))
  	        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",74  Warning[Pe047]: 
          incompatible redefinition of macro "MESH_X_DIST_IS_KINEMATIC"
          (declared at line 41 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\mesh_bed_leveling.h")

  	#define MESH_Y_DIST_IS_KINEMATIC (float(MESH_MAX_Y_IS_KINEMATIC - (MESH_MIN_Y_IS_KINEMATIC)) / float(GRID_MAX_POINTS_Y - 1))
  	        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",75  Warning[Pe047]: 
          incompatible redefinition of macro "MESH_Y_DIST_IS_KINEMATIC"
          (declared at line 42 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\mesh_bed_leveling.h")

  	#define MESH_X_DIST_IS_Cartesian (float(MESH_MAX_X_IS_Cartesian - (MESH_MIN_X_IS_Cartesian)) / float(GRID_MAX_POINTS_X - 1))
  	        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",76  Warning[Pe047]: 
          incompatible redefinition of macro "MESH_X_DIST_IS_Cartesian"
          (declared at line 43 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\mesh_bed_leveling.h")

  	#define MESH_Y_DIST_IS_Cartesian (float(MESH_MAX_Y_IS_Cartesian - (MESH_MIN_Y_IS_Cartesian)) / float(GRID_MAX_POINTS_Y - 1))
  	        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",77  Warning[Pe047]: 
          incompatible redefinition of macro "MESH_Y_DIST_IS_Cartesian"
          (declared at line 44 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\mesh_bed_leveling.h")

          	cx = (x - (MESH_MIN_X_IS_KINEMATIC)) * (1.0 / (MESH_X_DIST_IS_KINEMATIC));
          	   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",182  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					cx = (x - (MESH_MIN_X_IS_Cartesian)) * (1.0 / (MESH_X_DIST_IS_Cartesian));
  					   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",184  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					cy = (y - (MESH_MIN_Y_IS_KINEMATIC)) * (1.0 / (MESH_Y_DIST_IS_KINEMATIC));
  					   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",195  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					cy = (y - (MESH_MIN_Y_IS_Cartesian)) * (1.0 / (MESH_Y_DIST_IS_Cartesian));
  					   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",197  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					px= (x - (MESH_MIN_X_IS_KINEMATIC) + (MESH_X_DIST_IS_KINEMATIC) * 0.5) * (1.0 / (MESH_X_DIST_IS_KINEMATIC));
  					  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",208  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					px= (x - (MESH_MIN_X_IS_Cartesian) + (MESH_X_DIST_IS_Cartesian) * 0.5) * (1.0 / (MESH_X_DIST_IS_Cartesian));
  					  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",210  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					py = (y - (MESH_MIN_Y_IS_KINEMATIC) + (MESH_Y_DIST_IS_KINEMATIC) * 0.5) * (1.0 / (MESH_Y_DIST_IS_KINEMATIC));
  					   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",219  Warning[Pa093]: 
          implicit conversion from floating point to integer

  					py = (y - (MESH_MIN_Y_IS_Cartesian) + (MESH_Y_DIST_IS_Cartesian) * 0.5) * (1.0 / (MESH_Y_DIST_IS_Cartesian));
  					   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\ubl.h",221  Warning[Pa093]: 
          implicit conversion from floating point to integer

   \                                 In section .text, align 4
   \   __interwork __softfp float unified_bed_leveling::mesh_index_to_xpos(uint8_t)
   \                     _ZN20unified_bed_leveling18mesh_index_to_xposEh: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x4E40             LDR.N    R6,??mesh_index_to_xpos_0
   \   00000008   0xF896 0x7060      LDRB     R7,[R6, #+96]
   \   0000000C   0xF106 0x0008      ADD      R0,R6,#+8
   \   00000010   0xF240 0x3202      MOVW     R2,#+770
   \   00000014   0xF8B0 0x1050      LDRH     R1,[R0, #+80]
   \   00000018   0x4211             TST      R1,R2
   \   0000001A   0xD021             BEQ.N    ??mesh_index_to_xpos_1
   \   0000001C   0x45B8             CMP      R8,R7
   \   0000001E   0xD321             BCC.N    ??mesh_index_to_xpos_2
   \   00000020   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000024   0x.... 0x....      BL       __aeabi_ui2f
   \   00000028   0x4C38             LDR.N    R4,??mesh_index_to_xpos_0+0x4
   \   0000002A   0x4605             MOV      R5,R0
   \   0000002C   0x6820             LDR      R0,[R4, #+0]
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x.... 0x....      BL       __aeabi_fadd
   \   00000034   0x4606             MOV      R6,R0
   \   00000036   0x4640             MOV      R0,R8
   \   00000038   0x.... 0x....      BL       __aeabi_ui2f
   \   0000003C   0x4680             MOV      R8,R0
   \   0000003E   0x6860             LDR      R0,[R4, #+4]
   \   00000040   0x4629             MOV      R1,R5
   \   00000042   0x.... 0x....      BL       __aeabi_fsub
   \   00000046   0x4631             MOV      R1,R6
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x4604             MOV      R4,R0
   \   0000004E   0x1E78             SUBS     R0,R7,#+1
   \   00000050   0x.... 0x....      BL       __aeabi_i2f
   \   00000054   0x4601             MOV      R1,R0
   \   00000056   0x4620             MOV      R0,R4
   \   00000058   0x.... 0x....      BL       __aeabi_fdiv
   \   0000005C   0x4641             MOV      R1,R8
   \   0000005E   0xE04C             B.N      ??mesh_index_to_xpos_3
   \                     ??mesh_index_to_xpos_1: (+1)
   \   00000060   0x45B8             CMP      R8,R7
   \   00000062   0xD204             BCS.N    ??mesh_index_to_xpos_4
   \                     ??mesh_index_to_xpos_2: (+1)
   \   00000064   0x482A             LDR.N    R0,??mesh_index_to_xpos_0+0x8
   \   00000066   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000006A   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}
   \                     ??mesh_index_to_xpos_4: (+1)
   \   0000006E   0x68C5             LDR      R5,[R0, #+12]
   \   00000070   0xF04F 0x507C      MOV      R0,#+1056964608
   \   00000074   0x4629             MOV      R1,R5
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x4681             MOV      R9,R0
   \   0000007C   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000080   0x.... 0x....      BL       __aeabi_ui2f
   \   00000084   0x4682             MOV      R10,R0
   \   00000086   0x4648             MOV      R0,R9
   \   00000088   0x4649             MOV      R1,R9
   \   0000008A   0x.... 0x....      BL       __aeabi_fsub
   \   0000008E   0x4651             MOV      R1,R10
   \   00000090   0x.... 0x....      BL       __aeabi_fadd
   \   00000094   0x4604             MOV      R4,R0
   \   00000096   0xF106 0x0060      ADD      R0,R6,#+96
   \   0000009A   0xF8D0 0xB00C      LDR      R11,[R0, #+12]
   \   0000009E   0x68B0             LDR      R0,[R6, #+8]
   \   000000A0   0x4659             MOV      R1,R11
   \   000000A2   0x.... 0x....      BL       __aeabi_fadd
   \   000000A6   0x4621             MOV      R1,R4
   \   000000A8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000AC   0x4606             MOV      R6,R0
   \   000000AE   0xBF38             IT       CC 
   \   000000B0   0x4626             MOVCC    R6,R4
   \   000000B2   0xF04F 0x4080      MOV      R0,#+1073741824
   \   000000B6   0x4649             MOV      R1,R9
   \   000000B8   0x.... 0x....      BL       __aeabi_fmul
   \   000000BC   0x4651             MOV      R1,R10
   \   000000BE   0x.... 0x....      BL       __aeabi_fsub
   \   000000C2   0x4604             MOV      R4,R0
   \   000000C4   0x4628             MOV      R0,R5
   \   000000C6   0x4659             MOV      R1,R11
   \   000000C8   0x.... 0x....      BL       __aeabi_fadd
   \   000000CC   0x4601             MOV      R1,R0
   \   000000CE   0x4620             MOV      R0,R4
   \   000000D0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000D4   0xBF28             IT       CS 
   \   000000D6   0x460C             MOVCS    R4,R1
   \   000000D8   0x4640             MOV      R0,R8
   \   000000DA   0x.... 0x....      BL       __aeabi_ui2f
   \   000000DE   0x4605             MOV      R5,R0
   \   000000E0   0x4620             MOV      R0,R4
   \   000000E2   0x4631             MOV      R1,R6
   \   000000E4   0x.... 0x....      BL       __aeabi_fsub
   \   000000E8   0x4604             MOV      R4,R0
   \   000000EA   0x1E78             SUBS     R0,R7,#+1
   \   000000EC   0x.... 0x....      BL       __aeabi_i2f
   \   000000F0   0x4601             MOV      R1,R0
   \   000000F2   0x4620             MOV      R0,R4
   \   000000F4   0x.... 0x....      BL       __aeabi_fdiv
   \   000000F8   0x4629             MOV      R1,R5
   \                     ??mesh_index_to_xpos_3: (+1)
   \   000000FA   0x.... 0x....      BL       __aeabi_fmul
   \   000000FE   0x4631             MOV      R1,R6
   \   00000100   0xE8BD 0x4FF4      POP      {R2,R4-R11,LR}
   \   00000104   0x.... 0x....      B.W      __aeabi_fadd
   \                     ??mesh_index_to_xpos_0:
   \   00000108   0x........         DC32     mksCfg
   \   0000010C   0x........         DC32     mksTmp
   \   00000110   0x........         DC32     _ZN20unified_bed_leveling19_mesh_index_to_xposE

   \                                 In section .text, align 4
   \   __interwork __softfp float unified_bed_leveling::mesh_index_to_ypos(uint8_t)
   \                     _ZN20unified_bed_leveling18mesh_index_to_yposEh: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x4E3F             LDR.N    R6,??mesh_index_to_ypos_0
   \   00000008   0xF896 0x7061      LDRB     R7,[R6, #+97]
   \   0000000C   0xF106 0x000C      ADD      R0,R6,#+12
   \   00000010   0xF240 0x3202      MOVW     R2,#+770
   \   00000014   0xF8B0 0x104C      LDRH     R1,[R0, #+76]
   \   00000018   0x4211             TST      R1,R2
   \   0000001A   0xD021             BEQ.N    ??mesh_index_to_ypos_1
   \   0000001C   0x45B8             CMP      R8,R7
   \   0000001E   0xD321             BCC.N    ??mesh_index_to_ypos_2
   \   00000020   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000024   0x.... 0x....      BL       __aeabi_ui2f
   \   00000028   0x4C37             LDR.N    R4,??mesh_index_to_ypos_0+0x4
   \   0000002A   0x4605             MOV      R5,R0
   \   0000002C   0x68A0             LDR      R0,[R4, #+8]
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x.... 0x....      BL       __aeabi_fadd
   \   00000034   0x4606             MOV      R6,R0
   \   00000036   0x4640             MOV      R0,R8
   \   00000038   0x.... 0x....      BL       __aeabi_ui2f
   \   0000003C   0x4680             MOV      R8,R0
   \   0000003E   0x68E0             LDR      R0,[R4, #+12]
   \   00000040   0x4629             MOV      R1,R5
   \   00000042   0x.... 0x....      BL       __aeabi_fsub
   \   00000046   0x4631             MOV      R1,R6
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x4604             MOV      R4,R0
   \   0000004E   0x1E78             SUBS     R0,R7,#+1
   \   00000050   0x.... 0x....      BL       __aeabi_i2f
   \   00000054   0x4601             MOV      R1,R0
   \   00000056   0x4620             MOV      R0,R4
   \   00000058   0x.... 0x....      BL       __aeabi_fdiv
   \   0000005C   0x4641             MOV      R1,R8
   \   0000005E   0xE04A             B.N      ??mesh_index_to_ypos_3
   \                     ??mesh_index_to_ypos_1: (+1)
   \   00000060   0x45B8             CMP      R8,R7
   \   00000062   0xD204             BCS.N    ??mesh_index_to_ypos_4
   \                     ??mesh_index_to_ypos_2: (+1)
   \   00000064   0x4829             LDR.N    R0,??mesh_index_to_ypos_0+0x8
   \   00000066   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000006A   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}
   \                     ??mesh_index_to_ypos_4: (+1)
   \   0000006E   0x68C5             LDR      R5,[R0, #+12]
   \   00000070   0xF04F 0x507C      MOV      R0,#+1056964608
   \   00000074   0x4629             MOV      R1,R5
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x4681             MOV      R9,R0
   \   0000007C   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000080   0x.... 0x....      BL       __aeabi_ui2f
   \   00000084   0x4682             MOV      R10,R0
   \   00000086   0x4648             MOV      R0,R9
   \   00000088   0x4649             MOV      R1,R9
   \   0000008A   0x.... 0x....      BL       __aeabi_fsub
   \   0000008E   0x4651             MOV      R1,R10
   \   00000090   0x.... 0x....      BL       __aeabi_fadd
   \   00000094   0x4604             MOV      R4,R0
   \   00000096   0xF8D6 0xB070      LDR      R11,[R6, #+112]
   \   0000009A   0x68F0             LDR      R0,[R6, #+12]
   \   0000009C   0x4659             MOV      R1,R11
   \   0000009E   0x.... 0x....      BL       __aeabi_fadd
   \   000000A2   0x4621             MOV      R1,R4
   \   000000A4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A8   0x4606             MOV      R6,R0
   \   000000AA   0xBF38             IT       CC 
   \   000000AC   0x4626             MOVCC    R6,R4
   \   000000AE   0xF04F 0x4080      MOV      R0,#+1073741824
   \   000000B2   0x4649             MOV      R1,R9
   \   000000B4   0x.... 0x....      BL       __aeabi_fmul
   \   000000B8   0x4651             MOV      R1,R10
   \   000000BA   0x.... 0x....      BL       __aeabi_fsub
   \   000000BE   0x4604             MOV      R4,R0
   \   000000C0   0x4628             MOV      R0,R5
   \   000000C2   0x4659             MOV      R1,R11
   \   000000C4   0x.... 0x....      BL       __aeabi_fadd
   \   000000C8   0x4601             MOV      R1,R0
   \   000000CA   0x4620             MOV      R0,R4
   \   000000CC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000D0   0xBF28             IT       CS 
   \   000000D2   0x460C             MOVCS    R4,R1
   \   000000D4   0x4640             MOV      R0,R8
   \   000000D6   0x.... 0x....      BL       __aeabi_ui2f
   \   000000DA   0x4605             MOV      R5,R0
   \   000000DC   0x4620             MOV      R0,R4
   \   000000DE   0x4631             MOV      R1,R6
   \   000000E0   0x.... 0x....      BL       __aeabi_fsub
   \   000000E4   0x4604             MOV      R4,R0
   \   000000E6   0x1E78             SUBS     R0,R7,#+1
   \   000000E8   0x.... 0x....      BL       __aeabi_i2f
   \   000000EC   0x4601             MOV      R1,R0
   \   000000EE   0x4620             MOV      R0,R4
   \   000000F0   0x.... 0x....      BL       __aeabi_fdiv
   \   000000F4   0x4629             MOV      R1,R5
   \                     ??mesh_index_to_ypos_3: (+1)
   \   000000F6   0x.... 0x....      BL       __aeabi_fmul
   \   000000FA   0x4631             MOV      R1,R6
   \   000000FC   0xE8BD 0x4FF4      POP      {R2,R4-R11,LR}
   \   00000100   0x.... 0x....      B.W      __aeabi_fadd
   \                     ??mesh_index_to_ypos_0:
   \   00000104   0x........         DC32     mksCfg
   \   00000108   0x........         DC32     mksTmp
   \   0000010C   0x........         DC32     _ZN20unified_bed_leveling19_mesh_index_to_yposE
     43            //#endif
     44          
     45            #define EXTRUSION_MULTIPLIER 1.0
     46            #define RETRACTION_MULTIPLIER 1.0
     47            #define PRIME_LENGTH 10.0
     48            #define OOZE_AMOUNT 0.3
     49          
     50            #define SIZE_OF_INTERSECTION_CIRCLES 5
     51            #define SIZE_OF_CROSSHAIRS 3
     52          
     53            #if SIZE_OF_CROSSHAIRS >= SIZE_OF_INTERSECTION_CIRCLES
     54              #error "SIZE_OF_CROSSHAIRS must be less than SIZE_OF_INTERSECTION_CIRCLES."
     55            #endif
     56          
     57            #define G26_OK false
     58            #define G26_ERR true
     59          
     60            /**
     61             *   G26 Mesh Validation Tool
     62             *
     63             *   G26 is a Mesh Validation Tool intended to provide support for the Marlin Unified Bed Leveling System.
     64             *   In order to fully utilize and benefit from the Marlin Unified Bed Leveling System an accurate Mesh must
     65             *   be defined. G29 is designed to allow the user to quickly validate the correctness of her Mesh. It will
     66             *   first heat the bed and nozzle. It will then print lines and circles along the Mesh Cell boundaries and
     67             *   the intersections of those lines (respectively).
     68             *
     69             *   This action allows the user to immediately see where the Mesh is properly defined and where it needs to
     70             *   be edited. The command will generate the Mesh lines closest to the nozzle's starting position. Alternatively
     71             *   the user can specify the X and Y position of interest with command parameters. This allows the user to
     72             *   focus on a particular area of the Mesh where attention is needed.
     73             *
     74             *   B #  Bed         Set the Bed Temperature. If not specified, a default of 60 C. will be assumed.
     75             *
     76             *   C    Current     When searching for Mesh Intersection points to draw, use the current nozzle location
     77             *                    as the base for any distance comparison.
     78             *
     79             *   D    Disable     Disable the Unified Bed Leveling System. In the normal case the user is invoking this
     80             *                    command to see how well a Mesh as been adjusted to match a print surface. In order to do
     81             *                    this the Unified Bed Leveling System is turned on by the G26 command. The D parameter
     82             *                    alters the command's normal behaviour and disables the Unified Bed Leveling System even if
     83             *                    it is on.
     84             *
     85             *   H #  Hotend      Set the Nozzle Temperature. If not specified, a default of 205 C. will be assumed.
     86             *
     87             *   F #  Filament    Used to specify the diameter of the filament being used. If not specified
     88             *                    1.75mm filament is assumed. If you are not getting acceptable results by using the
     89             *                    'correct' numbers, you can scale this number up or down a little bit to change the amount
     90             *                    of filament that is being extruded during the printing of the various lines on the bed.
     91             *
     92             *   K    Keep-On     Keep the heaters turned on at the end of the command.
     93             *
     94             *   L #  Layer       Layer height. (Height of nozzle above bed)  If not specified .20mm will be used.
     95             *
     96             *   O #  Ooooze      How much your nozzle will Ooooze filament while getting in position to print. This
     97             *                    is over kill, but using this parameter will let you get the very first 'circle' perfect
     98             *                    so you have a trophy to peel off of the bed and hang up to show how perfectly you have your
     99             *                    Mesh calibrated. If not specified, a filament length of .3mm is assumed.
    100             *
    101             *   P #  Prime       Prime the nozzle with specified length of filament. If this parameter is not
    102             *                    given, no prime action will take place. If the parameter specifies an amount, that much
    103             *                    will be purged before continuing. If no amount is specified the command will start
    104             *                    purging filament until the user provides an LCD Click and then it will continue with
    105             *                    printing the Mesh. You can carefully remove the spent filament with a needle nose
    106             *                    pliers while holding the LCD Click wheel in a depressed state. If you do not have
    107             *                    an LCD, you must specify a value if you use P.
    108             *
    109             *   Q #  Multiplier  Retraction Multiplier. Normally not needed. Retraction defaults to 1.0mm and
    110             *                    un-retraction is at 1.2mm   These numbers will be scaled by the specified amount
    111             *
    112             *   R #  Repeat      Prints the number of patterns given as a parameter, starting at the current location.
    113             *                    If a parameter isn't given, every point will be printed unless G26 is interrupted.
    114             *                    This works the same way that the UBL G29 P4 R parameter works.
    115             *
    116             *                    NOTE:  If you do not have an LCD, you -must- specify R. This is to ensure that you are
    117             *                    aware that there's some risk associated with printing without the ability to abort in
    118             *                    cases where mesh point Z value may be inaccurate. As above, if you do not include a
    119             *                    parameter, every point will be printed.
    120             *
    121             *   S #  Nozzle      Used to control the size of nozzle diameter. If not specified, a .4mm nozzle is assumed.
    122             *
    123             *   U #  Random      Randomize the order that the circles are drawn on the bed. The search for the closest
    124             *                    undrawn cicle is still done. But the distance to the location for each circle has a
    125             *                    random number of the size specified added to it. Specifying S50 will give an interesting
    126             *                    deviation from the normal behaviour on a 10 x 10 Mesh.
    127             *
    128             *   X #  X Coord.    Specify the starting location of the drawing activity.
    129             *
    130             *   Y #  Y Coord.    Specify the starting location of the drawing activity.
    131             */
    132          
    133            // External references
    134          
    135            extern Planner planner;
    136            #if ENABLED(ULTRA_LCD)
    137              extern char lcd_status_message[];
    138            #endif
    139            inline void sync_plan_position_e() { planner.set_e_position_mm(current_position[E_AXIS]); }
    140          
    141            // Private functions
    142          
    143            //static uint16_t circle_flags[16], horizontal_mesh_line_flags[16], vertical_mesh_line_flags[16];

   \                                 In section .bss, align 4
    144            static unsigned int circle_flags[16], horizontal_mesh_line_flags[16], vertical_mesh_line_flags[16], continue_with_closest = 0;
   \                     horizontal_mesh_line_flags:
   \   00000000                      DS8 64
   \   00000040                      DS8 64

   \                                 In section .data, align 4
    145            float g26_e_axis_feedrate = 0.020,
    146                  random_deviation = 0.0;
    147          
    148            static bool g26_retracted = false; // Track the retracted state of the nozzle so mismatched
   \                     g26_retracted:
   \   00000000   0x00               DC8 0
   \   00000001   0x00               DC8 0
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x00 0x00          DC8 0, 0
   \   00000006   0x00 0x00          DC8 0, 0
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     g26_e_axis_feedrate:
   \   00000048   0x3CA3D70A         DC32 3CA3D70AH
   \                     random_deviation:
   \   0000004C   0x00000000         DC32 0H
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000058   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000060   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
    149                                               // retracts/recovers won't result in a bad state.
    150          
    151            static float g26_extrusion_multiplier,
    152                         g26_retraction_multiplier,
    153                         g26_layer_height,
    154                         g26_prime_length,
    155                         g26_x_pos, g26_y_pos;
    156          
    157            static int16_t g26_bed_temp,
    158                           g26_hotend_temp;
    159          
    160            static int8_t g26_prime_flag;
    161          
    162            #if ENABLED(NEWPANEL)
    163          
    164              /**
    165               * If the LCD is clicked, cancel, wait for release, return true
    166               */
    167              bool user_canceled() {
    168                if (!is_lcd_clicked()) return false; // Return if the button isn't pressed
    169                lcd_setstatusPGM(PSTR("Mesh Validation Stopped."), 99);
    170                #if ENABLED(ULTIPANEL)
    171                  lcd_quick_feedback();
    172                #endif
    173                wait_for_release();
    174                return true;
    175              }
    176          
    177              bool exit_from_g26() {
    178                lcd_setstatusPGM(PSTR("Leaving G26"), -1);
    179                wait_for_release();
    180                return G26_ERR;
    181              }
    182          
    183            #endif
    184          

   \                                 In section .text, align 2, keep-with-next
    185            void G26_line_to_destination(const float &feed_rate) {
   \                     _Z23G26_line_to_destinationRKf: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    186              const float save_feedrate = feedrate_mm_s;
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable21
    187              feedrate_mm_s = feed_rate;      // use specified feed rate
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x6825             LDR      R5,[R4, #+0]
   \   0000000A   0x6020             STR      R0,[R4, #+0]
    188              prepare_move_to_destination();  // will ultimately call ubl.line_to_destination_cartesian or ubl.prepare_linear_move_to for UBL_SEGMENTED
   \   0000000C   0x.... 0x....      BL       _Z27prepare_move_to_destinationv
    189              feedrate_mm_s = save_feedrate;  // restore global feed rate
   \   00000010   0x6025             STR      R5,[R4, #+0]
    190            }
   \   00000012   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    191          

   \                                 In section .text, align 2, keep-with-next
    192            void move_to(const float &rx, const float &ry, const float &z, const float &e_delta) {
   \                     _Z7move_toRKfS0_S0_S0_: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    193              float feed_value;
    194              static float last_z = -999.99;
    195          
    196              bool has_xy_component = (rx != current_position[X_AXIS] || ry != current_position[Y_AXIS]); // Check if X or Y is involved in the movement.
   \   00000004   0x.... 0x....      LDR.W    R6,??DataTable21_1
   \   00000008   0xF8D6 0xB000      LDR      R11,[R6, #+0]
   \   0000000C   0x4680             MOV      R8,R0
   \   0000000E   0x4689             MOV      R9,R1
   \   00000010   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   00000014   0x4659             MOV      R1,R11
   \   00000016   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000001A   0x4692             MOV      R10,R2
   \   0000001C   0xD105             BNE.N    ??move_to_0
   \   0000001E   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \   00000022   0x6871             LDR      R1,[R6, #+4]
   \   00000024   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000028   0xD001             BEQ.N    ??move_to_1
   \                     ??move_to_0: (+1)
   \   0000002A   0x2701             MOVS     R7,#+1
   \   0000002C   0xE000             B.N      ??move_to_2
   \                     ??move_to_1: (+1)
   \   0000002E   0x2700             MOVS     R7,#+0
    197          
    198              if (z != last_z) {
   \                     ??move_to_2: (+1)
   \   00000030   0x.... 0x....      LDR.W    R3,??DataTable21_2
   \   00000034   0xF8DA 0x2000      LDR      R2,[R10, #+0]
   \   00000038   0x6819             LDR      R1,[R3, #+0]
   \   0000003A   0x.... 0x....      LDR.W    R4,??DataTable21_3
   \   0000003E   0x4610             MOV      R0,R2
   \   00000040   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000044   0xD01F             BEQ.N    ??move_to_3
    199                last_z = z;
   \   00000046   0x601A             STR      R2,[R3, #+0]
    200                feed_value = planner.max_feedrate_mm_s[Z_AXIS]/(3.0);  // Base the feed rate off of the configured Z_AXIS feed rate
   \   00000048   0x68A0             LDR      R0,[R4, #+8]
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable21_4  ;; 0x40400000
   \   0000004E   0x.... 0x....      BL       __aeabi_fdiv
    201          
    202                destination[X_AXIS] = current_position[X_AXIS];
   \   00000052   0x.... 0x....      LDR.W    R5,??DataTable21_5
    203                destination[Y_AXIS] = current_position[Y_AXIS];
   \   00000056   0x6871             LDR      R1,[R6, #+4]
   \   00000058   0xF8C5 0xB000      STR      R11,[R5, #+0]
   \   0000005C   0x6069             STR      R1,[R5, #+4]
    204                destination[Z_AXIS] = z;                          // We know the last_z==z or we wouldn't be in this block of code.
   \   0000005E   0xF8DA 0x1000      LDR      R1,[R10, #+0]
    205                destination[E_AXIS] = current_position[E_AXIS];
    206          
    207                G26_line_to_destination(feed_value);
   \   00000062   0x.... 0x....      LDR.W    R10,??DataTable21
   \   00000066   0x60A9             STR      R1,[R5, #+8]
   \   00000068   0x68F1             LDR      R1,[R6, #+12]
   \   0000006A   0x60E9             STR      R1,[R5, #+12]
   \   0000006C   0xF8DA 0xB000      LDR      R11,[R10, #+0]
   \   00000070   0xF8CA 0x0000      STR      R0,[R10, #+0]
   \   00000074   0x.... 0x....      BL       _Z27prepare_move_to_destinationv
   \   00000078   0xF8CA 0xB000      STR      R11,[R10, #+0]
    208          
    209                stepper.synchronize();
   \   0000007C   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    210                set_destination_from_current();
   \   00000080   0xCE0F             LDM      R6!,{R0-R3}
   \   00000082   0xC50F             STM      R5!,{R0-R3}
   \   00000084   0x3E10             SUBS     R6,R6,#+16
    211              }
    212          
    213              // Check if X or Y is involved in the movement.
    214              // Yes: a 'normal' movement. No: a retract() or recover()
    215              feed_value = has_xy_component ? PLANNER_XY_FEEDRATE() / 10.0 : planner.max_feedrate_mm_s[E_AXIS] / 1.5;
   \                     ??move_to_3: (+1)
   \   00000086   0xB14F             CBZ.N    R7,??move_to_4
   \   00000088   0x6861             LDR      R1,[R4, #+4]
   \   0000008A   0x6820             LDR      R0,[R4, #+0]
   \   0000008C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000090   0xBF38             IT       CC 
   \   00000092   0x4601             MOVCC    R1,R0
   \   00000094   0x4608             MOV      R0,R1
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable21_6  ;; 0x41200000
   \   0000009A   0xE002             B.N      ??move_to_5
   \                     ??move_to_4: (+1)
   \   0000009C   0x68E0             LDR      R0,[R4, #+12]
   \   0000009E   0xF04F 0x517F      MOV      R1,#+1069547520
   \                     ??move_to_5: (+1)
   \   000000A2   0x.... 0x....      BL       __aeabi_fdiv
   \   000000A6   0x4607             MOV      R7,R0
    216          
    217              if (g26_debug_flag) SERIAL_ECHOLNPAIR("in move_to() feed_value for XY:", feed_value);
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable21_7
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0xB148             CBZ.N    R0,??move_to_6
   \   000000B0   0x.... 0x....      ADR.W    R0,`?<Constant "in move_to() feed_val...">`
   \   000000B4   0x4639             MOV      R1,R7
   \   000000B6   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \   000000BA   0x210A             MOVS     R1,#+10
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   000000C0   0x.... 0x....      BL       _ZN10USARTClass5writeEh
    218          
    219              destination[X_AXIS] = rx;
   \                     ??move_to_6: (+1)
   \   000000C4   0x.... 0x....      LDR.W    R5,??DataTable21_5
   \   000000C8   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   000000CC   0x6028             STR      R0,[R5, #+0]
    220              destination[Y_AXIS] = ry;
   \   000000CE   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \   000000D2   0x6068             STR      R0,[R5, #+4]
    221              destination[E_AXIS] += e_delta;
   \   000000D4   0x9800             LDR      R0,[SP, #+0]
   \   000000D6   0x68E9             LDR      R1,[R5, #+12]
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x.... 0x....      BL       __aeabi_fadd
    222          
    223              G26_line_to_destination(feed_value);
   \   000000DE   0x.... 0x....      LDR.W    R4,??DataTable21
   \   000000E2   0x60E8             STR      R0,[R5, #+12]
   \   000000E4   0xF8D4 0x8000      LDR      R8,[R4, #+0]
   \   000000E8   0x6027             STR      R7,[R4, #+0]
   \   000000EA   0x.... 0x....      BL       _Z27prepare_move_to_destinationv
   \   000000EE   0xF8C4 0x8000      STR      R8,[R4, #+0]
    224          
    225              stepper.synchronize();
   \   000000F2   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
    226              set_destination_from_current();
   \   000000F6   0xCE0F             LDM      R6!,{R0-R3}
   \   000000F8   0xC50F             STM      R5!,{R0-R3}
    227            }
   \   000000FA   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .data, align 4
   \                     ??last_z:
   \   00000000   0xC479FF5C         DC32 0C479FF5CH
    228          
    229            FORCE_INLINE void move_to(const float where[XYZE], const float &de) { move_to(where[X_AXIS], where[Y_AXIS], where[Z_AXIS], de); }
    230          

   \                                 In section .text, align 2, keep-with-next
    231            void retract_filament(const float where[XYZE]) {
   \                     _Z16retract_filamentPKf: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    232              if (!g26_retracted) { // Only retract if we are not already retracted!
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable21_9
   \   00000008   0x7801             LDRB     R1,[R0, #+0]
   \   0000000A   0xB082             SUB      SP,SP,#+8
   \   0000000C   0xB971             CBNZ.N   R1,??retract_filament_0
    233                g26_retracted = true;
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    234                move_to(where, -1.0 * g26_retraction_multiplier);
   \   00000012   0x6D41             LDR      R1,[R0, #+84]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable21_10  ;; 0xbf800000
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0xAB00             ADD      R3,SP,#+0
   \   00000020   0xF104 0x0208      ADD      R2,R4,#+8
   \   00000024   0x1D21             ADDS     R1,R4,#+4
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    235              }
    236            }
   \                     ??retract_filament_0: (+1)
   \   0000002C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    237          

   \                                 In section .text, align 2, keep-with-next
    238            void recover_filament(const float where[XYZE]) {
   \                     _Z16recover_filamentPKf: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    239              if (g26_retracted) { // Only un-retract if we are retracted.
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable21_9
   \   00000006   0x4605             MOV      R5,R0
   \   00000008   0x7820             LDRB     R0,[R4, #+0]
   \   0000000A   0xB1A0             CBZ.N    R0,??recover_filament_0
    240                move_to(where, 1.2 * g26_retraction_multiplier);
   \   0000000C   0x6D60             LDR      R0,[R4, #+84]
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x.... 0x....      LDR.W    R3,??DataTable21_11  ;; 0x3ff33333
   \   00000016   0xF04F 0x3233      MOV      R2,#+858993459
   \   0000001A   0x.... 0x....      BL       __aeabi_dmul
   \   0000001E   0x.... 0x....      BL       __aeabi_d2f
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0xAB00             ADD      R3,SP,#+0
   \   00000026   0xF105 0x0208      ADD      R2,R5,#+8
   \   0000002A   0x1D29             ADDS     R1,R5,#+4
   \   0000002C   0x4628             MOV      R0,R5
   \   0000002E   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
    241                g26_retracted = false;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x7020             STRB     R0,[R4, #+0]
    242              }
    243            }
   \                     ??recover_filament_0: (+1)
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    244          
    245            /**
    246             * Prime the nozzle if needed. Return true on error.
    247             */
    248            inline bool prime_nozzle() {
    249          
    250              #if ENABLED(NEWPANEL)
    251                float Total_Prime = 0.0;
    252          
    253                if (g26_prime_flag == -1) {  // The user wants to control how much filament gets purged
    254          
    255                  lcd_external_control = true;
    256                  lcd_setstatusPGM(PSTR("User-Controlled Prime"), 99);
    257                  lcd_chirp();
    258          
    259                  set_destination_from_current();
    260          
    261                  recover_filament(destination); // Make sure G26 doesn't think the filament is retracted().
    262          
    263                  while (!is_lcd_clicked()) {
    264                    lcd_chirp();
    265                    destination[E_AXIS] += 0.25;
    266                    #ifdef PREVENT_LENGTHY_EXTRUDE
    267                      Total_Prime += 0.25;
    268                      if (Total_Prime >= EXTRUDE_MAXLENGTH) return G26_ERR;
    269                    #endif
    270                    G26_line_to_destination(planner.max_feedrate_mm_s[E_AXIS] / 15.0);
    271          
    272                    stepper.synchronize();    // Without this synchronize, the purge is more consistent,
    273                                              // but because the planner has a buffer, we won't be able
    274                                              // to stop as quickly. So we put up with the less smooth
    275                                              // action to give the user a more responsive 'Stop'.
    276                    set_destination_from_current();
    277                    idle();
    278                  }
    279          
    280                  wait_for_release();
    281          
    282                  strcpy_P(lcd_status_message, PSTR("Done Priming")); // We can't do lcd_setstatusPGM() without having it continue;
    283                                                                      // So... We cheat to get a message up.
    284                  lcd_setstatusPGM(PSTR("Done Priming"), 99);
    285                  lcd_quick_feedback();
    286                  lcd_external_control = false;
    287                }
    288                else
    289              #endif
    290              {
    291                #if ENABLED(ULTRA_LCD)
    292                  lcd_setstatusPGM(PSTR("Fixed Length Prime."), 99);
    293                  lcd_quick_feedback();
    294                #endif
    295                set_destination_from_current();
    296                destination[E_AXIS] += g26_prime_length;
    297                G26_line_to_destination(planner.max_feedrate_mm_s[E_AXIS] / 15.0);
    298                stepper.synchronize();
    299                set_destination_from_current();
    300                retract_filament(destination);
    301              }
    302          
    303              return G26_OK;
    304            }
    305          

   \                                 In section .text, align 2, keep-with-next
    306            mesh_index_pair find_closest_circle_to_print(const float &X, const float &Y) {
   \                     _Z28find_closest_circle_to_printRKfS0_: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
    307              //const 
    308              float mx,my;
    309              float closest = 99999.99;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable21_12  ;; 0x47c34fff
   \   0000000A   0x9005             STR      R0,[SP, #+20]
    310              mesh_index_pair return_val;
    311          
    312              return_val.x_index = return_val.y_index = -1;
    313          
    314              for (uint8_t i = 0; i < GRID_MAX_POINTS_X; i++) {
   \   0000000C   0x2600             MOVS     R6,#+0
   \   0000000E   0xF04F 0x30FF      MOV      R0,#-1
   \   00000012   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable21_13
   \   0000001E   0xE003             B.N      ??find_closest_circle_to_print_0
   \                     ??find_closest_circle_to_print_1: (+1)
   \   00000020   0x9804             LDR      R0,[SP, #+16]
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \   00000024   0xB2F6             UXTB     R6,R6
   \   00000026   0x1D00             ADDS     R0,R0,#+4
   \                     ??find_closest_circle_to_print_0: (+1)
   \   00000028   0x9004             STR      R0,[SP, #+16]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable21_14
   \   0000002E   0x9006             STR      R0,[SP, #+24]
   \   00000030   0x7F80             LDRB     R0,[R0, #+30]
   \   00000032   0x4286             CMP      R6,R0
   \   00000034   0xF280 0x80F0      BGE.W    ??find_closest_circle_to_print_2
    315                for (uint8_t j = 0; j < GRID_MAX_POINTS_Y; j++) {
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable21_15
   \   0000003C   0x9003             STR      R0,[SP, #+12]
   \   0000003E   0x2700             MOVS     R7,#+0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable21_16
   \   00000044   0x9002             STR      R0,[SP, #+8]
   \   00000046   0xE055             B.N      ??find_closest_circle_to_print_3
    316                  if (!is_bitmap_set(circle_flags, i, j)) {
   \                     ??find_closest_circle_to_print_4: (+1)
   \   00000048   0x4658             MOV      R0,R11
   \   0000004A   0x4659             MOV      R1,R11
   \   0000004C   0x.... 0x....      BL       __aeabi_fmul
   \   00000050   0x4683             MOV      R11,R0
   \                     ??find_closest_circle_to_print_5: (+1)
   \   00000052   0x07E8             LSLS     R0,R5,#+31
   \   00000054   0xD504             BPL.N    ??find_closest_circle_to_print_6
   \   00000056   0x4620             MOV      R0,R4
   \   00000058   0x4659             MOV      R1,R11
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x4604             MOV      R4,R0
   \                     ??find_closest_circle_to_print_6: (+1)
   \   00000060   0x086D             LSRS     R5,R5,#+1
   \   00000062   0xD1F1             BNE.N    ??find_closest_circle_to_print_4
    317                    
    318                      if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_BILINEAR)
    319                      {
    320                          mx = _GET_MESH_X_ABL(i);  // We found a circle that needs to be printed
    321                          my = _GET_MESH_Y_ABL(j);
    322                      }
    323                      else if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    324                      {
    325                          mx = _GET_MESH_X_MBL(i);  // We found a circle that needs to be printed
    326                          my = _GET_MESH_Y_MBL(j);            
    327                      }
    328                      else if(BED_LEVELING_METHOD & MESH_BED_LEVELING)
    329                      {
    330                          mx = _GET_MESH_X_UBL(i);  // We found a circle that needs to be printed
    331                          my = _GET_MESH_Y_UBL(j);           
    332                      }
    333                          
    334                          
    335          
    336                    // Get the distance to this intersection
    337                    float f = HYPOT(X - mx, Y - my);
    338          
    339                    // It is possible that we are being called with the values
    340                    // to let us find the closest circle to the start position.
    341                    // But if this is not the case, add a small weighting to the
    342                    // distance calculation to help it choose a better place to continue.
    343                    f += HYPOT(g26_x_pos - mx, g26_y_pos - my) / 15.0;
   \   00000064   0x9807             LDR      R0,[SP, #+28]
   \   00000066   0x.... 0x....      BL       __aeabi_f2d
   \   0000006A   0x4605             MOV      R5,R0
   \   0000006C   0x468B             MOV      R11,R1
   \   0000006E   0x4640             MOV      R0,R8
   \   00000070   0x4621             MOV      R1,R4
   \   00000072   0x.... 0x....      BL       __aeabi_fadd
   \   00000076   0x.... 0x....      BL       sqrtf
   \   0000007A   0x.... 0x....      BL       __aeabi_f2d
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x.... 0x....      LDR.W    R3,??DataTable21_17  ;; 0x402e0000
   \   00000084   0x.... 0x....      BL       __aeabi_ddiv
   \   00000088   0x462A             MOV      R2,R5
   \   0000008A   0x465B             MOV      R3,R11
   \   0000008C   0x.... 0x....      BL       __aeabi_dadd
   \   00000090   0x.... 0x....      BL       __aeabi_d2f
   \   00000094   0x4680             MOV      R8,R0
    344          #if 0
    345                    // Add in the specified amount of Random Noise to our search
    346                    if (random_deviation > 1.0)
    347                      f += random(0.0, random_deviation);
    348          #else
    349                      if (random_deviation > 1.0)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable21_9
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable21_18  ;; 0x3f800001
   \   0000009E   0x6CC0             LDR      R0,[R0, #+76]
   \   000000A0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000A4   0xD812             BHI.N    ??find_closest_circle_to_print_7
    350                      {
    351                        int16_t randData = rand()% (int)random_deviation;
   \   000000A6   0x.... 0x....      BL       rand
   \   000000AA   0x4604             MOV      R4,R0
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable21_9
   \   000000B0   0x6CC0             LDR      R0,[R0, #+76]
   \   000000B2   0x.... 0x....      BL       __aeabi_f2iz
    352                        f += randData;
   \   000000B6   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   000000BA   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   000000BE   0xB200             SXTH     R0,R0
   \   000000C0   0x.... 0x....      BL       __aeabi_i2f
   \   000000C4   0x4641             MOV      R1,R8
   \   000000C6   0x.... 0x....      BL       __aeabi_fadd
   \   000000CA   0x4680             MOV      R8,R0
    353                      }
    354          #endif
    355                    if (f < closest) {
   \                     ??find_closest_circle_to_print_7: (+1)
   \   000000CC   0x9905             LDR      R1,[SP, #+20]
   \   000000CE   0x4640             MOV      R0,R8
   \   000000D0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000D4   0xD207             BCS.N    ??find_closest_circle_to_print_8
    356                      closest = f;              // We found a closer location that is still
   \   000000D6   0xF8CD 0x8014      STR      R8,[SP, #+20]
    357                      return_val.x_index = i;   // un-printed  --- save the data for it
   \   000000DA   0xF88D 0x6000      STRB     R6,[SP, #+0]
    358                      return_val.y_index = j;
   \   000000DE   0xF88D 0x7001      STRB     R7,[SP, #+1]
    359                      return_val.distance = closest;
   \   000000E2   0x9805             LDR      R0,[SP, #+20]
   \   000000E4   0x9001             STR      R0,[SP, #+4]
    360                    }
   \                     ??find_closest_circle_to_print_8: (+1)
   \   000000E6   0x1C7F             ADDS     R7,R7,#+1
   \   000000E8   0x9802             LDR      R0,[SP, #+8]
   \   000000EA   0x1D00             ADDS     R0,R0,#+4
   \   000000EC   0x9002             STR      R0,[SP, #+8]
   \   000000EE   0x9803             LDR      R0,[SP, #+12]
   \   000000F0   0x1D00             ADDS     R0,R0,#+4
   \   000000F2   0x9003             STR      R0,[SP, #+12]
   \                     ??find_closest_circle_to_print_3: (+1)
   \   000000F4   0xB2FF             UXTB     R7,R7
   \   000000F6   0x9806             LDR      R0,[SP, #+24]
   \   000000F8   0x7FC0             LDRB     R0,[R0, #+31]
   \   000000FA   0x4287             CMP      R7,R0
   \   000000FC   0xD290             BCS.N    ??find_closest_circle_to_print_1
   \   000000FE   0x9803             LDR      R0,[SP, #+12]
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x40F0             LSRS     R0,R0,R6
   \   00000104   0x07C0             LSLS     R0,R0,#+31
   \   00000106   0xD4EE             BMI.N    ??find_closest_circle_to_print_8
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable21_19
   \   0000010C   0xF890 0x0042      LDRB     R0,[R0, #+66]
   \   00000110   0x0701             LSLS     R1,R0,#+28
   \   00000112   0xD515             BPL.N    ??find_closest_circle_to_print_9
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable21_20
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable21_21
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x6809             LDR      R1,[R1, #+0]
   \   00000120   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000124   0x.... 0x....      BL       __aeabi_i2f
   \   00000128   0x4681             MOV      R9,R0
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable21_20
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable21_21
   \   00000132   0x6840             LDR      R0,[R0, #+4]
   \   00000134   0x6849             LDR      R1,[R1, #+4]
   \   00000136   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   0000013A   0x.... 0x....      BL       __aeabi_i2f
   \   0000013E   0xE011             B.N      ??find_closest_circle_to_print_10
   \                     ??find_closest_circle_to_print_9: (+1)
   \   00000140   0x06C1             LSLS     R1,R0,#+27
   \   00000142   0xD506             BPL.N    ??find_closest_circle_to_print_11
   \   00000144   0x9804             LDR      R0,[SP, #+16]
   \   00000146   0xF8D0 0x9000      LDR      R9,[R0, #+0]
   \   0000014A   0x9802             LDR      R0,[SP, #+8]
   \   0000014C   0xF8D0 0xA000      LDR      R10,[R0, #+0]
   \   00000150   0xE009             B.N      ??find_closest_circle_to_print_12
   \                     ??find_closest_circle_to_print_11: (+1)
   \   00000152   0x0680             LSLS     R0,R0,#+26
   \   00000154   0xD507             BPL.N    ??find_closest_circle_to_print_12
   \   00000156   0x4630             MOV      R0,R6
   \   00000158   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   0000015C   0x4681             MOV      R9,R0
   \   0000015E   0x4638             MOV      R0,R7
   \   00000160   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \                     ??find_closest_circle_to_print_10: (+1)
   \   00000164   0x4682             MOV      R10,R0
   \                     ??find_closest_circle_to_print_12: (+1)
   \   00000166   0x9809             LDR      R0,[SP, #+36]
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x4649             MOV      R1,R9
   \   0000016C   0x.... 0x....      BL       __aeabi_fsub
   \   00000170   0x4604             MOV      R4,R0
   \   00000172   0x2502             MOVS     R5,#+2
   \   00000174   0xF04F 0x587E      MOV      R8,#+1065353216
   \   00000178   0xE004             B.N      ??find_closest_circle_to_print_13
   \                     ??find_closest_circle_to_print_14: (+1)
   \   0000017A   0x4620             MOV      R0,R4
   \   0000017C   0x4621             MOV      R1,R4
   \   0000017E   0x.... 0x....      BL       __aeabi_fmul
   \   00000182   0x4604             MOV      R4,R0
   \                     ??find_closest_circle_to_print_13: (+1)
   \   00000184   0x07E8             LSLS     R0,R5,#+31
   \   00000186   0xD504             BPL.N    ??find_closest_circle_to_print_15
   \   00000188   0x4640             MOV      R0,R8
   \   0000018A   0x4621             MOV      R1,R4
   \   0000018C   0x.... 0x....      BL       __aeabi_fmul
   \   00000190   0x4680             MOV      R8,R0
   \                     ??find_closest_circle_to_print_15: (+1)
   \   00000192   0x086D             LSRS     R5,R5,#+1
   \   00000194   0xD1F1             BNE.N    ??find_closest_circle_to_print_14
   \   00000196   0x980A             LDR      R0,[SP, #+40]
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0x4651             MOV      R1,R10
   \   0000019C   0x.... 0x....      BL       __aeabi_fsub
   \   000001A0   0x4683             MOV      R11,R0
   \   000001A2   0x2402             MOVS     R4,#+2
   \   000001A4   0xF04F 0x557E      MOV      R5,#+1065353216
   \   000001A8   0xE004             B.N      ??find_closest_circle_to_print_16
   \                     ??find_closest_circle_to_print_17: (+1)
   \   000001AA   0x4658             MOV      R0,R11
   \   000001AC   0x4659             MOV      R1,R11
   \   000001AE   0x.... 0x....      BL       __aeabi_fmul
   \   000001B2   0x4683             MOV      R11,R0
   \                     ??find_closest_circle_to_print_16: (+1)
   \   000001B4   0x07E0             LSLS     R0,R4,#+31
   \   000001B6   0xD504             BPL.N    ??find_closest_circle_to_print_18
   \   000001B8   0x4628             MOV      R0,R5
   \   000001BA   0x4659             MOV      R1,R11
   \   000001BC   0x.... 0x....      BL       __aeabi_fmul
   \   000001C0   0x4605             MOV      R5,R0
   \                     ??find_closest_circle_to_print_18: (+1)
   \   000001C2   0x0864             LSRS     R4,R4,#+1
   \   000001C4   0xD1F1             BNE.N    ??find_closest_circle_to_print_17
   \   000001C6   0x4640             MOV      R0,R8
   \   000001C8   0x4629             MOV      R1,R5
   \   000001CA   0x.... 0x....      BL       __aeabi_fadd
   \   000001CE   0x.... 0x....      BL       sqrtf
   \   000001D2   0x9007             STR      R0,[SP, #+28]
   \   000001D4   0x4649             MOV      R1,R9
   \   000001D6   0x....             LDR.N    R0,??DataTable21_9
   \   000001D8   0x6E00             LDR      R0,[R0, #+96]
   \   000001DA   0x.... 0x....      BL       __aeabi_fsub
   \   000001DE   0x4604             MOV      R4,R0
   \   000001E0   0x2502             MOVS     R5,#+2
   \   000001E2   0xF04F 0x587E      MOV      R8,#+1065353216
   \   000001E6   0xE004             B.N      ??find_closest_circle_to_print_19
   \                     ??find_closest_circle_to_print_20: (+1)
   \   000001E8   0x4620             MOV      R0,R4
   \   000001EA   0x4621             MOV      R1,R4
   \   000001EC   0x.... 0x....      BL       __aeabi_fmul
   \   000001F0   0x4604             MOV      R4,R0
   \                     ??find_closest_circle_to_print_19: (+1)
   \   000001F2   0x07E8             LSLS     R0,R5,#+31
   \   000001F4   0xD504             BPL.N    ??find_closest_circle_to_print_21
   \   000001F6   0x4640             MOV      R0,R8
   \   000001F8   0x4621             MOV      R1,R4
   \   000001FA   0x.... 0x....      BL       __aeabi_fmul
   \   000001FE   0x4680             MOV      R8,R0
   \                     ??find_closest_circle_to_print_21: (+1)
   \   00000200   0x086D             LSRS     R5,R5,#+1
   \   00000202   0xD1F1             BNE.N    ??find_closest_circle_to_print_20
   \   00000204   0x....             LDR.N    R0,??DataTable21_9
   \   00000206   0x6E40             LDR      R0,[R0, #+100]
   \   00000208   0x4651             MOV      R1,R10
   \   0000020A   0x.... 0x....      BL       __aeabi_fsub
   \   0000020E   0x4683             MOV      R11,R0
   \   00000210   0x2502             MOVS     R5,#+2
   \   00000212   0xF04F 0x547E      MOV      R4,#+1065353216
   \   00000216   0xE71C             B.N      ??find_closest_circle_to_print_5
    361                  }
    362                }
    363              }
    364              bitmap_set(circle_flags, return_val.x_index, return_val.y_index);   // Mark this location as done.
   \                     ??find_closest_circle_to_print_2: (+1)
   \   00000218   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000021C   0x....             LDR.N    R1,??DataTable21_9
   \   0000021E   0xF99D 0x3000      LDRSB    R3,[SP, #+0]
   \   00000222   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   00000226   0x2201             MOVS     R2,#+1
   \   00000228   0x6881             LDR      R1,[R0, #+8]
   \   0000022A   0x409A             LSLS     R2,R2,R3
   \   0000022C   0x4311             ORRS     R1,R2,R1
   \   0000022E   0x6081             STR      R1,[R0, #+8]
    365              return return_val;
   \   00000230   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000234   0x9A08             LDR      R2,[SP, #+32]
   \   00000236   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   \   0000023A   0xB00B             ADD      SP,SP,#+44
   \   0000023C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    366            }
    367          
    368            /**
    369             * print_line_from_here_to_there() takes two cartesian coordinates and draws a line from one
    370             * to the other. But there are really three sets of coordinates involved. The first coordinate
    371             * is the present location of the nozzle. We don't necessarily want to print from this location.
    372             * We first need to move the nozzle to the start of line segment where we want to print. Once
    373             * there, we can use the two coordinates supplied to draw the line.
    374             *
    375             * Note:  Although we assume the first set of coordinates is the start of the line and the second
    376             * set of coordinates is the end of the line, it does not always work out that way. This function
    377             * optimizes the movement to minimize the travel distance before it can start printing. This saves
    378             * a lot of time and eliminates a lot of nonsensical movement of the nozzle. However, it does
    379             * cause a lot of very little short retracement of th nozzle when it draws the very first line
    380             * segment of a 'circle'. The time this requires is very short and is easily saved by the other
    381             * cases where the optimization comes into play.
    382             */

   \                                 In section .text, align 2, keep-with-next
    383            void print_line_from_here_to_there(const float &sx, const float &sy, const float &sz, const float &ex, const float &ey, const float &ez) {
   \                     _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_: (+1)
   \   00000000   0xE92D 0x4FFC      PUSH     {R2-R11,LR}
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0xB085             SUB      SP,SP,#+20
   \   00000008   0x4604             MOV      R4,R0
   \   0000000A   0x6828             LDR      R0,[R5, #+0]
   \   0000000C   0x9004             STR      R0,[SP, #+16]
   \   0000000E   0x....             LDR.N    R0,??DataTable21_1
   \   00000010   0x9904             LDR      R1,[SP, #+16]
   \   00000012   0x6840             LDR      R0,[R0, #+4]
   \   00000014   0x.... 0x....      BL       __aeabi_fsub
   \   00000018   0x4681             MOV      R9,R0
    384              const float dx_s = current_position[X_AXIS] - sx,   // find our distance from the start of the actual line segment
    385                          dy_s = current_position[Y_AXIS] - sy,
    386                          dist_start = HYPOT2(dx_s, dy_s),        // We don't need to do a sqrt(), we can compare the distance^2
   \   0000001A   0x6820             LDR      R0,[R4, #+0]
   \   0000001C   0x9003             STR      R0,[SP, #+12]
   \   0000001E   0x....             LDR.N    R0,??DataTable21_1
   \   00000020   0xF8D0 0x8000      LDR      R8,[R0, #+0]
   \   00000024   0x9903             LDR      R1,[SP, #+12]
   \   00000026   0x4640             MOV      R0,R8
   \   00000028   0x.... 0x....      BL       __aeabi_fsub
   \   0000002C   0xF04F 0x5B7E      MOV      R11,#+1065353216
   \   00000030   0x4607             MOV      R7,R0
   \   00000032   0x2602             MOVS     R6,#+2
   \   00000034   0x46DA             MOV      R10,R11
   \   00000036   0xE004             B.N      ??print_line_from_here_to_there_0
   \                     ??print_line_from_here_to_there_1: (+1)
   \   00000038   0x4638             MOV      R0,R7
   \   0000003A   0x4639             MOV      R1,R7
   \   0000003C   0x.... 0x....      BL       __aeabi_fmul
   \   00000040   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_0: (+1)
   \   00000042   0x07F0             LSLS     R0,R6,#+31
   \   00000044   0xD504             BPL.N    ??print_line_from_here_to_there_2
   \   00000046   0x4650             MOV      R0,R10
   \   00000048   0x4639             MOV      R1,R7
   \   0000004A   0x.... 0x....      BL       __aeabi_fmul
   \   0000004E   0x4682             MOV      R10,R0
   \                     ??print_line_from_here_to_there_2: (+1)
   \   00000050   0x0876             LSRS     R6,R6,#+1
   \   00000052   0xD1F1             BNE.N    ??print_line_from_here_to_there_1
   \   00000054   0x2602             MOVS     R6,#+2
   \   00000056   0x465F             MOV      R7,R11
   \   00000058   0xE004             B.N      ??print_line_from_here_to_there_3
   \                     ??print_line_from_here_to_there_4: (+1)
   \   0000005A   0x4648             MOV      R0,R9
   \   0000005C   0x4649             MOV      R1,R9
   \   0000005E   0x.... 0x....      BL       __aeabi_fmul
   \   00000062   0x4681             MOV      R9,R0
   \                     ??print_line_from_here_to_there_3: (+1)
   \   00000064   0x07F0             LSLS     R0,R6,#+31
   \   00000066   0xD504             BPL.N    ??print_line_from_here_to_there_5
   \   00000068   0x4638             MOV      R0,R7
   \   0000006A   0x4649             MOV      R1,R9
   \   0000006C   0x.... 0x....      BL       __aeabi_fmul
   \   00000070   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_5: (+1)
   \   00000072   0x0876             LSRS     R6,R6,#+1
   \   00000074   0xD1F1             BNE.N    ??print_line_from_here_to_there_4
   \   00000076   0x4650             MOV      R0,R10
   \   00000078   0x4639             MOV      R1,R7
   \   0000007A   0x.... 0x....      BL       __aeabi_fadd
   \   0000007E   0xF8DD 0x9040      LDR      R9,[SP, #+64]
   \   00000082   0x9002             STR      R0,[SP, #+8]
    387                                                                  // to save computation time
    388                          dx_e = current_position[X_AXIS] - ex,   // find our distance from the end of the actual line segment
    389                          dy_e = current_position[Y_AXIS] - ey,
   \   00000084   0xF8D9 0x0000      LDR      R0,[R9, #+0]
   \   00000088   0x9001             STR      R0,[SP, #+4]
   \   0000008A   0x....             LDR.N    R0,??DataTable21_1
   \   0000008C   0x9901             LDR      R1,[SP, #+4]
   \   0000008E   0x6840             LDR      R0,[R0, #+4]
   \   00000090   0x.... 0x....      BL       __aeabi_fsub
   \   00000094   0x4682             MOV      R10,R0
    390                          dist_end = HYPOT2(dx_e, dy_e),
   \   00000096   0x9806             LDR      R0,[SP, #+24]
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x9000             STR      R0,[SP, #+0]
   \   0000009C   0x4640             MOV      R0,R8
   \   0000009E   0x9900             LDR      R1,[SP, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_fsub
   \   000000A4   0x4607             MOV      R7,R0
   \   000000A6   0x2602             MOVS     R6,#+2
   \   000000A8   0x46D8             MOV      R8,R11
   \   000000AA   0xE004             B.N      ??print_line_from_here_to_there_6
   \                     ??print_line_from_here_to_there_7: (+1)
   \   000000AC   0x4638             MOV      R0,R7
   \   000000AE   0x4639             MOV      R1,R7
   \   000000B0   0x.... 0x....      BL       __aeabi_fmul
   \   000000B4   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_6: (+1)
   \   000000B6   0x07F0             LSLS     R0,R6,#+31
   \   000000B8   0xD504             BPL.N    ??print_line_from_here_to_there_8
   \   000000BA   0x4640             MOV      R0,R8
   \   000000BC   0x4639             MOV      R1,R7
   \   000000BE   0x.... 0x....      BL       __aeabi_fmul
   \   000000C2   0x4680             MOV      R8,R0
   \                     ??print_line_from_here_to_there_8: (+1)
   \   000000C4   0x0876             LSRS     R6,R6,#+1
   \   000000C6   0xD1F1             BNE.N    ??print_line_from_here_to_there_7
   \   000000C8   0x2602             MOVS     R6,#+2
   \   000000CA   0x465F             MOV      R7,R11
   \   000000CC   0xE004             B.N      ??print_line_from_here_to_there_9
   \                     ??print_line_from_here_to_there_10: (+1)
   \   000000CE   0x4650             MOV      R0,R10
   \   000000D0   0x4651             MOV      R1,R10
   \   000000D2   0x.... 0x....      BL       __aeabi_fmul
   \   000000D6   0x4682             MOV      R10,R0
   \                     ??print_line_from_here_to_there_9: (+1)
   \   000000D8   0x07F0             LSLS     R0,R6,#+31
   \   000000DA   0xD504             BPL.N    ??print_line_from_here_to_there_11
   \   000000DC   0x4638             MOV      R0,R7
   \   000000DE   0x4651             MOV      R1,R10
   \   000000E0   0x.... 0x....      BL       __aeabi_fmul
   \   000000E4   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_11: (+1)
   \   000000E6   0x0876             LSRS     R6,R6,#+1
   \   000000E8   0xD1F1             BNE.N    ??print_line_from_here_to_there_10
   \   000000EA   0x4640             MOV      R0,R8
   \   000000EC   0x4639             MOV      R1,R7
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x4682             MOV      R10,R0
    391          
    392                          line_length = HYPOT(ex - sx, ey - sy);
   \   000000F4   0x9800             LDR      R0,[SP, #+0]
   \   000000F6   0x9903             LDR      R1,[SP, #+12]
   \   000000F8   0x.... 0x....      BL       __aeabi_fsub
   \   000000FC   0x4607             MOV      R7,R0
   \   000000FE   0x2602             MOVS     R6,#+2
   \   00000100   0x46D8             MOV      R8,R11
   \   00000102   0xE004             B.N      ??print_line_from_here_to_there_12
   \                     ??print_line_from_here_to_there_13: (+1)
   \   00000104   0x4638             MOV      R0,R7
   \   00000106   0x4639             MOV      R1,R7
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x4607             MOV      R7,R0
   \                     ??print_line_from_here_to_there_12: (+1)
   \   0000010E   0x07F0             LSLS     R0,R6,#+31
   \   00000110   0xD504             BPL.N    ??print_line_from_here_to_there_14
   \   00000112   0x4640             MOV      R0,R8
   \   00000114   0x4639             MOV      R1,R7
   \   00000116   0x.... 0x....      BL       __aeabi_fmul
   \   0000011A   0x4680             MOV      R8,R0
   \                     ??print_line_from_here_to_there_14: (+1)
   \   0000011C   0x0876             LSRS     R6,R6,#+1
   \   0000011E   0xD1F1             BNE.N    ??print_line_from_here_to_there_13
   \   00000120   0x9801             LDR      R0,[SP, #+4]
   \   00000122   0x9904             LDR      R1,[SP, #+16]
   \   00000124   0x.... 0x....      BL       __aeabi_fsub
   \   00000128   0x4606             MOV      R6,R0
   \   0000012A   0x2702             MOVS     R7,#+2
   \   0000012C   0xE004             B.N      ??print_line_from_here_to_there_15
   \                     ??print_line_from_here_to_there_16: (+1)
   \   0000012E   0x4630             MOV      R0,R6
   \   00000130   0x4631             MOV      R1,R6
   \   00000132   0x.... 0x....      BL       __aeabi_fmul
   \   00000136   0x4606             MOV      R6,R0
   \                     ??print_line_from_here_to_there_15: (+1)
   \   00000138   0x07F8             LSLS     R0,R7,#+31
   \   0000013A   0xD504             BPL.N    ??print_line_from_here_to_there_17
   \   0000013C   0x4658             MOV      R0,R11
   \   0000013E   0x4631             MOV      R1,R6
   \   00000140   0x.... 0x....      BL       __aeabi_fmul
   \   00000144   0x4683             MOV      R11,R0
   \                     ??print_line_from_here_to_there_17: (+1)
   \   00000146   0x087F             LSRS     R7,R7,#+1
   \   00000148   0xD1F1             BNE.N    ??print_line_from_here_to_there_16
   \   0000014A   0x4640             MOV      R0,R8
   \   0000014C   0x4659             MOV      R1,R11
   \   0000014E   0x.... 0x....      BL       __aeabi_fadd
   \   00000152   0x.... 0x....      BL       sqrtf
   \   00000156   0x4606             MOV      R6,R0
    393          
    394              // If the end point of the line is closer to the nozzle, flip the direction,
    395              // moving from the end to the start. On very small lines the optimization isn't worth it.
    396              if (dist_end < dist_start && (SIZE_OF_INTERSECTION_CIRCLES) < FABS(line_length))
   \   00000158   0x9902             LDR      R1,[SP, #+8]
   \   0000015A   0x9F11             LDR      R7,[SP, #+68]
   \   0000015C   0x4650             MOV      R0,R10
   \   0000015E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000162   0xD20F             BCS.N    ??print_line_from_here_to_there_18
   \   00000164   0xF026 0x4000      BIC      R0,R6,#0x80000000
   \   00000168   0x....             LDR.N    R1,??DataTable21_22  ;; 0x40a00001
   \   0000016A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000016E   0xD809             BHI.N    ??print_line_from_here_to_there_18
    397                return print_line_from_here_to_there(ex, ey, ez, sx, sy, sz);
   \   00000170   0x9805             LDR      R0,[SP, #+20]
   \   00000172   0x9001             STR      R0,[SP, #+4]
   \   00000174   0x9500             STR      R5,[SP, #+0]
   \   00000176   0x4623             MOV      R3,R4
   \   00000178   0x9806             LDR      R0,[SP, #+24]
   \   0000017A   0x463A             MOV      R2,R7
   \   0000017C   0x4649             MOV      R1,R9
   \   0000017E   0xF7FF 0xFF3F      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
    398          
    399              // Decide whether to retract & bump
    400          
    401              if (dist_start > 2.0) {
    402                retract_filament(destination);
    403                //todo:  parameterize the bump height with a define
    404                move_to(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS] + 0.500, 0.0);  // Z bump to minimize scraping
    405                move_to(sx, sy, sz + 0.500, 0.0); // Get to the starting point with no extrusion while bumped
    406              }
    407          
    408              move_to(sx, sy, sz, 0.0); // Get to the starting point with no extrusion / un-Z bump
    409          
    410              const float e_pos_delta = line_length * g26_e_axis_feedrate * g26_extrusion_multiplier;
    411          
    412              recover_filament(destination);
    413              move_to(ex, ey, ez, e_pos_delta);  // Get to the ending point with an appropriate amount of extrusion
    414            }
   \   00000182   0x....             B.N      ?Subroutine0
   \                     ??print_line_from_here_to_there_18: (+1)
   \   00000184   0x9802             LDR      R0,[SP, #+8]
   \   00000186   0x....             LDR.N    R1,??DataTable21_23  ;; 0x40000001
   \   00000188   0x.... 0x....      LDR.W    R10,??DataTable21_5
   \   0000018C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000190   0xD820             BHI.N    ??print_line_from_here_to_there_19
   \   00000192   0x4650             MOV      R0,R10
   \   00000194   0x.... 0x....      BL       _Z16retract_filamentPKf
   \   00000198   0x....             LDR.N    R0,??DataTable21_1
   \   0000019A   0x6881             LDR      R1,[R0, #+8]
   \   0000019C   0xF04F 0x507C      MOV      R0,#+1056964608
   \   000001A0   0x.... 0x....      BL       __aeabi_fadd
   \   000001A4   0x9003             STR      R0,[SP, #+12]
   \   000001A6   0xAB02             ADD      R3,SP,#+8
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0x9002             STR      R0,[SP, #+8]
   \   000001AC   0xAA03             ADD      R2,SP,#+12
   \   000001AE   0x....             LDR.N    R1,??DataTable21_24
   \   000001B0   0x....             LDR.N    R0,??DataTable21_1
   \   000001B2   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   000001B6   0x9805             LDR      R0,[SP, #+20]
   \   000001B8   0x6801             LDR      R1,[R0, #+0]
   \   000001BA   0xF04F 0x507C      MOV      R0,#+1056964608
   \   000001BE   0x.... 0x....      BL       __aeabi_fadd
   \   000001C2   0x9000             STR      R0,[SP, #+0]
   \   000001C4   0xAB01             ADD      R3,SP,#+4
   \   000001C6   0x2000             MOVS     R0,#+0
   \   000001C8   0x9001             STR      R0,[SP, #+4]
   \   000001CA   0xAA00             ADD      R2,SP,#+0
   \   000001CC   0x4629             MOV      R1,R5
   \   000001CE   0x4620             MOV      R0,R4
   \   000001D0   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \                     ??print_line_from_here_to_there_19: (+1)
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x9001             STR      R0,[SP, #+4]
   \   000001D8   0xAB01             ADD      R3,SP,#+4
   \   000001DA   0x9A05             LDR      R2,[SP, #+20]
   \   000001DC   0x4629             MOV      R1,R5
   \   000001DE   0x4620             MOV      R0,R4
   \   000001E0   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   000001E4   0x....             LDR.N    R4,??DataTable21_9
   \   000001E6   0x6CA0             LDR      R0,[R4, #+72]
   \   000001E8   0x4631             MOV      R1,R6
   \   000001EA   0x.... 0x....      BL       __aeabi_fmul
   \   000001EE   0x6D21             LDR      R1,[R4, #+80]
   \   000001F0   0x.... 0x....      BL       __aeabi_fmul
   \   000001F4   0x9000             STR      R0,[SP, #+0]
   \   000001F6   0x4650             MOV      R0,R10
   \   000001F8   0x.... 0x....      BL       _Z16recover_filamentPKf
   \   000001FC   0x9806             LDR      R0,[SP, #+24]
   \   000001FE   0xAB00             ADD      R3,SP,#+0
   \   00000200   0x463A             MOV      R2,R7
   \   00000202   0x4649             MOV      R1,R9
   \   00000204   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   00000208                      REQUIRE ?Subroutine0
   \   00000208                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xB007             ADD      SP,SP,#+28
   \   00000002   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    415          

   \                                 In section .text, align 4
    416            inline bool look_for_lines_to_connect() {
   \                     _Z25look_for_lines_to_connectv: (+1)
   \   00000000   0xE92D 0x4EF0      PUSH     {R4-R7,R9-R11,LR}
   \   00000004   0xB096             SUB      SP,SP,#+88
    417              float sx, sy, ex, ey;
    418          
    419              for (uint8_t i = 0; i < GRID_MAX_POINTS_X; i++) {
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x9006             STR      R0,[SP, #+24]
   \   0000000A   0xF8DF 0x0828      LDR.W    R0,??look_for_lines_to_connect_0
   \   0000000E   0xE004             B.N      ??look_for_lines_to_connect_1
   \                     ??look_for_lines_to_connect_2: (+1)
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0xB2C0             UXTB     R0,R0
   \   00000014   0x9006             STR      R0,[SP, #+24]
   \   00000016   0x980D             LDR      R0,[SP, #+52]
   \   00000018   0x1D00             ADDS     R0,R0,#+4
   \                     ??look_for_lines_to_connect_1: (+1)
   \   0000001A   0x900D             STR      R0,[SP, #+52]
   \   0000001C   0xF8DF 0x0818      LDR.W    R0,??look_for_lines_to_connect_0+0x4
   \   00000020   0x9009             STR      R0,[SP, #+36]
   \   00000022   0x9909             LDR      R1,[SP, #+36]
   \   00000024   0x9806             LDR      R0,[SP, #+24]
   \   00000026   0x7F89             LDRB     R1,[R1, #+30]
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xF280 0x83FE      BGE.W    ??look_for_lines_to_connect_3
    420                for (uint8_t j = 0; j < GRID_MAX_POINTS_Y; j++) {
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x9007             STR      R0,[SP, #+28]
   \   00000032   0xF8DF 0x0808      LDR.W    R0,??look_for_lines_to_connect_0+0x8
   \   00000036   0x9906             LDR      R1,[SP, #+24]
   \   00000038   0x900E             STR      R0,[SP, #+56]
   \   0000003A   0xF8DF 0x0804      LDR.W    R0,??look_for_lines_to_connect_0+0xC
   \   0000003E   0x900C             STR      R0,[SP, #+48]
   \   00000040   0xF8DF 0x0800      LDR.W    R0,??look_for_lines_to_connect_0+0x10
   \   00000044   0x900B             STR      R0,[SP, #+44]
   \   00000046   0xF8DF 0x0800      LDR.W    R0,??look_for_lines_to_connect_0+0x14
   \   0000004A   0x900A             STR      R0,[SP, #+40]
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x4088             LSLS     R0,R0,R1
   \   00000050   0x900F             STR      R0,[SP, #+60]
   \   00000052   0x9806             LDR      R0,[SP, #+24]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x9010             STR      R0,[SP, #+64]
   \   00000058   0x9806             LDR      R0,[SP, #+24]
   \   0000005A   0x1C40             ADDS     R0,R0,#+1
   \   0000005C   0xF88D 0x0020      STRB     R0,[SP, #+32]
   \   00000060   0xE0B2             B.N      ??look_for_lines_to_connect_4
    421          
    422                  #if ENABLED(NEWPANEL)
    423                    if (user_canceled()) return true;     // Check if the user wants to stop the Mesh Validation
    424                  #endif
    425          
    426                  if (i < GRID_MAX_POINTS_X) { // We can't connect to anything to the right than GRID_MAX_POINTS_X.
    427                                               // This is already a half circle because we are at the edge of the bed.
    428          
    429                    if (is_bitmap_set(circle_flags, i, j) && is_bitmap_set(circle_flags, i + 1, j)) { // check if we can do a line to the left
    430                      if (!is_bitmap_set(horizontal_mesh_line_flags, i, j)) {
    431          
    432                        //
    433                        // We found two circles that need a horizontal line to connect them
    434                        // Print it!
    435                        //
    436                        if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_BILINEAR)
    437                        {
    438                            sx = _GET_MESH_X_ABL(  i  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // right edge
    439                            ex = _GET_MESH_X_ABL(i + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // left edge
    440          
    441                            sx = constrain(sx, X_MIN_POS + 1, X_MAX_POS - 1);
    442                            sy = ey = constrain(_GET_MESH_Y_ABL(j), Y_MIN_POS + 1, Y_MAX_POS - 1);
    443                            ex = constrain(ex, X_MIN_POS + 1, X_MAX_POS - 1);                  
    444                        }
    445                        else if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    446                        {
    447                            sx = _GET_MESH_X_UBL(  i  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // right edge
    448                            ex = _GET_MESH_X_UBL(i + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // left edge       
    449                            
    450                            sx = constrain(sx, X_MIN_POS + 1, X_MAX_POS - 1);
    451                            sy = ey = constrain(_GET_MESH_Y_UBL(j), Y_MIN_POS + 1, Y_MAX_POS - 1);
    452                            ex = constrain(ex, X_MIN_POS + 1, X_MAX_POS - 1);                  
    453                        }
    454                        else if(BED_LEVELING_METHOD & MESH_BED_LEVELING)
    455                        {
    456                            sx = _GET_MESH_X_MBL(  i  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // right edge
    457                            ex = _GET_MESH_X_MBL(i + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // left edge   
    458                            
    459                            sx = constrain(sx, X_MIN_POS + 1, X_MAX_POS - 1);
    460                            sy = ey = constrain(_GET_MESH_Y_MBL(j), Y_MIN_POS + 1, Y_MAX_POS - 1);
    461                            ex = constrain(ex, X_MIN_POS + 1, X_MAX_POS - 1);                  
    462                        }
    463          
    464          
    465                      if(MACHINETPYE & IS_KINEMATIC)
    466                      {
    467                        if (position_is_reachable_IS_KINEMATIC(sx, sy) && position_is_reachable_IS_KINEMATIC(ex, ey)) {
    468          
    469                          if (g26_debug_flag) {
    470                            SERIAL_ECHOPAIR(" Connecting with horizontal line (sx=", sx);
    471                            SERIAL_ECHOPAIR(", sy=", sy);
    472                            SERIAL_ECHOPAIR(") -> (ex=", ex);
    473                            SERIAL_ECHOPAIR(", ey=", ey);
    474                            SERIAL_CHAR(')');
    475                            SERIAL_EOL();
    476                            //debug_current_and_destination(PSTR("Connecting horizontal line."));
    477                          }
    478                          print_line_from_here_to_there(sx, sy, g26_layer_height, ex, ey, g26_layer_height);
    479                        }
    480                      }
    481                      else
    482                      {
    483                            if (position_is_reachable_IS_CARTESIAN(sx, sy) && position_is_reachable_IS_CARTESIAN(ex, ey)) {
    484              
    485                              if (g26_debug_flag) {
    486                                SERIAL_ECHOPAIR(" Connecting with horizontal line (sx=", sx);
    487                                SERIAL_ECHOPAIR(", sy=", sy);
    488                                SERIAL_ECHOPAIR(") -> (ex=", ex);
    489                                SERIAL_ECHOPAIR(", ey=", ey);
    490                                SERIAL_CHAR(')');
    491                                SERIAL_EOL();
    492                                //debug_current_and_destination(PSTR("Connecting horizontal line."));
    493                              }
    494                              print_line_from_here_to_there(sx, sy, g26_layer_height, ex, ey, g26_layer_height);
    495                            }
    496                      }
    497                      
    498                        bitmap_set(horizontal_mesh_line_flags, i, j);   // Mark it as done so we don't do it again, even if we skipped it
    499                      }
    500                    }
    501          
    502                    if (j < GRID_MAX_POINTS_Y) { // We can't connect to anything further back than GRID_MAX_POINTS_Y.
    503                                                     // This is already a half circle because we are at the edge  of the bed.
    504          
    505                      if (is_bitmap_set(circle_flags, i, j) && is_bitmap_set(circle_flags, i, j + 1)) { // check if we can do a line straight down
    506                        if (!is_bitmap_set( vertical_mesh_line_flags, i, j)) {
    507                          //
    508                          // We found two circles that need a vertical line to connect them
    509                          // Print it!
    510                          //
    511                          if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_BILINEAR)
    512                          {
    513                              sy = _GET_MESH_Y_ABL(  j  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // top edge
    514                              ey = _GET_MESH_Y_ABL(j + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // bottom edge
    515          
    516                              sx = ex = constrain(_GET_MESH_X_ABL(i), X_MIN_POS + 1, X_MAX_POS - 1);
    517                              sy = constrain(sy, Y_MIN_POS + 1, Y_MAX_POS - 1);
    518                              ey = constrain(ey, Y_MIN_POS + 1, Y_MAX_POS - 1);
    519                          }
    520                          else if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    521                          {
    522                              sy = _GET_MESH_Y_UBL(  j  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // top edge
    523                              ey = _GET_MESH_Y_UBL(j + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // bottom edge
    524          
    525                              sx = ex = constrain(_GET_MESH_X_UBL(i), X_MIN_POS + 1, X_MAX_POS - 1);
    526                              sy = constrain(sy, Y_MIN_POS + 1, Y_MAX_POS - 1);
    527                              ey = constrain(ey, Y_MIN_POS + 1, Y_MAX_POS - 1);
    528                          }
    529                          else if(BED_LEVELING_METHOD & MESH_BED_LEVELING)
    530                          {
    531                              sy = _GET_MESH_Y_MBL(  j  ) + (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // top edge
    532                              ey = _GET_MESH_Y_MBL(j + 1) - (SIZE_OF_INTERSECTION_CIRCLES - (SIZE_OF_CROSSHAIRS)); // bottom edge
    533          
    534                              sx = ex = constrain(_GET_MESH_X_MBL(i), X_MIN_POS + 1, X_MAX_POS - 1);
    535                              sy = constrain(sy, Y_MIN_POS + 1, Y_MAX_POS - 1);
    536                              ey = constrain(ey, Y_MIN_POS + 1, Y_MAX_POS - 1);
    537                          }
    538                          
    539                          if(MACHINETPYE & IS_KINEMATIC)
    540                          {
    541                              if (position_is_reachable_IS_KINEMATIC(sx, sy) && position_is_reachable_IS_KINEMATIC(ex, ey)) {
    542          
    543                                if (g26_debug_flag) {
    544                                  SERIAL_ECHOPAIR(" Connecting with vertical line (sx=", sx);
    545                                  SERIAL_ECHOPAIR(", sy=", sy);
    546                                  SERIAL_ECHOPAIR(") -> (ex=", ex);
    547                                  SERIAL_ECHOPAIR(", ey=", ey);
    548                                  SERIAL_CHAR(')');
    549                                  SERIAL_EOL();
    550          
    551                                  //#if ENABLED(AUTO_BED_LEVELING_UBL)
    552                                  if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    553                                    debug_current_and_destination(PSTR("Connecting vertical line."));
    554                                  //#endif
    555                                }
    556                                print_line_from_here_to_there(sx, sy, g26_layer_height, ex, ey, g26_layer_height);
    557                              }
    558                          }
    559                          else
    560                          {
    561                              if (position_is_reachable_IS_CARTESIAN(sx, sy) && position_is_reachable_IS_CARTESIAN(ex, ey)) {
   \                     ??look_for_lines_to_connect_5: (+1)
   \   00000062   0xF8DF 0x07E8      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000066   0x6880             LDR      R0,[R0, #+8]
   \   00000068   0x.... 0x....      BL       __aeabi_f2d
   \   0000006C   0xF8DF 0x27E0      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   00000070   0xF8DF 0x37E0      LDR.W    R3,??look_for_lines_to_connect_0+0x20  ;; 0xbf50624d
   \   00000074   0x.... 0x....      BL       __aeabi_dadd
   \   00000078   0xE9CD 0x0112      STRD     R0,R1,[SP, #+72]
   \   0000007C   0x9803             LDR      R0,[SP, #+12]
   \   0000007E   0x.... 0x....      BL       __aeabi_f2d
   \   00000082   0xE9DD 0x2312      LDRD     R2,R3,[SP, #+72]
   \   00000086   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000008A   0x4604             MOV      R4,R0
   \   0000008C   0x460D             MOV      R5,R1
   \   0000008E   0xF200 0x8085      BHI.W    ??look_for_lines_to_connect_6
   \   00000092   0x68F0             LDR      R0,[R6, #+12]
   \   00000094   0x.... 0x....      BL       __aeabi_f2d
   \   00000098   0xF8DF 0x27B4      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   0000009C   0xF8DF 0x37B8      LDR.W    R3,??look_for_lines_to_connect_0+0x24  ;; 0x3f50624d
   \   000000A0   0x.... 0x....      BL       __aeabi_dadd
   \   000000A4   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000A8   0x4622             MOV      R2,R4
   \   000000AA   0x462B             MOV      R3,R5
   \   000000AC   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000B0   0xD874             BHI.N    ??look_for_lines_to_connect_6
   \   000000B2   0x6870             LDR      R0,[R6, #+4]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0xF8DF 0x2794      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   000000BC   0xF8DF 0x3794      LDR.W    R3,??look_for_lines_to_connect_0+0x20  ;; 0xbf50624d
   \   000000C0   0x.... 0x....      BL       __aeabi_dadd
   \   000000C4   0x4682             MOV      R10,R0
   \   000000C6   0x9802             LDR      R0,[SP, #+8]
   \   000000C8   0x468B             MOV      R11,R1
   \   000000CA   0x.... 0x....      BL       __aeabi_f2d
   \   000000CE   0x4652             MOV      R2,R10
   \   000000D0   0x465B             MOV      R3,R11
   \   000000D2   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000D6   0x4607             MOV      R7,R0
   \   000000D8   0x4689             MOV      R9,R1
   \   000000DA   0xD85F             BHI.N    ??look_for_lines_to_connect_6
   \   000000DC   0x6930             LDR      R0,[R6, #+16]
   \   000000DE   0x.... 0x....      BL       __aeabi_f2d
   \   000000E2   0xF8DF 0x276C      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   000000E6   0xF8DF 0x3770      LDR.W    R3,??look_for_lines_to_connect_0+0x24  ;; 0x3f50624d
   \   000000EA   0x.... 0x....      BL       __aeabi_dadd
   \   000000EE   0x463A             MOV      R2,R7
   \   000000F0   0x464B             MOV      R3,R9
   \   000000F2   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000F6   0x4604             MOV      R4,R0
   \   000000F8   0x460D             MOV      R5,R1
   \   000000FA   0xD84F             BHI.N    ??look_for_lines_to_connect_6
   \   000000FC   0x9805             LDR      R0,[SP, #+20]
   \   000000FE   0x.... 0x....      BL       __aeabi_f2d
   \   00000102   0xE9DD 0x2312      LDRD     R2,R3,[SP, #+72]
   \   00000106   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000010A   0x4606             MOV      R6,R0
   \   0000010C   0x460F             MOV      R7,R1
   \   0000010E   0xD845             BHI.N    ??look_for_lines_to_connect_6
   \   00000110   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000114   0x4632             MOV      R2,R6
   \   00000116   0x463B             MOV      R3,R7
   \   00000118   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000011C   0xD83E             BHI.N    ??look_for_lines_to_connect_6
   \   0000011E   0x9804             LDR      R0,[SP, #+16]
   \   00000120   0x.... 0x....      BL       __aeabi_f2d
   \   00000124   0x4652             MOV      R2,R10
   \   00000126   0x465B             MOV      R3,R11
   \   00000128   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000012C   0x4606             MOV      R6,R0
   \   0000012E   0x460F             MOV      R7,R1
   \   00000130   0xD834             BHI.N    ??look_for_lines_to_connect_6
   \   00000132   0x4620             MOV      R0,R4
   \   00000134   0x4629             MOV      R1,R5
   \   00000136   0x4632             MOV      R2,R6
   \   00000138   0x463B             MOV      R3,R7
   \   0000013A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000013E   0xD82D             BHI.N    ??look_for_lines_to_connect_6
    562          
    563                                if (g26_debug_flag) {
   \                     ??look_for_lines_to_connect_7: (+1)
   \   00000140   0xF8DF 0x0718      LDR.W    R0,??look_for_lines_to_connect_0+0x28
   \   00000144   0x7800             LDRB     R0,[R0, #+0]
   \   00000146   0xB1E8             CBZ.N    R0,??look_for_lines_to_connect_8
    564                                  SERIAL_ECHOPAIR(" Connecting with vertical line (sx=", sx);
   \   00000148   0x9903             LDR      R1,[SP, #+12]
   \   0000014A   0xF8DF 0x0714      LDR.W    R0,??look_for_lines_to_connect_0+0x2C
   \   0000014E   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
    565                                  SERIAL_ECHOPAIR(", sy=", sy);
   \   00000152   0x9902             LDR      R1,[SP, #+8]
   \   00000154   0xF8DF 0x070C      LDR.W    R0,??look_for_lines_to_connect_0+0x30
   \   00000158   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
    566                                  SERIAL_ECHOPAIR(") -> (ex=", ex);
   \   0000015C   0x9905             LDR      R1,[SP, #+20]
   \   0000015E   0xF8DF 0x0708      LDR.W    R0,??look_for_lines_to_connect_0+0x34
   \   00000162   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
    567                                  SERIAL_ECHOPAIR(", ey=", ey);
   \   00000166   0x9904             LDR      R1,[SP, #+16]
   \   00000168   0xF8DF 0x0700      LDR.W    R0,??look_for_lines_to_connect_0+0x38
   \   0000016C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
    568                                  SERIAL_CHAR(')');
   \   00000170   0xF8DF 0x06FC      LDR.W    R0,??look_for_lines_to_connect_0+0x3C
   \   00000174   0x2129             MOVS     R1,#+41
   \   00000176   0x.... 0x....      BL       _ZN10USARTClass5writeEh
    569                                  SERIAL_EOL();
   \   0000017A   0x210A             MOVS     R1,#+10
   \   0000017C   0xF8DF 0x06F0      LDR.W    R0,??look_for_lines_to_connect_0+0x3C
   \   00000180   0x.... 0x....      BL       _ZN10USARTClass5writeEh
    570          
    571                                  //#if ENABLED(AUTO_BED_LEVELING_UBL)
    572                                  if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    573                                    debug_current_and_destination(PSTR("Connecting vertical line."));
    574                                  //#endif
    575                                }
    576                                print_line_from_here_to_there(sx, sy, g26_layer_height, ex, ey, g26_layer_height);
   \                     ??look_for_lines_to_connect_8: (+1)
   \   00000184   0xF8DF 0x06EC      LDR.W    R0,??look_for_lines_to_connect_0+0x40
   \   00000188   0xF8DF 0x26E8      LDR.W    R2,??look_for_lines_to_connect_0+0x40
   \   0000018C   0x9001             STR      R0,[SP, #+4]
   \   0000018E   0xAB05             ADD      R3,SP,#+20
   \   00000190   0xA804             ADD      R0,SP,#+16
   \   00000192   0x9000             STR      R0,[SP, #+0]
   \   00000194   0xA902             ADD      R1,SP,#+8
   \   00000196   0xA803             ADD      R0,SP,#+12
   \   00000198   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
    577                              }
    578                            }    
    579                          
    580                          bitmap_set(vertical_mesh_line_flags, i, j);   // Mark it as done so we don't do it again, even if skipped
   \                     ??look_for_lines_to_connect_6: (+1)
   \   0000019C   0x980A             LDR      R0,[SP, #+40]
   \   0000019E   0x990F             LDR      R1,[SP, #+60]
   \   000001A0   0x6800             LDR      R0,[R0, #+0]
   \   000001A2   0x4308             ORRS     R0,R1,R0
   \   000001A4   0x990A             LDR      R1,[SP, #+40]
   \   000001A6   0x6008             STR      R0,[R1, #+0]
   \                     ??look_for_lines_to_connect_9: (+1)
   \   000001A8   0x9807             LDR      R0,[SP, #+28]
   \   000001AA   0x1C40             ADDS     R0,R0,#+1
   \   000001AC   0xB2C0             UXTB     R0,R0
   \   000001AE   0x9007             STR      R0,[SP, #+28]
   \   000001B0   0x980A             LDR      R0,[SP, #+40]
   \   000001B2   0x1D00             ADDS     R0,R0,#+4
   \   000001B4   0x900A             STR      R0,[SP, #+40]
   \   000001B6   0x980B             LDR      R0,[SP, #+44]
   \   000001B8   0x1D00             ADDS     R0,R0,#+4
   \   000001BA   0x900B             STR      R0,[SP, #+44]
   \   000001BC   0x980C             LDR      R0,[SP, #+48]
   \   000001BE   0x1D00             ADDS     R0,R0,#+4
   \   000001C0   0x900C             STR      R0,[SP, #+48]
   \   000001C2   0x980E             LDR      R0,[SP, #+56]
   \   000001C4   0x1D00             ADDS     R0,R0,#+4
   \   000001C6   0x900E             STR      R0,[SP, #+56]
   \                     ??look_for_lines_to_connect_4: (+1)
   \   000001C8   0x9909             LDR      R1,[SP, #+36]
   \   000001CA   0x9807             LDR      R0,[SP, #+28]
   \   000001CC   0x7FC9             LDRB     R1,[R1, #+31]
   \   000001CE   0x4288             CMP      R0,R1
   \   000001D0   0x9806             LDR      R0,[SP, #+24]
   \   000001D2   0xF6BF 0xAF1D      BGE.W    ??look_for_lines_to_connect_2
   \   000001D6   0x9909             LDR      R1,[SP, #+36]
   \   000001D8   0x7F89             LDRB     R1,[R1, #+30]
   \   000001DA   0x4288             CMP      R0,R1
   \   000001DC   0xDAE4             BGE.N    ??look_for_lines_to_connect_9
   \   000001DE   0x980E             LDR      R0,[SP, #+56]
   \   000001E0   0x9906             LDR      R1,[SP, #+24]
   \   000001E2   0x6800             LDR      R0,[R0, #+0]
   \   000001E4   0xFA20 0xF101      LSR      R1,R0,R1
   \   000001E8   0x07C9             LSLS     R1,R1,#+31
   \   000001EA   0xF140 0x81DD      BPL.W    ??look_for_lines_to_connect_10
   \   000001EE   0xF89D 0x1020      LDRB     R1,[SP, #+32]
   \   000001F2   0x40C8             LSRS     R0,R0,R1
   \   000001F4   0x07C0             LSLS     R0,R0,#+31
   \   000001F6   0xF140 0x81D7      BPL.W    ??look_for_lines_to_connect_10
   \   000001FA   0x980C             LDR      R0,[SP, #+48]
   \   000001FC   0x9906             LDR      R1,[SP, #+24]
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x40C8             LSRS     R0,R0,R1
   \   00000202   0x07C0             LSLS     R0,R0,#+31
   \   00000204   0xF100 0x81D0      BMI.W    ??look_for_lines_to_connect_10
   \   00000208   0xF8DF 0x0640      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   0000020C   0xF8DF 0x6668      LDR.W    R6,??look_for_lines_to_connect_0+0x44
   \   00000210   0xF890 0x0042      LDRB     R0,[R0, #+66]
   \   00000214   0x0701             LSLS     R1,R0,#+28
   \   00000216   0xD55D             BPL.N    ??look_for_lines_to_connect_11
   \   00000218   0xF8DF 0x0660      LDR.W    R0,??look_for_lines_to_connect_0+0x48
   \   0000021C   0x6804             LDR      R4,[R0, #+0]
   \   0000021E   0xF8DF 0x0660      LDR.W    R0,??look_for_lines_to_connect_0+0x4C
   \   00000222   0x6805             LDR      R5,[R0, #+0]
   \   00000224   0x9806             LDR      R0,[SP, #+24]
   \   00000226   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   0000022A   0x1C80             ADDS     R0,R0,#+2
   \   0000022C   0x.... 0x....      BL       __aeabi_i2f
   \   00000230   0x9003             STR      R0,[SP, #+12]
   \   00000232   0x9810             LDR      R0,[SP, #+64]
   \   00000234   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   00000238   0x1E80             SUBS     R0,R0,#+2
   \   0000023A   0x.... 0x....      BL       __aeabi_i2f
   \   0000023E   0x9005             STR      R0,[SP, #+20]
   \   00000240   0xF8DF 0x0608      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000244   0x6881             LDR      R1,[R0, #+8]
   \   00000246   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000024A   0x.... 0x....      BL       __aeabi_fadd
   \   0000024E   0x4601             MOV      R1,R0
   \   00000250   0x9803             LDR      R0,[SP, #+12]
   \   00000252   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000256   0xBF38             IT       CC 
   \   00000258   0x9103             STRCC    R1,[SP, #+12]
   \   0000025A   0xD309             BCC.N    ??look_for_lines_to_connect_12
   \   0000025C   0x68F1             LDR      R1,[R6, #+12]
   \   0000025E   0xF8DF 0x0624      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   00000262   0x.... 0x....      BL       __aeabi_fadd
   \   00000266   0x9903             LDR      R1,[SP, #+12]
   \   00000268   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000026C   0xBF38             IT       CC 
   \   0000026E   0x9003             STRCC    R0,[SP, #+12]
   \                     ??look_for_lines_to_connect_12: (+1)
   \   00000270   0xF8DF 0x060C      LDR.W    R0,??look_for_lines_to_connect_0+0x4C
   \   00000274   0xF8DF 0x2604      LDR.W    R2,??look_for_lines_to_connect_0+0x48
   \   00000278   0x6840             LDR      R0,[R0, #+4]
   \   0000027A   0x9907             LDR      R1,[SP, #+28]
   \   0000027C   0x6852             LDR      R2,[R2, #+4]
   \   0000027E   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000282   0x.... 0x....      BL       __aeabi_i2f
   \   00000286   0x4604             MOV      R4,R0
   \   00000288   0x6871             LDR      R1,[R6, #+4]
   \   0000028A   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000028E   0x.... 0x....      BL       __aeabi_fadd
   \   00000292   0x4601             MOV      R1,R0
   \   00000294   0x4620             MOV      R0,R4
   \   00000296   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000029A   0xBF38             IT       CC 
   \   0000029C   0x460C             MOVCC    R4,R1
   \   0000029E   0xD309             BCC.N    ??look_for_lines_to_connect_13
   \   000002A0   0x6931             LDR      R1,[R6, #+16]
   \   000002A2   0xF8DF 0x05E0      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   000002A6   0x.... 0x....      BL       __aeabi_fadd
   \   000002AA   0x4621             MOV      R1,R4
   \   000002AC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002B0   0xBF38             IT       CC 
   \   000002B2   0x4604             MOVCC    R4,R0
   \                     ??look_for_lines_to_connect_13: (+1)
   \   000002B4   0xF8DF 0x0594      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   000002B8   0x6881             LDR      R1,[R0, #+8]
   \   000002BA   0x9404             STR      R4,[SP, #+16]
   \   000002BC   0x9402             STR      R4,[SP, #+8]
   \   000002BE   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000002C2   0x.... 0x....      BL       __aeabi_fadd
   \   000002C6   0x4601             MOV      R1,R0
   \   000002C8   0x9805             LDR      R0,[SP, #+20]
   \   000002CA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002CE   0xF0C0 0x80AE      BCC.W    ??look_for_lines_to_connect_14
   \   000002D2   0xE0B4             B.N      ??look_for_lines_to_connect_15
   \                     ??look_for_lines_to_connect_11: (+1)
   \   000002D4   0x06C1             LSLS     R1,R0,#+27
   \   000002D6   0xD55C             BPL.N    ??look_for_lines_to_connect_16
   \   000002D8   0x9806             LDR      R0,[SP, #+24]
   \   000002DA   0xB2C0             UXTB     R0,R0
   \   000002DC   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   000002E0   0xF04F 0x4180      MOV      R1,#+1073741824
   \   000002E4   0x.... 0x....      BL       __aeabi_fadd
   \   000002E8   0x9003             STR      R0,[SP, #+12]
   \   000002EA   0xF89D 0x0020      LDRB     R0,[SP, #+32]
   \   000002EE   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   000002F2   0xF04F 0x4140      MOV      R1,#-1073741824
   \   000002F6   0x.... 0x....      BL       __aeabi_fadd
   \   000002FA   0x9005             STR      R0,[SP, #+20]
   \   000002FC   0xF8DF 0x054C      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000300   0x6881             LDR      R1,[R0, #+8]
   \   00000302   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000306   0x.... 0x....      BL       __aeabi_fadd
   \   0000030A   0x4601             MOV      R1,R0
   \   0000030C   0x9803             LDR      R0,[SP, #+12]
   \   0000030E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000312   0xBF38             IT       CC 
   \   00000314   0x9103             STRCC    R1,[SP, #+12]
   \   00000316   0xD309             BCC.N    ??look_for_lines_to_connect_17
   \   00000318   0x68F1             LDR      R1,[R6, #+12]
   \   0000031A   0xF8DF 0x0568      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   0000031E   0x.... 0x....      BL       __aeabi_fadd
   \   00000322   0x9903             LDR      R1,[SP, #+12]
   \   00000324   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000328   0xBF38             IT       CC 
   \   0000032A   0x9003             STRCC    R0,[SP, #+12]
   \                     ??look_for_lines_to_connect_17: (+1)
   \   0000032C   0x9807             LDR      R0,[SP, #+28]
   \   0000032E   0xB2C0             UXTB     R0,R0
   \   00000330   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   00000334   0x4604             MOV      R4,R0
   \   00000336   0x6871             LDR      R1,[R6, #+4]
   \   00000338   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000033C   0x.... 0x....      BL       __aeabi_fadd
   \   00000340   0x4602             MOV      R2,R0
   \   00000342   0x4620             MOV      R0,R4
   \   00000344   0x4611             MOV      R1,R2
   \   00000346   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000034A   0xD313             BCC.N    ??look_for_lines_to_connect_18
   \   0000034C   0x9807             LDR      R0,[SP, #+28]
   \   0000034E   0xB2C0             UXTB     R0,R0
   \   00000350   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   00000354   0x4604             MOV      R4,R0
   \   00000356   0x6931             LDR      R1,[R6, #+16]
   \   00000358   0xF8DF 0x0528      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   0000035C   0x.... 0x....      BL       __aeabi_fadd
   \   00000360   0x4621             MOV      R1,R4
   \   00000362   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000366   0x4602             MOV      R2,R0
   \   00000368   0xD304             BCC.N    ??look_for_lines_to_connect_18
   \   0000036A   0x9807             LDR      R0,[SP, #+28]
   \   0000036C   0xB2C0             UXTB     R0,R0
   \   0000036E   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   00000372   0x4602             MOV      R2,R0
   \                     ??look_for_lines_to_connect_18: (+1)
   \   00000374   0xF8DF 0x04D4      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000378   0x6881             LDR      R1,[R0, #+8]
   \   0000037A   0x9204             STR      R2,[SP, #+16]
   \   0000037C   0x9202             STR      R2,[SP, #+8]
   \   0000037E   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000382   0x.... 0x....      BL       __aeabi_fadd
   \   00000386   0x4601             MOV      R1,R0
   \   00000388   0x9805             LDR      R0,[SP, #+20]
   \   0000038A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000038E   0xD34E             BCC.N    ??look_for_lines_to_connect_14
   \   00000390   0xE055             B.N      ??look_for_lines_to_connect_15
   \                     ??look_for_lines_to_connect_16: (+1)
   \   00000392   0x0680             LSLS     R0,R0,#+26
   \   00000394   0xD55D             BPL.N    ??look_for_lines_to_connect_19
   \   00000396   0x980D             LDR      R0,[SP, #+52]
   \   00000398   0x6801             LDR      R1,[R0, #+0]
   \   0000039A   0xF04F 0x4080      MOV      R0,#+1073741824
   \   0000039E   0x.... 0x....      BL       __aeabi_fadd
   \   000003A2   0x9003             STR      R0,[SP, #+12]
   \   000003A4   0x980D             LDR      R0,[SP, #+52]
   \   000003A6   0x6841             LDR      R1,[R0, #+4]
   \   000003A8   0xF04F 0x4040      MOV      R0,#-1073741824
   \   000003AC   0x.... 0x....      BL       __aeabi_fadd
   \   000003B0   0x9005             STR      R0,[SP, #+20]
   \   000003B2   0xF8DF 0x0498      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   000003B6   0x6881             LDR      R1,[R0, #+8]
   \   000003B8   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000003BC   0x.... 0x....      BL       __aeabi_fadd
   \   000003C0   0x4601             MOV      R1,R0
   \   000003C2   0x9803             LDR      R0,[SP, #+12]
   \   000003C4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003C8   0xBF38             IT       CC 
   \   000003CA   0x9103             STRCC    R1,[SP, #+12]
   \   000003CC   0xD309             BCC.N    ??look_for_lines_to_connect_20
   \   000003CE   0x68F1             LDR      R1,[R6, #+12]
   \   000003D0   0xF8DF 0x04B0      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   000003D4   0x.... 0x....      BL       __aeabi_fadd
   \   000003D8   0x9903             LDR      R1,[SP, #+12]
   \   000003DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003DE   0xBF38             IT       CC 
   \   000003E0   0x9003             STRCC    R0,[SP, #+12]
   \                     ??look_for_lines_to_connect_20: (+1)
   \   000003E2   0x6871             LDR      R1,[R6, #+4]
   \   000003E4   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000003E8   0x.... 0x....      BL       __aeabi_fadd
   \   000003EC   0x4602             MOV      R2,R0
   \   000003EE   0x980B             LDR      R0,[SP, #+44]
   \   000003F0   0x6804             LDR      R4,[R0, #+0]
   \   000003F2   0x4620             MOV      R0,R4
   \   000003F4   0x4611             MOV      R1,R2
   \   000003F6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003FA   0xD30A             BCC.N    ??look_for_lines_to_connect_21
   \   000003FC   0x6931             LDR      R1,[R6, #+16]
   \   000003FE   0xF8DF 0x0484      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   00000402   0x.... 0x....      BL       __aeabi_fadd
   \   00000406   0x4621             MOV      R1,R4
   \   00000408   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000040C   0x4602             MOV      R2,R0
   \   0000040E   0xBF28             IT       CS 
   \   00000410   0x4622             MOVCS    R2,R4
   \                     ??look_for_lines_to_connect_21: (+1)
   \   00000412   0xF8DF 0x0438      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000416   0x6881             LDR      R1,[R0, #+8]
   \   00000418   0x9204             STR      R2,[SP, #+16]
   \   0000041A   0x9202             STR      R2,[SP, #+8]
   \   0000041C   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000420   0x.... 0x....      BL       __aeabi_fadd
   \   00000424   0x4601             MOV      R1,R0
   \   00000426   0x9805             LDR      R0,[SP, #+20]
   \   00000428   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000042C   0xD207             BCS.N    ??look_for_lines_to_connect_15
   \                     ??look_for_lines_to_connect_14: (+1)
   \   0000042E   0xF8DF 0x041C      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   00000432   0x6881             LDR      R1,[R0, #+8]
   \   00000434   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000438   0x.... 0x....      BL       __aeabi_fadd
   \   0000043C   0xE008             B.N      ??look_for_lines_to_connect_22
   \                     ??look_for_lines_to_connect_15: (+1)
   \   0000043E   0x68F1             LDR      R1,[R6, #+12]
   \   00000440   0xF8DF 0x0440      LDR.W    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   00000444   0x.... 0x....      BL       __aeabi_fadd
   \   00000448   0x9905             LDR      R1,[SP, #+20]
   \   0000044A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000044E   0xD200             BCS.N    ??look_for_lines_to_connect_19
   \                     ??look_for_lines_to_connect_22: (+1)
   \   00000450   0x9005             STR      R0,[SP, #+20]
   \                     ??look_for_lines_to_connect_19: (+1)
   \   00000452   0x9809             LDR      R0,[SP, #+36]
   \   00000454   0x8AC0             LDRH     R0,[R0, #+22]
   \   00000456   0xF240 0x3102      MOVW     R1,#+770
   \   0000045A   0x4208             TST      R0,R1
   \   0000045C   0xD00D             BEQ.N    ??look_for_lines_to_connect_23
   \   0000045E   0xA902             ADD      R1,SP,#+8
   \   00000460   0xA803             ADD      R0,SP,#+12
   \   00000462   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000466   0x2800             CMP      R0,#+0
   \   00000468   0xF000 0x8098      BEQ.W    ??look_for_lines_to_connect_24
   \   0000046C   0xA904             ADD      R1,SP,#+16
   \   0000046E   0xA805             ADD      R0,SP,#+20
   \   00000470   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000474   0x2800             CMP      R0,#+0
   \   00000476   0xD16C             BNE.N    ??look_for_lines_to_connect_25
   \   00000478   0xE090             B.N      ??look_for_lines_to_connect_24
   \                     ??look_for_lines_to_connect_23: (+1)
   \   0000047A   0xF8DF 0x03D0      LDR.W    R0,??look_for_lines_to_connect_0+0x18
   \   0000047E   0x6880             LDR      R0,[R0, #+8]
   \   00000480   0x.... 0x....      BL       __aeabi_f2d
   \   00000484   0xF8DF 0x23C8      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   00000488   0xF8DF 0x33C8      LDR.W    R3,??look_for_lines_to_connect_0+0x20  ;; 0xbf50624d
   \   0000048C   0x.... 0x....      BL       __aeabi_dadd
   \   00000490   0xE9CD 0x0112      STRD     R0,R1,[SP, #+72]
   \   00000494   0x9803             LDR      R0,[SP, #+12]
   \   00000496   0x.... 0x....      BL       __aeabi_f2d
   \   0000049A   0xE9DD 0x2312      LDRD     R2,R3,[SP, #+72]
   \   0000049E   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000004A2   0x4604             MOV      R4,R0
   \   000004A4   0x460D             MOV      R5,R1
   \   000004A6   0xD879             BHI.N    ??look_for_lines_to_connect_24
   \   000004A8   0x68F0             LDR      R0,[R6, #+12]
   \   000004AA   0x.... 0x....      BL       __aeabi_f2d
   \   000004AE   0xF8DF 0x23A0      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   000004B2   0xF8DF 0x33A4      LDR.W    R3,??look_for_lines_to_connect_0+0x24  ;; 0x3f50624d
   \   000004B6   0x.... 0x....      BL       __aeabi_dadd
   \   000004BA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000004BE   0x4622             MOV      R2,R4
   \   000004C0   0x462B             MOV      R3,R5
   \   000004C2   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000004C6   0xD869             BHI.N    ??look_for_lines_to_connect_24
   \   000004C8   0x6870             LDR      R0,[R6, #+4]
   \   000004CA   0x.... 0x....      BL       __aeabi_f2d
   \   000004CE   0xF8DF 0x2380      LDR.W    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   000004D2   0xF8DF 0x3380      LDR.W    R3,??look_for_lines_to_connect_0+0x20  ;; 0xbf50624d
   \   000004D6   0x.... 0x....      BL       __aeabi_dadd
   \   000004DA   0x4682             MOV      R10,R0
   \   000004DC   0x9802             LDR      R0,[SP, #+8]
   \   000004DE   0x468B             MOV      R11,R1
   \   000004E0   0x.... 0x....      BL       __aeabi_f2d
   \   000004E4   0x4652             MOV      R2,R10
   \   000004E6   0x465B             MOV      R3,R11
   \   000004E8   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000004EC   0x4607             MOV      R7,R0
   \   000004EE   0x4689             MOV      R9,R1
   \   000004F0   0xD854             BHI.N    ??look_for_lines_to_connect_24
   \   000004F2   0x6930             LDR      R0,[R6, #+16]
   \   000004F4   0x.... 0x....      BL       __aeabi_f2d
   \   000004F8   0x4AD5             LDR.N    R2,??look_for_lines_to_connect_0+0x1C  ;; 0xd2f1a9fc
   \   000004FA   0x4BD7             LDR.N    R3,??look_for_lines_to_connect_0+0x24  ;; 0x3f50624d
   \   000004FC   0x.... 0x....      BL       __aeabi_dadd
   \   00000500   0x463A             MOV      R2,R7
   \   00000502   0x464B             MOV      R3,R9
   \   00000504   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000508   0x4604             MOV      R4,R0
   \   0000050A   0x460D             MOV      R5,R1
   \   0000050C   0xD846             BHI.N    ??look_for_lines_to_connect_24
   \   0000050E   0x9805             LDR      R0,[SP, #+20]
   \   00000510   0x.... 0x....      BL       __aeabi_f2d
   \   00000514   0xE9DD 0x2312      LDRD     R2,R3,[SP, #+72]
   \   00000518   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000051C   0x4606             MOV      R6,R0
   \   0000051E   0x460F             MOV      R7,R1
   \   00000520   0xD83C             BHI.N    ??look_for_lines_to_connect_24
   \   00000522   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000526   0x4632             MOV      R2,R6
   \   00000528   0x463B             MOV      R3,R7
   \   0000052A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000052E   0xD835             BHI.N    ??look_for_lines_to_connect_24
   \   00000530   0x9804             LDR      R0,[SP, #+16]
   \   00000532   0x.... 0x....      BL       __aeabi_f2d
   \   00000536   0x4652             MOV      R2,R10
   \   00000538   0x465B             MOV      R3,R11
   \   0000053A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000053E   0x4606             MOV      R6,R0
   \   00000540   0x460F             MOV      R7,R1
   \   00000542   0xD82B             BHI.N    ??look_for_lines_to_connect_24
   \   00000544   0x4620             MOV      R0,R4
   \   00000546   0x4629             MOV      R1,R5
   \   00000548   0x4632             MOV      R2,R6
   \   0000054A   0x463B             MOV      R3,R7
   \   0000054C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000550   0xD824             BHI.N    ??look_for_lines_to_connect_24
   \                     ??look_for_lines_to_connect_25: (+1)
   \   00000552   0x48C2             LDR.N    R0,??look_for_lines_to_connect_0+0x28
   \   00000554   0x7800             LDRB     R0,[R0, #+0]
   \   00000556   0xB1B8             CBZ.N    R0,??look_for_lines_to_connect_26
   \   00000558   0x9903             LDR      R1,[SP, #+12]
   \   0000055A   0x48CB             LDR.N    R0,??look_for_lines_to_connect_0+0x54
   \   0000055C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \   00000560   0x9902             LDR      R1,[SP, #+8]
   \   00000562   0x48C0             LDR.N    R0,??look_for_lines_to_connect_0+0x30
   \   00000564   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \   00000568   0x9905             LDR      R1,[SP, #+20]
   \   0000056A   0x48BF             LDR.N    R0,??look_for_lines_to_connect_0+0x34
   \   0000056C   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \   00000570   0x9904             LDR      R1,[SP, #+16]
   \   00000572   0x48BE             LDR.N    R0,??look_for_lines_to_connect_0+0x38
   \   00000574   0x.... 0x....      BL       _Z17serial_echopair_PPKcf
   \   00000578   0x48BD             LDR.N    R0,??look_for_lines_to_connect_0+0x3C
   \   0000057A   0x2129             MOVS     R1,#+41
   \   0000057C   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \   00000580   0x210A             MOVS     R1,#+10
   \   00000582   0x48BB             LDR.N    R0,??look_for_lines_to_connect_0+0x3C
   \   00000584   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \                     ??look_for_lines_to_connect_26: (+1)
   \   00000588   0x48BA             LDR.N    R0,??look_for_lines_to_connect_0+0x40
   \   0000058A   0x4ABA             LDR.N    R2,??look_for_lines_to_connect_0+0x40
   \   0000058C   0x9001             STR      R0,[SP, #+4]
   \   0000058E   0xAB05             ADD      R3,SP,#+20
   \   00000590   0xA804             ADD      R0,SP,#+16
   \   00000592   0x9000             STR      R0,[SP, #+0]
   \   00000594   0xA902             ADD      R1,SP,#+8
   \   00000596   0xA803             ADD      R0,SP,#+12
   \   00000598   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
   \                     ??look_for_lines_to_connect_24: (+1)
   \   0000059C   0x980C             LDR      R0,[SP, #+48]
   \   0000059E   0x990F             LDR      R1,[SP, #+60]
   \   000005A0   0x6800             LDR      R0,[R0, #+0]
   \   000005A2   0x4308             ORRS     R0,R1,R0
   \   000005A4   0x990C             LDR      R1,[SP, #+48]
   \   000005A6   0x6008             STR      R0,[R1, #+0]
   \                     ??look_for_lines_to_connect_10: (+1)
   \   000005A8   0x9909             LDR      R1,[SP, #+36]
   \   000005AA   0x9807             LDR      R0,[SP, #+28]
   \   000005AC   0x7FC9             LDRB     R1,[R1, #+31]
   \   000005AE   0x4288             CMP      R0,R1
   \   000005B0   0xF6BF 0xADFA      BGE.W    ??look_for_lines_to_connect_9
   \   000005B4   0x980E             LDR      R0,[SP, #+56]
   \   000005B6   0x9906             LDR      R1,[SP, #+24]
   \   000005B8   0x6800             LDR      R0,[R0, #+0]
   \   000005BA   0x40C8             LSRS     R0,R0,R1
   \   000005BC   0x07C0             LSLS     R0,R0,#+31
   \   000005BE   0xF57F 0xADF3      BPL.W    ??look_for_lines_to_connect_9
   \   000005C2   0x9807             LDR      R0,[SP, #+28]
   \   000005C4   0x1C44             ADDS     R4,R0,#+1
   \   000005C6   0xB2E4             UXTB     R4,R4
   \   000005C8   0x48B0             LDR.N    R0,??look_for_lines_to_connect_0+0x58
   \   000005CA   0xEB00 0x0084      ADD      R0,R0,R4, LSL #+2
   \   000005CE   0x6880             LDR      R0,[R0, #+8]
   \   000005D0   0x40C8             LSRS     R0,R0,R1
   \   000005D2   0x07C0             LSLS     R0,R0,#+31
   \   000005D4   0xF57F 0xADE8      BPL.W    ??look_for_lines_to_connect_9
   \   000005D8   0x980A             LDR      R0,[SP, #+40]
   \   000005DA   0x6800             LDR      R0,[R0, #+0]
   \   000005DC   0x40C8             LSRS     R0,R0,R1
   \   000005DE   0x07C0             LSLS     R0,R0,#+31
   \   000005E0   0xF53F 0xADE2      BMI.W    ??look_for_lines_to_connect_9
   \   000005E4   0x4899             LDR.N    R0,??look_for_lines_to_connect_0+0x18
   \   000005E6   0x4EA4             LDR.N    R6,??look_for_lines_to_connect_0+0x44
   \   000005E8   0xF890 0x0042      LDRB     R0,[R0, #+66]
   \   000005EC   0x0701             LSLS     R1,R0,#+28
   \   000005EE   0xD555             BPL.N    ??look_for_lines_to_connect_27
   \   000005F0   0x48A2             LDR.N    R0,??look_for_lines_to_connect_0+0x48
   \   000005F2   0x6844             LDR      R4,[R0, #+4]
   \   000005F4   0x48A2             LDR.N    R0,??look_for_lines_to_connect_0+0x4C
   \   000005F6   0x6845             LDR      R5,[R0, #+4]
   \   000005F8   0x9807             LDR      R0,[SP, #+28]
   \   000005FA   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   000005FE   0x1C80             ADDS     R0,R0,#+2
   \   00000600   0x.... 0x....      BL       __aeabi_i2f
   \   00000604   0x9002             STR      R0,[SP, #+8]
   \   00000606   0x9807             LDR      R0,[SP, #+28]
   \   00000608   0x1C40             ADDS     R0,R0,#+1
   \   0000060A   0xFB04 0x5000      MLA      R0,R4,R0,R5
   \   0000060E   0x1E80             SUBS     R0,R0,#+2
   \   00000610   0x.... 0x....      BL       __aeabi_i2f
   \   00000614   0x9004             STR      R0,[SP, #+16]
   \   00000616   0x4A99             LDR.N    R2,??look_for_lines_to_connect_0+0x48
   \   00000618   0x4899             LDR.N    R0,??look_for_lines_to_connect_0+0x4C
   \   0000061A   0x9906             LDR      R1,[SP, #+24]
   \   0000061C   0x6800             LDR      R0,[R0, #+0]
   \   0000061E   0x6812             LDR      R2,[R2, #+0]
   \   00000620   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000624   0x.... 0x....      BL       __aeabi_i2f
   \   00000628   0x4604             MOV      R4,R0
   \   0000062A   0x4888             LDR.N    R0,??look_for_lines_to_connect_0+0x18
   \   0000062C   0x6881             LDR      R1,[R0, #+8]
   \   0000062E   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000632   0x.... 0x....      BL       __aeabi_fadd
   \   00000636   0x4601             MOV      R1,R0
   \   00000638   0x4620             MOV      R0,R4
   \   0000063A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000063E   0xBF38             IT       CC 
   \   00000640   0x460C             MOVCC    R4,R1
   \   00000642   0xD308             BCC.N    ??look_for_lines_to_connect_28
   \   00000644   0x68F1             LDR      R1,[R6, #+12]
   \   00000646   0x488F             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   00000648   0x.... 0x....      BL       __aeabi_fadd
   \   0000064C   0x4621             MOV      R1,R4
   \   0000064E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000652   0xBF38             IT       CC 
   \   00000654   0x4604             MOVCC    R4,R0
   \                     ??look_for_lines_to_connect_28: (+1)
   \   00000656   0x6871             LDR      R1,[R6, #+4]
   \   00000658   0x9405             STR      R4,[SP, #+20]
   \   0000065A   0x9403             STR      R4,[SP, #+12]
   \   0000065C   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000660   0x.... 0x....      BL       __aeabi_fadd
   \   00000664   0x4601             MOV      R1,R0
   \   00000666   0x9802             LDR      R0,[SP, #+8]
   \   00000668   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000066C   0xBF38             IT       CC 
   \   0000066E   0x9102             STRCC    R1,[SP, #+8]
   \   00000670   0xD308             BCC.N    ??look_for_lines_to_connect_29
   \   00000672   0x6931             LDR      R1,[R6, #+16]
   \   00000674   0x4883             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   00000676   0x.... 0x....      BL       __aeabi_fadd
   \   0000067A   0x9902             LDR      R1,[SP, #+8]
   \   0000067C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000680   0xBF38             IT       CC 
   \   00000682   0x9002             STRCC    R0,[SP, #+8]
   \                     ??look_for_lines_to_connect_29: (+1)
   \   00000684   0x6871             LDR      R1,[R6, #+4]
   \   00000686   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000068A   0x.... 0x....      BL       __aeabi_fadd
   \   0000068E   0x4601             MOV      R1,R0
   \   00000690   0x9804             LDR      R0,[SP, #+16]
   \   00000692   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000696   0xF0C0 0x80A3      BCC.W    ??look_for_lines_to_connect_30
   \   0000069A   0xE0A7             B.N      ??look_for_lines_to_connect_31
   \                     ??look_for_lines_to_connect_27: (+1)
   \   0000069C   0x06C1             LSLS     R1,R0,#+27
   \   0000069E   0xD556             BPL.N    ??look_for_lines_to_connect_32
   \   000006A0   0x9807             LDR      R0,[SP, #+28]
   \   000006A2   0xB2C0             UXTB     R0,R0
   \   000006A4   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   000006A8   0xF04F 0x4180      MOV      R1,#+1073741824
   \   000006AC   0x.... 0x....      BL       __aeabi_fadd
   \   000006B0   0x9002             STR      R0,[SP, #+8]
   \   000006B2   0x4620             MOV      R0,R4
   \   000006B4   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   000006B8   0xF04F 0x4140      MOV      R1,#-1073741824
   \   000006BC   0x.... 0x....      BL       __aeabi_fadd
   \   000006C0   0x9004             STR      R0,[SP, #+16]
   \   000006C2   0x9806             LDR      R0,[SP, #+24]
   \   000006C4   0xB2C0             UXTB     R0,R0
   \   000006C6   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   000006CA   0x4604             MOV      R4,R0
   \   000006CC   0x485F             LDR.N    R0,??look_for_lines_to_connect_0+0x18
   \   000006CE   0x6881             LDR      R1,[R0, #+8]
   \   000006D0   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000006D4   0x.... 0x....      BL       __aeabi_fadd
   \   000006D8   0x4602             MOV      R2,R0
   \   000006DA   0x4620             MOV      R0,R4
   \   000006DC   0x4611             MOV      R1,R2
   \   000006DE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000006E2   0xD312             BCC.N    ??look_for_lines_to_connect_33
   \   000006E4   0x9806             LDR      R0,[SP, #+24]
   \   000006E6   0xB2C0             UXTB     R0,R0
   \   000006E8   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   000006EC   0x4604             MOV      R4,R0
   \   000006EE   0x68F1             LDR      R1,[R6, #+12]
   \   000006F0   0x4864             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   000006F2   0x.... 0x....      BL       __aeabi_fadd
   \   000006F6   0x4621             MOV      R1,R4
   \   000006F8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000006FC   0x4602             MOV      R2,R0
   \   000006FE   0xD304             BCC.N    ??look_for_lines_to_connect_33
   \   00000700   0x9806             LDR      R0,[SP, #+24]
   \   00000702   0xB2C0             UXTB     R0,R0
   \   00000704   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   00000708   0x4602             MOV      R2,R0
   \                     ??look_for_lines_to_connect_33: (+1)
   \   0000070A   0x6871             LDR      R1,[R6, #+4]
   \   0000070C   0x9205             STR      R2,[SP, #+20]
   \   0000070E   0x9203             STR      R2,[SP, #+12]
   \   00000710   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000714   0x.... 0x....      BL       __aeabi_fadd
   \   00000718   0x4601             MOV      R1,R0
   \   0000071A   0x9802             LDR      R0,[SP, #+8]
   \   0000071C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000720   0xBF38             IT       CC 
   \   00000722   0x9102             STRCC    R1,[SP, #+8]
   \   00000724   0xD308             BCC.N    ??look_for_lines_to_connect_34
   \   00000726   0x6931             LDR      R1,[R6, #+16]
   \   00000728   0x4856             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   0000072A   0x.... 0x....      BL       __aeabi_fadd
   \   0000072E   0x9902             LDR      R1,[SP, #+8]
   \   00000730   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000734   0xBF38             IT       CC 
   \   00000736   0x9002             STRCC    R0,[SP, #+8]
   \                     ??look_for_lines_to_connect_34: (+1)
   \   00000738   0x6871             LDR      R1,[R6, #+4]
   \   0000073A   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000073E   0x.... 0x....      BL       __aeabi_fadd
   \   00000742   0x4601             MOV      R1,R0
   \   00000744   0x9804             LDR      R0,[SP, #+16]
   \   00000746   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000074A   0xD349             BCC.N    ??look_for_lines_to_connect_30
   \   0000074C   0xE04E             B.N      ??look_for_lines_to_connect_31
   \                     ??look_for_lines_to_connect_32: (+1)
   \   0000074E   0x0680             LSLS     R0,R0,#+26
   \   00000750   0xD555             BPL.N    ??look_for_lines_to_connect_35
   \   00000752   0x980B             LDR      R0,[SP, #+44]
   \   00000754   0x6801             LDR      R1,[R0, #+0]
   \   00000756   0xF04F 0x4080      MOV      R0,#+1073741824
   \   0000075A   0x.... 0x....      BL       __aeabi_fadd
   \   0000075E   0x9002             STR      R0,[SP, #+8]
   \   00000760   0x980B             LDR      R0,[SP, #+44]
   \   00000762   0x6841             LDR      R1,[R0, #+4]
   \   00000764   0xF04F 0x4040      MOV      R0,#-1073741824
   \   00000768   0x.... 0x....      BL       __aeabi_fadd
   \   0000076C   0x9004             STR      R0,[SP, #+16]
   \   0000076E   0x4837             LDR.N    R0,??look_for_lines_to_connect_0+0x18
   \   00000770   0x6881             LDR      R1,[R0, #+8]
   \   00000772   0xF04F 0x507E      MOV      R0,#+1065353216
   \   00000776   0x.... 0x....      BL       __aeabi_fadd
   \   0000077A   0x4602             MOV      R2,R0
   \   0000077C   0x980D             LDR      R0,[SP, #+52]
   \   0000077E   0x6804             LDR      R4,[R0, #+0]
   \   00000780   0x4620             MOV      R0,R4
   \   00000782   0x4611             MOV      R1,R2
   \   00000784   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000788   0xD309             BCC.N    ??look_for_lines_to_connect_36
   \   0000078A   0x68F1             LDR      R1,[R6, #+12]
   \   0000078C   0x483D             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   0000078E   0x.... 0x....      BL       __aeabi_fadd
   \   00000792   0x4621             MOV      R1,R4
   \   00000794   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000798   0x4602             MOV      R2,R0
   \   0000079A   0xBF28             IT       CS 
   \   0000079C   0x4622             MOVCS    R2,R4
   \                     ??look_for_lines_to_connect_36: (+1)
   \   0000079E   0x6871             LDR      R1,[R6, #+4]
   \   000007A0   0x9205             STR      R2,[SP, #+20]
   \   000007A2   0x9203             STR      R2,[SP, #+12]
   \   000007A4   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000007A8   0x.... 0x....      BL       __aeabi_fadd
   \   000007AC   0x4601             MOV      R1,R0
   \   000007AE   0x9802             LDR      R0,[SP, #+8]
   \   000007B0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000007B4   0xBF38             IT       CC 
   \   000007B6   0x9102             STRCC    R1,[SP, #+8]
   \   000007B8   0xD308             BCC.N    ??look_for_lines_to_connect_37
   \   000007BA   0x6931             LDR      R1,[R6, #+16]
   \   000007BC   0x4831             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   000007BE   0x.... 0x....      BL       __aeabi_fadd
   \   000007C2   0x9902             LDR      R1,[SP, #+8]
   \   000007C4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000007C8   0xBF38             IT       CC 
   \   000007CA   0x9002             STRCC    R0,[SP, #+8]
   \                     ??look_for_lines_to_connect_37: (+1)
   \   000007CC   0x6871             LDR      R1,[R6, #+4]
   \   000007CE   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000007D2   0x.... 0x....      BL       __aeabi_fadd
   \   000007D6   0x4601             MOV      R1,R0
   \   000007D8   0x9804             LDR      R0,[SP, #+16]
   \   000007DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000007DE   0xD205             BCS.N    ??look_for_lines_to_connect_31
   \                     ??look_for_lines_to_connect_30: (+1)
   \   000007E0   0x6871             LDR      R1,[R6, #+4]
   \   000007E2   0xF04F 0x507E      MOV      R0,#+1065353216
   \   000007E6   0x.... 0x....      BL       __aeabi_fadd
   \   000007EA   0xE007             B.N      ??look_for_lines_to_connect_38
   \                     ??look_for_lines_to_connect_31: (+1)
   \   000007EC   0x6931             LDR      R1,[R6, #+16]
   \   000007EE   0x4825             LDR.N    R0,??look_for_lines_to_connect_0+0x50  ;; 0xbf800000
   \   000007F0   0x.... 0x....      BL       __aeabi_fadd
   \   000007F4   0x9904             LDR      R1,[SP, #+16]
   \   000007F6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000007FA   0xD200             BCS.N    ??look_for_lines_to_connect_35
   \                     ??look_for_lines_to_connect_38: (+1)
   \   000007FC   0x9004             STR      R0,[SP, #+16]
   \                     ??look_for_lines_to_connect_35: (+1)
   \   000007FE   0x9809             LDR      R0,[SP, #+36]
   \   00000800   0x8AC0             LDRH     R0,[R0, #+22]
   \   00000802   0xF240 0x3102      MOVW     R1,#+770
   \   00000806   0x4208             TST      R0,R1
   \   00000808   0xF43F 0xAC2B      BEQ.W    ??look_for_lines_to_connect_5
   \   0000080C   0xA902             ADD      R1,SP,#+8
   \   0000080E   0xA803             ADD      R0,SP,#+12
   \   00000810   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000814   0x2800             CMP      R0,#+0
   \   00000816   0xF43F 0xACC1      BEQ.W    ??look_for_lines_to_connect_6
   \   0000081A   0xA904             ADD      R1,SP,#+16
   \   0000081C   0xA805             ADD      R0,SP,#+20
   \   0000081E   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000822   0x2800             CMP      R0,#+0
   \   00000824   0xF43F 0xACBA      BEQ.W    ??look_for_lines_to_connect_6
   \   00000828   0xE48A             B.N      ??look_for_lines_to_connect_7
    581                        }
    582                      }
    583                    }
    584                  }
    585                }
    586              }
    587              return false;
   \                     ??look_for_lines_to_connect_3: (+1)
   \   0000082A   0x2000             MOVS     R0,#+0
   \   0000082C   0xB016             ADD      SP,SP,#+88
   \   0000082E   0xE8BD 0x8EF0      POP      {R4-R7,R9-R11,PC}  ;; return
   \   00000832   0xBF00             Nop      
   \                     ??look_for_lines_to_connect_0:
   \   00000834   0x........         DC32     _ZN17mesh_bed_leveling13index_to_xposE
   \   00000838   0x........         DC32     mksCfg+0x42
   \   0000083C   0x........         DC32     g26_retracted+0x8
   \   00000840   0x........         DC32     horizontal_mesh_line_flags
   \   00000844   0x........         DC32     _ZN17mesh_bed_leveling13index_to_yposE
   \   00000848   0x........         DC32     horizontal_mesh_line_flags+0x40
   \   0000084C   0x........         DC32     mksCfg
   \   00000850   0xD2F1A9FC         DC32     0xd2f1a9fc
   \   00000854   0xBF50624D         DC32     0xbf50624d
   \   00000858   0x3F50624D         DC32     0x3f50624d
   \   0000085C   0x........         DC32     g26_debug_flag
   \   00000860   0x........         DC32     _ZZ25look_for_lines_to_connectvEs_3
   \   00000864   0x........         DC32     _ZZ25look_for_lines_to_connectvEs_0
   \   00000868   0x........         DC32     _ZZ25look_for_lines_to_connectvEs_1
   \   0000086C   0x........         DC32     _ZZ25look_for_lines_to_connectvEs_2
   \   00000870   0x........         DC32     Serial3
   \   00000874   0x........         DC32     g26_retracted+0x58
   \   00000878   0x........         DC32     mksCfg+0x8
   \   0000087C   0x........         DC32     bilinear_grid_spacing
   \   00000880   0x........         DC32     bilinear_start
   \   00000884   0xBF800000         DC32     0xbf800000
   \   00000888   0x........         DC32     _ZZ25look_for_lines_to_connectvEs
   \   0000088C   0x........         DC32     g26_retracted
    588            }
    589          
    590            /**
    591             * Turn on the bed and nozzle heat and
    592             * wait for them to get up to temperature.
    593             */
    594            inline bool turn_on_heaters() {
    595              millis_t next = millis() + 5000UL;
    596              //#if HAS_TEMP_BED
    597              if(HAS_TEMP_BED)
    598              {
    599                #if ENABLED(ULTRA_LCD)
    600                  if (g26_bed_temp > 25) {
    601                    lcd_setstatusPGM(PSTR("G26 Heating Bed."), 99);
    602                    lcd_quick_feedback();
    603                    lcd_external_control = true;
    604                #endif
    605                    thermalManager.setTargetBed(g26_bed_temp);
    606                    while (abs(thermalManager.degBed() - g26_bed_temp) > 3) {
    607          
    608                      #if ENABLED(NEWPANEL)
    609                        if (is_lcd_clicked()) return exit_from_g26();
    610                      #endif
    611          
    612                      if (ELAPSED(millis(), next)) {
    613                        next = millis() + 5000UL;
    614                        thermalManager.print_heaterstates();
    615                        SERIAL_EOL();
    616                      }
    617                      idle();
    618                    }
    619                #if ENABLED(ULTRA_LCD)
    620                  }
    621                  lcd_setstatusPGM(PSTR("G26 Heating Nozzle."), 99);
    622                  lcd_quick_feedback();
    623                #endif
    624              }
    625              //#endif
    626          
    627              // Start heating the nozzle and wait for it to reach temperature.
    628              thermalManager.setTargetHotend(g26_hotend_temp, 0);
    629              while (abs(thermalManager.degHotend(0) - g26_hotend_temp) > 3) {
    630          
    631                #if ENABLED(NEWPANEL)
    632                  if (is_lcd_clicked()) return exit_from_g26();
    633                #endif
    634          
    635                if (ELAPSED(millis(), next)) {
    636                  next = millis() + 5000UL;
    637                  thermalManager.print_heaterstates();
    638                  SERIAL_EOL();
    639                }
    640                idle();
    641              }
    642          
    643              #if ENABLED(ULTRA_LCD)
    644                lcd_reset_status();
    645                lcd_quick_feedback();
    646              #endif
    647          
    648              return G26_OK;
    649            }
    650          

   \                                 In section .text, align 2, keep-with-next
    651            float valid_trig_angle(float d) {
   \                     _Z16valid_trig_anglef: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x....             LDR.N    R4,??DataTable21_25  ;; 0xc3b40000
   \   00000004   0x....             LDR.N    R5,??DataTable21_26  ;; 0x43b40001
   \   00000006   0xE002             B.N      ??valid_trig_angle_0
    652              while (d > 360.0) d -= 360.0;
   \                     ??valid_trig_angle_1: (+1)
   \   00000008   0x4621             MOV      R1,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_fadd
   \                     ??valid_trig_angle_0: (+1)
   \   0000000E   0x4629             MOV      R1,R5
   \   00000010   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000014   0xD9F8             BLS.N    ??valid_trig_angle_1
    653              while (d < 0.0) d += 360.0;
   \                     ??valid_trig_angle_2: (+1)
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000001C   0xD203             BCS.N    ??valid_trig_angle_3
   \   0000001E   0x....             LDR.N    R1,??DataTable21_27  ;; 0x43b40000
   \   00000020   0x.... 0x....      BL       __aeabi_fadd
   \   00000024   0xE7F7             B.N      ??valid_trig_angle_2
    654              return d;
   \                     ??valid_trig_angle_3: (+1)
   \   00000026   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    655            }
    656          
    657            /**
    658             * G26: Mesh Validation Pattern generation.
    659             *
    660             * Used to interactively edit the mesh by placing the
    661             * nozzle in a problem area and doing a G29 P4 R command.
    662             */

   \                                 In section .text, align 4, keep-with-next
    663            void gcode_G26() {
   \                     _Z9gcode_G26v: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0AD             SUB      SP,SP,#+180
    664              SERIAL_ECHOLNPGM("G26 command started. Waiting for heater(s).");
   \   00000006   0x.... 0x....      ADR.W    R0,`?<Constant "G26 command started. ...">`
   \   0000000A   0x.... 0x....      BL       _Z14serialprintPGMPKc
    665              float tmp, start_angle, end_angle;
    666              int   i, xi, yi;
    667              mesh_index_pair location;
    668          
    669              // Don't allow Mesh Validation without homing first,
    670              // or if the parameter parsing did not go OK, abort
    671              if (axis_unhomed_error()) return;
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x4608             MOV      R0,R1
   \   00000014   0x.... 0x....      BL       _Z18axis_unhomed_errorbbb
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xF040 0x85A2      BNE.W    ??gcode_G26_0
    672          
    673              g26_extrusion_multiplier    = EXTRUSION_MULTIPLIER;
   \   0000001E   0xF8DF 0x69C8      LDR.W    R6,??gcode_G26_1
    674              g26_retraction_multiplier   = RETRACTION_MULTIPLIER;
    675              g26_layer_height            = MESH_TEST_LAYER_HEIGHT;
    676              g26_prime_length            = PRIME_LENGTH;
    677              g26_bed_temp                = MESH_TEST_BED_TEMP;
    678              g26_hotend_temp             = MESH_TEST_HOTEND_TEMP;
    679              g26_prime_flag              = 0;
    680          
    681              float g26_nozzle            = MESH_TEST_NOZZLE_SIZE,
   \   00000022   0xF8DF 0xA9C8      LDR.W    R10,??gcode_G26_1+0x4  ;; 0x3ecccccd
    682                    g26_filament_diameter = DEFAULT_NOMINAL_FILAMENT_DIA,
    683                    g26_ooze_amount       = parser.linearval('O', OOZE_AMOUNT);
   \   00000026   0xF8DF 0x79C8      LDR.W    R7,??gcode_G26_1+0x8
   \   0000002A   0xF04F 0x507E      MOV      R0,#+1065353216
   \   0000002E   0x6530             STR      R0,[R6, #+80]
   \   00000030   0x6570             STR      R0,[R6, #+84]
   \   00000032   0xF8DF 0x09C0      LDR.W    R0,??gcode_G26_1+0xC  ;; 0x3e4ccccd
   \   00000036   0x65B0             STR      R0,[R6, #+88]
   \   00000038   0xF8DF 0x09BC      LDR.W    R0,??gcode_G26_1+0x10  ;; 0x41200000
   \   0000003C   0x65F0             STR      R0,[R6, #+92]
   \   0000003E   0x203C             MOVS     R0,#+60
   \   00000040   0x8070             STRH     R0,[R6, #+2]
   \   00000042   0x20CD             MOVS     R0,#+205
   \   00000044   0x80B0             STRH     R0,[R6, #+4]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x7070             STRB     R0,[R6, #+1]
   \   0000004A   0xF8DF 0x09B0      LDR.W    R0,??gcode_G26_1+0x14  ;; 0x40400000
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0xF8DF 0x09AC      LDR.W    R0,??gcode_G26_1+0x18
   \   00000054   0x7840             LDRB     R0,[R0, #+1]
   \   00000056   0x0640             LSLS     R0,R0,#+25
   \   00000058   0xD504             BPL.N    ??gcode_G26_2
   \   0000005A   0xF8DF 0x59A8      LDR.W    R5,??gcode_G26_1+0x1C
   \   0000005E   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000060   0xBB08             CBNZ.N   R0,??gcode_G26_3
   \   00000062   0x6038             STR      R0,[R7, #+0]
   \                     ??gcode_G26_2: (+1)
   \   00000064   0xF8DF 0x09A0      LDR.W    R0,??gcode_G26_1+0x20  ;; 0x3e99999a
   \                     ??gcode_G26_4: (+1)
   \   00000068   0x900D             STR      R0,[SP, #+52]
    684          
    685              bool g26_continue_with_closest = parser.boolval('C'),
   \   0000006A   0x2043             MOVS     R0,#+67
   \   0000006C   0x.... 0x....      BL       _ZN11GCodeParser7boolvalEc
   \   00000070   0x900E             STR      R0,[SP, #+56]
    686                   g26_keep_heaters_on       = parser.boolval('K');
   \   00000072   0x204B             MOVS     R0,#+75
   \   00000074   0x.... 0x....      BL       _ZN11GCodeParser7boolvalEc
   \   00000078   0xF88D 0x0010      STRB     R0,[SP, #+16]
    687          
    688              if (parser.seenval('B')) {
   \   0000007C   0x2042             MOVS     R0,#+66
   \   0000007E   0x.... 0x....      BL       _ZN11GCodeParser4seenEc
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xBF1C             ITT      NE 
   \   00000086   0x6838             LDRNE    R0,[R7, #+0]
   \   00000088   0x2800             CMPNE    R0,#+0
   \   0000008A   0xD015             BEQ.N    ??gcode_G26_5
    689                g26_bed_temp = parser.value_celsius();
                                    ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   0000008C   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   00000090   0x.... 0x....      BL       __aeabi_f2iz
   \   00000094   0x8070             STRH     R0,[R6, #+2]
    690                if (!WITHIN(g26_bed_temp, 15, 140)) {
   \   00000096   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   0000009A   0x380F             SUBS     R0,R0,#+15
   \   0000009C   0x287E             CMP      R0,#+126
   \   0000009E   0xD30B             BCC.N    ??gcode_G26_5
    691                  SERIAL_PROTOCOLLNPGM("?Specified bed temperature not plausible.");
   \   000000A0   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified bed temper...">`
   \   000000A4   0xE1ED             B.N      ??gcode_G26_6
   \                     ??gcode_G26_3: (+1)
   \   000000A6   0xF8DF 0x1964      LDR.W    R1,??gcode_G26_1+0x24
   \   000000AA   0x6809             LDR      R1,[R1, #+0]
   \   000000AC   0x1840             ADDS     R0,R0,R1
   \   000000AE   0x6038             STR      R0,[R7, #+0]
   \   000000B0   0xD0D8             BEQ.N    ??gcode_G26_2
   \   000000B2   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   000000B6   0xE7D7             B.N      ??gcode_G26_4
    692                  return;
    693                }
    694              }
    695          
    696              if (parser.seenval('L')) {
   \                     ??gcode_G26_5: (+1)
   \   000000B8   0x204C             MOVS     R0,#+76
   \   000000BA   0x.... 0x....      BL       _ZN11GCodeParser4seenEc
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xBF1C             ITT      NE 
   \   000000C2   0x6838             LDRNE    R0,[R7, #+0]
   \   000000C4   0x2800             CMPNE    R0,#+0
   \   000000C6   0xD00E             BEQ.N    ??gcode_G26_7
    697                g26_layer_height = parser.value_linear_units();
   \   000000C8   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
    698                if (!WITHIN(g26_layer_height, 0.0, 2.0)) {
   \   000000CC   0x2100             MOVS     R1,#+0
   \   000000CE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000D2   0x65B0             STR      R0,[R6, #+88]
   \   000000D4   0xD804             BHI.N    ??gcode_G26_8
   \   000000D6   0xF8DF 0x1938      LDR.W    R1,??gcode_G26_1+0x28  ;; 0x40000001
   \   000000DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000DE   0xD302             BCC.N    ??gcode_G26_7
    699                  SERIAL_PROTOCOLLNPGM("?Specified layer height not plausible.");
   \                     ??gcode_G26_8: (+1)
   \   000000E0   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified layer heig...">`
   \   000000E4   0xE1CD             B.N      ??gcode_G26_6
    700                  return;
    701                }
    702              }
    703          
    704              if (parser.seen('Q')) {
   \                     ??gcode_G26_7: (+1)
   \   000000E6   0xF8DF 0x0918      LDR.W    R0,??gcode_G26_1+0x18
   \   000000EA   0x7880             LDRB     R0,[R0, #+2]
   \   000000EC   0x07C0             LSLS     R0,R0,#+31
   \   000000EE   0xD51E             BPL.N    ??gcode_G26_9
   \   000000F0   0xF8DF 0x5910      LDR.W    R5,??gcode_G26_1+0x1C
   \   000000F4   0x7C28             LDRB     R0,[R5, #+16]
   \   000000F6   0xB908             CBNZ.N   R0,??gcode_G26_10
   \   000000F8   0x6038             STR      R0,[R7, #+0]
   \   000000FA   0xE005             B.N      ??gcode_G26_11
   \                     ??gcode_G26_10: (+1)
   \   000000FC   0xF8DF 0x190C      LDR.W    R1,??gcode_G26_1+0x24
   \   00000100   0x6809             LDR      R1,[R1, #+0]
   \   00000102   0x1840             ADDS     R0,R0,R1
   \   00000104   0x6038             STR      R0,[R7, #+0]
    705                if (parser.has_value()) {
   \   00000106   0xD102             BNE.N    ??gcode_G26_12
    706                  g26_retraction_multiplier = parser.value_float();
    707                  if (!WITHIN(g26_retraction_multiplier, 0.05, 15.0)) {
    708                    SERIAL_PROTOCOLLNPGM("?Specified Retraction Multiplier not plausible.");
    709                    return;
    710                  }
    711                }
    712                else {
    713                  SERIAL_PROTOCOLLNPGM("?Retraction Multiplier must be specified.");
   \                     ??gcode_G26_11: (+1)
   \   00000108   0x.... 0x....      ADR.W    R0,`?<Constant "?Retraction Multiplie...">`
   \   0000010C   0xE1B9             B.N      ??gcode_G26_6
    714                  return;
    715                }
   \                     ??gcode_G26_12: (+1)
   \   0000010E   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   00000112   0x6570             STR      R0,[R6, #+84]
   \   00000114   0xF8DF 0x18FC      LDR.W    R1,??gcode_G26_1+0x2C  ;; 0x3d4ccccd
   \   00000118   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000011C   0xD804             BHI.N    ??gcode_G26_13
   \   0000011E   0xF8DF 0x18F8      LDR.W    R1,??gcode_G26_1+0x30  ;; 0x41700001
   \   00000122   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000126   0xD302             BCC.N    ??gcode_G26_9
   \                     ??gcode_G26_13: (+1)
   \   00000128   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified Retraction...">`
   \   0000012C   0xE1A9             B.N      ??gcode_G26_6
    716              }
    717          
    718              if (parser.seenval('S')) {
   \                     ??gcode_G26_9: (+1)
   \   0000012E   0x2053             MOVS     R0,#+83
   \   00000130   0x.... 0x....      BL       _ZN11GCodeParser4seenEc
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xBF1C             ITT      NE 
   \   00000138   0x6838             LDRNE    R0,[R7, #+0]
   \   0000013A   0x2800             CMPNE    R0,#+0
   \   0000013C   0xD00F             BEQ.N    ??gcode_G26_14
    719                g26_nozzle = parser.value_float();
   \   0000013E   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
    720                if (!WITHIN(g26_nozzle, 0.1, 1.0)) {
   \   00000142   0xF8DF 0x18D8      LDR.W    R1,??gcode_G26_1+0x34  ;; 0x3dcccccd
   \   00000146   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000014A   0x4682             MOV      R10,R0
   \   0000014C   0xD804             BHI.N    ??gcode_G26_15
   \   0000014E   0xF8DF 0x18D0      LDR.W    R1,??gcode_G26_1+0x38  ;; 0x3f800001
   \   00000152   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000156   0xD302             BCC.N    ??gcode_G26_14
    721                  SERIAL_PROTOCOLLNPGM("?Specified nozzle size not plausible.");
   \                     ??gcode_G26_15: (+1)
   \   00000158   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified nozzle siz...">`
   \   0000015C   0xE191             B.N      ??gcode_G26_6
    722                  return;
    723                }
    724              }
    725          
    726              if (parser.seen('P')) {
   \                     ??gcode_G26_14: (+1)
   \   0000015E   0xF8DF 0x08A0      LDR.W    R0,??gcode_G26_1+0x18
   \   00000162   0x7840             LDRB     R0,[R0, #+1]
   \   00000164   0x0600             LSLS     R0,R0,#+24
   \   00000166   0xD520             BPL.N    ??gcode_G26_16
   \   00000168   0xF8DF 0x5898      LDR.W    R5,??gcode_G26_1+0x1C
   \   0000016C   0x7BE8             LDRB     R0,[R5, #+15]
   \   0000016E   0xB908             CBNZ.N   R0,??gcode_G26_17
   \   00000170   0x6038             STR      R0,[R7, #+0]
   \   00000172   0xE005             B.N      ??gcode_G26_18
   \                     ??gcode_G26_17: (+1)
   \   00000174   0xF8DF 0x1894      LDR.W    R1,??gcode_G26_1+0x24
   \   00000178   0x6809             LDR      R1,[R1, #+0]
   \   0000017A   0x1840             ADDS     R0,R0,R1
   \   0000017C   0x6038             STR      R0,[R7, #+0]
    727                if (!parser.has_value()) {
   \   0000017E   0xD102             BNE.N    ??gcode_G26_19
    728                  #if ENABLED(NEWPANEL)
    729                    g26_prime_flag = -1;
    730                  #else
    731                    SERIAL_PROTOCOLLNPGM("?Prime length must be specified when not using an LCD.");
   \                     ??gcode_G26_18: (+1)
   \   00000180   0x.... 0x....      ADR.W    R0,`?<Constant "?Prime length must be...">`
   \   00000184   0xE17D             B.N      ??gcode_G26_6
    732                    return;
    733                  #endif
    734                }
    735                else {
    736                  g26_prime_flag++;
   \                     ??gcode_G26_19: (+1)
   \   00000186   0x7870             LDRB     R0,[R6, #+1]
   \   00000188   0x1C40             ADDS     R0,R0,#+1
   \   0000018A   0x7070             STRB     R0,[R6, #+1]
    737                  g26_prime_length = parser.value_linear_units();
   \   0000018C   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
    738                  if (!WITHIN(g26_prime_length, 0.0, 25.0)) {
   \   00000190   0x2100             MOVS     R1,#+0
   \   00000192   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000196   0x65F0             STR      R0,[R6, #+92]
   \   00000198   0xD804             BHI.N    ??gcode_G26_20
   \   0000019A   0xF8DF 0x1888      LDR.W    R1,??gcode_G26_1+0x3C  ;; 0x41c80001
   \   0000019E   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001A2   0xD302             BCC.N    ??gcode_G26_16
    739                    SERIAL_PROTOCOLLNPGM("?Specified prime length not plausible.");
   \                     ??gcode_G26_20: (+1)
   \   000001A4   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified prime leng...">`
   \   000001A8   0xE16B             B.N      ??gcode_G26_6
    740                    return;
    741                  }
    742                }
    743              }
    744          
    745              if (parser.seenval('F')) {
   \                     ??gcode_G26_16: (+1)
   \   000001AA   0xF8DF 0x0854      LDR.W    R0,??gcode_G26_1+0x18
   \   000001AE   0x7800             LDRB     R0,[R0, #+0]
   \   000001B0   0x0680             LSLS     R0,R0,#+26
   \   000001B2   0xD504             BPL.N    ??gcode_G26_21
   \   000001B4   0xF8DF 0x584C      LDR.W    R5,??gcode_G26_1+0x1C
   \   000001B8   0x7968             LDRB     R0,[R5, #+5]
   \   000001BA   0xB950             CBNZ.N   R0,??gcode_G26_22
   \   000001BC   0x6038             STR      R0,[R7, #+0]
    746                g26_filament_diameter = parser.value_linear_units();
    747                if (!WITHIN(g26_filament_diameter, 1.0, 4.0)) {
    748                  SERIAL_PROTOCOLLNPGM("?Specified filament size not plausible.");
    749                  return;
    750                }
    751              }
    752              g26_extrusion_multiplier *= sq(1.75) / sq(g26_filament_diameter); // If we aren't using 1.75mm filament, we need to
   \                     ??gcode_G26_21: (+1)
   \   000001BE   0xF8DF 0x9868      LDR.W    R9,??gcode_G26_1+0x40  ;; 0x3ffc0000
   \   000001C2   0xF8DF 0x5868      LDR.W    R5,??gcode_G26_1+0x44  ;; 0x3ff00000
   \   000001C6   0xF04F 0x0800      MOV      R8,#+0
   \   000001CA   0xF04F 0x0B02      MOV      R11,#+2
   \   000001CE   0x2400             MOVS     R4,#+0
   \   000001D0   0xE01D             B.N      ??gcode_G26_23
   \                     ??gcode_G26_22: (+1)
   \   000001D2   0xF8DF 0x1838      LDR.W    R1,??gcode_G26_1+0x24
   \   000001D6   0x6809             LDR      R1,[R1, #+0]
   \   000001D8   0x1840             ADDS     R0,R0,R1
   \   000001DA   0x6038             STR      R0,[R7, #+0]
   \   000001DC   0xD0EF             BEQ.N    ??gcode_G26_21
   \   000001DE   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   000001E2   0xF04F 0x517E      MOV      R1,#+1065353216
   \   000001E6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001EA   0x9002             STR      R0,[SP, #+8]
   \   000001EC   0xD804             BHI.N    ??gcode_G26_24
   \   000001EE   0xF8DF 0x1840      LDR.W    R1,??gcode_G26_1+0x48  ;; 0x40800001
   \   000001F2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001F6   0xD3E2             BCC.N    ??gcode_G26_21
   \                     ??gcode_G26_24: (+1)
   \   000001F8   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified filament s...">`
   \   000001FC   0xE141             B.N      ??gcode_G26_6
   \                     ??gcode_G26_25: (+1)
   \   000001FE   0x4640             MOV      R0,R8
   \   00000200   0x4649             MOV      R1,R9
   \   00000202   0x4642             MOV      R2,R8
   \   00000204   0x464B             MOV      R3,R9
   \   00000206   0x.... 0x....      BL       __aeabi_dmul
   \   0000020A   0x4680             MOV      R8,R0
   \   0000020C   0x4689             MOV      R9,R1
   \                     ??gcode_G26_23: (+1)
   \   0000020E   0xEA5F 0x70CB      LSLS     R0,R11,#+31
   \   00000212   0xD507             BPL.N    ??gcode_G26_26
   \   00000214   0x4642             MOV      R2,R8
   \   00000216   0x464B             MOV      R3,R9
   \   00000218   0x4620             MOV      R0,R4
   \   0000021A   0x4629             MOV      R1,R5
   \   0000021C   0x.... 0x....      BL       __aeabi_dmul
   \   00000220   0x4604             MOV      R4,R0
   \   00000222   0x460D             MOV      R5,R1
   \                     ??gcode_G26_26: (+1)
   \   00000224   0xEA5F 0x0B5B      LSRS     R11,R11,#+1
   \   00000228   0xD1E9             BNE.N    ??gcode_G26_25
   \   0000022A   0xF8DD 0xB008      LDR      R11,[SP, #+8]
   \   0000022E   0xF04F 0x0902      MOV      R9,#+2
   \   00000232   0xF04F 0x587E      MOV      R8,#+1065353216
   \   00000236   0xE004             B.N      ??gcode_G26_27
   \                     ??gcode_G26_28: (+1)
   \   00000238   0x4658             MOV      R0,R11
   \   0000023A   0x4659             MOV      R1,R11
   \   0000023C   0x.... 0x....      BL       __aeabi_fmul
   \   00000240   0x4683             MOV      R11,R0
   \                     ??gcode_G26_27: (+1)
   \   00000242   0xEA5F 0x70C9      LSLS     R0,R9,#+31
   \   00000246   0xD504             BPL.N    ??gcode_G26_29
   \   00000248   0x4640             MOV      R0,R8
   \   0000024A   0x4659             MOV      R1,R11
   \   0000024C   0x.... 0x....      BL       __aeabi_fmul
   \   00000250   0x4680             MOV      R8,R0
   \                     ??gcode_G26_29: (+1)
   \   00000252   0xEA5F 0x0959      LSRS     R9,R9,#+1
   \   00000256   0xD1EF             BNE.N    ??gcode_G26_28
   \   00000258   0x6D30             LDR      R0,[R6, #+80]
   \   0000025A   0x.... 0x....      BL       __aeabi_f2d
   \   0000025E   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000262   0x4640             MOV      R0,R8
   \   00000264   0x.... 0x....      BL       __aeabi_f2d
   \   00000268   0x4602             MOV      R2,R0
   \   0000026A   0x460B             MOV      R3,R1
   \   0000026C   0x4620             MOV      R0,R4
   \   0000026E   0x4629             MOV      R1,R5
   \   00000270   0x.... 0x....      BL       __aeabi_ddiv
   \   00000274   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   00000278   0x.... 0x....      BL       __aeabi_dmul
   \   0000027C   0x.... 0x....      BL       __aeabi_d2f
    753                                                                                // scale up or down the length needed to get the
    754                                                                                // same volume of filament
    755          
    756              g26_extrusion_multiplier *= g26_filament_diameter * sq(g26_nozzle) / sq(0.3); // Scale up by nozzle size
   \   00000280   0x4654             MOV      R4,R10
   \   00000282   0x6530             STR      R0,[R6, #+80]
   \   00000284   0x2502             MOVS     R5,#+2
   \   00000286   0xF04F 0x5A7E      MOV      R10,#+1065353216
   \   0000028A   0xE004             B.N      ??gcode_G26_30
   \                     ??gcode_G26_31: (+1)
   \   0000028C   0x4620             MOV      R0,R4
   \   0000028E   0x4621             MOV      R1,R4
   \   00000290   0x.... 0x....      BL       __aeabi_fmul
   \   00000294   0x4604             MOV      R4,R0
   \                     ??gcode_G26_30: (+1)
   \   00000296   0x07E8             LSLS     R0,R5,#+31
   \   00000298   0xD504             BPL.N    ??gcode_G26_32
   \   0000029A   0x4650             MOV      R0,R10
   \   0000029C   0x4621             MOV      R1,R4
   \   0000029E   0x.... 0x....      BL       __aeabi_fmul
   \   000002A2   0x4682             MOV      R10,R0
   \                     ??gcode_G26_32: (+1)
   \   000002A4   0x086D             LSRS     R5,R5,#+1
   \   000002A6   0xD1F1             BNE.N    ??gcode_G26_31
   \   000002A8   0xF04F 0x3833      MOV      R8,#+858993459
   \   000002AC   0xF8DF 0x9784      LDR.W    R9,??gcode_G26_1+0x4C  ;; 0x3fd33333
   \   000002B0   0xF8DF 0x5778      LDR.W    R5,??gcode_G26_1+0x44  ;; 0x3ff00000
   \   000002B4   0xF04F 0x0B02      MOV      R11,#+2
   \   000002B8   0x2400             MOVS     R4,#+0
   \   000002BA   0xE007             B.N      ??gcode_G26_33
   \                     ??gcode_G26_34: (+1)
   \   000002BC   0x4640             MOV      R0,R8
   \   000002BE   0x4649             MOV      R1,R9
   \   000002C0   0x4642             MOV      R2,R8
   \   000002C2   0x464B             MOV      R3,R9
   \   000002C4   0x.... 0x....      BL       __aeabi_dmul
   \   000002C8   0x4680             MOV      R8,R0
   \   000002CA   0x4689             MOV      R9,R1
   \                     ??gcode_G26_33: (+1)
   \   000002CC   0xEA5F 0x70CB      LSLS     R0,R11,#+31
   \   000002D0   0xD507             BPL.N    ??gcode_G26_35
   \   000002D2   0x4642             MOV      R2,R8
   \   000002D4   0x464B             MOV      R3,R9
   \   000002D6   0x4620             MOV      R0,R4
   \   000002D8   0x4629             MOV      R1,R5
   \   000002DA   0x.... 0x....      BL       __aeabi_dmul
   \   000002DE   0x4604             MOV      R4,R0
   \   000002E0   0x460D             MOV      R5,R1
   \                     ??gcode_G26_35: (+1)
   \   000002E2   0xEA5F 0x0B5B      LSRS     R11,R11,#+1
   \   000002E6   0xD1E9             BNE.N    ??gcode_G26_34
   \   000002E8   0x6D30             LDR      R0,[R6, #+80]
   \   000002EA   0x.... 0x....      BL       __aeabi_f2d
   \   000002EE   0x4680             MOV      R8,R0
   \   000002F0   0x4689             MOV      R9,R1
   \   000002F2   0x9802             LDR      R0,[SP, #+8]
   \   000002F4   0x4651             MOV      R1,R10
   \   000002F6   0x.... 0x....      BL       __aeabi_fmul
   \   000002FA   0x.... 0x....      BL       __aeabi_f2d
   \   000002FE   0x4622             MOV      R2,R4
   \   00000300   0x462B             MOV      R3,R5
   \   00000302   0x.... 0x....      BL       __aeabi_ddiv
   \   00000306   0x4642             MOV      R2,R8
   \   00000308   0x464B             MOV      R3,R9
   \   0000030A   0x.... 0x....      BL       __aeabi_dmul
   \   0000030E   0x.... 0x....      BL       __aeabi_d2f
   \   00000312   0x6530             STR      R0,[R6, #+80]
    757          
    758              if (parser.seenval('H')) {
   \   00000314   0xF8DF 0x56EC      LDR.W    R5,??gcode_G26_1+0x1C
   \   00000318   0xF8DF 0x06E4      LDR.W    R0,??gcode_G26_1+0x18
   \   0000031C   0x7800             LDRB     R0,[R0, #+0]
   \   0000031E   0x0600             LSLS     R0,R0,#+24
   \   00000320   0xD502             BPL.N    ??gcode_G26_36
   \   00000322   0x79E8             LDRB     R0,[R5, #+7]
   \   00000324   0xB968             CBNZ.N   R0,??gcode_G26_37
   \   00000326   0x6038             STR      R0,[R7, #+0]
    759                g26_hotend_temp = parser.value_celsius();
                                       ^
Warning[Pa093]: implicit conversion from floating point to integer
    760                if (!WITHIN(g26_hotend_temp, 165, 280)) {
    761                  SERIAL_PROTOCOLLNPGM("?Specified nozzle temperature not plausible.");
    762                  return;
    763                }
    764              }
    765          
    766              if (parser.seen('U')) {
   \                     ??gcode_G26_36: (+1)
   \   00000328   0xF8DF 0x06D4      LDR.W    R0,??gcode_G26_1+0x18
   \   0000032C   0x7880             LDRB     R0,[R0, #+2]
   \   0000032E   0x06C0             LSLS     R0,R0,#+27
   \   00000330   0xD527             BPL.N    ??gcode_G26_38
   \   00000332   0x7D28             LDRB     R0,[R5, #+20]
   \   00000334   0x2800             CMP      R0,#+0
   \   00000336   0xBF1E             ITTT     NE 
   \   00000338   0xF8DF 0x16D0      LDRNE.W  R1,??gcode_G26_1+0x24
   \   0000033C   0x6809             LDRNE    R1,[R1, #+0]
   \   0000033E   0x1840             ADDNE    R0,R0,R1
   \   00000340   0xE012             B.N      ??gcode_G26_39
   \                     ??gcode_G26_37: (+1)
   \   00000342   0xF8DF 0x16C8      LDR.W    R1,??gcode_G26_1+0x24
   \   00000346   0x6809             LDR      R1,[R1, #+0]
   \   00000348   0x1840             ADDS     R0,R0,R1
   \   0000034A   0x6038             STR      R0,[R7, #+0]
   \   0000034C   0xD0EC             BEQ.N    ??gcode_G26_36
   \   0000034E   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   00000352   0x.... 0x....      BL       __aeabi_f2iz
   \   00000356   0x80B0             STRH     R0,[R6, #+4]
   \   00000358   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000035C   0x38A5             SUBS     R0,R0,#+165
   \   0000035E   0x2874             CMP      R0,#+116
   \   00000360   0xD3E2             BCC.N    ??gcode_G26_36
   \   00000362   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified nozzle tem...">`
   \   00000366   0xE08C             B.N      ??gcode_G26_6
   \                     ??gcode_G26_39: (+1)
   \   00000368   0x6038             STR      R0,[R7, #+0]
    767                //randomSeed(millis());
    768                srand(millis());
   \   0000036A   0x.... 0x....      BL       HAL_GetTick
   \   0000036E   0x.... 0x....      BL       srand
    769                // This setting will persist for the next G26
    770                random_deviation = parser.has_value() ? parser.value_float() : 50.0;
   \   00000372   0x6838             LDR      R0,[R7, #+0]
   \   00000374   0x2800             CMP      R0,#+0
   \   00000376   0xBF0C             ITE      EQ 
   \   00000378   0xF8DF 0x06BC      LDREQ.W  R0,??gcode_G26_1+0x50  ;; 0x42480000
   \   0000037C   0x.... 0x....      BLNE     _ZN11GCodeParser11value_floatEv
   \   00000380   0x64F0             STR      R0,[R6, #+76]
    771              }
    772          
    773              int16_t g26_repeats;
    774              #if ENABLED(NEWPANEL)
    775                g26_repeats = parser.intval('R', GRID_MAX_POINTS + 1);
    776              #else
    777                if (!parser.seen('R')) {
   \                     ??gcode_G26_38: (+1)
   \   00000382   0xF8DF 0x067C      LDR.W    R0,??gcode_G26_1+0x18
   \   00000386   0x7880             LDRB     R0,[R0, #+2]
   \   00000388   0x0780             LSLS     R0,R0,#+30
   \   0000038A   0xD51E             BPL.N    ??gcode_G26_40
   \   0000038C   0x7C68             LDRB     R0,[R5, #+17]
   \   0000038E   0xB958             CBNZ.N   R0,??gcode_G26_41
   \   00000390   0x6038             STR      R0,[R7, #+0]
   \                     ??gcode_G26_42: (+1)
   \   00000392   0xF8DF 0x46A8      LDR.W    R4,??gcode_G26_1+0x54
   \   00000396   0xF894 0x0060      LDRB     R0,[R4, #+96]
   \   0000039A   0xF104 0x0160      ADD      R1,R4,#+96
   \   0000039E   0x7849             LDRB     R1,[R1, #+1]
   \   000003A0   0x4348             MULS     R0,R1,R0
   \   000003A2   0xF100 0x0801      ADD      R8,R0,#+1
   \   000003A6   0xE008             B.N      ??gcode_G26_43
   \                     ??gcode_G26_41: (+1)
   \   000003A8   0xF8DF 0x1660      LDR.W    R1,??gcode_G26_1+0x24
   \   000003AC   0x6809             LDR      R1,[R1, #+0]
   \   000003AE   0x1840             ADDS     R0,R0,R1
   \   000003B0   0x6038             STR      R0,[R7, #+0]
    778                  SERIAL_PROTOCOLLNPGM("?(R)epeat must be specified when not using an LCD.");
    779                  return;
    780                }
    781                else
    782                  g26_repeats = parser.has_value() ? parser.value_int() : GRID_MAX_POINTS + 1;
   \   000003B2   0xD0EE             BEQ.N    ??gcode_G26_42
   \   000003B4   0x.... 0x....      BL       _ZN11GCodeParser10value_longEv
   \   000003B8   0x4680             MOV      R8,R0
    783              #endif
    784              if (g26_repeats < 1) {
   \                     ??gcode_G26_43: (+1)
   \   000003BA   0xFA0F 0xF888      SXTH     R8,R8
   \   000003BE   0xF1B8 0x0F01      CMP      R8,#+1
   \   000003C2   0xDA05             BGE.N    ??gcode_G26_44
    785                SERIAL_PROTOCOLLNPGM("?(R)epeat value not plausible; must be at least 1.");
   \   000003C4   0x.... 0x....      ADR.W    R0,`?<Constant "?(R)epeat value not p...">`
   \   000003C8   0xE05B             B.N      ??gcode_G26_6
    786                return;
    787              }
   \                     ??gcode_G26_40: (+1)
   \   000003CA   0x.... 0x....      ADR.W    R0,`?<Constant "?(R)epeat must be spe...">`
   \   000003CE   0xE058             B.N      ??gcode_G26_6
   \                     ??gcode_G26_44: (+1)
   \   000003D0   0xF8DF 0x062C      LDR.W    R0,??gcode_G26_1+0x18
   \   000003D4   0x7880             LDRB     R0,[R0, #+2]
   \   000003D6   0x0600             LSLS     R0,R0,#+24
   \   000003D8   0xD502             BPL.N    ??gcode_G26_45
   \   000003DA   0x7DE8             LDRB     R0,[R5, #+23]
   \   000003DC   0xBB78             CBNZ.N   R0,??gcode_G26_46
   \   000003DE   0x6038             STR      R0,[R7, #+0]
   \                     ??gcode_G26_45: (+1)
   \   000003E0   0xF8DF 0x065C      LDR.W    R0,??gcode_G26_1+0x58
   \   000003E4   0x6800             LDR      R0,[R0, #+0]
   \                     ??gcode_G26_47: (+1)
   \   000003E6   0x6630             STR      R0,[R6, #+96]
    788          
    789              g26_x_pos = parser.seenval('X') ? RAW_X_POSITION(parser.value_linear_units()) : current_position[X_AXIS];
    790              g26_y_pos = parser.seenval('Y') ? RAW_Y_POSITION(parser.value_linear_units()) : current_position[Y_AXIS];
   \   000003E8   0xF8DF 0x0614      LDR.W    R0,??gcode_G26_1+0x18
   \   000003EC   0x78C0             LDRB     R0,[R0, #+3]
   \   000003EE   0x07C0             LSLS     R0,R0,#+31
   \   000003F0   0xD502             BPL.N    ??gcode_G26_48
   \   000003F2   0x7E28             LDRB     R0,[R5, #+24]
   \   000003F4   0xBB88             CBNZ.N   R0,??gcode_G26_49
   \   000003F6   0x6038             STR      R0,[R7, #+0]
   \                     ??gcode_G26_48: (+1)
   \   000003F8   0xF8DF 0x0644      LDR.W    R0,??gcode_G26_1+0x58
   \   000003FC   0x6840             LDR      R0,[R0, #+4]
    791              if(MACHINETPYE & IS_KINEMATIC)
   \                     ??gcode_G26_50: (+1)
   \   000003FE   0xF8DF 0x463C      LDR.W    R4,??gcode_G26_1+0x54
   \   00000402   0x6670             STR      R0,[R6, #+100]
   \   00000404   0xF240 0x3102      MOVW     R1,#+770
   \   00000408   0xF104 0x0038      ADD      R0,R4,#+56
   \   0000040C   0x900A             STR      R0,[SP, #+40]
   \   0000040E   0x8C00             LDRH     R0,[R0, #+32]
   \   00000410   0x4208             TST      R0,R1
   \   00000412   0xF106 0x0164      ADD      R1,R6,#+100
   \   00000416   0xF106 0x0060      ADD      R0,R6,#+96
   \   0000041A   0xD02C             BEQ.N    ??gcode_G26_51
    792              {
    793                  if (!position_is_reachable_IS_KINEMATIC(g26_x_pos, g26_y_pos)) {
   \   0000041C   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000420   0xB368             CBZ.N    R0,??gcode_G26_52
    794                    SERIAL_PROTOCOLLNPGM("?Specified X,Y coordinate out of bounds.");
    795                    return;
    796                  }
    797              }
    798              else
    799              {
    800                  if (!position_is_reachable_IS_CARTESIAN(g26_x_pos, g26_y_pos)) {
    801                    SERIAL_PROTOCOLLNPGM("?Specified X,Y coordinate out of bounds.");
    802                    return;
    803                  }        
    804              }
    805          
    806              /**
    807               * Wait until all parameters are verified before altering the state!
    808               */
    809              set_bed_leveling_enabled(!parser.seen('D'));
   \                     ??gcode_G26_53: (+1)
   \   00000422   0xF8DF 0x05DC      LDR.W    R0,??gcode_G26_1+0x18
   \   00000426   0x7800             LDRB     R0,[R0, #+0]
   \   00000428   0x08C0             LSRS     R0,R0,#+3
   \   0000042A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000042E   0xD02C             BEQ.N    ??gcode_G26_54
   \   00000430   0x78E9             LDRB     R1,[R5, #+3]
   \   00000432   0xB349             CBZ.N    R1,??gcode_G26_55
   \   00000434   0xF8DF 0x25D4      LDR.W    R2,??gcode_G26_1+0x24
   \   00000438   0x6812             LDR      R2,[R2, #+0]
   \   0000043A   0x1889             ADDS     R1,R1,R2
   \   0000043C   0xE024             B.N      ??gcode_G26_55
   \                     ??gcode_G26_46: (+1)
   \   0000043E   0xF8DF 0x15CC      LDR.W    R1,??gcode_G26_1+0x24
   \   00000442   0x6809             LDR      R1,[R1, #+0]
   \   00000444   0x1840             ADDS     R0,R0,R1
   \   00000446   0x6038             STR      R0,[R7, #+0]
   \   00000448   0xD0CA             BEQ.N    ??gcode_G26_45
   \   0000044A   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   0000044E   0xF8DF 0x15F4      LDR.W    R1,??gcode_G26_1+0x5C
   \   00000452   0x6809             LDR      R1,[R1, #+0]
   \   00000454   0x.... 0x....      BL       __aeabi_fsub
   \   00000458   0xE7C5             B.N      ??gcode_G26_47
   \                     ??gcode_G26_49: (+1)
   \   0000045A   0xF8DF 0x15B0      LDR.W    R1,??gcode_G26_1+0x24
   \   0000045E   0x6809             LDR      R1,[R1, #+0]
   \   00000460   0x1840             ADDS     R0,R0,R1
   \   00000462   0x6038             STR      R0,[R7, #+0]
   \   00000464   0xD0C8             BEQ.N    ??gcode_G26_48
   \   00000466   0x.... 0x....      BL       _ZN11GCodeParser11value_floatEv
   \   0000046A   0xF8DF 0x15D8      LDR.W    R1,??gcode_G26_1+0x5C
   \   0000046E   0x6849             LDR      R1,[R1, #+4]
   \   00000470   0x.... 0x....      BL       __aeabi_fsub
   \   00000474   0xE7C3             B.N      ??gcode_G26_50
   \                     ??gcode_G26_51: (+1)
   \   00000476   0x.... 0x....      BL       _Z34position_is_reachable_IS_CARTESIANRKfS0_
   \   0000047A   0x2800             CMP      R0,#+0
   \   0000047C   0xD1D1             BNE.N    ??gcode_G26_53
   \                     ??gcode_G26_52: (+1)
   \   0000047E   0x.... 0x....      ADR.W    R0,`?<Constant "?Specified X,Y coordi...">`
   \                     ??gcode_G26_6: (+1)
   \   00000482   0x.... 0x....      BL       _Z14serialprintPGMPKc
    810          
    811              if (current_position[Z_AXIS] < Z_CLEARANCE_BETWEEN_PROBES) {
    812                do_blocking_move_to_z(Z_CLEARANCE_BETWEEN_PROBES);
    813                stepper.synchronize();
    814                set_current_from_destination();
    815              }
    816          
    817              if (turn_on_heaters() != G26_OK) goto LEAVE;
    818          
    819              current_position[E_AXIS] = 0.0;
    820              sync_plan_position_e();
    821          
    822              if (g26_prime_flag && prime_nozzle() != G26_OK) goto LEAVE;
    823          
    824              /**
    825               *  Bed is preheated
    826               *
    827               *  Nozzle is at temperature
    828               *
    829               *  Filament is primed!
    830               *
    831               *  It's  "Show Time" !!!
    832               */
    833          
    834              ZERO(circle_flags);
    835              ZERO(horizontal_mesh_line_flags);
    836              ZERO(vertical_mesh_line_flags);
    837          
    838              // Move nozzle to the specified height for the first layer
    839              set_destination_from_current();
    840              destination[Z_AXIS] = g26_layer_height;
    841              move_to(destination, 0.0);
    842              move_to(destination, g26_ooze_amount);
    843          
    844              #if ENABLED(ULTRA_LCD)
    845                lcd_external_control = true;
    846              #endif
    847          
    848              //debug_current_and_destination(PSTR("Starting G26 Mesh Validation Pattern."));
    849          
    850              /**
    851               * Declare and generate a sin() & cos() table to be used during the circle drawing. This will lighten
    852               * the CPU load and make the arc drawing faster and more smooth
    853               */
    854              float sin_table[360 / 30 + 1], cos_table[360 / 30 + 1];
    855              for (i = 0; i <= 360 / 30; i++) {
    856                cos_table[i] = SIZE_OF_INTERSECTION_CIRCLES * cos(RADIANS(valid_trig_angle(i * 30.0)));
    857                sin_table[i] = SIZE_OF_INTERSECTION_CIRCLES * sin(RADIANS(valid_trig_angle(i * 30.0)));
    858              }
    859          
    860              do {
    861                location = g26_continue_with_closest
    862                  ? find_closest_circle_to_print(current_position[X_AXIS], current_position[Y_AXIS])
    863                  : find_closest_circle_to_print(g26_x_pos, g26_y_pos); // Find the closest Mesh Intersection to where we are now.
    864          
    865                if (location.x_index >= 0 && location.y_index >= 0) {
    866                  float circle_x,circle_y;
    867                  if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_BILINEAR)
    868                  {
    869                      circle_x = _GET_MESH_X_ABL(location.x_index);
    870                      circle_y = _GET_MESH_Y_ABL(location.y_index);
    871                  }
    872                  else if(BED_LEVELING_METHOD & AUTO_BED_LEVELING_UBL)
    873                  {
    874                      circle_x = _GET_MESH_X_UBL(location.x_index);
    875                      circle_y = _GET_MESH_Y_UBL(location.y_index);        
    876                  }
    877                  else if(BED_LEVELING_METHOD & MESH_BED_LEVELING)
    878                  {
    879                      circle_x = _GET_MESH_X_MBL(location.x_index);
    880                      circle_y = _GET_MESH_Y_MBL(location.y_index);            
    881                  }
    882          
    883                  // If this mesh location is outside the printable_radius, skip it.
    884                  if(MACHINETPYE & IS_KINEMATIC)
    885                      if (!position_is_reachable_IS_KINEMATIC(circle_x, circle_y)) continue;
    886                  else
    887                      if (!position_is_reachable_IS_CARTESIAN(circle_x, circle_y)) continue;
    888                      
    889                  xi = location.x_index;  // Just to shrink the next few lines and make them easier to understand
    890                  yi = location.y_index;
    891          
    892                  if (g26_debug_flag) {
    893                    SERIAL_ECHOPAIR("   Doing circle at: (xi=", xi);
    894                    SERIAL_ECHOPAIR(", yi=", yi);
    895                    SERIAL_CHAR(')');
    896                    SERIAL_EOL();
    897                  }
    898          
    899                  start_angle = 0.0;    // assume it is going to be a full circle
    900                  end_angle   = 360.0;
    901                  if (xi == 0) {       // Check for bottom edge
    902                    start_angle = -90.0;
    903                    end_angle   =  90.0;
    904                    if (yi == 0)        // it is an edge, check for the two left corners
    905                      start_angle = 0.0;
    906                    else if (yi == GRID_MAX_POINTS_Y - 1)
    907                      end_angle = 0.0;
    908                  }
    909                  else if (xi == GRID_MAX_POINTS_X - 1) { // Check for top edge
    910                    start_angle =  90.0;
    911                    end_angle   = 270.0;
    912                    if (yi == 0)                  // it is an edge, check for the two right corners
    913                      end_angle = 180.0;
    914                    else if (yi == GRID_MAX_POINTS_Y - 1)
    915                      start_angle = 180.0;
    916                  }
    917                  else if (yi == 0) {
    918                    start_angle =   0.0;         // only do the top   side of the cirlce
    919                    end_angle   = 180.0;
    920                  }
    921                  else if (yi == GRID_MAX_POINTS_Y - 1) {
    922                    start_angle = 180.0;         // only do the bottom side of the cirlce
    923                    end_angle   = 360.0;
    924                  }
    925          
    926                  for (tmp = start_angle; tmp < end_angle - 0.1; tmp += 30.0) {
    927          
    928                    #if ENABLED(NEWPANEL)
    929                      if (user_canceled()) goto LEAVE;              // Check if the user wants to stop the Mesh Validation
    930                    #endif
    931          
    932                    int tmp_div_30 = tmp / 30.0;
                                            ^
Warning[Pa093]: implicit conversion from floating point to integer

    static unsigned int circle_flags[16], horizontal_mesh_line_flags[16], vertical_mesh_line_flags[16], continue_with_closest = 0;
                                                                                                        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\G26_Mesh_Validation_Tool.cpp",144  Warning[Pe177]: 
          variable "continue_with_closest" was declared but never referenced
    933                    if (tmp_div_30 < 0) tmp_div_30 += 360 / 30;
    934                    if (tmp_div_30 > 11) tmp_div_30 -= 360 / 30;
    935          
    936                    float rx = circle_x + cos_table[tmp_div_30],    // for speed, these are now a lookup table entry
    937                          ry = circle_y + sin_table[tmp_div_30],
    938                          xe = circle_x + cos_table[tmp_div_30 + 1],
    939                          ye = circle_y + sin_table[tmp_div_30 + 1];
    940                    //#if IS_KINEMATIC
    941                    if(MACHINETPYE & IS_KINEMATIC)
    942                    {
    943                      	// Check to make sure this segment is entirely on the bed, skip if not.
    944                      	if (!position_is_reachable_IS_KINEMATIC(rx, ry) || !position_is_reachable_IS_KINEMATIC(xe, ye)) continue;
    945                    }
    946          		  else
    947          		  {
    948                    //#else                                               // not, we need to skip
    949                      rx = constrain(rx, X_MIN_POS + 1, X_MAX_POS - 1); // This keeps us from bumping the endstops
    950                      ry = constrain(ry, Y_MIN_POS + 1, Y_MAX_POS - 1);
    951                      xe = constrain(xe, X_MIN_POS + 1, X_MAX_POS - 1);
    952                      ye = constrain(ye, Y_MIN_POS + 1, Y_MAX_POS - 1);
    953          		  }
    954                    //#endif
    955          
    956                    //if (g26_debug_flag) {
    957                    //  char ccc, *cptr, seg_msg[50], seg_num[10];
    958                    //  strcpy(seg_msg, "   segment: ");
    959                    //  strcpy(seg_num, "    \n");
    960                    //  cptr = (char*) "01234567890ABCDEF????????";
    961                    //  ccc = cptr[tmp_div_30];
    962                    //  seg_num[1] = ccc;
    963                    //  strcat(seg_msg, seg_num);
    964                    //  debug_current_and_destination(seg_msg);
    965                    //}
    966          
    967                    print_line_from_here_to_there(rx, ry, g26_layer_height, xe, ye, g26_layer_height);
    968          
    969                  }
    970                  if (look_for_lines_to_connect())
    971                    goto LEAVE;
    972                }
    973              } while (--g26_repeats && location.x_index >= 0 && location.y_index >= 0);
    974          
    975              LEAVE:
    976              lcd_setstatusPGM(PSTR("Leaving G26"), -1);
    977          
    978              retract_filament(destination);
    979              destination[Z_AXIS] = Z_CLEARANCE_BETWEEN_PROBES;
    980          
    981              //debug_current_and_destination(PSTR("ready to do Z-Raise."));
    982              move_to(destination, 0); // Raise the nozzle
    983              //debug_current_and_destination(PSTR("done doing Z-Raise."));
    984          
    985              destination[X_AXIS] = g26_x_pos;                               // Move back to the starting position
    986              destination[Y_AXIS] = g26_y_pos;
    987              //destination[Z_AXIS] = Z_CLEARANCE_BETWEEN_PROBES;            // Keep the nozzle where it is
    988          
    989              move_to(destination, 0); // Move back to the starting position
    990              //debug_current_and_destination(PSTR("done doing X/Y move."));
    991          
    992              #if ENABLED(ULTRA_LCD)
    993                lcd_external_control = false;     // Give back control of the LCD Panel!
    994              #endif
    995          
    996              if (!g26_keep_heaters_on) {
    997                //#if HAS_TEMP_BED
    998                if(HAS_TEMP_BED)
    999                  thermalManager.setTargetBed(0);
   1000                //#endif
   1001                thermalManager.setTargetHotend(0, 0);
   1002              }
   1003            }
   \   00000486   0x....             B.N      ?Subroutine1
   \                     ??gcode_G26_55: (+1)
   \   00000488   0x6039             STR      R1,[R7, #+0]
   \                     ??gcode_G26_54: (+1)
   \   0000048A   0xF080 0x0001      EOR      R0,R0,#0x1
   \   0000048E   0x.... 0x....      BL       _Z24set_bed_leveling_enabledb
   \   00000492   0xF104 0x0060      ADD      R0,R4,#+96
   \   00000496   0x9009             STR      R0,[SP, #+36]
   \   00000498   0x9909             LDR      R1,[SP, #+36]
   \   0000049A   0xF8DF 0x05A4      LDR.W    R0,??gcode_G26_1+0x58
   \   0000049E   0x6889             LDR      R1,[R1, #+8]
   \   000004A0   0x6880             LDR      R0,[R0, #+8]
   \   000004A2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004A6   0xD20E             BCS.N    ??gcode_G26_56
   \   000004A8   0x2000             MOVS     R0,#+0
   \   000004AA   0x9000             STR      R0,[SP, #+0]
   \   000004AC   0xA900             ADD      R1,SP,#+0
   \   000004AE   0xF104 0x0068      ADD      R0,R4,#+104
   \   000004B2   0x.... 0x....      BL       _Z21do_blocking_move_to_zRKfS0_
   \   000004B6   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
   \   000004BA   0xF8DF 0x058C      LDR.W    R0,??gcode_G26_1+0x60
   \   000004BE   0xF8DF 0x1580      LDR.W    R1,??gcode_G26_1+0x58
   \   000004C2   0xC8AC             LDM      R0!,{R2,R3,R5,R7}
   \   000004C4   0xC1AC             STM      R1!,{R2,R3,R5,R7}
   \                     ??gcode_G26_56: (+1)
   \   000004C6   0xF241 0x3588      MOVW     R5,#+5000
   \   000004CA   0x.... 0x....      BL       HAL_GetTick
   \   000004CE   0x182F             ADDS     R7,R5,R0
   \   000004D0   0xF894 0x0038      LDRB     R0,[R4, #+56]
   \   000004D4   0xB350             CBZ.N    R0,??gcode_G26_57
   \   000004D6   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   000004DA   0x.... 0x....      BL       __aeabi_i2f
   \   000004DE   0x.... 0x....      BL       _ZN11Temperature12setTargetBedEf
   \   000004E2   0xF8DF 0xB568      LDR.W    R11,??gcode_G26_1+0x64
   \   000004E6   0xF8DF 0x9568      LDR.W    R9,??gcode_G26_1+0x68  ;; 0x40400001
   \   000004EA   0xF8DF 0xA568      LDR.W    R10,??gcode_G26_1+0x6C
   \   000004EE   0xE00E             B.N      ??gcode_G26_58
   \                     ??gcode_G26_59: (+1)
   \   000004F0   0x.... 0x....      BL       HAL_GetTick
   \   000004F4   0x1BC0             SUBS     R0,R0,R7
   \   000004F6   0xD408             BMI.N    ??gcode_G26_60
   \   000004F8   0x.... 0x....      BL       HAL_GetTick
   \   000004FC   0x182F             ADDS     R7,R5,R0
   \   000004FE   0x.... 0x....      BL       _ZN11Temperature18print_heaterstatesEv
   \   00000502   0x210A             MOVS     R1,#+10
   \   00000504   0x4658             MOV      R0,R11
   \   00000506   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \                     ??gcode_G26_60: (+1)
   \   0000050A   0x.... 0x....      BL       _Z4idlev
   \                     ??gcode_G26_58: (+1)
   \   0000050E   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000512   0x.... 0x....      BL       __aeabi_i2f
   \   00000516   0x4601             MOV      R1,R0
   \   00000518   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \   0000051C   0x.... 0x....      BL       __aeabi_fsub
   \   00000520   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \   00000524   0x4649             MOV      R1,R9
   \   00000526   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000052A   0xD9E1             BLS.N    ??gcode_G26_59
   \                     ??gcode_G26_57: (+1)
   \   0000052C   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   00000530   0x.... 0x....      BL       __aeabi_i2f
   \   00000534   0x.... 0x....      BL       __aeabi_f2iz
   \   00000538   0xF8DF 0x1618      LDR.W    R1,??gcode_G26_61
   \   0000053C   0x6008             STR      R0,[R1, #+0]
   \   0000053E   0x2000             MOVS     R0,#+0
   \   00000540   0x.... 0x....      BL       _ZN11Temperature21start_watching_heaterEh
   \   00000544   0xF8DF 0xA510      LDR.W    R10,??gcode_G26_1+0x70
   \   00000548   0xF8DF 0xB500      LDR.W    R11,??gcode_G26_1+0x64
   \   0000054C   0xF8DF 0x9500      LDR.W    R9,??gcode_G26_1+0x68  ;; 0x40400001
   \   00000550   0xE00E             B.N      ??gcode_G26_62
   \                     ??gcode_G26_63: (+1)
   \   00000552   0x.... 0x....      BL       HAL_GetTick
   \   00000556   0x1BC0             SUBS     R0,R0,R7
   \   00000558   0xD408             BMI.N    ??gcode_G26_64
   \   0000055A   0x.... 0x....      BL       HAL_GetTick
   \   0000055E   0x182F             ADDS     R7,R5,R0
   \   00000560   0x.... 0x....      BL       _ZN11Temperature18print_heaterstatesEv
   \   00000564   0x210A             MOVS     R1,#+10
   \   00000566   0x4658             MOV      R0,R11
   \   00000568   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \                     ??gcode_G26_64: (+1)
   \   0000056C   0x.... 0x....      BL       _Z4idlev
   \                     ??gcode_G26_62: (+1)
   \   00000570   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   00000574   0x.... 0x....      BL       __aeabi_i2f
   \   00000578   0x4601             MOV      R1,R0
   \   0000057A   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \   0000057E   0x.... 0x....      BL       __aeabi_fsub
   \   00000582   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \   00000586   0x4649             MOV      R1,R9
   \   00000588   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000058C   0xD9E1             BLS.N    ??gcode_G26_63
   \   0000058E   0xF8DF 0x14B0      LDR.W    R1,??gcode_G26_1+0x58
   \   00000592   0x2000             MOVS     R0,#+0
   \   00000594   0x60C8             STR      R0,[R1, #+12]
   \   00000596   0x2003             MOVS     R0,#+3
   \   00000598   0xF8DF 0x14C0      LDR.W    R1,??gcode_G26_1+0x74
   \   0000059C   0x.... 0x....      BL       _ZN7Planner15set_position_mmE8AxisEnumRKf
   \   000005A0   0xF996 0x0001      LDRSB    R0,[R6, #+1]
   \   000005A4   0xF8DF 0x94A0      LDR.W    R9,??gcode_G26_1+0x60
   \   000005A8   0x2510             MOVS     R5,#+16
   \   000005AA   0xB338             CBZ.N    R0,??gcode_G26_65
   \   000005AC   0x2210             MOVS     R2,#+16
   \   000005AE   0xF8DF 0x1490      LDR.W    R1,??gcode_G26_1+0x58
   \   000005B2   0x4648             MOV      R0,R9
   \   000005B4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000005B8   0xF8D9 0x100C      LDR      R1,[R9, #+12]
   \   000005BC   0x6DF0             LDR      R0,[R6, #+92]
   \   000005BE   0x.... 0x....      BL       __aeabi_fadd
   \   000005C2   0xF8DF 0x749C      LDR.W    R7,??gcode_G26_1+0x78
   \   000005C6   0xF8DF 0x149C      LDR.W    R1,??gcode_G26_1+0x7C  ;; 0x41700000
   \   000005CA   0xF8D7 0xA000      LDR      R10,[R7, #+0]
   \   000005CE   0xF8C9 0x000C      STR      R0,[R9, #+12]
   \   000005D2   0xF8DF 0x0494      LDR.W    R0,??gcode_G26_1+0x80
   \   000005D6   0x68C0             LDR      R0,[R0, #+12]
   \   000005D8   0x.... 0x....      BL       __aeabi_fdiv
   \   000005DC   0x6038             STR      R0,[R7, #+0]
   \   000005DE   0x.... 0x....      BL       _Z27prepare_move_to_destinationv
   \   000005E2   0xF8C7 0xA000      STR      R10,[R7, #+0]
   \   000005E6   0x.... 0x....      BL       _ZN7Stepper11synchronizeEv
   \   000005EA   0xF8DF 0x1454      LDR.W    R1,??gcode_G26_1+0x58
   \   000005EE   0x462A             MOV      R2,R5
   \   000005F0   0x4648             MOV      R0,R9
   \   000005F2   0x.... 0x....      BL       __aeabi_memcpy4
   \   000005F6   0x4648             MOV      R0,R9
   \   000005F8   0x.... 0x....      BL       _Z16retract_filamentPKf
   \                     ??gcode_G26_65: (+1)
   \   000005FC   0x2740             MOVS     R7,#+64
   \   000005FE   0xF04F 0x0A00      MOV      R10,#+0
   \   00000602   0x2200             MOVS     R2,#+0
   \   00000604   0x4639             MOV      R1,R7
   \   00000606   0xF106 0x0008      ADD      R0,R6,#+8
   \   0000060A   0x.... 0x....      BL       __aeabi_memset
   \   0000060E   0xF8DF 0xB45C      LDR.W    R11,??gcode_G26_1+0x84
   \   00000612   0x4652             MOV      R2,R10
   \   00000614   0x4639             MOV      R1,R7
   \   00000616   0x4658             MOV      R0,R11
   \   00000618   0x.... 0x....      BL       __aeabi_memset4
   \   0000061C   0x4652             MOV      R2,R10
   \   0000061E   0x4639             MOV      R1,R7
   \   00000620   0xF10B 0x0040      ADD      R0,R11,#+64
   \   00000624   0x.... 0x....      BL       __aeabi_memset4
   \   00000628   0x462A             MOV      R2,R5
   \   0000062A   0xF8DF 0x1414      LDR.W    R1,??gcode_G26_1+0x58
   \   0000062E   0x4648             MOV      R0,R9
   \   00000630   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000634   0x6DB0             LDR      R0,[R6, #+88]
   \   00000636   0xF8C9 0x0008      STR      R0,[R9, #+8]
   \   0000063A   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \   0000063E   0xAB00             ADD      R3,SP,#+0
   \   00000640   0xF109 0x0208      ADD      R2,R9,#+8
   \   00000644   0xF109 0x0104      ADD      R1,R9,#+4
   \   00000648   0x4648             MOV      R0,R9
   \   0000064A   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   0000064E   0xAB0D             ADD      R3,SP,#+52
   \   00000650   0xF109 0x0208      ADD      R2,R9,#+8
   \   00000654   0xF109 0x0104      ADD      R1,R9,#+4
   \   00000658   0x4648             MOV      R0,R9
   \   0000065A   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   0000065E   0x4657             MOV      R7,R10
   \   00000660   0xA81F             ADD      R0,SP,#+124
   \   00000662   0xF10D 0x0A48      ADD      R10,SP,#+72
   \   00000666   0x9001             STR      R0,[SP, #+4]
   \   00000668   0xF8DF 0xB404      LDR.W    R11,??gcode_G26_1+0x88  ;; 0x43b40001
   \                     ??gcode_G26_66: (+1)
   \   0000066C   0x4638             MOV      R0,R7
   \   0000066E   0x.... 0x....      BL       __aeabi_i2d
   \   00000672   0x2200             MOVS     R2,#+0
   \   00000674   0xF8DF 0x33FC      LDR.W    R3,??gcode_G26_1+0x8C  ;; 0x403e0000
   \   00000678   0x.... 0x....      BL       __aeabi_dmul
   \   0000067C   0x.... 0x....      BL       __aeabi_d2f
   \   00000680   0x4605             MOV      R5,R0
   \                     ??gcode_G26_67: (+1)
   \   00000682   0x4659             MOV      R1,R11
   \   00000684   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000688   0xD808             BHI.N    ??gcode_G26_68
   \   0000068A   0xF8DF 0x13EC      LDR.W    R1,??gcode_G26_1+0x90  ;; 0xc3b40000
   \   0000068E   0x.... 0x....      BL       __aeabi_fadd
   \   00000692   0xE7F6             B.N      ??gcode_G26_67
   \                     ??gcode_G26_69: (+1)
   \   00000694   0xF8DF 0x13E4      LDR.W    R1,??gcode_G26_1+0x94  ;; 0x43b40000
   \   00000698   0x.... 0x....      BL       __aeabi_fadd
   \                     ??gcode_G26_68: (+1)
   \   0000069C   0x2100             MOVS     R1,#+0
   \   0000069E   0x.... 0x....      BL       __aeabi_cfcmple
   \   000006A2   0xD3F7             BCC.N    ??gcode_G26_69
   \   000006A4   0x2201             MOVS     R2,#+1
   \   000006A6   0x9200             STR      R2,[SP, #+0]
   \   000006A8   0x.... 0x....      BL       __aeabi_f2d
   \   000006AC   0xF8DF 0x23D0      LDR.W    R2,??gcode_G26_1+0x98  ;; 0x54442d18
   \   000006B0   0xF8DF 0x33D0      LDR.W    R3,??gcode_G26_1+0x9C  ;; 0x400921fb
   \   000006B4   0x.... 0x....      BL       __aeabi_dmul
   \   000006B8   0xF8DF 0x33CC      LDR.W    R3,??gcode_G26_1+0xA0  ;; 0x40668000
   \   000006BC   0x2200             MOVS     R2,#+0
   \   000006BE   0x.... 0x....      BL       __aeabi_ddiv
   \   000006C2   0x9A00             LDR      R2,[SP, #+0]
   \   000006C4   0x.... 0x....      BL       __iar_Sin
   \   000006C8   0x2200             MOVS     R2,#+0
   \   000006CA   0xF8DF 0x33C0      LDR.W    R3,??gcode_G26_1+0xA4  ;; 0x40140000
   \   000006CE   0x.... 0x....      BL       __aeabi_dmul
   \   000006D2   0x.... 0x....      BL       __aeabi_d2f
   \   000006D6   0xF8CA 0x0000      STR      R0,[R10, #+0]
   \   000006DA   0x4628             MOV      R0,R5
   \                     ??gcode_G26_70: (+1)
   \   000006DC   0x4659             MOV      R1,R11
   \   000006DE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000006E2   0xD808             BHI.N    ??gcode_G26_71
   \   000006E4   0xF8DF 0x1390      LDR.W    R1,??gcode_G26_1+0x90  ;; 0xc3b40000
   \   000006E8   0x.... 0x....      BL       __aeabi_fadd
   \   000006EC   0xE7F6             B.N      ??gcode_G26_70
   \                     ??gcode_G26_72: (+1)
   \   000006EE   0xF8DF 0x138C      LDR.W    R1,??gcode_G26_1+0x94  ;; 0x43b40000
   \   000006F2   0x.... 0x....      BL       __aeabi_fadd
   \                     ??gcode_G26_71: (+1)
   \   000006F6   0x2100             MOVS     R1,#+0
   \   000006F8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000006FC   0xD3F7             BCC.N    ??gcode_G26_72
   \   000006FE   0x.... 0x....      BL       __aeabi_f2d
   \   00000702   0xF8DF 0x237C      LDR.W    R2,??gcode_G26_1+0x98  ;; 0x54442d18
   \   00000706   0xF8DF 0x337C      LDR.W    R3,??gcode_G26_1+0x9C  ;; 0x400921fb
   \   0000070A   0x.... 0x....      BL       __aeabi_dmul
   \   0000070E   0x4BDE             LDR.N    R3,??gcode_G26_1+0xA0  ;; 0x40668000
   \   00000710   0x2200             MOVS     R2,#+0
   \   00000712   0x.... 0x....      BL       __aeabi_ddiv
   \   00000716   0x2200             MOVS     R2,#+0
   \   00000718   0x.... 0x....      BL       __iar_Sin
   \   0000071C   0x2200             MOVS     R2,#+0
   \   0000071E   0x4BDB             LDR.N    R3,??gcode_G26_1+0xA4  ;; 0x40140000
   \   00000720   0x.... 0x....      BL       __aeabi_dmul
   \   00000724   0x.... 0x....      BL       __aeabi_d2f
   \   00000728   0x9901             LDR      R1,[SP, #+4]
   \   0000072A   0x1D09             ADDS     R1,R1,#+4
   \   0000072C   0x9101             STR      R1,[SP, #+4]
   \   0000072E   0x1C7F             ADDS     R7,R7,#+1
   \   00000730   0xF841 0x0D04      STR      R0,[R1, #-4]!
   \   00000734   0xF10A 0x0A04      ADD      R10,R10,#+4
   \   00000738   0x2F0D             CMP      R7,#+13
   \   0000073A   0xDB97             BLT.N    ??gcode_G26_66
   \                     ??gcode_G26_73: (+1)
   \   0000073C   0x980E             LDR      R0,[SP, #+56]
   \   0000073E   0x2800             CMP      R0,#+0
   \   00000740   0xBF19             ITTEE    NE 
   \   00000742   0x4AD3             LDRNE.N  R2,??gcode_G26_1+0xA8
   \   00000744   0x49BE             LDRNE.N  R1,??gcode_G26_1+0x58
   \   00000746   0xF106 0x0264      ADDEQ    R2,R6,#+100
   \   0000074A   0xF106 0x0160      ADDEQ    R1,R6,#+96
   \   0000074E   0xA80B             ADD      R0,SP,#+44
   \   00000750   0x.... 0x....      BL       _Z28find_closest_circle_to_printRKfS0_
   \   00000754   0xF99D 0x502C      LDRSB    R5,[SP, #+44]
   \   00000758   0x2D00             CMP      R5,#+0
   \   0000075A   0xBF5E             ITTT     PL 
   \   0000075C   0xF99D 0xA02D      LDRSBPL  R10,[SP, #+45]
   \   00000760   0x4657             MOVPL    R7,R10
   \   00000762   0x2F00             CMPPL    R7,#+0
   \   00000764   0xF100 0x81B3      BMI.W    ??gcode_G26_74
   \   00000768   0x980A             LDR      R0,[SP, #+40]
   \   0000076A   0x7A80             LDRB     R0,[R0, #+10]
   \   0000076C   0x0701             LSLS     R1,R0,#+28
   \   0000076E   0xD515             BPL.N    ??gcode_G26_75
   \   00000770   0xF8DF 0xA320      LDR.W    R10,??gcode_G26_1+0xAC
   \   00000774   0xF8DF 0xB320      LDR.W    R11,??gcode_G26_1+0xB0
   \   00000778   0xF8DA 0x1000      LDR      R1,[R10, #+0]
   \   0000077C   0xF8DB 0x0000      LDR      R0,[R11, #+0]
   \   00000780   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000784   0x.... 0x....      BL       __aeabi_i2f
   \   00000788   0x9003             STR      R0,[SP, #+12]
   \   0000078A   0xF8DA 0x1004      LDR      R1,[R10, #+4]
   \   0000078E   0xF8DB 0x0004      LDR      R0,[R11, #+4]
   \   00000792   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000796   0x.... 0x....      BL       __aeabi_i2f
   \   0000079A   0xE014             B.N      ??gcode_G26_76
   \                     ??gcode_G26_75: (+1)
   \   0000079C   0x06C1             LSLS     R1,R0,#+27
   \   0000079E   0xD509             BPL.N    ??gcode_G26_77
   \   000007A0   0xF89D 0x002C      LDRB     R0,[SP, #+44]
   \   000007A4   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_xposEh
   \   000007A8   0x9003             STR      R0,[SP, #+12]
   \   000007AA   0xFA5F 0xF08A      UXTB     R0,R10
   \   000007AE   0x.... 0x....      BL       _ZN20unified_bed_leveling18mesh_index_to_yposEh
   \   000007B2   0xE008             B.N      ??gcode_G26_76
   \                     ??gcode_G26_77: (+1)
   \   000007B4   0x0680             LSLS     R0,R0,#+26
   \   000007B6   0xD507             BPL.N    ??gcode_G26_78
   \   000007B8   0x48B8             LDR.N    R0,??gcode_G26_1+0xB4
   \   000007BA   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000007BE   0x9003             STR      R0,[SP, #+12]
   \   000007C0   0x48B7             LDR.N    R0,??gcode_G26_1+0xB8
   \   000007C2   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \                     ??gcode_G26_76: (+1)
   \   000007C6   0x9002             STR      R0,[SP, #+8]
   \                     ??gcode_G26_78: (+1)
   \   000007C8   0x980A             LDR      R0,[SP, #+40]
   \   000007CA   0x8C00             LDRH     R0,[R0, #+32]
   \   000007CC   0xF240 0x3102      MOVW     R1,#+770
   \   000007D0   0x4208             TST      R0,R1
   \   000007D2   0xD00D             BEQ.N    ??gcode_G26_79
   \   000007D4   0xA902             ADD      R1,SP,#+8
   \   000007D6   0xA803             ADD      R0,SP,#+12
   \   000007D8   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   000007DC   0x2800             CMP      R0,#+0
   \   000007DE   0xF000 0x8176      BEQ.W    ??gcode_G26_74
   \   000007E2   0xA902             ADD      R1,SP,#+8
   \   000007E4   0xA803             ADD      R0,SP,#+12
   \   000007E6   0x.... 0x....      BL       _Z34position_is_reachable_IS_CARTESIANRKfS0_
   \   000007EA   0x2800             CMP      R0,#+0
   \   000007EC   0xF000 0x816F      BEQ.W    ??gcode_G26_74
   \                     ??gcode_G26_79: (+1)
   \   000007F0   0x48AC             LDR.N    R0,??gcode_G26_1+0xBC
   \   000007F2   0x7800             LDRB     R0,[R0, #+0]
   \   000007F4   0xB198             CBZ.N    R0,??gcode_G26_80
   \   000007F6   0x.... 0x....      ADR.W    R0,`?<Constant "   Doing circle at: (xi=">`
   \   000007FA   0x4629             MOV      R1,R5
   \   000007FC   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \   00000800   0x4639             MOV      R1,R7
   \   00000802   0x.... 0x....      ADR.W    R0,`?<Constant ", yi=">`
   \   00000806   0x.... 0x....      BL       _Z17serial_echopair_PPKci
   \   0000080A   0xF8DF 0xB240      LDR.W    R11,??gcode_G26_1+0x64
   \   0000080E   0x2129             MOVS     R1,#+41
   \   00000810   0x4658             MOV      R0,R11
   \   00000812   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \   00000816   0x210A             MOVS     R1,#+10
   \   00000818   0x4658             MOV      R0,R11
   \   0000081A   0x.... 0x....      BL       _ZN10USARTClass5writeEh
   \                     ??gcode_G26_80: (+1)
   \   0000081E   0x2100             MOVS     R1,#+0
   \   00000820   0x4896             LDR.N    R0,??gcode_G26_1+0x94  ;; 0x43b40000
   \   00000822   0xB95D             CBNZ.N   R5,??gcode_G26_81
   \   00000824   0x49A0             LDR.N    R1,??gcode_G26_1+0xC0  ;; 0xc2b40000
   \   00000826   0x48A1             LDR.N    R0,??gcode_G26_1+0xC4  ;; 0x42b40000
   \   00000828   0xB90F             CBNZ.N   R7,??gcode_G26_82
   \   0000082A   0x2100             MOVS     R1,#+0
   \   0000082C   0xE018             B.N      ??gcode_G26_83
   \                     ??gcode_G26_82: (+1)
   \   0000082E   0x9A09             LDR      R2,[SP, #+36]
   \   00000830   0x7852             LDRB     R2,[R2, #+1]
   \   00000832   0x1E52             SUBS     R2,R2,#+1
   \   00000834   0x4297             CMP      R7,R2
   \   00000836   0xD113             BNE.N    ??gcode_G26_83
   \   00000838   0x2000             MOVS     R0,#+0
   \   0000083A   0xE011             B.N      ??gcode_G26_83
   \                     ??gcode_G26_81: (+1)
   \   0000083C   0xF894 0x2060      LDRB     R2,[R4, #+96]
   \   00000840   0x1E52             SUBS     R2,R2,#+1
   \   00000842   0x4295             CMP      R5,R2
   \   00000844   0xD103             BNE.N    ??gcode_G26_84
   \   00000846   0x4999             LDR.N    R1,??gcode_G26_1+0xC4  ;; 0x42b40000
   \   00000848   0x4899             LDR.N    R0,??gcode_G26_1+0xC8  ;; 0x43870000
   \   0000084A   0xB10F             CBZ.N    R7,??gcode_G26_85
   \   0000084C   0xE002             B.N      ??gcode_G26_86
   \                     ??gcode_G26_84: (+1)
   \   0000084E   0xB90F             CBNZ.N   R7,??gcode_G26_86
   \                     ??gcode_G26_85: (+1)
   \   00000850   0x4898             LDR.N    R0,??gcode_G26_1+0xCC  ;; 0x43340000
   \   00000852   0xE005             B.N      ??gcode_G26_83
   \                     ??gcode_G26_86: (+1)
   \   00000854   0x9A09             LDR      R2,[SP, #+36]
   \   00000856   0x7852             LDRB     R2,[R2, #+1]
   \   00000858   0x1E52             SUBS     R2,R2,#+1
   \   0000085A   0x4297             CMP      R7,R2
   \   0000085C   0xBF08             IT       EQ 
   \   0000085E   0x4995             LDREQ.N  R1,??gcode_G26_1+0xCC  ;; 0x43340000
   \                     ??gcode_G26_83: (+1)
   \   00000860   0x460F             MOV      R7,R1
   \   00000862   0x.... 0x....      BL       __aeabi_f2d
   \   00000866   0x4A94             LDR.N    R2,??gcode_G26_1+0xD0  ;; 0x9999999a
   \   00000868   0x4B94             LDR.N    R3,??gcode_G26_1+0xD4  ;; 0xbfb99999
   \   0000086A   0x.... 0x....      BL       __aeabi_dadd
   \   0000086E   0xE9CD 0x0110      STRD     R0,R1,[SP, #+64]
   \   00000872   0xF10D 0x0A7C      ADD      R10,SP,#+124
   \   00000876   0xE01A             B.N      ??gcode_G26_87
   \                     ??gcode_G26_88: (+1)
   \   00000878   0xF8DB 0x0010      LDR      R0,[R11, #+16]
   \   0000087C   0x4990             LDR.N    R1,??gcode_G26_1+0xD8  ;; 0xbf800000
   \   0000087E   0x.... 0x....      BL       __aeabi_fadd
   \   00000882   0x9908             LDR      R1,[SP, #+32]
   \   00000884   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000888   0xBF38             IT       CC 
   \   0000088A   0x9008             STRCC    R0,[SP, #+32]
   \                     ??gcode_G26_89: (+1)
   \   0000088C   0xF106 0x0058      ADD      R0,R6,#+88
   \   00000890   0x9001             STR      R0,[SP, #+4]
   \   00000892   0xAB07             ADD      R3,SP,#+28
   \   00000894   0xA808             ADD      R0,SP,#+32
   \   00000896   0x9000             STR      R0,[SP, #+0]
   \   00000898   0xF106 0x0258      ADD      R2,R6,#+88
   \   0000089C   0xA906             ADD      R1,SP,#+24
   \   0000089E   0xA805             ADD      R0,SP,#+20
   \   000008A0   0x.... 0x....      BL       _Z29print_line_from_here_to_thereRKfS0_S0_S0_S0_S0_
   \                     ??gcode_G26_90: (+1)
   \   000008A4   0x4887             LDR.N    R0,??gcode_G26_1+0xDC  ;; 0x41f00000
   \   000008A6   0x4639             MOV      R1,R7
   \   000008A8   0x.... 0x....      BL       __aeabi_fadd
   \   000008AC   0x4607             MOV      R7,R0
   \                     ??gcode_G26_87: (+1)
   \   000008AE   0x4638             MOV      R0,R7
   \   000008B0   0x.... 0x....      BL       __aeabi_f2d
   \   000008B4   0xE9DD 0x2310      LDRD     R2,R3,[SP, #+64]
   \   000008B8   0x.... 0x....      BL       __aeabi_cdcmple
   \   000008BC   0xF080 0x8104      BCS.W    ??gcode_G26_91
   \   000008C0   0x2200             MOVS     R2,#+0
   \   000008C2   0x4B6C             LDR.N    R3,??gcode_G26_1+0x8C  ;; 0x403e0000
   \   000008C4   0x.... 0x....      BL       __aeabi_ddiv
   \   000008C8   0x.... 0x....      BL       __aeabi_d2iz
   \   000008CC   0x4683             MOV      R11,R0
   \   000008CE   0xF1BB 0x0F00      CMP      R11,#+0
   \   000008D2   0xBF48             IT       MI 
   \   000008D4   0xF10B 0x0B0C      ADDMI    R11,R11,#+12
   \   000008D8   0xF1BB 0x0F0C      CMP      R11,#+12
   \   000008DC   0xBFA8             IT       GE 
   \   000008DE   0xF1AB 0x0B0C      SUBGE    R11,R11,#+12
   \   000008E2   0xA912             ADD      R1,SP,#+72
   \   000008E4   0x9803             LDR      R0,[SP, #+12]
   \   000008E6   0xF851 0x102B      LDR      R1,[R1, R11, LSL #+2]
   \   000008EA   0x.... 0x....      BL       __aeabi_fadd
   \   000008EE   0x9005             STR      R0,[SP, #+20]
   \   000008F0   0xF85A 0x102B      LDR      R1,[R10, R11, LSL #+2]
   \   000008F4   0x9802             LDR      R0,[SP, #+8]
   \   000008F6   0x.... 0x....      BL       __aeabi_fadd
   \   000008FA   0x9006             STR      R0,[SP, #+24]
   \   000008FC   0xA912             ADD      R1,SP,#+72
   \   000008FE   0xEB01 0x018B      ADD      R1,R1,R11, LSL #+2
   \   00000902   0x9803             LDR      R0,[SP, #+12]
   \   00000904   0x6849             LDR      R1,[R1, #+4]
   \   00000906   0x.... 0x....      BL       __aeabi_fadd
   \   0000090A   0x9007             STR      R0,[SP, #+28]
   \   0000090C   0xA91F             ADD      R1,SP,#+124
   \   0000090E   0xEB01 0x018B      ADD      R1,R1,R11, LSL #+2
   \   00000912   0x9802             LDR      R0,[SP, #+8]
   \   00000914   0x6849             LDR      R1,[R1, #+4]
   \   00000916   0x.... 0x....      BL       __aeabi_fadd
   \   0000091A   0x9008             STR      R0,[SP, #+32]
   \   0000091C   0xF240 0x3102      MOVW     R1,#+770
   \   00000920   0x980A             LDR      R0,[SP, #+40]
   \   00000922   0x8C00             LDRH     R0,[R0, #+32]
   \   00000924   0x4208             TST      R0,R1
   \   00000926   0xD00C             BEQ.N    ??gcode_G26_92
   \   00000928   0xA906             ADD      R1,SP,#+24
   \   0000092A   0xA805             ADD      R0,SP,#+20
   \   0000092C   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   00000930   0x2800             CMP      R0,#+0
   \   00000932   0xD0B7             BEQ.N    ??gcode_G26_90
   \   00000934   0xA908             ADD      R1,SP,#+32
   \   00000936   0xA807             ADD      R0,SP,#+28
   \   00000938   0x.... 0x....      BL       _Z34position_is_reachable_IS_KINEMATICRKfS0_
   \   0000093C   0x2800             CMP      R0,#+0
   \   0000093E   0xD1A5             BNE.N    ??gcode_G26_89
   \   00000940   0xE7B0             B.N      ??gcode_G26_90
   \                     ??gcode_G26_92: (+1)
   \   00000942   0x68A0             LDR      R0,[R4, #+8]
   \   00000944   0xF04F 0x517E      MOV      R1,#+1065353216
   \   00000948   0x.... 0x....      BL       __aeabi_fadd
   \   0000094C   0x4601             MOV      R1,R0
   \   0000094E   0x9805             LDR      R0,[SP, #+20]
   \   00000950   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000954   0xF104 0x0B08      ADD      R11,R4,#+8
   \   00000958   0xBF38             IT       CC 
   \   0000095A   0x9105             STRCC    R1,[SP, #+20]
   \   0000095C   0xD309             BCC.N    ??gcode_G26_93
   \   0000095E   0xF8DB 0x000C      LDR      R0,[R11, #+12]
   \   00000962   0x4957             LDR.N    R1,??gcode_G26_1+0xD8  ;; 0xbf800000
   \   00000964   0x.... 0x....      BL       __aeabi_fadd
   \   00000968   0x9905             LDR      R1,[SP, #+20]
   \   0000096A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000096E   0xBF38             IT       CC 
   \   00000970   0x9005             STRCC    R0,[SP, #+20]
   \                     ??gcode_G26_93: (+1)
   \   00000972   0xF8DB 0x0004      LDR      R0,[R11, #+4]
   \   00000976   0xF04F 0x517E      MOV      R1,#+1065353216
   \   0000097A   0x.... 0x....      BL       __aeabi_fadd
   \   0000097E   0x4601             MOV      R1,R0
   \   00000980   0x9806             LDR      R0,[SP, #+24]
   \   00000982   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000986   0xBF38             IT       CC 
   \   00000988   0x9106             STRCC    R1,[SP, #+24]
   \   0000098A   0xD309             BCC.N    ??gcode_G26_94
   \   0000098C   0xF8DB 0x0010      LDR      R0,[R11, #+16]
   \   00000990   0x494B             LDR.N    R1,??gcode_G26_1+0xD8  ;; 0xbf800000
   \   00000992   0x.... 0x....      BL       __aeabi_fadd
   \   00000996   0x9906             LDR      R1,[SP, #+24]
   \   00000998   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000099C   0xBF38             IT       CC 
   \   0000099E   0x9006             STRCC    R0,[SP, #+24]
   \                     ??gcode_G26_94: (+1)
   \   000009A0   0x68A0             LDR      R0,[R4, #+8]
   \   000009A2   0xF04F 0x517E      MOV      R1,#+1065353216
   \   000009A6   0x.... 0x....      BL       __aeabi_fadd
   \   000009AA   0x4601             MOV      R1,R0
   \   000009AC   0x9807             LDR      R0,[SP, #+28]
   \   000009AE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000009B2   0xBF38             IT       CC 
   \   000009B4   0x9107             STRCC    R1,[SP, #+28]
   \   000009B6   0xD309             BCC.N    ??gcode_G26_95
   \   000009B8   0xF8DB 0x000C      LDR      R0,[R11, #+12]
   \   000009BC   0x4940             LDR.N    R1,??gcode_G26_1+0xD8  ;; 0xbf800000
   \   000009BE   0x.... 0x....      BL       __aeabi_fadd
   \   000009C2   0x9907             LDR      R1,[SP, #+28]
   \   000009C4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000009C8   0xBF38             IT       CC 
   \   000009CA   0x9007             STRCC    R0,[SP, #+28]
   \                     ??gcode_G26_95: (+1)
   \   000009CC   0xF8DB 0x0004      LDR      R0,[R11, #+4]
   \   000009D0   0xF04F 0x517E      MOV      R1,#+1065353216
   \   000009D4   0x.... 0x....      BL       __aeabi_fadd
   \   000009D8   0x4601             MOV      R1,R0
   \   000009DA   0x9808             LDR      R0,[SP, #+32]
   \   000009DC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000009E0   0xF4BF 0xAF4A      BCS.W    ??gcode_G26_88
   \   000009E4   0x9108             STR      R1,[SP, #+32]
   \   000009E6   0xE751             B.N      ??gcode_G26_89
   \                     ??gcode_G26_1:
   \   000009E8   0x........         DC32     g26_retracted
   \   000009EC   0x3ECCCCCD         DC32     0x3ecccccd
   \   000009F0   0x........         DC32     _ZN11GCodeParser9value_ptrE
   \   000009F4   0x3E4CCCCD         DC32     0x3e4ccccd
   \   000009F8   0x41200000         DC32     0x41200000
   \   000009FC   0x40400000         DC32     0x40400000
   \   00000A00   0x........         DC32     _ZN11GCodeParser8codebitsE
   \   00000A04   0x........         DC32     _ZN11GCodeParser5paramE
   \   00000A08   0x3E99999A         DC32     0x3e99999a
   \   00000A0C   0x........         DC32     _ZN11GCodeParser11command_ptrE
   \   00000A10   0x40000001         DC32     0x40000001
   \   00000A14   0x3D4CCCCD         DC32     0x3d4ccccd
   \   00000A18   0x41700001         DC32     0x41700001
   \   00000A1C   0x3DCCCCCD         DC32     0x3dcccccd
   \   00000A20   0x3F800001         DC32     0x3f800001
   \   00000A24   0x41C80001         DC32     0x41c80001
   \   00000A28   0x3FFC0000         DC32     0x3ffc0000
   \   00000A2C   0x3FF00000         DC32     0x3ff00000
   \   00000A30   0x40800001         DC32     0x40800001
   \   00000A34   0x3FD33333         DC32     0x3fd33333
   \   00000A38   0x42480000         DC32     0x42480000
   \   00000A3C   0x........         DC32     mksCfg
   \   00000A40   0x........         DC32     current_position
   \   00000A44   0x........         DC32     workspace_offset
   \   00000A48   0x........         DC32     destination
   \   00000A4C   0x........         DC32     Serial3
   \   00000A50   0x40400001         DC32     0x40400001
   \   00000A54   0x........         DC32     _ZN11Temperature23current_temperature_bedE
   \   00000A58   0x........         DC32     _ZN11Temperature19current_temperatureE
   \   00000A5C   0x........         DC32     current_position+0xC
   \   00000A60   0x........         DC32     feedrate_mm_s
   \   00000A64   0x41700000         DC32     0x41700000
   \   00000A68   0x........         DC32     _ZN7Planner17max_feedrate_mm_sE
   \   00000A6C   0x........         DC32     horizontal_mesh_line_flags
   \   00000A70   0x43B40001         DC32     0x43b40001
   \   00000A74   0x403E0000         DC32     0x403e0000
   \   00000A78   0xC3B40000         DC32     0xc3b40000
   \   00000A7C   0x43B40000         DC32     0x43b40000
   \   00000A80   0x54442D18         DC32     0x54442d18
   \   00000A84   0x400921FB         DC32     0x400921fb
   \   00000A88   0x40668000         DC32     0x40668000
   \   00000A8C   0x40140000         DC32     0x40140000
   \   00000A90   0x........         DC32     current_position+0x4
   \   00000A94   0x........         DC32     bilinear_grid_spacing
   \   00000A98   0x........         DC32     bilinear_start
   \   00000A9C   0x........         DC32     _ZN17mesh_bed_leveling13index_to_xposE
   \   00000AA0   0x........         DC32     _ZN17mesh_bed_leveling13index_to_yposE
   \   00000AA4   0x........         DC32     g26_debug_flag
   \   00000AA8   0xC2B40000         DC32     0xc2b40000
   \   00000AAC   0x42B40000         DC32     0x42b40000
   \   00000AB0   0x43870000         DC32     0x43870000
   \   00000AB4   0x43340000         DC32     0x43340000
   \   00000AB8   0x9999999A         DC32     0x9999999a
   \   00000ABC   0xBFB99999         DC32     0xbfb99999
   \   00000AC0   0xBF800000         DC32     0xbf800000
   \   00000AC4   0x41F00000         DC32     0x41f00000
   \                     ??gcode_G26_91: (+1)
   \   00000AC8   0x.... 0x....      BL       _Z25look_for_lines_to_connectv
   \   00000ACC   0xB968             CBNZ.N   R0,??gcode_G26_96
   \                     ??gcode_G26_74: (+1)
   \   00000ACE   0xF1A8 0x0001      SUB      R0,R8,#+1
   \   00000AD2   0xFA0F 0xF880      SXTH     R8,R0
   \   00000AD6   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000ADA   0xD006             BEQ.N    ??gcode_G26_96
   \   00000ADC   0x2D00             CMP      R5,#+0
   \   00000ADE   0xBF5C             ITT      PL 
   \   00000AE0   0xF99D 0x002D      LDRSBPL  R0,[SP, #+45]
   \   00000AE4   0x2800             CMPPL    R0,#+0
   \   00000AE6   0xF57F 0xAE29      BPL.W    ??gcode_G26_73
   \                     ??gcode_G26_96: (+1)
   \   00000AEA   0x4648             MOV      R0,R9
   \   00000AEC   0x.... 0x....      BL       _Z16retract_filamentPKf
   \   00000AF0   0x9809             LDR      R0,[SP, #+36]
   \   00000AF2   0x6880             LDR      R0,[R0, #+8]
   \   00000AF4   0xF8C9 0x0008      STR      R0,[R9, #+8]
   \   00000AF8   0xAB01             ADD      R3,SP,#+4
   \   00000AFA   0x2000             MOVS     R0,#+0
   \   00000AFC   0x9001             STR      R0,[SP, #+4]
   \   00000AFE   0xF109 0x0208      ADD      R2,R9,#+8
   \   00000B02   0xF109 0x0104      ADD      R1,R9,#+4
   \   00000B06   0x4648             MOV      R0,R9
   \   00000B08   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   00000B0C   0x6E30             LDR      R0,[R6, #+96]
   \   00000B0E   0xF8C9 0x0000      STR      R0,[R9, #+0]
   \   00000B12   0xAB00             ADD      R3,SP,#+0
   \   00000B14   0x6E70             LDR      R0,[R6, #+100]
   \   00000B16   0xF8C9 0x0004      STR      R0,[R9, #+4]
   \   00000B1A   0xF109 0x0208      ADD      R2,R9,#+8
   \   00000B1E   0x2000             MOVS     R0,#+0
   \   00000B20   0x9000             STR      R0,[SP, #+0]
   \   00000B22   0xF109 0x0104      ADD      R1,R9,#+4
   \   00000B26   0x4648             MOV      R0,R9
   \   00000B28   0x.... 0x....      BL       _Z7move_toRKfS0_S0_S0_
   \   00000B2C   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000B30   0xB9B8             CBNZ.N   R0,??gcode_G26_0
   \   00000B32   0xF894 0x0038      LDRB     R0,[R4, #+56]
   \   00000B36   0xB150             CBZ.N    R0,??gcode_G26_97
   \   00000B38   0xF104 0x0108      ADD      R1,R4,#+8
   \   00000B3C   0xF9B1 0x002A      LDRSH    R0,[R1, #+42]
   \   00000B40   0x2801             CMP      R0,#+1
   \   00000B42   0xBFA8             IT       GE 
   \   00000B44   0x2000             MOVGE    R0,#+0
   \   00000B46   0x4904             LDR.N    R1,??gcode_G26_61+0x4
   \   00000B48   0x8008             STRH     R0,[R1, #+0]
   \   00000B4A   0x.... 0x....      BL       _ZN11Temperature18start_watching_bedEv
   \                     ??gcode_G26_97: (+1)
   \   00000B4E   0x2000             MOVS     R0,#+0
   \   00000B50   0x4900             LDR.N    R1,??gcode_G26_61
   \   00000B52   0xE003             B.N      ??gcode_G26_98
   \                     ??gcode_G26_61:
   \   00000B54   0x........         DC32     _ZN11Temperature18target_temperatureE
   \   00000B58   0x........         DC32     _ZN11Temperature22target_temperature_bedE
   \                     ??gcode_G26_98: (+1)
   \   00000B5C   0x6008             STR      R0,[R1, #+0]
   \   00000B5E   0x.... 0x....      BL       _ZN11Temperature21start_watching_heaterEh
   \                     ??gcode_G26_0: (+1)
   \   00000B62                      REQUIRE ?Subroutine1
   \   00000B62                      ;; // Fall through to label ?Subroutine1

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xB02D             ADD      SP,SP,#+180
   \   00000002   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "in move_to() feed_val...">`:
   \   00000000   0x69 0x6E          DC8 "in move_to() feed_value for XY:"
   \              0x20 0x6D    
   \              0x6F 0x76    
   \              0x65 0x5F    
   \              0x74 0x6F    
   \              0x28 0x29    
   \              0x20 0x66    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x58 0x59    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x........         DC32     ??last_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     _ZN7Planner17max_feedrate_mm_sE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0x40400000         DC32     0x40400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \   00000000   0x........         DC32     destination

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \   00000000   0x........         DC32     g26_debug_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \   00000000   0x........         DC32     Serial3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \   00000000   0x........         DC32     g26_retracted

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \   00000000   0x3FF33333         DC32     0x3ff33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \   00000000   0x47C34FFF         DC32     0x47c34fff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \   00000000   0x........         DC32     _ZN17mesh_bed_leveling13index_to_xposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \   00000000   0x........         DC32     mksCfg+0x42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \   00000000   0x........         DC32     g26_retracted+0x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \   00000000   0x........         DC32     _ZN17mesh_bed_leveling13index_to_yposE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_17:
   \   00000000   0x402E0000         DC32     0x402e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_18:
   \   00000000   0x3F800001         DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_19:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_20:
   \   00000000   0x........         DC32     bilinear_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_21:
   \   00000000   0x........         DC32     bilinear_grid_spacing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_22:
   \   00000000   0x40A00001         DC32     0x40a00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_23:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_24:
   \   00000000   0x........         DC32     current_position+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_25:
   \   00000000   0xC3B40000         DC32     0xc3b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_26:
   \   00000000   0x43B40001         DC32     0x43b40001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_27:
   \   00000000   0x43B40000         DC32     0x43b40000

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "G26 command started. ...">`:
   \   00000000   0x47 0x32          DC8 "G26 command started. Waiting for heater(s).\012"
   \              0x36 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x20    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x65    
   \              0x64 0x2E    
   \              0x20 0x57    
   \              0x61 0x69    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x68    
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x72 0x28    
   \              0x73 0x29    
   \              0x2E 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified bed temper...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified bed temperature not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x62    
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x65 0x6D    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified layer heig...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified layer height not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6C    
   \              0x61 0x79    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x69    
   \              0x67 0x68    
   \              0x74 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified Retraction...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified Retraction Multiplier not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x52    
   \              0x65 0x74    
   \              0x72 0x61    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x4D 0x75    
   \              0x6C 0x74    
   \              0x69 0x70    
   \              0x6C 0x69    
   \              0x65 0x72    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Retraction Multiplie...">`:
   \   00000000   0x3F 0x52          DC8 "?Retraction Multiplier must be specified.\012"
   \              0x65 0x74    
   \              0x72 0x61    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x4D 0x75    
   \              0x6C 0x74    
   \              0x69 0x70    
   \              0x6C 0x69    
   \              0x65 0x72    
   \              0x20 0x6D    
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x62 0x65    
   \              0x20 0x73    
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x2E 0x0A    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified nozzle siz...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified nozzle size not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6E    
   \              0x6F 0x7A    
   \              0x7A 0x6C    
   \              0x65 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Prime length must be...">`:
   \   00000000   0x3F 0x50          DC8 3FH, 50H, 72H, 69H, 6DH, 65H, 20H, 6CH
   \              0x72 0x69    
   \              0x6D 0x65    
   \              0x20 0x6C    
   \   00000008   0x65 0x6E          DC8 65H, 6EH, 67H, 74H, 68H, 20H, 6DH, 75H
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x6D 0x75    
   \   00000010   0x73 0x74          DC8 73H, 74H, 20H, 62H, 65H, 20H, 73H, 70H
   \              0x20 0x62    
   \              0x65 0x20    
   \              0x73 0x70    
   \   00000018   0x65 0x63          DC8 65H, 63H, 69H, 66H, 69H, 65H, 64H, 20H
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x64 0x20    
   \   00000020   0x77 0x68          DC8 77H, 68H, 65H, 6EH, 20H, 6EH, 6FH, 74H
   \              0x65 0x6E    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \   00000028   0x20 0x75          DC8 20H, 75H, 73H, 69H, 6EH, 67H, 20H, 61H
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x61    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 4CH, 43H, 44H, 2EH, 0AH, 0
   \              0x4C 0x43    
   \              0x44 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified prime leng...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified prime length not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x6D 0x65    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified filament s...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified filament size not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x61 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x75 0x73    
   \              0x69 0x62    
   \              0x6C 0x65    
   \              0x2E 0x0A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified nozzle tem...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified nozzle temperature not plausible.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x6E    
   \              0x6F 0x7A    
   \              0x7A 0x6C    
   \              0x65 0x20    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \              0x73 0x69    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?(R)epeat must be spe...">`:
   \   00000000   0x3F 0x28          DC8 3FH, 28H, 52H, 29H, 65H, 70H, 65H, 61H
   \              0x52 0x29    
   \              0x65 0x70    
   \              0x65 0x61    
   \   00000008   0x74 0x20          DC8 74H, 20H, 6DH, 75H, 73H, 74H, 20H, 62H
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x62    
   \   00000010   0x65 0x20          DC8 65H, 20H, 73H, 70H, 65H, 63H, 69H, 66H
   \              0x73 0x70    
   \              0x65 0x63    
   \              0x69 0x66    
   \   00000018   0x69 0x65          DC8 69H, 65H, 64H, 20H, 77H, 68H, 65H, 6EH
   \              0x64 0x20    
   \              0x77 0x68    
   \              0x65 0x6E    
   \   00000020   0x20 0x6E          DC8 20H, 6EH, 6FH, 74H, 20H, 75H, 73H, 69H
   \              0x6F 0x74    
   \              0x20 0x75    
   \              0x73 0x69    
   \   00000028   0x6E 0x67          DC8 6EH, 67H, 20H, 61H, 6EH, 20H, 4CH, 43H
   \              0x20 0x61    
   \              0x6E 0x20    
   \              0x4C 0x43    
   \   00000030   0x44 0x2E          DC8 44H, 2EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?(R)epeat value not p...">`:
   \   00000000   0x3F 0x28          DC8 3FH, 28H, 52H, 29H, 65H, 70H, 65H, 61H
   \              0x52 0x29    
   \              0x65 0x70    
   \              0x65 0x61    
   \   00000008   0x74 0x20          DC8 74H, 20H, 76H, 61H, 6CH, 75H, 65H, 20H
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x20    
   \   00000010   0x6E 0x6F          DC8 6EH, 6FH, 74H, 20H, 70H, 6CH, 61H, 75H
   \              0x74 0x20    
   \              0x70 0x6C    
   \              0x61 0x75    
   \   00000018   0x73 0x69          DC8 73H, 69H, 62H, 6CH, 65H, 3BH, 20H, 6DH
   \              0x62 0x6C    
   \              0x65 0x3B    
   \              0x20 0x6D    
   \   00000020   0x75 0x73          DC8 75H, 73H, 74H, 20H, 62H, 65H, 20H, 61H
   \              0x74 0x20    
   \              0x62 0x65    
   \              0x20 0x61    
   \   00000028   0x74 0x20          DC8 74H, 20H, 6CH, 65H, 61H, 73H, 74H, 20H
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x74 0x20    
   \   00000030   0x31 0x2E          DC8 31H, 2EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "?Specified X,Y coordi...">`:
   \   00000000   0x3F 0x53          DC8 "?Specified X,Y coordinate out of bounds.\012"
   \              0x70 0x65    
   \              0x63 0x69    
   \              0x66 0x69    
   \              0x65 0x64    
   \              0x20 0x58    
   \              0x2C 0x59    
   \              0x20 0x63    
   \              0x6F 0x6F    
   \              0x72 0x64    
   \              0x69 0x6E    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x6F 0x66    
   \              0x20 0x62    
   \              0x6F 0x75    
   \              0x6E 0x64    
   \              0x73 0x2E    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   Doing circle at: (xi=">`:
   \   00000000   0x20 0x20          DC8 "   Doing circle at: (xi="
   \              0x20 0x44    
   \              0x6F 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x69 0x72    
   \              0x63 0x6C    
   \              0x65 0x20    
   \              0x61 0x74    
   \              0x3A 0x20    
   \              0x28 0x78    
   \              0x69 0x3D    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ", yi=">`:
   \   00000000   0x2C 0x20          DC8 ", yi="
   \              0x79 0x69    
   \              0x3D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0
   1004          
   1005          #endif // G26_MESH_VALIDATION

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   G26_line_to_destination(float const &)
        16   -> prepare_move_to_destination()
      16   GCodeParser::boolval(char)
         0   -> GCodeParser::seen(char)
        16   -> GCodeParser::seen(char)
        16   -> GCodeParser::value_long()
        16   -> __iar_Stolx
       0   GCodeParser::seen(char)
      16   GCodeParser::value_float()
         0   -> __aeabi_d2f
        16   -> __iar_Stod
       0   GCodeParser::value_long()
         0   -> __iar_Stolx
      16   Temperature::setTargetBed(float)
         0   -> Temperature::start_watching_bed()
        16   -> __aeabi_cfcmple
        16   -> __aeabi_f2iz
        16   -> __aeabi_i2f
      80   find_closest_circle_to_print(float const &, float const &)
        80   -> __aeabi_cfcmple
        80   -> __aeabi_cfrcmple
        80   -> __aeabi_d2f
        80   -> __aeabi_dadd
        80   -> __aeabi_ddiv
        80   -> __aeabi_f2d
        80   -> __aeabi_f2iz
        80   -> __aeabi_fadd
        80   -> __aeabi_fmul
        80   -> __aeabi_fsub
        80   -> __aeabi_i2f
        80   -> rand
        80   -> sqrtf
        80   -> unified_bed_leveling::mesh_index_to_xpos(uint8_t)
        80   -> unified_bed_leveling::mesh_index_to_ypos(uint8_t)
     216   gcode_G26()
       216   -> GCodeParser::boolval(char)
       216   -> GCodeParser::seen(char)
       216   -> GCodeParser::value_float()
       216   -> GCodeParser::value_long()
       216   -> HAL_GetTick
       216   -> Planner::set_position_mm(AxisEnum, float const &)
       216   -> Stepper::synchronize()
       216   -> Temperature::print_heaterstates()
       216   -> Temperature::setTargetBed(float)
       216   -> Temperature::start_watching_bed()
       216   -> Temperature::start_watching_heater(uint8_t)
       216   -> USARTClass::write(uint8_t)
       216   -> __aeabi_cdcmple
       216   -> __aeabi_cfcmple
       216   -> __aeabi_cfrcmple
       216   -> __aeabi_d2f
       216   -> __aeabi_d2iz
       216   -> __aeabi_dadd
       216   -> __aeabi_ddiv
       216   -> __aeabi_dmul
       216   -> __aeabi_f2d
       216   -> __aeabi_f2iz
       216   -> __aeabi_fadd
       216   -> __aeabi_fdiv
       216   -> __aeabi_fmul
       216   -> __aeabi_fsub
       216   -> __aeabi_i2d
       216   -> __aeabi_i2f
       216   -> __aeabi_memcpy4
       216   -> __aeabi_memset
       216   -> __aeabi_memset4
       216   -> __iar_Sin
       216   -> axis_unhomed_error(bool, bool, bool)
       216   -> do_blocking_move_to_z(float const &, float const &)
       216   -> find_closest_circle_to_print(float const &, float const &)
       216   -> idle()
       216   -> look_for_lines_to_connect()
       216   -> move_to(float const &, float const &, float const &, float const &)
       216   -> position_is_reachable_IS_CARTESIAN(float const &, float const &)
       216   -> position_is_reachable_IS_KINEMATIC(float const &, float const &)
       216   -> prepare_move_to_destination()
       216   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
       216   -> retract_filament(float const *)
       216   -> serial_echopair_P(char const *, int)
       216   -> serialprintPGM(char const *)
       216   -> set_bed_leveling_enabled(bool)
       216   -> srand
       216   -> unified_bed_leveling::mesh_index_to_xpos(uint8_t)
       216   -> unified_bed_leveling::mesh_index_to_ypos(uint8_t)
     120   look_for_lines_to_connect()
       120   -> USARTClass::write(uint8_t)
       120   -> __aeabi_cdrcmple
       120   -> __aeabi_cfcmple
       120   -> __aeabi_dadd
       120   -> __aeabi_f2d
       120   -> __aeabi_fadd
       120   -> __aeabi_i2f
       120   -> position_is_reachable_IS_KINEMATIC(float const &, float const &)
       120   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
       120   -> serial_echopair_P(char const *, float)
       120   -> unified_bed_leveling::mesh_index_to_xpos(uint8_t)
       120   -> unified_bed_leveling::mesh_index_to_ypos(uint8_t)
      40   move_to(float const &, float const &, float const &, float const &)
        40   -> Stepper::synchronize()
        40   -> USARTClass::write(uint8_t)
        40   -> __aeabi_cfcmpeq
        40   -> __aeabi_cfcmple
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> prepare_move_to_destination()
        40   -> serial_echopair_P(char const *, float)
      40   position_is_reachable_IS_CARTESIAN(float const &, float const &)
        40   -> __aeabi_cdrcmple
        40   -> __aeabi_dadd
        40   -> __aeabi_f2d
      32   position_is_reachable_IS_KINEMATIC(float const &, float const &)
        32   -> __aeabi_cfrcmple
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
      64   print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
        64   -> __aeabi_cfcmple
        64   -> __aeabi_cfrcmple
        64   -> __aeabi_fadd
        64   -> __aeabi_fmul
        64   -> __aeabi_fsub
        64   -> move_to(float const &, float const &, float const &, float const &)
        64   -> print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
        64   -> recover_filament(float const *)
        64   -> retract_filament(float const *)
        64   -> sqrtf
      16   recover_filament(float const *)
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> move_to(float const &, float const &, float const &, float const &)
      16   retract_filament(float const *)
        16   -> __aeabi_fmul
        16   -> move_to(float const &, float const &, float const &, float const &)
      16   serialprintPGM(char const *)
        16   -> USARTClass::write(uint8_t)
      40   unified_bed_leveling::mesh_index_to_xpos(uint8_t)
        40   -> __aeabi_cfcmple
         0   -> __aeabi_fadd
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
      40   unified_bed_leveling::mesh_index_to_ypos(uint8_t)
        40   -> __aeabi_cfcmple
         0   -> __aeabi_fadd
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
      16   valid_trig_angle(float)
        16   -> __aeabi_cfcmple
        16   -> __aeabi_cfrcmple
        16   -> __aeabi_fadd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  ?<Constant "   Doing circle at: (xi=">
       8  ?<Constant ", yi=">
      52  ?<Constant "?(R)epeat must be spe...">
      52  ?<Constant "?(R)epeat value not p...">
      56  ?<Constant "?Prime length must be...">
      44  ?<Constant "?Retraction Multiplie...">
      52  ?<Constant "?Specified Retraction...">
      44  ?<Constant "?Specified X,Y coordi...">
      44  ?<Constant "?Specified bed temper...">
      44  ?<Constant "?Specified filament s...">
      40  ?<Constant "?Specified layer heig...">
      40  ?<Constant "?Specified nozzle siz...">
      48  ?<Constant "?Specified nozzle tem...">
      40  ?<Constant "?Specified prime leng...">
      48  ?<Constant "G26 command started. ...">
      32  ?<Constant "in move_to() feed_val...">
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_26
       4  ??DataTable21_27
       4  ??DataTable21_3
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
       6  ?Subroutine0
       6  ?Subroutine1
      20  G26_line_to_destination(float const &)
     100  GCodeParser::boolval(char)
      68  GCodeParser::seen(char)
      76  GCodeParser::value_float()
      24  GCodeParser::value_long()
      52  Temperature::setTargetBed(float)
     576  find_closest_circle_to_print(float const &, float const &)
     104  g26_retracted
          g26_prime_flag
          g26_bed_temp
          g26_hotend_temp
          circle_flags
          g26_e_axis_feedrate
          random_deviation
          g26_extrusion_multiplier
          g26_retraction_multiplier
          g26_layer_height
          g26_prime_length
          g26_x_pos
          g26_y_pos
    2914  gcode_G26()
     128  horizontal_mesh_line_flags
          vertical_mesh_line_flags
       4  last_z
    2192  look_for_lines_to_connect()
     254  move_to(float const &, float const &, float const &, float const &)
     172  position_is_reachable_IS_CARTESIAN(float const &, float const &)
     292  position_is_reachable_IS_KINEMATIC(float const &, float const &)
     520  print_line_from_here_to_there(float const &, float const &, float const &, float const &, float const &, float const &)
      56  recover_filament(float const *)
      46  retract_filament(float const *)
      32  serialprintPGM(char const *)
     276  unified_bed_leveling::mesh_index_to_xpos(uint8_t)
     272  unified_bed_leveling::mesh_index_to_ypos(uint8_t)
      40  valid_trig_angle(float)
     105  -- Other

 
   128 bytes in section .bss
   108 bytes in section .data
   105 bytes in section .rodata
 8 778 bytes in section .text
 
 5 222 bytes of CODE  memory (+ 3 556 bytes shared)
     0 bytes of CONST memory (+   105 bytes shared)
   236 bytes of DATA  memory

Errors: none
Warnings: 36
