###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_operate.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_operate.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_operate.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "draw_printing.h"
     10          #include "draw_pause_ui.h"
     11          #include "draw_pre_heat.h"
     12          #include "draw_fan.h"
     13          #include "draw_change_speed.h"
     14          #include "draw_printing_moremenu.h"
     15          //#include "mks_tft_com.h"
     16          #include "mks_cfg.h"
     17          #include "draw_move_motor.h"
     18          #include "draw_extrusion.h"
     19          #include "draw_filamentchange.h"
     20          
     21          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     22          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     23          #include "draw_babyStep.h"
     24          #ifndef GUI_FLASH
     25          #define GUI_FLASH
     26          #endif
     27          
     28          extern float feedrate_mm_s;
     29          
     30          

   \                                 In section .bss, align 4
     31          static GUI_HWIN hOperateWnd, hStopDlgWnd;
     32          
     33          extern int8_t curFilePath[30];
     34          extern FILE_PRINT_STATE gCurFileState ;
     35          extern void reset_tx_fifo();
     36          
     37          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     38          extern int X_ADD, X_INTERVAL;
     39          
     40          static PROGBAR_Handle printingBar;
     41          
     42          static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
     43          static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
     44          static BUTTON_STRUCT buttonFilament,buttonAuto_Off,buttonExtrude,buttonMove,buttonBabystep;
     45          
     46          //extern PR_STATUS printerStaus;
     47          extern uint8_t flash_preview_begin;
     48          extern uint8_t from_flash_pic;
     49          extern uint8_t default_preview_flg;
     50          
     51          uint8_t pause_flag;
     52          
     53          uint8_t IsChooseAutoShutdown = 0;
   \                     IsChooseAutoShutdown:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 2
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   \                     buttonSpeed:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonRet:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonFilament:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonMove:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 1
   \                     pause_flag:
   \   00000000                      DS8 1
     54          
     55          //void Autoshutdown_display();
     56          

   \                                 In section .text, align 2, keep-with-next
     57          static void cbOperateWin(WM_MESSAGE * pMsg) {
     58          
     59          switch (pMsg->MsgId)
   \                     _Z12cbOperateWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbOperateWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbOperateWin_0: (+1)
   \   00000008   0xB5F8             PUSH     {R3-R7,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x290F             CMPNE    R1,#+15
   \   00000010   0xF000 0x8178      BEQ.W    ??cbOperateWin_1
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xF040 0x8171      BNE.W    ??cbOperateWin_2
     60          {
     61          	case WM_PAINT:
     62          		//GUI_SetColor(gCfgItems.state_background_color);
     63          		//GUI_DrawRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     64          		//GUI_SetColor(gCfgItems.state_background_color);
     65          		//GUI_FillRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     66          		
     67          		break;
     68          	case WM_TOUCH:
     69          	 	
     70          		break;
     71          	case WM_TOUCH_CHILD:
     72          		
     73          		break;
     74          		
     75          	case WM_NOTIFY_PARENT:
     76          		#if 1
     77          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0x2902             CMP      R1,#+2
   \   0000001E   0xF040 0x8171      BNE.W    ??cbOperateWin_1
     78          		{
     79          			#if !defined(TFT35)
     80          			if(pMsg->hWinSrc == buttonPause.btnHandle)
     81          			{
     82          				stop_print_time();
     83                          		if(mksCfg.extruders==2)
     84          				{
     85          					gCfgItems.curSprayerChoose_bak= active_extruder;
     86          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
     87          				}
     88          				if(mksReprint.mks_printer_state == MKS_WORKING)
     89          				{
     90          					//MX_I2C1_Init(100000);
     91          	      				card.pauseSDPrint();
     92          	      				print_job_timer.pause();  
     93          	                    		mksReprint.mks_printer_state = MKS_PAUSING;
     94          	                    		last_disp_state = OPERATE_UI;
     95          					Clear_operate();
     96          					draw_pause();
     97          				}
     98          			}
     99          			else if(pMsg->hWinSrc == buttonStop.btnHandle)
    100          			{	
    101          				last_disp_state = OPERATE_UI;
    102          				Clear_operate();
    103          				draw_dialog(DIALOG_TYPE_STOP);
    104          			}
    105          			else 
    106          				#endif
    107          		    if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable22
   \   00000026   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002A   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R4,??DataTable22_1
   \   00000032   0x4290             CMP      R0,R2
   \   00000034   0xD120             BNE.N    ??cbOperateWin_3
    108          			{
    109          			#if defined(TFT35)
    110          				if(from_flash_pic==1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable22_2
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xBF0E             ITEE     EQ 
    111          					flash_preview_begin = 1;
   \   00000040   0x.... 0x....      LDREQ.W  R1,??DataTable22_3
    112          				else
    113          					default_preview_flg = 1;
   \   00000044   0x2001             MOVNE    R0,#+1
   \   00000046   0x.... 0x....      LDRNE.W  R1,??DataTable22_4
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
    114          			#endif
    115          				last_disp_state = OPERATE_UI;
   \   0000004C   0x2005             MOVS     R0,#+5
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   00000052   0x7008             STRB     R0,[R1, #+0]
    116          				Clear_operate();
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   00000058   0x6940             LDR      R0,[R0, #+20]
   \   0000005A   0x.... 0x....      BL       GUI_SetBkColor
   \   0000005E   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000062   0x.... 0x....      BL       WM_IsWindow
   \   00000066   0xB118             CBZ.N    R0,??cbOperateWin_4
   \   00000068   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000006C   0x.... 0x....      BL       WM_DeleteWindow
    117          				//draw_return_ui();
    118          				draw_printing();
   \                     ??cbOperateWin_4: (+1)
   \   00000070   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   00000074   0x.... 0x....      B.W      draw_printing
    119          			}
    120          			else if(pMsg->hWinSrc == buttonTemperature.btnHandle)
   \                     ??cbOperateWin_3: (+1)
   \   00000078   0xF9B4 0x2004      LDRSH    R2,[R4, #+4]
   \   0000007C   0x4290             CMP      R0,R2
   \   0000007E   0xD121             BNE.N    ??cbOperateWin_5
    121          			{
    122          				if(mksCfg.extruders==2)
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000084   0x.... 0x....      LDR.W    R5,??DataTable22_6
   \   00000088   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000008C   0x2802             CMP      R0,#+2
   \   0000008E   0xD105             BNE.N    ??cbOperateWin_6
    123          				{
    124          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000094   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000098   0xF885 0x00AD      STRB     R0,[R5, #+173]
    125          				}			
    126          				last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_6: (+1)
   \   0000009C   0x2005             MOVS     R0,#+5
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
    127          				Clear_operate();
   \   000000A4   0x6968             LDR      R0,[R5, #+20]
   \   000000A6   0x.... 0x....      BL       GUI_SetBkColor
   \   000000AA   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000AE   0x.... 0x....      BL       WM_IsWindow
   \   000000B2   0xB118             CBZ.N    R0,??cbOperateWin_7
   \   000000B4   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000B8   0x.... 0x....      BL       WM_DeleteWindow
    128          				draw_preHeat();
   \                     ??cbOperateWin_7: (+1)
   \   000000BC   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000C0   0x.... 0x....      B.W      draw_preHeat
    129          			}
    130          	            #if defined(TFT35)
    131          				else if(pMsg->hWinSrc == buttonFan.btnHandle)
   \                     ??cbOperateWin_5: (+1)
   \   000000C4   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   000000C8   0x4288             CMP      R0,R1
   \   000000CA   0xD115             BNE.N    ??cbOperateWin_8
    132          				{
    133          					last_disp_state = OPERATE_UI;
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000000D0   0x2005             MOVS     R0,#+5
   \   000000D2   0x7008             STRB     R0,[R1, #+0]
    134          					Clear_operate();
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000000D8   0x6940             LDR      R0,[R0, #+20]
   \   000000DA   0x.... 0x....      BL       GUI_SetBkColor
   \   000000DE   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000E2   0x.... 0x....      BL       WM_IsWindow
   \   000000E6   0xB118             CBZ.N    R0,??cbOperateWin_9
   \   000000E8   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000EC   0x.... 0x....      BL       WM_DeleteWindow
    135          					draw_fan();
   \                     ??cbOperateWin_9: (+1)
   \   000000F0   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000F4   0x.... 0x....      B.W      draw_fan
    136          				}
    137          	            #endif
    138          			else if(pMsg->hWinSrc == buttonFilament.btnHandle)
   \                     ??cbOperateWin_8: (+1)
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable22_9
   \   000000FC   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   00000100   0x4290             CMP      R0,R2
   \   00000102   0xD149             BNE.N    ??cbOperateWin_10
    139          			{
    140          				if(mksCfg.extruders==2)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000108   0x.... 0x....      LDR.W    R5,??DataTable22_6
   \   0000010C   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   00000110   0x2802             CMP      R0,#+2
   \   00000112   0xD10C             BNE.N    ??cbOperateWin_11
    141          				{
    142          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000118   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000011C   0xF885 0x00AD      STRB     R0,[R5, #+173]
    143          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable22_10
   \   00000124   0x6800             LDR      R0,[R0, #+0]
   \   00000126   0x.... 0x....      BL       __aeabi_f2iz
   \   0000012A   0xF8A5 0x00C2      STRH     R0,[R5, #+194]
    144          				}
    145          
    146          				if(mksReprint.mks_printer_state == MKS_WORKING)
   \                     ??cbOperateWin_11: (+1)
   \   0000012E   0x.... 0x....      LDR.W    R6,??DataTable22_11
   \   00000132   0x.... 0x....      LDR.W    R7,??DataTable22_5
   \   00000136   0xF896 0x00AC      LDRB     R0,[R6, #+172]
   \   0000013A   0x28A7             CMP      R0,#+167
   \   0000013C   0xD10F             BNE.N    ??cbOperateWin_12
    147          				{
    148          					stop_print_time();
   \   0000013E   0x.... 0x....      BL       stop_print_time
    149          					last_disp_state = OPERATE_UI;
   \   00000142   0x2005             MOVS     R0,#+5
   \   00000144   0x7038             STRB     R0,[R7, #+0]
    150          					//MX_I2C1_Init();
    151                				card.pauseSDPrint();
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable22_12
   \   0000014A   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
    152                				print_job_timer.pause();					
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable22_13
   \   00000152   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
    153          					mksReprint.mks_printer_state = MKS_PAUSING;				
   \   00000156   0x20A9             MOVS     R0,#+169
   \   00000158   0xF886 0x00AC      STRB     R0,[R6, #+172]
    154          					Clear_operate();
   \   0000015C   0xE001             B.N      ??cbOperateWin_13
    155          					gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
    156          					draw_FilamentChange();
    157          				}
    158          				else
    159          				{
    160          					last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_12: (+1)
   \   0000015E   0x2005             MOVS     R0,#+5
   \   00000160   0x7038             STRB     R0,[R7, #+0]
    161          					Clear_operate();
   \                     ??cbOperateWin_13: (+1)
   \   00000162   0x6968             LDR      R0,[R5, #+20]
   \   00000164   0x.... 0x....      BL       GUI_SetBkColor
   \   00000168   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000016C   0x.... 0x....      BL       WM_IsWindow
   \   00000170   0xB118             CBZ.N    R0,??cbOperateWin_14
   \   00000172   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000176   0x.... 0x....      BL       WM_DeleteWindow
    162                              gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
   \                     ??cbOperateWin_14: (+1)
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable22_14
   \   00000182   0x7800             LDRB     R0,[R0, #+0]
   \   00000184   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000188   0x.... 0x....      BL       __aeabi_i2f
   \   0000018C   0xF8C5 0x014C      STR      R0,[R5, #+332]
    163          					draw_FilamentChange();					
   \   00000190   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   00000194   0x.... 0x....      B.W      draw_FilamentChange
    164          				}
    165          
    166          			}			
    167          			else if (pMsg->hWinSrc == buttonMore_printing.btnHandle)
   \                     ??cbOperateWin_10: (+1)
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable22_15
   \   0000019C   0xF9B2 0x3018      LDRSH    R3,[R2, #+24]
   \   000001A0   0x4298             CMP      R0,R3
   \   000001A2   0xD115             BNE.N    ??cbOperateWin_15
    168          			{
    169          				last_disp_state = OPERATE_UI;
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000001A8   0x2005             MOVS     R0,#+5
   \   000001AA   0x7008             STRB     R0,[R1, #+0]
    170          				Clear_operate();
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000001B0   0x6940             LDR      R0,[R0, #+20]
   \   000001B2   0x.... 0x....      BL       GUI_SetBkColor
   \   000001B6   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000001BA   0x.... 0x....      BL       WM_IsWindow
   \   000001BE   0xB118             CBZ.N    R0,??cbOperateWin_16
   \   000001C0   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000001C4   0x.... 0x....      BL       WM_DeleteWindow
    171          				draw_printmore();	
   \                     ??cbOperateWin_16: (+1)
   \   000001C8   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000001CC   0x.... 0x....      B.W      draw_printmore
    172          			}
    173                      #if defined(MKS_ROBIN2) ||defined(MKS_ROBIN_NANO)
    174          			else if(pMsg->hWinSrc == buttonSpeed.btnHandle)
   \                     ??cbOperateWin_15: (+1)
   \   000001D0   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000001D4   0x4290             CMP      R0,R2
   \   000001D6   0xD115             BNE.N    ??cbOperateWin_17
    175          			{
    176          				last_disp_state = OPERATE_UI;
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000001DC   0x2005             MOVS     R0,#+5
   \   000001DE   0x7008             STRB     R0,[R1, #+0]
    177          				Clear_operate();
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000001E4   0x6940             LDR      R0,[R0, #+20]
   \   000001E6   0x.... 0x....      BL       GUI_SetBkColor
   \   000001EA   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000001EE   0x.... 0x....      BL       WM_IsWindow
   \   000001F2   0xB118             CBZ.N    R0,??cbOperateWin_18
   \   000001F4   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000001F8   0x.... 0x....      BL       WM_DeleteWindow
    178          				//if(gCfgItems.sprayerNum==2)
    179          				//{
    180          				//	gCfgItems.curSprayerChoose_bak= gCfgItems.curSprayerChoose;
    181          				//}
    182          				draw_changeSpeed();
   \                     ??cbOperateWin_18: (+1)
   \   000001FC   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   00000200   0x.... 0x....      B.W      draw_changeSpeed
    183          
    184          			}
    185          			else if(pMsg->hWinSrc == buttonExtrude.btnHandle)
   \                     ??cbOperateWin_17: (+1)
   \   00000204   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   00000208   0x4288             CMP      R0,R1
   \   0000020A   0xD12D             BNE.N    ??cbOperateWin_19
    186          			{
    187          				last_disp_state = OPERATE_UI;
   \   0000020C   0x.... 0x....      LDR.W    R1,??DataTable22_5
    188          				Clear_operate();
   \   00000210   0x.... 0x....      LDR.W    R5,??DataTable22_6
   \   00000214   0x2005             MOVS     R0,#+5
   \   00000216   0x7008             STRB     R0,[R1, #+0]
   \   00000218   0x6968             LDR      R0,[R5, #+20]
   \   0000021A   0x.... 0x....      BL       GUI_SetBkColor
   \   0000021E   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000222   0x.... 0x....      BL       WM_IsWindow
   \   00000226   0xB118             CBZ.N    R0,??cbOperateWin_20
   \   00000228   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000022C   0x.... 0x....      BL       WM_DeleteWindow
    189          				if(mksCfg.extruders==2)
   \                     ??cbOperateWin_20: (+1)
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000234   0x.... 0x....      LDR.W    R4,??DataTable22_10
   \   00000238   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000023C   0x2802             CMP      R0,#+2
   \   0000023E   0xD10A             BNE.N    ??cbOperateWin_21
    190          				{
    191          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   00000240   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000244   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000248   0xF885 0x00AD      STRB     R0,[R5, #+173]
    192          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   0000024C   0x6820             LDR      R0,[R4, #+0]
   \   0000024E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000252   0xF8A5 0x00C2      STRH     R0,[R5, #+194]
    193          				}
    194          				gCfgItems.extruSpeed_bak = feedrate_mm_s;
                 				                         ^
Warning[Pa093]: implicit conversion from floating point to integer
   \                     ??cbOperateWin_21: (+1)
   \   00000256   0x6820             LDR      R0,[R4, #+0]
   \   00000258   0x.... 0x....      BL       __aeabi_f2iz
   \   0000025C   0xF885 0x00C0      STRB     R0,[R5, #+192]
    195          				draw_extrusion();
   \   00000260   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   00000264   0x.... 0x....      B.W      draw_extrusion
    196          			}	
    197          			else if(pMsg->hWinSrc == buttonMove.btnHandle)
   \                     ??cbOperateWin_19: (+1)
   \   00000268   0x.... 0x....      LDR.W    R1,??DataTable22_16
   \   0000026C   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   00000270   0x4290             CMP      R0,R2
   \   00000272   0xD11C             BNE.N    ??cbOperateWin_22
    198          			{
    199          				gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 				                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable22_10
   \   00000278   0x.... 0x....      LDR.W    R5,??DataTable22_6
   \   0000027C   0x6800             LDR      R0,[R0, #+0]
   \   0000027E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   00000286   0xF8A5 0x00C2      STRH     R0,[R5, #+194]
    200          				
    201          				last_disp_state = OPERATE_UI;
   \   0000028A   0x2005             MOVS     R0,#+5
   \   0000028C   0x7008             STRB     R0,[R1, #+0]
    202          				Clear_operate();
   \   0000028E   0x6968             LDR      R0,[R5, #+20]
   \   00000290   0x.... 0x....      BL       GUI_SetBkColor
   \   00000294   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000298   0x.... 0x....      BL       WM_IsWindow
   \   0000029C   0xB118             CBZ.N    R0,??cbOperateWin_23
   \   0000029E   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000002A2   0x.... 0x....      BL       WM_DeleteWindow
    203          				draw_move_motor();
   \                     ??cbOperateWin_23: (+1)
   \   000002A6   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000002AA   0x.... 0x....      B.W      draw_move_motor
    204          			}
    205          			#if 1
    206          			else if(pMsg->hWinSrc == buttonAuto_Off.btnHandle)
   \                     ??cbOperateWin_22: (+1)
   \   000002AE   0xF9B4 0x201C      LDRSH    R2,[R4, #+28]
   \   000002B2   0x4290             CMP      R0,R2
   \   000002B4   0xD108             BNE.N    ??cbOperateWin_24
    207          			{
    208          				if(IsChooseAutoShutdown == 1)
   \   000002B6   0x7820             LDRB     R0,[R4, #+0]
   \   000002B8   0x2801             CMP      R0,#+1
   \   000002BA   0xBF0C             ITE      EQ 
    209          				{
    210          						IsChooseAutoShutdown = 0;		
   \   000002BC   0x2000             MOVEQ    R0,#+0
    211          						Autoshutdown_display2();
    212          				}
    213          				else
    214          				{
    215          						IsChooseAutoShutdown = 1;
   \   000002BE   0x2001             MOVNE    R0,#+1
   \   000002C0   0x7020             STRB     R0,[R4, #+0]
    216          						Autoshutdown_display2();
   \   000002C2   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000002C6   0x....             B.N      Autoshutdown_display2
    217          				}
    218          			}	
    219          			#endif
    220          			else if(pMsg->hWinSrc == buttonBabystep.btnHandle)
   \                     ??cbOperateWin_24: (+1)
   \   000002C8   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   000002CC   0x4288             CMP      R0,R1
   \   000002CE   0xD119             BNE.N    ??cbOperateWin_1
    221          			{
    222          				last_disp_state = OPERATE_UI;
   \   000002D0   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000002D4   0x2005             MOVS     R0,#+5
   \   000002D6   0x7008             STRB     R0,[R1, #+0]
    223          				Clear_operate();
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   000002DC   0x6940             LDR      R0,[R0, #+20]
   \   000002DE   0x.... 0x....      BL       GUI_SetBkColor
   \   000002E2   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000002E6   0x.... 0x....      BL       WM_IsWindow
   \   000002EA   0xB118             CBZ.N    R0,??cbOperateWin_25
   \   000002EC   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000002F0   0x.... 0x....      BL       WM_DeleteWindow
    224          				draw_babyStep();
   \                     ??cbOperateWin_25: (+1)
   \   000002F4   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000002F8   0x.... 0x....      B.W      draw_babyStep
    225          			}
    226          			
    227                      #endif
    228          		}
    229          		#endif
    230          		break;
    231          		
    232          	default:
    233          		WM_DefaultProc(pMsg);
   \                     ??cbOperateWin_2: (+1)
   \   000002FC   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   00000300   0x.... 0x....      B.W      WM_DefaultProc
    234          	}
    235          }
   \                     ??cbOperateWin_1: (+1)
   \   00000304   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    236          
    237          #if 0
    238          void draw_operate()
    239          {
    240          
    241          	int i;
    242          
    243          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    244          	{
    245          		disp_state_stack._disp_index++;
    246          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    247          	}
    248          	
    249          	disp_state = OPERATE_UI;
    250          		
    251          	GUI_SetBkColor(gCfgItems.background_color);
    252          	GUI_SetColor(gCfgItems.title_color);
    253          	GUI_Clear();
    254          
    255          	
    256          	//GUI_UC_SetEncodeNone();
    257          	//GUI_SetFont(&GUI_FontHZ16);
    258          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
    259          	//GUI_SetFont(&FONT_TITLE);
    260          	//GUI_UC_SetEncodeUTF8();
    261          	
    262          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    263          
    264          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
    265          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    266          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
    267          
    268          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    269          	{
    270          		buttonSpeed.btnHandle = 0;
    271          		buttonAuto_Off.btnHandle = 0;
    272          		
    273          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    274          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
    275          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    276          
    277          		if(gCfgItems.print_finish_close_machine_flg == 1)
    278          		{
    279          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
    280          		}
    281          
    282          	}
    283          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    284          	{
    285          			buttonExtrude.btnHandle = 0;
    286          			buttonMove.btnHandle = 0;
    287          			
    288          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    289          			buttonMore_printing.btnHandle = BUTTON_CreateEx(INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    290          		
    291          			if(gCfgItems.print_finish_close_machine_flg == 1)
    292          			{
    293          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    294          			}
    295          	}
    296          
    297          	
    298          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
    299          
    300          	#if VERSION_WITH_PIC	
    301          
    302          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_opt_temp.bin",1);
    303          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
    304          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
    305          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filament.bin",1);
    306          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
    307          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
    308          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
    309          	if(gCfgItems.print_finish_close_machine_flg == 1)
    310          	{
    311          		if(IsChooseAutoShutdown == 1)
    312          		{
    313          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    314          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    315          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);	
    316          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_textcolor);
    317          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_textcolor);
    318          			
    319          			if(gCfgItems.multiple_language != 0)
    320          			{	
    321          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    322          			}
    323          
    324          		}
    325          		else
    326          		{
    327          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    328          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    329          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    330          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_textcolor);
    331          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_textcolor);			
    332          			if(gCfgItems.multiple_language != 0)
    333          			{	
    334          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    335          			}			
    336          		}
    337          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    338          
    339          		
    340          	}
    341          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
    342          	
    343          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    344          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    345          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    346          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    347          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    348          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    349          #if 0
    350          	if(gCfgItems.print_finish_close_machine_flg == 1)
    351          	{
    352          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    353          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    354          	}
    355          	else
    356          #endif
    357          	{
    358          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    359          	}
    360          	
    361          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    362          
    363          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    364          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    365          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    366          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    367          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    368          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    369          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    370          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    371          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    372          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    373          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    374          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    375          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    376          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    377          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    378          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    379          
    380          
    381          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    382          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    383          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    384          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    385          	
    386          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    387          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    388          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    389          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    390          
    391          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    392          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    393          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    394          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    395          
    396          
    397          
    398          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    399          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    400          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    401          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    402          
    403          	if(gCfgItems.multiple_language != 0)
    404          	{
    405          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
    406          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
    407          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
    408          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
    409          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
    410          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
    411          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
    412          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
    413          	}
    414          
    415          	
    416          
    417          	#endif
    418          #if 0
    419          	if(gCfgItems.print_finish_close_machine_flg == 1)
    420          	{
    421          		Autoshutdown_display();
    422          	}
    423          #endif
    424          #if 0
    425          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    426          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    427          
    428          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    429          
    430          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    431          	
    432          
    433          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    434          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    435          	
    436          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    437          	
    438          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    439          	
    440          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    441          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    442          	
    443          	
    444          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    445                
    446                 
    447          	disp_temp_operate();
    448          #endif	
    449          	//GUI_Exec();
    450          	
    451          
    452          
    453          	
    454          }
    455          
    456          #endif
    457          
    458          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
    459          void draw_operate()
    460          {
   \                     draw_operate: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    461          #if 1
    462          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static GUI_HWIN hOperateWnd, hStopDlgWnd;
                               ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",31  Warning[Pe177]: 
          variable "hStopDlgWnd" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "printStopDlgText" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                                      ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "Fill_State_BK" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                       ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",43  Warning[Pe177]: 
          variable "buttonPause" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",43  Warning[Pe177]: 
          variable "buttonStop" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",43  Warning[Pe177]: 
          variable "buttonOk" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_operate.cpp",43  Warning[Pe177]: 
          variable "buttonCancle" was declared but never referenced
    463          
    464          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable22_17
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A05             CMP      R2,#+5
   \   00000012   0xD005             BEQ.N    ??draw_operate_0
    465          	{
    466          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    467          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
   \   0000001A   0x2205             MOVS     R2,#+5
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    468          	}
    469          	
    470          	disp_state = OPERATE_UI;
   \                     ??draw_operate_0: (+1)
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable22_18
    471          		
    472          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable22_6
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    473          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    474          	GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    475          
    476          	
    477          	//GUI_UC_SetEncodeNone();
    478          	//GUI_SetFont(&GUI_FontHZ16);
    479          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
   \   0000003C   0x.... 0x....      BL       creat_title_text
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0x.... 0x....      BL       GUI_DispStringAt
    480          	//GUI_SetFont(&FONT_TITLE);
    481          	//GUI_UC_SetEncodeUTF8();
    482          	
    483          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0xF44F 0x738E      MOV      R3,#+284
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   00000054   0x9001             STR      R0,[SP, #+4]
   \   00000056   0xF44F 0x72F0      MOV      R2,#+480
   \   0000005A   0x2002             MOVS     R0,#+2
   \   0000005C   0x9000             STR      R0,[SP, #+0]
   \   0000005E   0x2124             MOVS     R1,#+36
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      BL       WM_CreateWindow
    484          
    485          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
   \   00000066   0xF240 0x112D      MOVW     R1,#+301
   \   0000006A   0x9103             STR      R1,[SP, #+12]
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0x9102             STR      R1,[SP, #+8]
   \   00000070   0x2102             MOVS     R1,#+2
   \   00000072   0x.... 0x....      LDR.W    R5,??DataTable22_1
   \   00000076   0x9101             STR      R1,[SP, #+4]
   \   00000078   0x8068             STRH     R0,[R5, #+2]
   \   0000007A   0x9000             STR      R0,[SP, #+0]
   \   0000007C   0x238C             MOVS     R3,#+140
   \   0000007E   0x2275             MOVS     R2,#+117
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x2002             MOVS     R0,#+2
   \   00000084   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000088   0x80A8             STRH     R0,[R5, #+4]
   \   0000008A   0x238C             MOVS     R3,#+140
   \   0000008C   0xF44F 0x7097      MOV      R0,#+302
   \   00000090   0x9003             STR      R0,[SP, #+12]
   \   00000092   0x2275             MOVS     R2,#+117
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x9002             STR      R0,[SP, #+8]
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0x2002             MOVS     R0,#+2
   \   0000009C   0x9001             STR      R0,[SP, #+4]
   \   0000009E   0x5E28             LDRSH    R0,[R5, R0]
   \   000000A0   0x9000             STR      R0,[SP, #+0]
   \   000000A2   0x2079             MOVS     R0,#+121
    486          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000000A4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable22
    487          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
   \   000000AC   0x.... 0x....      LDR.W    R6,??DataTable22_9
   \   000000B0   0x8308             STRH     R0,[R1, #+24]
   \   000000B2   0x238C             MOVS     R3,#+140
   \   000000B4   0xF240 0x102F      MOVW     R0,#+303
   \   000000B8   0x9003             STR      R0,[SP, #+12]
   \   000000BA   0x2275             MOVS     R2,#+117
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x9002             STR      R0,[SP, #+8]
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x2002             MOVS     R0,#+2
   \   000000C4   0x9001             STR      R0,[SP, #+4]
   \   000000C6   0x5E28             LDRSH    R0,[R5, R0]
   \   000000C8   0x9000             STR      R0,[SP, #+0]
   \   000000CA   0x20F0             MOVS     R0,#+240
   \   000000CC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D0   0x8030             STRH     R0,[R6, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R7,??DataTable22_15
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable22_11
   \   000000DA   0x.... 0x....      LDR.W    R8,??DataTable22_16
   \   000000DE   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   000000E2   0x28A9             CMP      R0,#+169
   \   000000E4   0xBF18             IT       NE 
   \   000000E6   0x28AA             CMPNE    R0,#+170
   \   000000E8   0xD003             BEQ.N    ??draw_operate_1
   \   000000EA   0x28AB             CMP      R0,#+171
   \   000000EC   0xBF18             IT       NE 
   \   000000EE   0x28AC             CMPNE    R0,#+172
   \   000000F0   0xD146             BNE.N    ??draw_operate_2
    488          
    489          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    490          	{
    491          		buttonSpeed.btnHandle = 0;
   \                     ??draw_operate_1: (+1)
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x8038             STRH     R0,[R7, #+0]
    492          		buttonAuto_Off.btnHandle = 0;
   \   000000F6   0x83A8             STRH     R0,[R5, #+28]
    493          		
    494          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   000000F8   0x238C             MOVS     R3,#+140
   \   000000FA   0x206A             MOVS     R0,#+106
   \   000000FC   0x9003             STR      R0,[SP, #+12]
   \   000000FE   0x2275             MOVS     R2,#+117
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x9002             STR      R0,[SP, #+8]
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x2002             MOVS     R0,#+2
   \   00000108   0x9001             STR      R0,[SP, #+4]
   \   0000010A   0x5E28             LDRSH    R0,[R5, R0]
   \   0000010C   0x9000             STR      R0,[SP, #+0]
   \   0000010E   0xF240 0x1067      MOVW     R0,#+359
   \   00000112   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000116   0x8330             STRH     R0,[R6, #+24]
    495          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
   \   00000118   0x238C             MOVS     R3,#+140
   \   0000011A   0x206A             MOVS     R0,#+106
   \   0000011C   0x9003             STR      R0,[SP, #+12]
   \   0000011E   0x2275             MOVS     R2,#+117
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x9002             STR      R0,[SP, #+8]
   \   00000124   0x218E             MOVS     R1,#+142
   \   00000126   0x2002             MOVS     R0,#+2
   \   00000128   0x9001             STR      R0,[SP, #+4]
   \   0000012A   0x5E28             LDRSH    R0,[R5, R0]
   \   0000012C   0x9000             STR      R0,[SP, #+0]
   \   0000012E   0x2002             MOVS     R0,#+2
   \   00000130   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000134   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    496          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   00000138   0x238C             MOVS     R3,#+140
   \   0000013A   0xF44F 0x7097      MOV      R0,#+302
   \   0000013E   0x9003             STR      R0,[SP, #+12]
   \   00000140   0x2275             MOVS     R2,#+117
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x9002             STR      R0,[SP, #+8]
   \   00000146   0x218E             MOVS     R1,#+142
   \   00000148   0x2002             MOVS     R0,#+2
   \   0000014A   0x9001             STR      R0,[SP, #+4]
   \   0000014C   0x5E28             LDRSH    R0,[R5, R0]
   \   0000014E   0x9000             STR      R0,[SP, #+0]
   \   00000150   0x2079             MOVS     R0,#+121
   \   00000152   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000156   0x8338             STRH     R0,[R7, #+24]
    497          
    498          		if(gCfgItems.print_finish_close_machine_flg == 1)
   \   00000158   0xF894 0x00E9      LDRB     R0,[R4, #+233]
   \   0000015C   0x2801             CMP      R0,#+1
   \   0000015E   0xD177             BNE.N    ??draw_operate_3
    499          		{
    500          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
   \   00000160   0x206B             MOVS     R0,#+107
   \   00000162   0x9003             STR      R0,[SP, #+12]
   \   00000164   0x238C             MOVS     R3,#+140
   \   00000166   0x2000             MOVS     R0,#+0
   \   00000168   0x9002             STR      R0,[SP, #+8]
   \   0000016A   0x2275             MOVS     R2,#+117
   \   0000016C   0x2002             MOVS     R0,#+2
   \   0000016E   0x9001             STR      R0,[SP, #+4]
   \   00000170   0x218E             MOVS     R1,#+142
   \   00000172   0x5E28             LDRSH    R0,[R5, R0]
   \   00000174   0x9000             STR      R0,[SP, #+0]
   \   00000176   0x20F0             MOVS     R0,#+240
   \   00000178   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000017C   0x83A8             STRH     R0,[R5, #+28]
   \   0000017E   0xE067             B.N      ??draw_operate_3
    501          		}
    502          
    503          	}
    504          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    505          	{
    506          			buttonExtrude.btnHandle = 0;
   \                     ??draw_operate_2: (+1)
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x8330             STRH     R0,[R6, #+24]
    507          			buttonMove.btnHandle = 0;
   \   00000184   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    508          			
    509          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   00000188   0x238C             MOVS     R3,#+140
   \   0000018A   0x206A             MOVS     R0,#+106
   \   0000018C   0x9003             STR      R0,[SP, #+12]
   \   0000018E   0x2275             MOVS     R2,#+117
   \   00000190   0x2000             MOVS     R0,#+0
   \   00000192   0x9002             STR      R0,[SP, #+8]
   \   00000194   0x2100             MOVS     R1,#+0
   \   00000196   0x2002             MOVS     R0,#+2
   \   00000198   0x9001             STR      R0,[SP, #+4]
   \   0000019A   0x5E28             LDRSH    R0,[R5, R0]
   \   0000019C   0x9000             STR      R0,[SP, #+0]
   \   0000019E   0xF240 0x1067      MOVW     R0,#+359
   \   000001A2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001A6   0x8038             STRH     R0,[R7, #+0]
    510          			buttonMore_printing.btnHandle = BUTTON_CreateEx(INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000001A8   0x238C             MOVS     R3,#+140
   \   000001AA   0xF44F 0x7097      MOV      R0,#+302
   \   000001AE   0x9003             STR      R0,[SP, #+12]
   \   000001B0   0x2275             MOVS     R2,#+117
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x9002             STR      R0,[SP, #+8]
   \   000001B6   0x218E             MOVS     R1,#+142
   \   000001B8   0x2002             MOVS     R0,#+2
   \   000001BA   0x9001             STR      R0,[SP, #+4]
   \   000001BC   0x5E28             LDRSH    R0,[R5, R0]
   \   000001BE   0x9000             STR      R0,[SP, #+0]
   \   000001C0   0x2002             MOVS     R0,#+2
   \   000001C2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001C6   0x8338             STRH     R0,[R7, #+24]
    511          		
    512          			if(gCfgItems.print_finish_close_machine_flg == 1)
   \   000001C8   0xF894 0x00E9      LDRB     R0,[R4, #+233]
   \   000001CC   0x2801             CMP      R0,#+1
   \   000001CE   0xD10F             BNE.N    ??draw_operate_4
    513          			{
    514          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000001D0   0xF44F 0x7097      MOV      R0,#+302
   \   000001D4   0x9003             STR      R0,[SP, #+12]
   \   000001D6   0x238C             MOVS     R3,#+140
   \   000001D8   0x2000             MOVS     R0,#+0
   \   000001DA   0x9002             STR      R0,[SP, #+8]
   \   000001DC   0x2275             MOVS     R2,#+117
   \   000001DE   0x2002             MOVS     R0,#+2
   \   000001E0   0x9001             STR      R0,[SP, #+4]
   \   000001E2   0x218E             MOVS     R1,#+142
   \   000001E4   0x5E28             LDRSH    R0,[R5, R0]
   \   000001E6   0x9000             STR      R0,[SP, #+0]
   \   000001E8   0x2079             MOVS     R0,#+121
   \   000001EA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001EE   0x83A8             STRH     R0,[R5, #+28]
    515          			}
    516          			buttonBabystep.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \                     ??draw_operate_4: (+1)
   \   000001F0   0x.... 0x....      BL       alloc_win_id
   \   000001F4   0x9003             STR      R0,[SP, #+12]
   \   000001F6   0x238C             MOVS     R3,#+140
   \   000001F8   0x2000             MOVS     R0,#+0
   \   000001FA   0x9002             STR      R0,[SP, #+8]
   \   000001FC   0x2275             MOVS     R2,#+117
   \   000001FE   0x2002             MOVS     R0,#+2
   \   00000200   0x9001             STR      R0,[SP, #+4]
   \   00000202   0x218E             MOVS     R1,#+142
   \   00000204   0x5E28             LDRSH    R0,[R5, R0]
   \   00000206   0x9000             STR      R0,[SP, #+0]
   \   00000208   0x20F0             MOVS     R0,#+240
   \   0000020A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000020E   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    517          			BUTTON_SetBmpFileName(buttonBabystep.btnHandle, "bmp_mov.bin",1);
   \   00000212   0x2201             MOVS     R2,#+1
   \   00000214   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_mov.bin">`
   \   00000218   0x.... 0x....      BL       BUTTON_SetBmpFileName
    518          			BUTTON_SetBitmapEx(buttonBabystep.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable22_20
   \   00000220   0x.... 0x....      LDR.W    R2,??DataTable22_21
   \   00000224   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000228   0x9000             STR      R0,[SP, #+0]
   \   0000022A   0x2100             MOVS     R1,#+0
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable22_22
   \   00000230   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   00000234   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000238   0x.... 0x....      BL       BUTTON_SetBitmapEx
    519          			if(gCfgItems.multiple_language != 0)
   \   0000023C   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000240   0xB130             CBZ.N    R0,??draw_operate_3
    520          			{
    521          				BUTTON_SetText(buttonBabystep.btnHandle, operation_menu.babystep);
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable22_23
   \   00000246   0x6B41             LDR      R1,[R0, #+52]
   \   00000248   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   0000024C   0x.... 0x....      BL       BUTTON_SetText
    522          			}
    523          	}
    524          
    525          	
    526          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
   \                     ??draw_operate_3: (+1)
   \   00000250   0xF44F 0x7099      MOV      R0,#+306
   \   00000254   0x9003             STR      R0,[SP, #+12]
   \   00000256   0x238C             MOVS     R3,#+140
   \   00000258   0x2000             MOVS     R0,#+0
   \   0000025A   0x9002             STR      R0,[SP, #+8]
   \   0000025C   0x2275             MOVS     R2,#+117
   \   0000025E   0x2002             MOVS     R0,#+2
   \   00000260   0x9001             STR      R0,[SP, #+4]
   \   00000262   0x218E             MOVS     R1,#+142
   \   00000264   0x5E28             LDRSH    R0,[R5, R0]
   \   00000266   0x9000             STR      R0,[SP, #+0]
   \   00000268   0xF240 0x1067      MOVW     R0,#+359
   \   0000026C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000270   0x.... 0x....      LDR.W    R1,??DataTable22
   \   00000274   0x8008             STRH     R0,[R1, #+0]
    527          
    528          	#if VERSION_WITH_PIC	
    529          
    530          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_temp.bin",1);
   \   00000276   0x2201             MOVS     R2,#+1
   \   00000278   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000027C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_temp.bin">`
   \   00000280   0x.... 0x....      BL       BUTTON_SetBmpFileName
    531          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
   \   00000284   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000288   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed.bin">`
   \   0000028C   0x2201             MOVS     R2,#+1
   \   0000028E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    532          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable22
   \   00000296   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_fan.bin">`
   \   0000029A   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   0000029E   0x2201             MOVS     R2,#+1
   \   000002A0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    533          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filamentchange.bin",1);
   \   000002A4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002A8   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_filamentchange.bin">`
   \   000002AC   0x2201             MOVS     R2,#+1
   \   000002AE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    534          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
   \   000002B2   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000002B6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extrude_opr.bin">`
   \   000002BA   0x2201             MOVS     R2,#+1
   \   000002BC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    535          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
   \   000002C0   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000002C4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_move_opr.bin">`
   \   000002C8   0x2201             MOVS     R2,#+1
   \   000002CA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    536          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
   \   000002CE   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002D2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_more_opr.bin">`
   \   000002D6   0x2201             MOVS     R2,#+1
   \   000002D8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    537          	
    538          	if(gCfgItems.print_finish_close_machine_flg == 1)
   \   000002DC   0xF894 0x00E9      LDRB     R0,[R4, #+233]
   \   000002E0   0x2801             CMP      R0,#+1
   \   000002E2   0xD12F             BNE.N    ??draw_operate_5
    539          	{
    540          		if(IsChooseAutoShutdown == 1)
   \   000002E4   0x7829             LDRB     R1,[R5, #+0]
   \   000002E6   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002EA   0x2901             CMP      R1,#+1
   \   000002EC   0xD10B             BNE.N    ??draw_operate_6
    541          		{
    542          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
   \   000002EE   0x2201             MOVS     R2,#+1
   \   000002F0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_auto_off.bin">`
   \   000002F4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    543          			
    544          			if(gCfgItems.multiple_language != 0)
   \   000002F8   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   000002FC   0xB190             CBZ.N    R0,??draw_operate_7
    545          			{	
    546          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable22_23
   \   00000302   0x6A81             LDR      R1,[R0, #+40]
   \   00000304   0xE00A             B.N      ??draw_operate_8
    547          			}
    548          
    549          		}
    550          		else
    551          		{
    552          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
   \                     ??draw_operate_6: (+1)
   \   00000306   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_manual_off.bin">`
   \   0000030A   0x2201             MOVS     R2,#+1
   \   0000030C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    553          				
    554          			if(gCfgItems.multiple_language != 0)
   \   00000310   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000314   0xB130             CBZ.N    R0,??draw_operate_7
    555          			{	
    556          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable22_23
   \   0000031A   0x6AC1             LDR      R1,[R0, #+44]
   \                     ??draw_operate_8: (+1)
   \   0000031C   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000320   0x.... 0x....      BL       BUTTON_SetText
    557          			}			
    558          		}
    559          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??draw_operate_7: (+1)
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable22_20
   \   00000328   0x.... 0x....      LDR.W    R2,??DataTable22_21
   \   0000032C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000330   0x9000             STR      R0,[SP, #+0]
   \   00000332   0x2100             MOVS     R1,#+0
   \   00000334   0x.... 0x....      LDR.W    R0,??DataTable22_22
   \   00000338   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   0000033C   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000340   0x.... 0x....      BL       BUTTON_SetBitmapEx
    560          
    561          		
    562          	}
    563          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \                     ??draw_operate_5: (+1)
   \   00000344   0x....             LDR.N    R0,??DataTable22
   \   00000346   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   0000034A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000034E   0x2201             MOVS     R2,#+1
   \   00000350   0x.... 0x....      BL       BUTTON_SetBmpFileName
    564          	
    565          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000354   0x.... 0x....      LDR.W    R11,??DataTable22_20
   \   00000358   0x.... 0x....      LDR.W    R10,??DataTable22_22
   \   0000035C   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000360   0x.... 0x....      LDR.W    R9,??DataTable22_21
   \   00000364   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000368   0x9000             STR      R0,[SP, #+0]
   \   0000036A   0x464A             MOV      R2,R9
   \   0000036C   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000370   0x2100             MOVS     R1,#+0
   \   00000372   0x.... 0x....      BL       BUTTON_SetBitmapEx
    566          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000376   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000037A   0x9000             STR      R0,[SP, #+0]
   \   0000037C   0x2100             MOVS     R1,#+0
   \   0000037E   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000382   0x5E78             LDRSH    R0,[R7, R1]
   \   00000384   0x464A             MOV      R2,R9
   \   00000386   0x.... 0x....      BL       BUTTON_SetBitmapEx
    567          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000038A   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000038E   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000392   0x9000             STR      R0,[SP, #+0]
   \   00000394   0x464A             MOV      R2,R9
   \   00000396   0x....             LDR.N    R0,??DataTable22
   \   00000398   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   0000039C   0x2100             MOVS     R1,#+0
   \   0000039E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    568          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003A2   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003A6   0x9000             STR      R0,[SP, #+0]
   \   000003A8   0x2100             MOVS     R1,#+0
   \   000003AA   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003AE   0x5E70             LDRSH    R0,[R6, R1]
   \   000003B0   0x464A             MOV      R2,R9
   \   000003B2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    569          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003B6   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003BA   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003BE   0x9000             STR      R0,[SP, #+0]
   \   000003C0   0x464A             MOV      R2,R9
   \   000003C2   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000003C6   0x2100             MOVS     R1,#+0
   \   000003C8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    570          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003CC   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003D0   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003D4   0x9000             STR      R0,[SP, #+0]
   \   000003D6   0x464A             MOV      R2,R9
   \   000003D8   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000003DC   0x2100             MOVS     R1,#+0
   \   000003DE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    571          #if 0
    572          	if(gCfgItems.print_finish_close_machine_flg == 1)
    573          	{
    574          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    575          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    576          	}
    577          	else
    578          #endif
    579          	{
    580          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003E2   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003E6   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003EA   0x9000             STR      R0,[SP, #+0]
   \   000003EC   0x464A             MOV      R2,R9
   \   000003EE   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000003F2   0x2100             MOVS     R1,#+0
   \   000003F4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    581          	}
    582          	
    583          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003F8   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003FC   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000400   0x9000             STR      R0,[SP, #+0]
   \   00000402   0x2100             MOVS     R1,#+0
   \   00000404   0x....             LDR.N    R0,??DataTable22
   \   00000406   0x5E40             LDRSH    R0,[R0, R1]
   \   00000408   0x464A             MOV      R2,R9
   \   0000040A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    584          #if 0
    585          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    586          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    587          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    588          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    589          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    590          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    591          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    592          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    593          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    594          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    595          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    596          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    597          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    598          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    599          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    600          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    601          
    602          
    603          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    604          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    605          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    606          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    607          	
    608          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    609          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    610          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    611          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    612          
    613          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    614          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    615          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    616          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    617          
    618          
    619          
    620          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    621          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    622          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    623          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    624          #endif
    625          	if(gCfgItems.multiple_language != 0)
   \   0000040E   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000412   0xB370             CBZ.N    R0,??draw_operate_9
    626          	{
    627          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
   \   00000414   0x....             LDR.N    R4,??DataTable22_23
   \   00000416   0x....             LDR.N    R0,??DataTable22
   \   00000418   0x6921             LDR      R1,[R4, #+16]
   \   0000041A   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   0000041E   0x.... 0x....      BL       BUTTON_SetText
    628          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
   \   00000422   0x6961             LDR      R1,[R4, #+20]
   \   00000424   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000428   0x.... 0x....      BL       BUTTON_SetText
    629          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
   \   0000042C   0x68E1             LDR      R1,[R4, #+12]
   \   0000042E   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000432   0x.... 0x....      BL       BUTTON_SetText
    630          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
   \   00000436   0x6A61             LDR      R1,[R4, #+36]
   \   00000438   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000043C   0x.... 0x....      BL       BUTTON_SetText
    631          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
   \   00000440   0x69E1             LDR      R1,[R4, #+28]
   \   00000442   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000446   0x.... 0x....      BL       BUTTON_SetText
    632          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
   \   0000044A   0x69A1             LDR      R1,[R4, #+24]
   \   0000044C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000450   0x.... 0x....      BL       BUTTON_SetText
    633          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
   \   00000454   0x6A21             LDR      R1,[R4, #+32]
   \   00000456   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000045A   0x.... 0x....      BL       BUTTON_SetText
    634          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   0000045E   0x....             LDR.N    R0,??DataTable22_24
   \   00000460   0x6801             LDR      R1,[R0, #+0]
   \   00000462   0x....             LDR.N    R0,??DataTable22
   \   00000464   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000468   0xB005             ADD      SP,SP,#+20
   \   0000046A   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   0000046E   0x.... 0x....      B.W      BUTTON_SetText
    635          	}
    636          
    637          	
    638          
    639          	#endif
    640          #if 0
    641          	if(gCfgItems.print_finish_close_machine_flg == 1)
    642          	{
    643          		Autoshutdown_display();
    644          	}
    645          #endif
    646          #if 0
    647          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    648          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    649          
    650          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    651          
    652          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    653          	
    654          
    655          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    656          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    657          	
    658          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    659          	
    660          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    661          	
    662          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    663          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    664          	
    665          	
    666          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    667                
    668                 
    669          	disp_temp_operate();
    670          #endif	
    671          	//GUI_Exec();
    672          	
    673          #endif
    674          	
    675          }
   \                     ??draw_operate_9: (+1)
   \   00000472   0xB005             ADD      SP,SP,#+20
   \   00000474   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    676          
    677          

   \                                 In section .text, align 2, keep-with-next
    678          void Autoshutdown_display2()
    679          {
   \                     Autoshutdown_display2: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    680          	if(IsChooseAutoShutdown == 1)
   \   00000002   0x....             LDR.N    R4,??DataTable22_1
   \   00000004   0x....             LDR.N    R5,??DataTable22_21
   \   00000006   0x7821             LDRB     R1,[R4, #+0]
   \   00000008   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000000C   0x....             LDR.N    R6,??DataTable22_22
   \   0000000E   0x....             LDR.N    R7,??DataTable22_20
   \   00000010   0x2901             CMP      R1,#+1
   \   00000012   0xBF07             ITTEE    EQ 
    681          	{
    682          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",0);
   \   00000014   0x2200             MOVEQ    R2,#+0
   \   00000016   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_auto_off.bin">`
    683          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    684          	}
    685          	else
    686          	{
    687          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",0);
   \   0000001A   0x2200             MOVNE    R2,#+0
   \   0000001C   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_manual_off.bin">`
   \   00000020   0x.... 0x....      BL       BUTTON_SetBmpFileName
    688          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000024   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000028   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x462A             MOV      R2,R5
   \   00000030   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x.... 0x....      BL       BUTTON_SetBitmapEx
    689          	}
    690          	if(gCfgItems.multiple_language != 0)
   \   0000003A   0x....             LDR.N    R0,??DataTable22_6
   \   0000003C   0xF890 0x01CF      LDRB     R0,[R0, #+463]
   \   00000040   0xB158             CBZ.N    R0,??Autoshutdown_display2_0
    691          	{
    692          		if(IsChooseAutoShutdown == 1)
   \   00000042   0x7822             LDRB     R2,[R4, #+0]
   \   00000044   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000048   0x....             LDR.N    R1,??DataTable22_25
   \   0000004A   0x2A01             CMP      R2,#+1
   \   0000004C   0xBF0C             ITE      EQ 
    693          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.auto_close);
   \   0000004E   0x6889             LDREQ    R1,[R1, #+8]
    694          		else
    695          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.manual);
   \   00000050   0x68C9             LDRNE    R1,[R1, #+12]
   \   00000052   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000056   0x.... 0x....      B.W      BUTTON_SetText
    696          	}
    697          
    698          }
   \                     ??Autoshutdown_display2_0: (+1)
   \   0000005A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    699          #else
    700          
    701          void draw_operate()
    702          {
    703          	int8_t buf[50] = {0};
    704          	
    705          	int i;
    706          
    707          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    708          	{
    709          		disp_state_stack._disp_index++;
    710          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    711          	}
    712          	
    713          	disp_state = OPERATE_UI;
    714          		
    715          	GUI_SetBkColor(gCfgItems.background_color);
    716          	GUI_SetColor(gCfgItems.title_color);
    717          	GUI_Clear();
    718          
    719          	GUI_UC_SetEncodeNone();
    720          	GUI_SetFont(&GUI_FontHZ16);
    721          	GUI_DispStringAt(creat_title_text(), 0, 0);
    722          	//GUI_SetFont(&FONT_TITLE);
    723          	//GUI_UC_SetEncodeUTF8();
    724              if((gCfgItems.language == LANG_SIMPLE_CHINESE)||(gCfgItems.language == LANG_COMPLEX_CHINESE))
    725              {
    726                GUI_SetFont(&GUI_FontHZ16);
    727                BUTTON_SetDefaultFont(&GUI_FontHZ16);
    728                TEXT_SetDefaultFont(&GUI_FontHZ16);  
    729                GUI_UC_SetEncodeNone();
    730              }
    731              else
    732              {
    733                GUI_SetFont(&FONT_TITLE);
    734                BUTTON_SetDefaultFont(&FONT_TITLE);
    735                TEXT_SetDefaultFont(&FONT_TITLE);                    
    736                GUI_UC_SetEncodeUTF8();
    737              }	
    738          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    739          	
    740          	buttonPause.btnHandle = BUTTON_CreateEx(0, 0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    741          	buttonStop.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4,  0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    742          	buttonTemperature.btnHandle = BUTTON_CreateEx(0 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    743          	buttonFilament.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 4,	imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    744          	buttonMore_printing.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 2,  imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    745          	buttonRet.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    746          
    747              BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    748              BUTTON_SetBkColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    749              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    750              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    751              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    752              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    753              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    754              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    755              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    756              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);   
    757              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    758              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);    
    759              BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    760              BUTTON_SetTextColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    761              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    762              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    763              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    764              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    765              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    766              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    767              BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    768              BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    769              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    770              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    771          
    772          
    773          	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",0);
    774          	BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",0);
    775          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_temp.bin",0);
    776          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more.bin",0);
    777          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filamentchange.bin",0);
    778          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",0);
    779          
    780          	BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    781          	BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    782          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    783          	BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    784          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    785          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    786          
    787          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 15,  LCD_WIDTH / 2 - 10, 30, hOperateWnd, WM_CF_SHOW, 0, 0);
    788          
    789          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 5, 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    790          
    791          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2 , 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    792          
    793          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    794          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    795          	
    796          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    797          	
    798          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    799          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz14);
    800          	
    801          	disp_temp_operate();
    802          	setProBarRateOpera();
    803          	if(gCfgItems.multiple_language != 0)
    804          	{
    805          		BUTTON_SetText(buttonPause.btnHandle,operation_menu.pause);
    806          		BUTTON_SetText(buttonStop.btnHandle,operation_menu.stop);
    807          		BUTTON_SetText(buttonTemperature.btnHandle,operation_menu.temp);
    808          		BUTTON_SetText(buttonMore_printing.btnHandle,operation_menu.more);
    809          		BUTTON_SetText(buttonFilament.btnHandle,operation_menu.filament);
    810          		BUTTON_SetText(buttonRet.btnHandle,common_menu.text_back);
    811          	}
    812          	
    813          }
    814          
    815          #endif

   \                                 In section .text, align 2, keep-with-next
    816          void setProBarRateOpera()
    817          {
   \                     setProBarRateOpera: (+1)
   \   00000000   0xB5D0             PUSH     {R4,R6,R7,LR}
    818          
    819          	int rate;
    820          	volatile long long rate_tmp_op;
    821          	//rate_tmp_op = (long long)card.sdpos * 100;
    822          	//rate = rate_tmp_op / card.filesize;
    823          
    824          	if(from_flash_pic != 1)
   \   00000002   0x....             LDR.N    R2,??DataTable22_12
   \   00000004   0x....             LDR.N    R3,??DataTable22_2
   \   00000006   0x781B             LDRB     R3,[R3, #+0]
   \   00000008   0xF202 0x405C      ADDW     R0,R2,#+1116
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x6840             LDR      R0,[R0, #+4]
   \   00000010   0xF8D2 0x245C      LDR      R2,[R2, #+1116]
   \   00000014   0x2464             MOVS     R4,#+100
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x2B01             CMP      R3,#+1
   \   0000001A   0xD006             BEQ.N    ??setProBarRateOpera_0
    825          	{
    826          		rate_tmp_op =(long long)card.sdpos * 100;
   \   0000001C   0xFBA4 0x6700      UMULL    R6,R7,R4,R0
   \   00000020   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
    827          		rate = rate_tmp_op / card.filesize;
   \   00000024   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000028   0xE010             B.N      ??setProBarRateOpera_1
    828          	}
    829          	else
    830          	{
    831          		rate_tmp_op =(long long)card.sdpos;
   \                     ??setProBarRateOpera_0: (+1)
   \   0000002A   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    832          		rate = (rate_tmp_op-(PREVIEW_SIZE+To_pre_view))* 100 / (card.filesize-(PREVIEW_SIZE+To_pre_view));
   \   0000002E   0x....             LDR.N    R0,??DataTable22_26
   \   00000030   0x6803             LDR      R3,[R0, #+0]
   \   00000032   0x....             LDR.N    R0,??DataTable22_27  ;; 0x317e0
   \   00000034   0xE9DD 0x6700      LDRD     R6,R7,[SP, #+0]
   \   00000038   0x18C0             ADDS     R0,R0,R3
   \   0000003A   0x1A36             SUBS     R6,R6,R0
   \   0000003C   0x418F             SBCS     R7,R7,R1
   \   0000003E   0x1AD2             SUBS     R2,R2,R3
   \   00000040   0xFBA4 0x0106      UMULL    R0,R1,R4,R6
   \   00000044   0x....             LDR.N    R3,??DataTable22_28  ;; 0xfffce820
   \   00000046   0xFB04 0x1107      MLA      R1,R4,R7,R1
   \   0000004A   0x189A             ADDS     R2,R3,R2
   \                     ??setProBarRateOpera_1: (+1)
   \   0000004C   0x2300             MOVS     R3,#+0
   \   0000004E   0x.... 0x....      BL       __aeabi_ldivmod
    833          	}
    834          
    835          	if(rate <= 0)
   \   00000052   0x2801             CMP      R0,#+1
   \   00000054   0xDB0B             BLT.N    ??setProBarRateOpera_2
    836          		return;
    837          	
    838          	
    839          	if(disp_state == OPERATE_UI)
   \   00000056   0x....             LDR.N    R1,??DataTable22_18
   \   00000058   0xF991 0x1000      LDRSB    R1,[R1, #+0]
   \   0000005C   0x2905             CMP      R1,#+5
   \   0000005E   0xD106             BNE.N    ??setProBarRateOpera_2
    840          	{
    841          		PROGBAR_SetValue(printingBar, rate );
   \   00000060   0xB004             ADD      SP,SP,#+16
   \   00000062   0xE8BD 0x40D0      POP      {R4,R6,R7,LR}
   \   00000066   0x4601             MOV      R1,R0
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      B.W      PROGBAR_SetValue
    842          	}
    843          	
    844          }
   \                     ??setProBarRateOpera_2: (+1)
   \   0000006E   0xB004             ADD      SP,SP,#+16
   \   00000070   0xBDD0             POP      {R4,R6,R7,PC}    ;; return
    845          /*
    846          void setProBarRateOpera(int rate)
    847          {
    848          	if(rate <= 0)
    849          		return;
    850          	gCurFileState.totalSend = rate;
    851          	
    852          	if(disp_state == OPERATE_UI)
    853          	{
    854          		PROGBAR_SetValue(printingBar, rate );
    855          	}
    856          	
    857          }
    858          */

   \                                 In section .text, align 2, keep-with-next
    859          void disp_temp_operate()
    860          {
   \                     disp_temp_operate: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08E             SUB      SP,SP,#+56
    861          	char buf[50] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2134             MOVS     R1,#+52
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    862          	
    863          	TEXT_SetTextColor(textPrintTemp1, gCfgItems.title_color);
   \   0000000C   0x....             LDR.N    R4,??DataTable22_6
   \   0000000E   0x69A1             LDR      R1,[R4, #+24]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       TEXT_SetTextColor
    864          	TEXT_SetTextColor(textPrintTemp2, gCfgItems.title_color);
   \   00000016   0x69A1             LDR      R1,[R4, #+24]
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       TEXT_SetTextColor
    865          
    866          	TEXT_SetBkColor(textPrintTemp1, gCfgItems.background_color);
   \   0000001E   0x6961             LDR      R1,[R4, #+20]
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       TEXT_SetBkColor
    867          	TEXT_SetBkColor(textPrintTemp2, gCfgItems.background_color);
   \   00000026   0x6961             LDR      R1,[R4, #+20]
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
    868          	
    869          	if(mksCfg.extruders == 2)
   \   0000002E   0x....             LDR.N    R6,??DataTable22_7
   \   00000030   0x....             LDR.N    R5,??DataTable22_29
   \   00000032   0xF896 0x00F7      LDRB     R0,[R6, #+247]
   \   00000036   0x....             LDR.N    R4,??DataTable22_30
   \   00000038   0x2802             CMP      R0,#+2
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0xD135             BNE.N    ??disp_temp_operate_0
    870          	{
    871          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      BL       TEXT_SetFont
    872          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   00000044   0x4629             MOV      R1,R5
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       TEXT_SetFont
   \   0000004C   0x6820             LDR      R0,[R4, #+0]
   \   0000004E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000052   0x4605             MOV      R5,R0
   \   00000054   0xF896 0x0038      LDRB     R0,[R6, #+56]
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xD10B             BNE.N    ??disp_temp_operate_1
    873          		if(mksCfg.has_temp_bed == 1)
    874          		{
    875          			
    876          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   0000005C   0x....             LDR.N    R0,??DataTable22_31
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_f2iz
   \   00000064   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   00000068   0x4603             MOV      R3,R0
   \   0000006A   0x462A             MOV      R2,R5
   \   0000006C   0xA800             ADD      R0,SP,#+0
   \   0000006E   0x.... 0x....      BL       sprintf
    877          			TEXT_SetText(textPrintTemp1, buf);
   \   00000072   0xE005             B.N      ??disp_temp_operate_2
    878          		}
    879          		else
    880          		{
    881          			sprintf(buf, " E 1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_1: (+1)
   \   00000074   0x462A             MOV      R2,R5
   \   00000076   0x.... 0x....      ADR.W    R1,`?<Constant " E 1:%d\\n">`
   \   0000007A   0xA800             ADD      R0,SP,#+0
   \   0000007C   0x.... 0x....      BL       sprintf
    882          			TEXT_SetText(textPrintTemp1, buf);			
   \                     ??disp_temp_operate_2: (+1)
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x.... 0x....      BL       TEXT_SetText
    883          		}
    884          		
    885          		memset(buf, 0, sizeof(buf));
   \   00000088   0x2132             MOVS     R1,#+50
   \   0000008A   0xA800             ADD      R0,SP,#+0
   \   0000008C   0x.... 0x....      BL       __aeabi_memclr4
    886          		sprintf(buf, "E 2:%d\nFAN:%d", (int)thermalManager.current_temperature[1],fanSpeeds[0]);
   \   00000090   0x....             LDR.N    R0,??DataTable22_32
   \   00000092   0x6805             LDR      R5,[R0, #+0]
   \   00000094   0x6860             LDR      R0,[R4, #+4]
   \   00000096   0x.... 0x....      BL       __aeabi_f2iz
   \   0000009A   0x.... 0x....      ADR.W    R1,`?<Constant "E 2:%d\\nFAN:%d">`
   \   0000009E   0x4602             MOV      R2,R0
   \   000000A0   0x462B             MOV      R3,R5
   \   000000A2   0xA800             ADD      R0,SP,#+0
   \   000000A4   0x.... 0x....      BL       sprintf
    887          		TEXT_SetText(textPrintTemp2, buf);
   \   000000A8   0xE02F             B.N      ??disp_temp_operate_3
    888          		
    889          	}
    890          	else
    891          	{
    892          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \                     ??disp_temp_operate_0: (+1)
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      BL       TEXT_SetFont
    893          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   000000B0   0x4629             MOV      R1,R5
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       TEXT_SetFont
   \   000000B8   0x6820             LDR      R0,[R4, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_f2iz
   \   000000BE   0x4604             MOV      R4,R0
   \   000000C0   0xF896 0x0038      LDRB     R0,[R6, #+56]
   \   000000C4   0x2801             CMP      R0,#+1
   \   000000C6   0xD10B             BNE.N    ??disp_temp_operate_4
    894          		if(mksCfg.has_temp_bed == 1)
    895          		{
    896          			
    897          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   000000C8   0x....             LDR.N    R0,??DataTable22_31
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_f2iz
   \   000000D0   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   000000D4   0x4603             MOV      R3,R0
   \   000000D6   0x4622             MOV      R2,R4
   \   000000D8   0xA800             ADD      R0,SP,#+0
   \   000000DA   0x.... 0x....      BL       sprintf
    898          			TEXT_SetText(textPrintTemp1, buf);
   \   000000DE   0xE005             B.N      ??disp_temp_operate_5
    899          		}
    900          		else
    901          		{
    902          			
    903          			sprintf(buf, " E1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_4: (+1)
   \   000000E0   0x4622             MOV      R2,R4
   \   000000E2   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n">`
   \   000000E6   0xA800             ADD      R0,SP,#+0
   \   000000E8   0x.... 0x....      BL       sprintf
    904          			TEXT_SetText(textPrintTemp1, buf);			
   \                     ??disp_temp_operate_5: (+1)
   \   000000EC   0xA900             ADD      R1,SP,#+0
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x.... 0x....      BL       TEXT_SetText
    905          		}
    906          		
    907          		memset(buf, 0, sizeof(buf));
   \   000000F4   0x2132             MOVS     R1,#+50
   \   000000F6   0xA800             ADD      R0,SP,#+0
   \   000000F8   0x.... 0x....      BL       __aeabi_memclr4
    908          		sprintf(buf, "FAN:%d\n", fanSpeeds[0]);
   \   000000FC   0x....             LDR.N    R0,??DataTable22_32
   \   000000FE   0x.... 0x....      ADR.W    R1,`?<Constant "FAN:%d\\n">`
   \   00000102   0x6802             LDR      R2,[R0, #+0]
   \   00000104   0xA800             ADD      R0,SP,#+0
   \   00000106   0x.... 0x....      BL       sprintf
    909          		TEXT_SetText(textPrintTemp2, buf);
   \                     ??disp_temp_operate_3: (+1)
   \   0000010A   0xA900             ADD      R1,SP,#+0
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x.... 0x....      BL       TEXT_SetText
    910          	}
    911          
    912          }
   \   00000112   0xB00E             ADD      SP,SP,#+56
   \   00000114   0xBD70             POP      {R4-R6,PC}       ;; return
    913          #if 0
    914          void Autoshutdown_display()
    915          {
    916          	if(IsChooseAutoShutdown == 1)
    917          	{
    918          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    919          		
    920          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    921          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);
    922          		
    923          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_sel_textcolor);
    924          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_sel_textcolor);
    925          		
    926          		if(gCfgItems.multiple_language != 0)
    927          		{	
    928          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    929          		}
    930          			
    931          	}
    932          	else
    933          	{
    934          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    935          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    936          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    937          
    938          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_textcolor);
    939          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_textcolor);
    940          		if(gCfgItems.multiple_language != 0)
    941          		{	
    942          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    943          		}		
    944          	}
    945          
    946          }
    947          #endif

   \                                 In section .text, align 2, keep-with-next
    948          void Clear_operate()
    949          {
   \                     Clear_operate: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    950          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable22_6
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    951          	if(WM_IsWindow(hOperateWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable22_1
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_operate_0
    952          	{
    953          		WM_DeleteWindow(hOperateWnd);
   \   00000016   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    954          		//GUI_Exec();
    955          	}
    956          	
    957          	//GUI_Clear();
    958          }
   \                     ??Clear_operate_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     buttonRet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     IsChooseAutoShutdown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     from_flash_pic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     flash_preview_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     default_preview_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_7:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_8:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_9:
   \   00000000   0x........         DC32     buttonFilament

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_10:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_11:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_12:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_13:
   \   00000000   0x........         DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_14:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_15:
   \   00000000   0x........         DC32     buttonSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_16:
   \   00000000   0x........         DC32     buttonMove

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_17:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_18:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_19:
   \   00000000   0x........         DC32     _Z12cbOperateWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_20:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_21:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_22:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_23:
   \   00000000   0x........         DC32     operation_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_24:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_25:
   \   00000000   0x........         DC32     printing_more_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_26:
   \   00000000   0x........         DC32     To_pre_view

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_27:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_28:
   \   00000000   0xFFFCE820         DC32     0xfffce820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_29:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_30:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_31:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_32:
   \   00000000   0x........         DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_mov.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_mov.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_temp.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_temp.bin"
   \              0x70 0x5F    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_fan.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_fan.bin"
   \              0x70 0x5F    
   \              0x66 0x61    
   \              0x6E 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_filamentchange.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_filamentchange.bin"
   \              0x70 0x5F    
   \              0x66 0x69    
   \              0x6C 0x61    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extrude_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extrude_opr.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x64    
   \              0x65 0x5F    
   \              0x6F 0x70    
   \              0x72 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_move_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_move_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_more_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_more_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x72 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_auto_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_auto_off.bin"
   \              0x70 0x5F    
   \              0x61 0x75    
   \              0x74 0x6F    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_manual_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_manual_off.bin"
   \              0x70 0x5F    
   \              0x6D 0x61    
   \              0x6E 0x75    
   \              0x61 0x6C    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n B:%d">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012 B:%d"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x20    
   \              0x42 0x3A    
   \              0x25 0x64    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E 1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E 1:%d\012"
   \              0x20 0x31    
   \              0x3A 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "E 2:%d\\nFAN:%d">`:
   \   00000000   0x45 0x20          DC8 "E 2:%d\012FAN:%d"
   \              0x32 0x3A    
   \              0x25 0x64    
   \              0x0A 0x46    
   \              0x41 0x4E    
   \              0x3A 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "FAN:%d\\n">`:
   \   00000000   0x46 0x41          DC8 "FAN:%d\012"
   \              0x4E 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Autoshutdown_display2
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
       8   Clear_operate
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbOperateWin(WM_MESSAGE *)
         0   -> Autoshutdown_display2
        24   -> CardReader::pauseSDPrint()
        24   -> GUI_SetBkColor
        24   -> Stopwatch::pause()
         0   -> WM_DefaultProc
        24   -> WM_DeleteWindow
        24   -> WM_IsWindow
        24   -> __aeabi_f2iz
        24   -> __aeabi_i2f
         0   -> draw_FilamentChange
         0   -> draw_babyStep
         0   -> draw_changeSpeed
         0   -> draw_extrusion
         0   -> draw_fan
         0   -> draw_move_motor
         0   -> draw_preHeat
         0   -> draw_printing
         0   -> draw_printmore
        24   -> stop_print_time
      72   disp_temp_operate
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetFont
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2iz
        72   -> __aeabi_memclr4
        72   -> sprintf
      56   draw_operate
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
      32   setProBarRateOpera
         0   -> PROGBAR_SetValue
        32   -> __aeabi_ldivmod


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant " E 1:%d\n">
      16  ?<Constant " E1:%d\n B:%d">
       8  ?<Constant " E1:%d\n">
      16  ?<Constant "E 2:%d\nFAN:%d">
       8  ?<Constant "FAN:%d\n">
      20  ?<Constant "bmp_auto_off.bin">
      20  ?<Constant "bmp_extrude_opr.bin">
      12  ?<Constant "bmp_fan.bin">
      24  ?<Constant "bmp_filamentchange.bin">
      20  ?<Constant "bmp_manual_off.bin">
      20  ?<Constant "bmp_more_opr.bin">
      12  ?<Constant "bmp_mov.bin">
      20  ?<Constant "bmp_move_opr.bin">
      16  ?<Constant "bmp_return.bin">
      16  ?<Constant "bmp_speed.bin">
      16  ?<Constant "bmp_temp.bin">
      52  ?<Constant {'\000'}>
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_10
       4  ??DataTable22_11
       4  ??DataTable22_12
       4  ??DataTable22_13
       4  ??DataTable22_14
       4  ??DataTable22_15
       4  ??DataTable22_16
       4  ??DataTable22_17
       4  ??DataTable22_18
       4  ??DataTable22_19
       4  ??DataTable22_2
       4  ??DataTable22_20
       4  ??DataTable22_21
       4  ??DataTable22_22
       4  ??DataTable22_23
       4  ??DataTable22_24
       4  ??DataTable22_25
       4  ??DataTable22_26
       4  ??DataTable22_27
       4  ??DataTable22_28
       4  ??DataTable22_29
       4  ??DataTable22_3
       4  ??DataTable22_30
       4  ??DataTable22_31
       4  ??DataTable22_32
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       4  ??DataTable22_7
       4  ??DataTable22_8
       4  ??DataTable22_9
      92  Autoshutdown_display2
      36  Clear_operate
      52  IsChooseAutoShutdown
          hOperateWnd
          buttonTemperature
          buttonAuto_Off
      48  buttonFilament
          buttonExtrude
      48  buttonMove
          buttonBabystep
      48  buttonRet
          buttonFan
      48  buttonSpeed
          buttonMore_printing
     774  cbOperateWin(WM_MESSAGE *)
     278  disp_temp_operate
    1144  draw_operate
       1  pause_flag
       2  printingBar
     114  setProBarRateOpera
       2  textPrintTemp1
       2  textPrintTemp2
       1  -- Other

 
   251 bytes in section .bss
    53 bytes in section .rodata
 2 826 bytes in section .text
 
 2 826 bytes of CODE  memory
    52 bytes of CONST memory (+ 1 byte shared)
   251 bytes of DATA  memory

Errors: none
Warnings: 44
