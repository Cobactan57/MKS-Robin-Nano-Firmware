###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  10:56:24
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_change_speed.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_change_speed.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_change_speed.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_change_speed.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_change_speed.cpp
      1          #include "draw_change_speed.h"
      2          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      3          #include "id_manage.h"
      4          //#include "mks_tft_fifo.h"
      5          //#include "mks_tft_com.h"
      6          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
      7          #include "planner.h"

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless
      8          #ifndef GUI_FLASH
      9          #define GUI_FLASH
     10          #endif
     11          

   \                                 In section .bss, align 4
     12          GUI_HWIN hChangeSpeedWnd;
     13          
     14          
     15          //extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     16          //extern TFT_FIFO gcodeCmdTxFIFO;		//gcode ÷∏¡Ó∑¢ÀÕ∂”¡–
     17          //extern TFT_FIFO gcodeCmdRxFIFO;		//gcode	÷∏¡ÓΩ” ’∂”¡–
     18          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     19          
     20          static TEXT_Handle textPrintSpeed,textSpeedVal;
     21          
     22          static uint8_t speedType = 0;
   \                     speedType:
   \   00000000                      DS8 1
     23          
     24          static BUTTON_STRUCT buttonInc, buttonDec, buttonStep, buttonMove, buttonExtruct, buttonRet;
     25          
     26          uint8_t move_speed_flg;
   \                     move_speed_flg:
   \   00000001                      DS8 1
   \                     hChangeSpeedWnd:
   \   00000002                      DS8 2
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 24
   \   00000020                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonInc:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonStep:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     27          

   \                                 In section .text, align 2, keep-with-next
     28          static void cbChangeSpeedWin(WM_MESSAGE * pMsg) {
     29          
     30          	char buf[30] = {0};
                 	     ^
Warning[Pe177]: variable "buf" was declared but never referenced
     31          
     32          	switch (pMsg->MsgId)
   \                     _Z16cbChangeSpeedWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbChangeSpeedWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbChangeSpeedWin_0: (+1)
   \   00000008   0xB5F8             PUSH     {R3-R7,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x290F             CMPNE    R1,#+15
   \   00000010   0xF000 0x80DB      BEQ.W    ??cbChangeSpeedWin_1
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xF040 0x80D4      BNE.W    ??cbChangeSpeedWin_2
     33          	{
     34          		case WM_PAINT:
     35          			//GUI_SetColor(gCfgItems.state_background_color);
     36          			//#if defined(TFT70)
     37          			//GUI_SetColor(gCfgItems.state_text_color);
     38          			//GUI_DrawRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     39          			
     40          			//GUI_FillRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     41          			//#elif defined(TFT35)
     42          			//GUI_FillRect(BTN_X_PIXEL+INTERVAL_V*2, 0, BTN_X_PIXEL *3+INTERVAL_V*3-1, BTN_Y_PIXEL-1);
     43          			//#endif
     44          			break;
     45          		case WM_TOUCH:
     46          		 	
     47          			
     48          			break;
     49          		case WM_TOUCH_CHILD:
     50          			
     51          
     52          			break;
     53          			
     54          		case WM_NOTIFY_PARENT:
     55          			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0x2902             CMP      R1,#+2
   \   0000001E   0xF040 0x80D4      BNE.W    ??cbChangeSpeedWin_1
     56          			{
     57          				if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable20_1
   \   00000026   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002A   0xF9B1 0x2018      LDRSH    R2,[R1, #+24]
   \   0000002E   0x4290             CMP      R0,R2
   \   00000030   0xD113             BNE.N    ??cbChangeSpeedWin_3
     58          				{
     59          					/*
     60          					if((mksCfg.extruders == 2)&&(mksReprint.mks_printer_state!= MKS_IDLE))
     61          					{
     62          						gCfgItems.curSprayerChoose = gCfgItems.curSprayerChoose_bak;
     63          						sprintf(buf,"T%d\n",gCfgItems.curSprayerChoose);
     64          						pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
     65          					}
     66          					*/
     67          					Clear_changeSpeed();
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   00000036   0x6940             LDR      R0,[R0, #+20]
   \   00000038   0x.... 0x....      BL       GUI_SetBkColor
   \   0000003C   0x.... 0x....      LDR.W    R4,??DataTable20_3
   \   00000040   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000044   0x.... 0x....      BL       WM_IsWindow
   \   00000048   0xB118             CBZ.N    R0,??cbChangeSpeedWin_4
   \   0000004A   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000004E   0x.... 0x....      BL       WM_DeleteWindow
     68          					draw_return_ui();
   \                     ??cbChangeSpeedWin_4: (+1)
   \   00000052   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   00000056   0x.... 0x....      B.W      draw_return_ui
     69          				}
     70          				else if(pMsg->hWinSrc == buttonInc.btnHandle)
   \                     ??cbChangeSpeedWin_3: (+1)
   \   0000005A   0x.... 0x....      LDR.W    R2,??DataTable20_4
   \   0000005E   0xF9B2 0x3000      LDRSH    R3,[R2, #+0]
   \   00000062   0x4298             CMP      R0,R3
   \   00000064   0xD144             BNE.N    ??cbChangeSpeedWin_5
     71          				{
     72          					
     73          					if(speedType == 0)
   \   00000066   0x.... 0x....      LDR.W    R4,??DataTable20_3
   \   0000006A   0x7820             LDRB     R0,[R4, #+0]
   \   0000006C   0xB9A8             CBNZ.N   R0,??cbChangeSpeedWin_6
     74          					{
     75          						move_speed_flg = 1;
     76          						if(feedrate_percentage  < MAX_EXT_SPEED_PERCENT - gCfgItems.stepPrintSpeed)
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable20_5
   \   00000072   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x7060             STRB     R0,[R4, #+1]
   \   0000007A   0xF240 0x33E7      MOVW     R3,#+999
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   00000082   0xF890 0x40BA      LDRB     R4,[R0, #+186]
   \   00000086   0x1B1B             SUBS     R3,R3,R4
   \   00000088   0x429A             CMP      R2,R3
   \   0000008A   0xBFBA             ITTE     LT 
     77          						{
     78          							feedrate_percentage += gCfgItems.stepPrintSpeed;
   \   0000008C   0xF890 0x00BA      LDRBLT   R0,[R0, #+186]
   \   00000090   0x1880             ADDLT    R0,R0,R2
     79          							
     80          						}
     81          						else
     82          						{
     83          							feedrate_percentage = MAX_EXT_SPEED_PERCENT;
   \   00000092   0xF240 0x30E7      MOVWGE   R0,#+999
   \   00000096   0x8008             STRH     R0,[R1, #+0]
   \   00000098   0xE090             B.N      ??cbChangeSpeedWin_7
     84          						}
     85          						//SET_MOVE_SPEED_COMMAND(buf, gCfgItems.printSpeed);
     86          						//pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
     87          						//sprintf(buf, "M220 S%d\n", gCfgItems.printSpeed);
     88          						//enqueue_and_echo_commands_P(buf);
     89          					}
     90          					else if(speedType == 1)
   \                     ??cbChangeSpeedWin_6: (+1)
   \   0000009A   0x2801             CMP      R0,#+1
   \   0000009C   0xF040 0x808E      BNE.W    ??cbChangeSpeedWin_7
     91          					{
     92          						if(planner.flow_percentage[0]< MAX_EXT_SPEED_PERCENT - gCfgItems.stepPrintSpeed)
   \   000000A0   0x.... 0x....      LDR.W    R6,??DataTable20_6
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   000000A8   0xF9B6 0x1000      LDRSH    R1,[R6, #+0]
   \   000000AC   0xF890 0x30BA      LDRB     R3,[R0, #+186]
   \   000000B0   0xF240 0x32E7      MOVW     R2,#+999
   \   000000B4   0x1AD2             SUBS     R2,R2,R3
   \   000000B6   0x4291             CMP      R1,R2
   \   000000B8   0xBFBA             ITTE     LT 
     93          						{
     94          							planner.flow_percentage[0] += gCfgItems.stepPrintSpeed;
   \   000000BA   0xF890 0x00BA      LDRBLT   R0,[R0, #+186]
   \   000000BE   0x1840             ADDLT    R0,R0,R1
     95          							
     96          						}
     97          						else
     98          						{
     99          							planner.flow_percentage[0] = MAX_EXT_SPEED_PERCENT;
   \   000000C0   0xF240 0x30E7      MOVWGE   R0,#+999
   \   000000C4   0x8030             STRH     R0,[R6, #+0]
    100          						}
    101                                  planner.e_factor[0]= planner.flow_percentage[0]*0.01;
   \   000000C6   0xF9B6 0x7000      LDRSH    R7,[R6, #+0]
   \   000000CA   0x.... 0x....      LDR.W    R4,??DataTable20_7  ;; 0x47ae147b
   \   000000CE   0x.... 0x....      LDR.W    R5,??DataTable20_8  ;; 0x3f847ae1
   \   000000D2   0x4638             MOV      R0,R7
   \   000000D4   0x.... 0x....      BL       __aeabi_i2d
   \   000000D8   0x4622             MOV      R2,R4
   \   000000DA   0x462B             MOV      R3,R5
   \   000000DC   0x.... 0x....      BL       __aeabi_dmul
   \   000000E0   0x.... 0x....      BL       __aeabi_d2f
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable20_9
    102          						planner.flow_percentage[1] = planner.flow_percentage[0];
   \   000000E8   0x8077             STRH     R7,[R6, #+2]
   \   000000EA   0x6008             STR      R0,[R1, #+0]
    103                                  planner.e_factor[1]= planner.flow_percentage[1]*0.01;
   \   000000EC   0x6048             STR      R0,[R1, #+4]
    104          						//gCfgItems.printExtSpeed1 = gCfgItems.printExtSpeed0;
    105          						//SET_EXTRU_SPEED_COMMAND(buf, gCfgItems.printExtSpeed0);
    106          						//pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    107          						//sprintf(buf, "M221 S%d\n", gCfgItems.printSpeed);
    108          						//enqueue_and_echo_commands_P(buf);						
    109          					}
    110          					/*else if(speedType == 2)
    111          					{
    112          						if(gCfgItems.printExtSpeed1< MAX_EXT_SPEED_PERCENT - gCfgItems.stepPrintSpeed)
    113          						{
    114          							gCfgItems.printExtSpeed1 += gCfgItems.stepPrintSpeed;
    115          							
    116          						}
    117          						else
    118          						{
    119          							gCfgItems.printExtSpeed1 = MAX_EXT_SPEED_PERCENT;
    120          						}
    121          						SET_EXTRU_SPEED_COMMAND(buf, gCfgItems.printExtSpeed1);
    122          						pushFIFO(&gcodeCmdTxFIFO, buf);
    123          					}*/
    124          						
    125          					disp_print_speed();
   \   000000EE   0xE065             B.N      ??cbChangeSpeedWin_7
    126          					
    127          				}
    128          				else if(pMsg->hWinSrc == buttonDec.btnHandle)
   \                     ??cbChangeSpeedWin_5: (+1)
   \   000000F0   0xF9B2 0x2018      LDRSH    R2,[R2, #+24]
   \   000000F4   0x4290             CMP      R0,R2
   \   000000F6   0xD13A             BNE.N    ??cbChangeSpeedWin_8
    129          				{
    130          					if(speedType == 0)
   \   000000F8   0x.... 0x....      LDR.W    R4,??DataTable20_3
   \   000000FC   0x7820             LDRB     R0,[R4, #+0]
   \   000000FE   0xB978             CBNZ.N   R0,??cbChangeSpeedWin_9
    131          					{						
    132          						if(feedrate_percentage > MIN_EXT_SPEED_PERCENT + gCfgItems.stepPrintSpeed)
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable20_5
   \   00000104   0x5E0A             LDRSH    R2,[R1, R0]
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   0000010A   0xF890 0x30BA      LDRB     R3,[R0, #+186]
   \   0000010E   0x330A             ADDS     R3,R3,#+10
   \   00000110   0x4293             CMP      R3,R2
   \   00000112   0xBFBA             ITTE     LT 
    133          						{
    134          							feedrate_percentage -= gCfgItems.stepPrintSpeed;							
   \   00000114   0xF890 0x00BA      LDRBLT   R0,[R0, #+186]
   \   00000118   0x1A10             SUBLT    R0,R2,R0
    135          						}
    136          						else
    137          						{
    138          							feedrate_percentage = MIN_EXT_SPEED_PERCENT;
   \   0000011A   0x200A             MOVGE    R0,#+10
   \   0000011C   0x8008             STRH     R0,[R1, #+0]
   \   0000011E   0xE04D             B.N      ??cbChangeSpeedWin_7
    139          						}
    140          						//SET_MOVE_SPEED_COMMAND(buf, gCfgItems.printSpeed);
    141          						//pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    142          						//sprintf(buf, "M220 S%d\n", gCfgItems.printSpeed);
    143          						//enqueue_and_echo_commands_P(buf);						
    144          					}
    145          					else if(speedType == 1)
   \                     ??cbChangeSpeedWin_9: (+1)
   \   00000120   0x2801             CMP      R0,#+1
   \   00000122   0xD14B             BNE.N    ??cbChangeSpeedWin_7
    146          					{
    147          						if(planner.flow_percentage[0] > MIN_EXT_SPEED_PERCENT + gCfgItems.stepPrintSpeed)
   \   00000124   0x.... 0x....      LDR.W    R6,??DataTable20_6
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   0000012C   0xF9B6 0x1000      LDRSH    R1,[R6, #+0]
   \   00000130   0xF890 0x20BA      LDRB     R2,[R0, #+186]
   \   00000134   0x320A             ADDS     R2,R2,#+10
   \   00000136   0x428A             CMP      R2,R1
   \   00000138   0xBFBA             ITTE     LT 
    148          						{
    149          							planner.flow_percentage[0] -= gCfgItems.stepPrintSpeed;							
   \   0000013A   0xF890 0x00BA      LDRBLT   R0,[R0, #+186]
   \   0000013E   0x1A08             SUBLT    R0,R1,R0
    150          						}
    151          						else
    152          						{
    153          							planner.flow_percentage[0] = MIN_EXT_SPEED_PERCENT;
   \   00000140   0x200A             MOVGE    R0,#+10
   \   00000142   0x8030             STRH     R0,[R6, #+0]
    154          						}
    155                                  planner.e_factor[0]= planner.flow_percentage[0]*0.01;
   \   00000144   0xF9B6 0x7000      LDRSH    R7,[R6, #+0]
   \   00000148   0x.... 0x....      LDR.W    R4,??DataTable20_7  ;; 0x47ae147b
   \   0000014C   0x.... 0x....      LDR.W    R5,??DataTable20_8  ;; 0x3f847ae1
   \   00000150   0x4638             MOV      R0,R7
   \   00000152   0x.... 0x....      BL       __aeabi_i2d
   \   00000156   0x4622             MOV      R2,R4
   \   00000158   0x462B             MOV      R3,R5
   \   0000015A   0x.... 0x....      BL       __aeabi_dmul
   \   0000015E   0x.... 0x....      BL       __aeabi_d2f
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable20_9
    156          						planner.flow_percentage[1] = planner.flow_percentage[0];
   \   00000166   0x8077             STRH     R7,[R6, #+2]
   \   00000168   0x6008             STR      R0,[R1, #+0]
    157                                  planner.e_factor[1]= planner.flow_percentage[1]*0.01;
   \   0000016A   0x6048             STR      R0,[R1, #+4]
    158          						//SET_EXTRU_SPEED_COMMAND(buf, gCfgItems.printExtSpeed0);
    159          						//pushFIFO(&gcodeCmdTxFIFO, (unsigned char *)buf);
    160          						//sprintf(buf, "M221 S%d\n", gCfgItems.printSpeed);
    161          						//enqueue_and_echo_commands_P(buf);
    162          					}
    163          					/*else if(speedType == 2)
    164          					{						
    165          
    166          						if(gCfgItems.printExtSpeed1 > MIN_EXT_SPEED_PERCENT + gCfgItems.stepPrintSpeed)
    167          						{
    168          							gCfgItems.printExtSpeed1 -= gCfgItems.stepPrintSpeed;							
    169          						}
    170          						else
    171          						{
    172          							gCfgItems.printExtSpeed1 = MIN_EXT_SPEED_PERCENT;
    173          						}
    174          						SET_EXTRU_SPEED_COMMAND(buf, gCfgItems.printExtSpeed1);
    175          						pushFIFO(&gcodeCmdTxFIFO, buf);
    176          					}*/
    177          						
    178          					disp_print_speed();
   \   0000016C   0xE026             B.N      ??cbChangeSpeedWin_7
    179          				}
    180          				else if(pMsg->hWinSrc == buttonStep.btnHandle)
   \                     ??cbChangeSpeedWin_8: (+1)
   \   0000016E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000172   0x4288             CMP      R0,R1
   \   00000174   0xD112             BNE.N    ??cbChangeSpeedWin_10
    181          				{					
    182          					if(gCfgItems.stepPrintSpeed == 1)
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable20_2
   \   0000017A   0xF890 0x10BA      LDRB     R1,[R0, #+186]
   \   0000017E   0x2901             CMP      R1,#+1
   \   00000180   0xBF08             IT       EQ 
    183          					{
    184          						gCfgItems.stepPrintSpeed = 5;
   \   00000182   0x2105             MOVEQ    R1,#+5
   \   00000184   0xD005             BEQ.N    ??cbChangeSpeedWin_11
    185          					}
    186          					else if(gCfgItems.stepPrintSpeed == 5)
   \   00000186   0xF890 0x10BA      LDRB     R1,[R0, #+186]
   \   0000018A   0x2905             CMP      R1,#+5
   \   0000018C   0xBF0C             ITE      EQ 
    187          					{
    188          						gCfgItems.stepPrintSpeed = 10;						
   \   0000018E   0x210A             MOVEQ    R1,#+10
    189          					}
    190          					else
    191          					{
    192          						gCfgItems.stepPrintSpeed = 1;	
   \   00000190   0x2101             MOVNE    R1,#+1
   \                     ??cbChangeSpeedWin_11: (+1)
   \   00000192   0xF880 0x10BA      STRB     R1,[R0, #+186]
    193          					}
    194          					disp_step_speed();
   \   00000196   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   0000019A   0x....             B.N      disp_step_speed
    195          				}
    196          			/*	else if(pMsg->hWinSrc == buttonFivePercent)
    197          				{					
    198          					gCfgItems.stepPrintSpeed = 5;
    199          					disp_step_speed();
    200          				}*/
    201          				else if(pMsg->hWinSrc == buttonMove.btnHandle)
   \                     ??cbChangeSpeedWin_10: (+1)
   \   0000019C   0x.... 0x....      LDR.W    R4,??DataTable20_3
   \   000001A0   0xF9B4 0x1008      LDRSH    R1,[R4, #+8]
   \   000001A4   0x4288             CMP      R0,R1
   \   000001A6   0xBF08             IT       EQ 
    202          				{
    203          					speedType = 0;
   \   000001A8   0x2000             MOVEQ    R0,#+0
   \   000001AA   0xD004             BEQ.N    ??cbChangeSpeedWin_12
    204          					disp_speed_type();
    205          					disp_print_speed();
    206          				}
    207          				else if(pMsg->hWinSrc == buttonExtruct.btnHandle)
   \   000001AC   0xF9B4 0x1020      LDRSH    R1,[R4, #+32]
   \   000001B0   0x4288             CMP      R0,R1
   \   000001B2   0xD10A             BNE.N    ??cbChangeSpeedWin_1
    208          				{
    209          					speedType = 1;
   \   000001B4   0x2001             MOVS     R0,#+1
   \                     ??cbChangeSpeedWin_12: (+1)
   \   000001B6   0x7020             STRB     R0,[R4, #+0]
    210          					disp_speed_type();
   \   000001B8   0x.... 0x....      BL       disp_speed_type
    211          					disp_print_speed();
   \                     ??cbChangeSpeedWin_7: (+1)
   \   000001BC   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000001C0   0x....             B.N      disp_print_speed
    212          				}
    213          				/*else if(pMsg->hWinSrc == buttonExtruct2)
    214          				{
    215          					speedType = 2;
    216          					disp_speed_type();
    217          					disp_print_speed();
    218          				}*/
    219          				
    220          			}
    221          			break;
    222          			
    223          		default:
    224          			WM_DefaultProc(pMsg);
   \                     ??cbChangeSpeedWin_2: (+1)
   \   000001C2   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   000001C6   0x.... 0x....      B.W      WM_DefaultProc
    225          		}
    226          	}
   \                     ??cbChangeSpeedWin_1: (+1)
   \   000001CA   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    227          
    228          

   \                                 In section .text, align 2, keep-with-next
    229          void draw_changeSpeed()
    230          {
   \                     draw_changeSpeed: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
    231          		
    232          //	int titleHeight = 30;
    233          
    234          //	int imgHeight = LCD_HEIGHT - titleHeight;	
    235          	
    236          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced
    237          
    238          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != CHANGE_SPEED_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable20_10
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB086             SUB      SP,SP,#+24
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A0A             CMP      R2,#+10
   \   00000012   0xD005             BEQ.N    ??draw_changeSpeed_0
    239          	{
    240          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    241          		disp_state_stack._disp_state[disp_state_stack._disp_index] = CHANGE_SPEED_UI;
   \   0000001A   0x220A             MOVS     R2,#+10
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    242          	}
    243          	
    244          	disp_state = CHANGE_SPEED_UI;
   \                     ??draw_changeSpeed_0: (+1)
   \   00000020   0x200A             MOVS     R0,#+10
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable20_11
    245          		
    246          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable20_2
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    247          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x69A0             LDR      R0,[R4, #+24]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    248          	GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    249          
    250          	//GUI_DispStringAt("’˝‘⁄¥Ú”°->≤Ÿ◊˜->±‰ÀŸ", 0, 0);
    251          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000003C   0x.... 0x....      BL       creat_title_text
   \   00000040   0x2205             MOVS     R2,#+5
   \   00000042   0x2103             MOVS     R1,#+3
   \   00000044   0x.... 0x....      BL       GUI_DispStringAt
    252          	
    253          	hChangeSpeedWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbChangeSpeedWin, 0);
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x9002             STR      R0,[SP, #+8]
   \   0000004C   0xF44F 0x738E      MOV      R3,#+284
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable20_12
   \   00000054   0x.... 0x....      LDR.W    R5,??DataTable20_3
   \   00000058   0x9001             STR      R0,[SP, #+4]
   \   0000005A   0xF44F 0x72F0      MOV      R2,#+480
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x2124             MOVS     R1,#+36
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       WM_CreateWindow
   \   0000006A   0x8068             STRH     R0,[R5, #+2]
    254          	buttonInc.btnHandle = BUTTON_CreateEx(INTERVAL_V, 0,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000006C   0x.... 0x....      BL       alloc_win_id
   \   00000070   0x9003             STR      R0,[SP, #+12]
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9002             STR      R0,[SP, #+8]
   \   00000076   0x2002             MOVS     R0,#+2
   \   00000078   0x9001             STR      R0,[SP, #+4]
   \   0000007A   0x238C             MOVS     R3,#+140
   \   0000007C   0x5E28             LDRSH    R0,[R5, R0]
   \   0000007E   0x.... 0x....      LDR.W    R6,??DataTable20_4
   \   00000082   0x9000             STR      R0,[SP, #+0]
   \   00000084   0x2275             MOVS     R2,#+117
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000008E   0x8030             STRH     R0,[R6, #+0]
    255          	buttonDec.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  0,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000090   0x.... 0x....      BL       alloc_win_id
   \   00000094   0x9003             STR      R0,[SP, #+12]
   \   00000096   0xF240 0x1867      MOVW     R8,#+359
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x9002             STR      R0,[SP, #+8]
   \   0000009E   0x238C             MOVS     R3,#+140
   \   000000A0   0x2002             MOVS     R0,#+2
   \   000000A2   0x9001             STR      R0,[SP, #+4]
   \   000000A4   0x2275             MOVS     R2,#+117
   \   000000A6   0x5E28             LDRSH    R0,[R5, R0]
   \   000000A8   0x9000             STR      R0,[SP, #+0]
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x4640             MOV      R0,R8
   \   000000AE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000B2   0x8330             STRH     R0,[R6, #+24]
    256          	buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000B4   0x.... 0x....      BL       alloc_win_id
   \   000000B8   0x9003             STR      R0,[SP, #+12]
   \   000000BA   0x238C             MOVS     R3,#+140
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x9002             STR      R0,[SP, #+8]
   \   000000C0   0x2275             MOVS     R2,#+117
   \   000000C2   0x2002             MOVS     R0,#+2
   \   000000C4   0x9001             STR      R0,[SP, #+4]
   \   000000C6   0x218E             MOVS     R1,#+142
   \   000000C8   0x5E28             LDRSH    R0,[R5, R0]
   \   000000CA   0x9000             STR      R0,[SP, #+0]
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D2   0x8128             STRH     R0,[R5, #+8]
    257          	buttonExtruct.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000D4   0x.... 0x....      BL       alloc_win_id
   \   000000D8   0x9003             STR      R0,[SP, #+12]
   \   000000DA   0x238C             MOVS     R3,#+140
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x9002             STR      R0,[SP, #+8]
   \   000000E0   0x2275             MOVS     R2,#+117
   \   000000E2   0x2002             MOVS     R0,#+2
   \   000000E4   0x9001             STR      R0,[SP, #+4]
   \   000000E6   0x218E             MOVS     R1,#+142
   \   000000E8   0x5E28             LDRSH    R0,[R5, R0]
   \   000000EA   0x9000             STR      R0,[SP, #+0]
   \   000000EC   0x2079             MOVS     R0,#+121
   \   000000EE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000F2   0x8428             STRH     R0,[R5, #+32]
    258          	buttonStep.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000F4   0x.... 0x....      BL       alloc_win_id
   \   000000F8   0x9003             STR      R0,[SP, #+12]
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x9002             STR      R0,[SP, #+8]
   \   000000FE   0x2002             MOVS     R0,#+2
   \   00000100   0x9001             STR      R0,[SP, #+4]
   \   00000102   0x238C             MOVS     R3,#+140
   \   00000104   0x5E28             LDRSH    R0,[R5, R0]
   \   00000106   0x....             LDR.N    R7,??DataTable20_1
   \   00000108   0x9000             STR      R0,[SP, #+0]
   \   0000010A   0x2275             MOVS     R2,#+117
   \   0000010C   0x218E             MOVS     R1,#+142
   \   0000010E   0x20F0             MOVS     R0,#+240
   \   00000110   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000114   0x8038             STRH     R0,[R7, #+0]
    259          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hChangeSpeedWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000116   0x.... 0x....      BL       alloc_win_id
   \   0000011A   0x9003             STR      R0,[SP, #+12]
   \   0000011C   0x238C             MOVS     R3,#+140
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x9002             STR      R0,[SP, #+8]
   \   00000122   0x2275             MOVS     R2,#+117
   \   00000124   0x2002             MOVS     R0,#+2
   \   00000126   0x9001             STR      R0,[SP, #+4]
   \   00000128   0x218E             MOVS     R1,#+142
   \   0000012A   0x5E28             LDRSH    R0,[R5, R0]
   \   0000012C   0x9000             STR      R0,[SP, #+0]
   \   0000012E   0x4640             MOV      R0,R8
   \   00000130   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000134   0x8338             STRH     R0,[R7, #+24]
    260          
    261          	textPrintSpeed= TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,(BTN_Y_PIXEL-60)/2,BTN_X_PIXEL*2+INTERVAL_V,30, hChangeSpeedWnd, WM_CF_SHOW, GUI_TA_VCENTER|GUI_TA_HCENTER, alloc_win_id(),  " ");
   \   00000136   0x.... 0x....      BL       alloc_win_id
   \   0000013A   0x9003             STR      R0,[SP, #+12]
   \   0000013C   0x.... 0x....      ADR.W    R8,??DataTable19  ;; " "
   \   00000140   0x200E             MOVS     R0,#+14
   \   00000142   0x9002             STR      R0,[SP, #+8]
   \   00000144   0xF8CD 0x8010      STR      R8,[SP, #+16]
   \   00000148   0x2002             MOVS     R0,#+2
   \   0000014A   0x9001             STR      R0,[SP, #+4]
   \   0000014C   0x231E             MOVS     R3,#+30
   \   0000014E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000150   0x9000             STR      R0,[SP, #+0]
   \   00000152   0x22EC             MOVS     R2,#+236
   \   00000154   0x2128             MOVS     R1,#+40
   \   00000156   0x2079             MOVS     R0,#+121
   \   00000158   0x.... 0x....      BL       TEXT_CreateEx
   \   0000015C   0x80A8             STRH     R0,[R5, #+4]
    262          	textSpeedVal= TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,(BTN_Y_PIXEL-60)/2+30,BTN_X_PIXEL*2+INTERVAL_V,30, hChangeSpeedWnd, WM_CF_SHOW, GUI_TA_VCENTER|GUI_TA_HCENTER, alloc_win_id(),  " ");
   \   0000015E   0x.... 0x....      BL       alloc_win_id
   \   00000162   0x9003             STR      R0,[SP, #+12]
   \   00000164   0xF8CD 0x8010      STR      R8,[SP, #+16]
   \   00000168   0x200E             MOVS     R0,#+14
   \   0000016A   0x9002             STR      R0,[SP, #+8]
   \   0000016C   0x231E             MOVS     R3,#+30
   \   0000016E   0x2002             MOVS     R0,#+2
   \   00000170   0x9001             STR      R0,[SP, #+4]
   \   00000172   0x22EC             MOVS     R2,#+236
   \   00000174   0x5E28             LDRSH    R0,[R5, R0]
   \   00000176   0x9000             STR      R0,[SP, #+0]
   \   00000178   0x2146             MOVS     R1,#+70
   \   0000017A   0x2079             MOVS     R0,#+121
   \   0000017C   0x.... 0x....      BL       TEXT_CreateEx
   \   00000180   0x80E8             STRH     R0,[R5, #+6]
    263          
    264          	#if VERSION_WITH_PIC	
    265          
    266          	BUTTON_SetBmpFileName(buttonInc.btnHandle, "bmp_Add.bin",1);	
   \   00000182   0x2201             MOVS     R2,#+1
   \   00000184   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000188   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Add.bin">`
   \   0000018C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    267          	BUTTON_SetBmpFileName(buttonDec.btnHandle, "bmp_Dec.bin",1);
   \   00000190   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000194   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Dec.bin">`
   \   00000198   0x2201             MOVS     R2,#+1
   \   0000019A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    268          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);	
   \   0000019E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000001A2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   000001A6   0x2201             MOVS     R2,#+1
   \   000001A8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    269          	
    270          	BUTTON_SetBitmapEx(buttonInc.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   000001AC   0x.... 0x....      LDR.W    R10,??DataTable20_13
   \   000001B0   0x.... 0x....      LDR.W    R9,??DataTable20_14
   \   000001B4   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001B8   0x9000             STR      R0,[SP, #+0]
   \   000001BA   0x2100             MOVS     R1,#+0
   \   000001BC   0x.... 0x....      LDR.W    R8,??DataTable20_15
   \   000001C0   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001C4   0x5E70             LDRSH    R0,[R6, R1]
   \   000001C6   0x4642             MOV      R2,R8
   \   000001C8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    271          	BUTTON_SetBitmapEx(buttonDec.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   000001CC   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001D0   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001D4   0x9000             STR      R0,[SP, #+0]
   \   000001D6   0x4642             MOV      R2,R8
   \   000001D8   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000001DC   0x2100             MOVS     R1,#+0
   \   000001DE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    272          	BUTTON_SetBitmapEx(buttonMove.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   000001E2   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001E6   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   000001EA   0x9000             STR      R0,[SP, #+0]
   \   000001EC   0x4642             MOV      R2,R8
   \   000001EE   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   000001F2   0x2100             MOVS     R1,#+0
   \   000001F4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    273          	BUTTON_SetBitmapEx(buttonExtruct.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   000001F8   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   000001FC   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   00000200   0x9000             STR      R0,[SP, #+0]
   \   00000202   0x4642             MOV      R2,R8
   \   00000204   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   00000208   0x2100             MOVS     R1,#+0
   \   0000020A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    274          	BUTTON_SetBitmapEx(buttonStep.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   0000020E   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   00000212   0x9000             STR      R0,[SP, #+0]
   \   00000214   0x2100             MOVS     R1,#+0
   \   00000216   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   0000021A   0x5E78             LDRSH    R0,[R7, R1]
   \   0000021C   0x4642             MOV      R2,R8
   \   0000021E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    275          	BUTTON_SetBitmapEx(buttonRet.btnHandle,0,&bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   00000222   0xF99A 0x0000      LDRSB    R0,[R10, #+0]
   \   00000226   0xF999 0x3000      LDRSB    R3,[R9, #+0]
   \   0000022A   0x9000             STR      R0,[SP, #+0]
   \   0000022C   0x4642             MOV      R2,R8
   \   0000022E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000232   0x2100             MOVS     R1,#+0
   \   00000234   0x.... 0x....      BL       BUTTON_SetBitmapEx
    276          #if 0	
    277          	BUTTON_SetBkColor(buttonInc.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    278          	BUTTON_SetBkColor(buttonInc.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    279          	BUTTON_SetTextColor(buttonInc.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    280          	BUTTON_SetTextColor(buttonInc.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    281          
    282          	BUTTON_SetBkColor(buttonDec.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    283          	BUTTON_SetBkColor(buttonDec.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    284          	BUTTON_SetTextColor(buttonDec.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    285          	BUTTON_SetTextColor(buttonDec.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    286          
    287          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    288          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    289          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    290          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    291          #endif	
    292          	if(gCfgItems.multiple_language != 0)
   \   00000238   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   0000023C   0xB180             CBZ.N    R0,??draw_changeSpeed_1
    293          	{
    294          		BUTTON_SetText(buttonInc.btnHandle, speed_menu.add);
   \   0000023E   0x....             LDR.N    R4,??DataTable20_16
   \   00000240   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000244   0x6861             LDR      R1,[R4, #+4]
   \   00000246   0x.... 0x....      BL       BUTTON_SetText
    295          		BUTTON_SetText(buttonDec.btnHandle,speed_menu.dec);
   \   0000024A   0x68A1             LDR      R1,[R4, #+8]
   \   0000024C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000250   0x.... 0x....      BL       BUTTON_SetText
    296          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);	
   \   00000254   0x....             LDR.N    R0,??DataTable20_17
   \   00000256   0x6801             LDR      R1,[R0, #+0]
   \   00000258   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000025C   0x.... 0x....      BL       BUTTON_SetText
    297          	}
    298          	#endif
    299          	
    300          	disp_print_speed();
   \                     ??draw_changeSpeed_1: (+1)
   \   00000260   0x.... 0x....      BL       disp_print_speed
    301          	disp_speed_type();
   \   00000264   0x.... 0x....      BL       disp_speed_type
    302          	disp_step_speed();
   \   00000268   0xB006             ADD      SP,SP,#+24
   \   0000026A   0xE8BD 0x47F0      POP      {R4-R10,LR}
   \   0000026E   0x....             B.N      disp_step_speed
    303          }
    304          

   \                                 In section .text, align 2, keep-with-next
    305          void Clear_changeSpeed()
    306          {
   \                     Clear_changeSpeed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    307          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable20_2
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    308          	if(WM_IsWindow(hChangeSpeedWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable20_3
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_changeSpeed_0
    309          	{
    310          		WM_DeleteWindow(hChangeSpeedWnd);
   \   00000016   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    311          		//GUI_Exec();
    312          	}
    313          	//GUI_Clear();
    314          }
   \                     ??Clear_changeSpeed_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
    315          

   \                                 In section .text, align 2, keep-with-next
    316          void disp_print_speed()
    317          {
   \                     disp_print_speed: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
    318          	char buf[30] = {0};
   \   00000004   0xA808             ADD      R0,SP,#+32
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
    319          	char buf1[30] = {0};
   \   00000012   0xA800             ADD      R0,SP,#+0
    320          
    321          	TEXT_SetTextColor(textPrintSpeed, gCfgItems.title_color);
   \   00000014   0x....             LDR.N    R5,??DataTable20_2
   \   00000016   0xC01E             STM      R0!,{R1-R4}
   \   00000018   0xC01E             STM      R0!,{R1-R4}
   \   0000001A   0x....             LDR.N    R4,??DataTable20_3
   \   0000001C   0x69A9             LDR      R1,[R5, #+24]
   \   0000001E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000022   0x.... 0x....      BL       TEXT_SetTextColor
    322          	TEXT_SetBkColor(textPrintSpeed, gCfgItems.background_color);
   \   00000026   0x6969             LDR      R1,[R5, #+20]
   \   00000028   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000002C   0x.... 0x....      BL       TEXT_SetBkColor
    323          	TEXT_SetTextColor(textSpeedVal, gCfgItems.title_color);
   \   00000030   0x69A9             LDR      R1,[R5, #+24]
   \   00000032   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000036   0x.... 0x....      BL       TEXT_SetTextColor
    324          	TEXT_SetBkColor(textSpeedVal, gCfgItems.background_color);	
   \   0000003A   0x6969             LDR      R1,[R5, #+20]
   \   0000003C   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000040   0x.... 0x....      BL       TEXT_SetBkColor
    325          	
    326          	if(speedType ==  0)	//move
   \   00000044   0x7820             LDRB     R0,[R4, #+0]
   \   00000046   0xB938             CBNZ.N   R0,??disp_print_speed_0
    327          	{
    328          		sprintf(buf1, "%s",speed_menu.move_speed);
   \   00000048   0x....             LDR.N    R0,??DataTable20_16
   \   0000004A   0x6A42             LDR      R2,[R0, #+36]
   \   0000004C   0x....             ADR.N    R1,??DataTable20  ;; 0x25, 0x73, 0x00, 0x00
   \   0000004E   0xA800             ADD      R0,SP,#+0
   \   00000050   0x.... 0x....      BL       sprintf
    329          		sprintf(buf, "%d%%", feedrate_percentage);
   \   00000054   0x....             LDR.N    R0,??DataTable20_5
   \   00000056   0xE008             B.N      ??disp_print_speed_1
    330          		
    331          	}
    332          	else if(speedType ==  1)	// e1
   \                     ??disp_print_speed_0: (+1)
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xD10D             BNE.N    ??disp_print_speed_2
    333          	{
    334          		sprintf(buf1, "%s",speed_menu.extrude_speed);	
   \   0000005C   0x....             LDR.N    R0,??DataTable20_16
   \   0000005E   0x6A82             LDR      R2,[R0, #+40]
   \   00000060   0x....             ADR.N    R1,??DataTable20  ;; 0x25, 0x73, 0x00, 0x00
   \   00000062   0xA800             ADD      R0,SP,#+0
   \   00000064   0x.... 0x....      BL       sprintf
    335          		sprintf(buf, "%d%%", planner.flow_percentage[0]);	
   \   00000068   0x....             LDR.N    R0,??DataTable20_6
   \                     ??disp_print_speed_1: (+1)
   \   0000006A   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000006E   0x.... 0x....      ADR.W    R1,`?<Constant "%d%%">`
   \   00000072   0xA808             ADD      R0,SP,#+32
   \   00000074   0x.... 0x....      BL       sprintf
    336          	}
    337          	TEXT_SetText(textPrintSpeed, buf1);
   \                     ??disp_print_speed_2: (+1)
   \   00000078   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000007C   0xA900             ADD      R1,SP,#+0
   \   0000007E   0x.... 0x....      BL       TEXT_SetText
    338          	TEXT_SetText(textSpeedVal, buf);
   \   00000082   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000086   0xA908             ADD      R1,SP,#+32
   \   00000088   0x.... 0x....      BL       TEXT_SetText
    339          
    340          }
   \   0000008C   0xB011             ADD      SP,SP,#+68
   \   0000008E   0xBD30             POP      {R4,R5,PC}       ;; return
    341          

   \                                 In section .text, align 2, keep-with-next
    342          void disp_speed_type()
    343          {
   \                     disp_speed_type: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    344          	switch(speedType)
   \   00000002   0x....             LDR.N    R4,??DataTable20_3
   \   00000004   0x....             LDR.N    R5,??DataTable20_15
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x....             LDR.N    R6,??DataTable20_14
   \   0000000A   0x....             LDR.N    R7,??DataTable20_13
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD122             BNE.N    ??disp_speed_type_0
    345          	{
    346          		case 1:
    347          			BUTTON_SetBmpFileName(buttonExtruct.btnHandle, "bmp_extruct_sel.bin",1);	
   \   00000010   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   00000014   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extruct_sel.bin">`
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    348          			BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_mov_changeSpeed.bin",1);			
   \   0000001E   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000022   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_mov_changeSpeed.bin">`
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0x.... 0x....      BL       BUTTON_SetBmpFileName
    349          			BUTTON_SetBitmapEx(buttonExtruct.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000002C   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000030   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x462A             MOV      R2,R5
   \   00000038   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    350          			BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000042   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000046   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   0000004A   0x9000             STR      R0,[SP, #+0]
   \   0000004C   0x462A             MOV      R2,R5
   \   0000004E   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0xE021             B.N      ??disp_speed_type_1
    351          							
    352          			break;
    353          
    354          		default:
    355          			BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_mov_sel.bin",1);
   \                     ??disp_speed_type_0: (+1)
   \   00000056   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   0000005A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_mov_sel.bin">`
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x.... 0x....      BL       BUTTON_SetBmpFileName
    356          			BUTTON_SetBmpFileName(buttonExtruct.btnHandle, "bmp_speed_extruct.bin",1);
   \   00000064   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   00000068   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed_extruct.bin">`
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    357          			BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000072   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000076   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   0000007A   0x9000             STR      R0,[SP, #+0]
   \   0000007C   0x462A             MOV      R2,R5
   \   0000007E   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x.... 0x....      BL       BUTTON_SetBitmapEx
    358          			BUTTON_SetBitmapEx(buttonExtruct.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);		
   \   00000088   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   0000008C   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   00000090   0x9000             STR      R0,[SP, #+0]
   \   00000092   0x462A             MOV      R2,R5
   \   00000094   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   00000098   0x2100             MOVS     R1,#+0
   \                     ??disp_speed_type_1: (+1)
   \   0000009A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    359          			break;
    360          	}
    361          		
    362          	if(gCfgItems.multiple_language != 0)
   \   0000009E   0x....             LDR.N    R0,??DataTable20_2
   \   000000A0   0xF890 0x01CF      LDRB     R0,[R0, #+463]
   \   000000A4   0xB160             CBZ.N    R0,??disp_speed_type_2
    363          	{
    364          		BUTTON_SetText(buttonExtruct.btnHandle, speed_menu.extrude);
   \   000000A6   0x....             LDR.N    R5,??DataTable20_16
   \   000000A8   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   000000AC   0x68E9             LDR      R1,[R5, #+12]
   \   000000AE   0x.... 0x....      BL       BUTTON_SetText
    365          		BUTTON_SetText(buttonMove.btnHandle, speed_menu.move);	
   \   000000B2   0x6929             LDR      R1,[R5, #+16]
   \   000000B4   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   000000B8   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   000000BC   0x.... 0x....      B.W      BUTTON_SetText
    366          	}
    367          
    368          }
   \                     ??disp_speed_type_2: (+1)
   \   000000C0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    369          

   \                                 In section .text, align 2, keep-with-next
    370          void disp_step_speed()
    371          {
   \                     disp_step_speed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    372          	if(gCfgItems.stepPrintSpeed == 1)
   \   00000002   0x....             LDR.N    R4,??DataTable20_2
   \   00000004   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD103             BNE.N    ??disp_step_speed_0
    373          	{
    374          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step1_percent.bin",1);     							
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step1_percent.bin">`
   \   00000012   0xE00E             B.N      ??disp_step_speed_1
    375          	}
    376          	else if(gCfgItems.stepPrintSpeed == 5)
   \                     ??disp_step_speed_0: (+1)
   \   00000014   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000018   0x2805             CMP      R0,#+5
   \   0000001A   0xD103             BNE.N    ??disp_step_speed_2
    377          	{
    378          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step5_percent.bin",1);			  										
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step5_percent.bin">`
   \   00000022   0xE006             B.N      ??disp_step_speed_1
    379          	}
    380          	else if(gCfgItems.stepPrintSpeed == 10)
   \                     ??disp_step_speed_2: (+1)
   \   00000024   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000028   0x280A             CMP      R0,#+10
   \   0000002A   0xD107             BNE.N    ??disp_step_speed_3
    381          	{         								
    382          		BUTTON_SetBmpFileName(buttonStep.btnHandle, "bmp_step10_percent.bin",1);										
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step10_percent.bin">`
   \                     ??disp_step_speed_1: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable20_1
   \   00000034   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000038   0x.... 0x....      BL       BUTTON_SetBmpFileName
    383          	}
    384          
    385          	if(gCfgItems.multiple_language != 0)
   \                     ??disp_step_speed_3: (+1)
   \   0000003C   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000040   0xB1D0             CBZ.N    R0,??disp_step_speed_4
    386          	{
    387          		if(gCfgItems.stepPrintSpeed == 1)
   \   00000042   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xD102             BNE.N    ??disp_step_speed_5
    388          		{
    389          			BUTTON_SetText(buttonStep.btnHandle, speed_menu.step_1percent);
   \   0000004A   0x....             LDR.N    R0,??DataTable20_16
   \   0000004C   0x6941             LDR      R1,[R0, #+20]
   \   0000004E   0xE00C             B.N      ??disp_step_speed_6
    390          		}
    391          		else if(gCfgItems.stepPrintSpeed == 5)
   \                     ??disp_step_speed_5: (+1)
   \   00000050   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000054   0x2805             CMP      R0,#+5
   \   00000056   0xD102             BNE.N    ??disp_step_speed_7
    392          		{
    393          			BUTTON_SetText(buttonStep.btnHandle, speed_menu.step_5percent);	
   \   00000058   0x....             LDR.N    R0,??DataTable20_16
   \   0000005A   0x6981             LDR      R1,[R0, #+24]
   \   0000005C   0xE005             B.N      ??disp_step_speed_6
    394          		}
    395          		else if(gCfgItems.stepPrintSpeed == 10)
   \                     ??disp_step_speed_7: (+1)
   \   0000005E   0xF894 0x00BA      LDRB     R0,[R4, #+186]
   \   00000062   0x280A             CMP      R0,#+10
   \   00000064   0xD108             BNE.N    ??disp_step_speed_4
    396          		{
    397          			BUTTON_SetText(buttonStep.btnHandle, speed_menu.step_10percent);	
   \   00000066   0x....             LDR.N    R0,??DataTable20_16
   \   00000068   0x69C1             LDR      R1,[R0, #+28]
   \                     ??disp_step_speed_6: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable20_1
   \   0000006C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000070   0xE8BD 0x4010      POP      {R4,LR}
   \   00000074   0x.... 0x....      B.W      BUTTON_SetText
    398          		}
    399          	}
    400          
    401          }
   \                     ??disp_step_speed_4: (+1)
   \   00000078   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \   00000000   0x........         DC32     buttonStep

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_2:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_3:
   \   00000000   0x........         DC32     speedType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_4:
   \   00000000   0x........         DC32     buttonInc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_5:
   \   00000000   0x........         DC32     feedrate_percentage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_6:
   \   00000000   0x........         DC32     _ZN7Planner15flow_percentageE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_7:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_8:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_9:
   \   00000000   0x........         DC32     _ZN7Planner8e_factorE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_10:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_11:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_12:
   \   00000000   0x........         DC32     _Z16cbChangeSpeedWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_13:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_14:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_15:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_16:
   \   00000000   0x........         DC32     speed_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_17:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Add.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Add.bin"
   \              0x70 0x5F    
   \              0x41 0x64    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Dec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Dec.bin"
   \              0x70 0x5F    
   \              0x44 0x65    
   \              0x63 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d%%">`:
   \   00000000   0x25 0x64          DC8 "%d%%"
   \              0x25 0x25    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extruct_sel.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extruct_sel.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x63    
   \              0x74 0x5F    
   \              0x73 0x65    
   \              0x6C 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_mov_changeSpeed.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_mov_changeSpeed.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x5F    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x53 0x70    
   \              0x65 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_mov_sel.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_mov_sel.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x5F    
   \              0x73 0x65    
   \              0x6C 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed_extruct.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed_extruct.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x63    
   \              0x74 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step1_percent.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step1_percent.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x5F    
   \              0x70 0x65    
   \              0x72 0x63    
   \              0x65 0x6E    
   \              0x74 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step5_percent.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step5_percent.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x35 0x5F    
   \              0x70 0x65    
   \              0x72 0x63    
   \              0x65 0x6E    
   \              0x74 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step10_percent.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step10_percent.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x30    
   \              0x5F 0x70    
   \              0x65 0x72    
   \              0x63 0x65    
   \              0x6E 0x74    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant " ">`:
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%s">`:
   \   00000000   0x25 0x73          DC8 "%s"
   \              0x00         
   \   00000003   0x00               DC8 0
    402          
    403          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_changeSpeed
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbChangeSpeedWin(WM_MESSAGE *)
        24   -> GUI_SetBkColor
         0   -> WM_DefaultProc
        24   -> WM_DeleteWindow
        24   -> WM_IsWindow
        24   -> __aeabi_d2f
        24   -> __aeabi_dmul
        24   -> __aeabi_i2d
         0   -> disp_print_speed
        24   -> disp_speed_type
         0   -> disp_step_speed
         0   -> draw_return_ui
      80   disp_print_speed
        80   -> TEXT_SetBkColor
        80   -> TEXT_SetText
        80   -> TEXT_SetTextColor
        80   -> sprintf
      24   disp_speed_type
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        24   -> BUTTON_SetText
       8   disp_step_speed
         8   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
      56   draw_changeSpeed
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> TEXT_CreateEx
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
        56   -> disp_print_speed
        56   -> disp_speed_type
         0   -> disp_step_speed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant " ">
       8  ?<Constant "%d%%">
       4  ?<Constant "%s">
      12  ?<Constant "bmp_Add.bin">
      12  ?<Constant "bmp_Dec.bin">
      20  ?<Constant "bmp_extruct_sel.bin">
      24  ?<Constant "bmp_mov_changeSpeed.bin">
      16  ?<Constant "bmp_mov_sel.bin">
      16  ?<Constant "bmp_return.bin">
      24  ?<Constant "bmp_speed_extruct.bin">
      24  ?<Constant "bmp_step10_percent.bin">
      24  ?<Constant "bmp_step1_percent.bin">
      24  ?<Constant "bmp_step5_percent.bin">
      32  ?<Constant {'\000'}>
      32  ?<Constant {'\000'}>_1
       4  ??DataTable19
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_10
       4  ??DataTable20_11
       4  ??DataTable20_12
       4  ??DataTable20_13
       4  ??DataTable20_14
       4  ??DataTable20_15
       4  ??DataTable20_16
       4  ??DataTable20_17
       4  ??DataTable20_2
       4  ??DataTable20_3
       4  ??DataTable20_4
       4  ??DataTable20_5
       4  ??DataTable20_6
       4  ??DataTable20_7
       4  ??DataTable20_8
       4  ??DataTable20_9
      36  Clear_changeSpeed
      48  buttonInc
          buttonDec
      48  buttonStep
          buttonRet
     460  cbChangeSpeedWin(WM_MESSAGE *)
     144  disp_print_speed
     194  disp_speed_type
     122  disp_step_speed
     624  draw_changeSpeed
      56  speedType
          move_speed_flg
          hChangeSpeedWnd
          textPrintSpeed
          textSpeedVal
          buttonMove
          buttonExtruct
       1  -- Other

 
   152 bytes in section .bss
    71 bytes in section .rodata
 1 860 bytes in section .text
 
 1 860 bytes of CODE  memory
    70 bytes of CONST memory (+ 1 byte shared)
   152 bytes of DATA  memory

Errors: none
Warnings: 26
