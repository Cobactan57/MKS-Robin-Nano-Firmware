###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_pre_heat.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_pre_heat.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      5          #include "draw_pre_heat.h"
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "mks_cfg.h"
     10          
     11          #include "temperature.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer
     12          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     13          
     14          //#include "mks_tft_fifo.h"
     15          //#include "mks_tft_com.h"
     16          #ifndef GUI_FLASH
     17          #define GUI_FLASH
     18          #endif
     19          

   \                                 In section .bss, align 4
     20          GUI_HWIN hPreHeatWnd;
   \                     hPreHeatWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 24
   \   00000020                      DS8 24
     21          static TEXT_Handle textDesireTemp,textDesireValue;
     22          
     23          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     24          //extern TFT_FIFO gcodeCmdTxFIFO;		//gcode ÷∏¡Ó∑¢ÀÕ∂”¡–
     25          //extern TFT_FIFO gcodeCmdRxFIFO;		//gcode	÷∏¡ÓΩ” ’∂”¡–
     26          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     27          extern uint8_t  Get_Temperature_Flg;
     28          

   \                                 In section .bss, align 4
     29          static BUTTON_STRUCT buttonInc, buttonDec, buttonTempType, buttondegree, buttonOff, buttonRet;
   \                     buttonTempType:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonOff:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     30          

   \                                 In section .text, align 2, keep-with-next
     31          static void cbPreHeatWin(WM_MESSAGE * pMsg) {
     32          	char  buf[50] = {0};
     33          	
     34          	switch (pMsg->MsgId)
   \                     _Z12cbPreHeatWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbPreHeatWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbPreHeatWin_0: (+1)
   \   00000008   0xB5F8             PUSH     {R3-R7,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x290F             CMPNE    R1,#+15
   \   00000010   0xF000 0x8150      BEQ.W    ??cbPreHeatWin_1
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xF040 0x8149      BNE.W    ??cbPreHeatWin_2
     35          	{
     36          		case WM_PAINT:
     37          
     38          			break;
     39          		case WM_TOUCH:
     40          		 	
     41          			break;
     42          		case WM_TOUCH_CHILD:
     43          			
     44          			break;
     45          		case WM_NOTIFY_PARENT:
     46          		
     47          			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0x2902             CMP      R1,#+2
   \   0000001E   0xF040 0x8149      BNE.W    ??cbPreHeatWin_1
     48          			{	
     49          			
     50          				if(pMsg->hWinSrc == buttonTempType.btnHandle)
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable19
   \   00000026   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002A   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   0000002E   0x4290             CMP      R0,R2
   \   00000030   0xD13E             BNE.N    ??cbPreHeatWin_3
     51          				{
     52          					if(gCfgItems.curTempType == 0)
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   00000036   0xF104 0x01AC      ADD      R1,R4,#+172
   \   0000003A   0xF991 0x0002      LDRSB    R0,[R1, #+2]
   \   0000003E   0xBB50             CBNZ.N   R0,??cbPreHeatWin_4
     53          					{
     54          						if(mksCfg.extruders == 2)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   00000044   0xF100 0x02E6      ADD      R2,R0,#+230
   \   00000048   0x7C52             LDRB     R2,[R2, #+17]
   \   0000004A   0x2A02             CMP      R2,#+2
   \   0000004C   0xD11A             BNE.N    ??cbPreHeatWin_5
     55          						{
     56          							if(gCfgItems.singleNozzle == 0)
   \   0000004E   0xF894 0x22B2      LDRB     R2,[R4, #+690]
   \   00000052   0xB98A             CBNZ.N   R2,??cbPreHeatWin_6
     57          							{
     58          								if(gCfgItems.curSprayerChoose == 0)
   \   00000054   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   00000058   0xB90A             CBNZ.N   R2,??cbPreHeatWin_7
     59          								{
     60          									gCfgItems.curSprayerChoose = 1;
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0xE009             B.N      ??cbPreHeatWin_8
     61          									//enqueue_and_echo_command("T1");
     62          								}
     63          								else if(gCfgItems.curSprayerChoose == 1)
   \                     ??cbPreHeatWin_7: (+1)
   \   0000005E   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   00000062   0x2A01             CMP      R2,#+1
   \   00000064   0xD11F             BNE.N    ??cbPreHeatWin_9
     64          								{
     65          									if(mksCfg.has_temp_bed == 1)
   \   00000066   0x3030             ADDS     R0,R0,#+48
   \   00000068   0x7A00             LDRB     R0,[R0, #+8]
   \   0000006A   0x2801             CMP      R0,#+1
   \   0000006C   0xD01A             BEQ.N    ??cbPreHeatWin_10
     66          									{
     67          										gCfgItems.curTempType = 1;
     68          									}
     69          									else
     70          									{
     71          										gCfgItems.curTempType = 0;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x7088             STRB     R0,[R1, #+2]
     72          										gCfgItems.curSprayerChoose = 0;
   \                     ??cbPreHeatWin_8: (+1)
   \   00000072   0xF884 0x00AC      STRB     R0,[R4, #+172]
   \   00000076   0xE016             B.N      ??cbPreHeatWin_9
     73          										//enqueue_and_echo_command("T0");
     74          									}
     75          								}
     76          							}
     77          							else
     78          							{
     79          								if(mksCfg.has_temp_bed == 1)
   \                     ??cbPreHeatWin_6: (+1)
   \   00000078   0x3030             ADDS     R0,R0,#+48
   \   0000007A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD011             BEQ.N    ??cbPreHeatWin_10
     80          								{
     81          									gCfgItems.curTempType = 1;
     82          								}
     83          								else
     84          								{
     85          									gCfgItems.curTempType = 0;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0xE00F             B.N      ??cbPreHeatWin_10
     86          								}
     87          							}
     88          
     89          						}
     90          						else
     91          						{	
     92          							if(gCfgItems.curSprayerChoose == 0)
   \                     ??cbPreHeatWin_5: (+1)
   \   00000084   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   00000088   0xB96A             CBNZ.N   R2,??cbPreHeatWin_9
     93          							{
     94          								if(mksCfg.has_temp_bed == 1)
   \   0000008A   0x3030             ADDS     R0,R0,#+48
   \   0000008C   0x7A00             LDRB     R0,[R0, #+8]
   \   0000008E   0x2801             CMP      R0,#+1
   \   00000090   0xD008             BEQ.N    ??cbPreHeatWin_10
     95          								{
     96          									gCfgItems.curTempType = 1;
     97          								}
     98          								else
     99          								{
    100          									gCfgItems.curTempType = 0;
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0xE006             B.N      ??cbPreHeatWin_10
    101          								}
    102          							}
    103          						}
    104          					
    105          					}
    106          					else if(gCfgItems.curTempType == 1)
   \                     ??cbPreHeatWin_4: (+1)
   \   00000096   0xF991 0x0002      LDRSB    R0,[R1, #+2]
   \   0000009A   0x2801             CMP      R0,#+1
   \   0000009C   0xD103             BNE.N    ??cbPreHeatWin_9
    107          					{
    108          						gCfgItems.curSprayerChoose = 0;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0xF884 0x00AC      STRB     R0,[R4, #+172]
    109          						gCfgItems.curTempType = 0;
   \                     ??cbPreHeatWin_10: (+1)
   \   000000A4   0x7088             STRB     R0,[R1, #+2]
    110          					}
    111          
    112          						
    113          					disp_desire_temp();
   \                     ??cbPreHeatWin_9: (+1)
   \   000000A6   0x.... 0x....      BL       disp_desire_temp
    114          					disp_temp_type();
   \   000000AA   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000AE   0x....             B.N      disp_temp_type
    115          					
    116          				}	
    117          				
    118          				else if(pMsg->hWinSrc == buttonInc.btnHandle)
   \                     ??cbPreHeatWin_3: (+1)
   \   000000B0   0x.... 0x....      LDR.W    R4,??DataTable19_3
   \   000000B4   0xF9B4 0x2008      LDRSH    R2,[R4, #+8]
   \   000000B8   0x4290             CMP      R0,R2
   \   000000BA   0xD174             BNE.N    ??cbPreHeatWin_11
    119          				{
    120          					if(gCfgItems.curTempType == 0)
   \   000000BC   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   000000C4   0xF104 0x01AC      ADD      R1,R4,#+172
   \   000000C8   0xF991 0x2002      LDRSB    R2,[R1, #+2]
   \   000000CC   0x2A00             CMP      R2,#+0
   \   000000CE   0xD149             BNE.N    ??cbPreHeatWin_12
    121          					{
    122          						thermalManager.target_temperature[gCfgItems.curSprayerChoose] += gCfgItems.stepHeat; 
   \   000000D0   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   000000D4   0x.... 0x....      LDR.W    R5,??DataTable19_4
   \   000000D8   0xF855 0x3022      LDR      R3,[R5, R2, LSL #+2]
   \   000000DC   0xF991 0x1003      LDRSB    R1,[R1, #+3]
   \   000000E0   0x18C9             ADDS     R1,R1,R3
   \   000000E2   0xF845 0x1022      STR      R1,[R5, R2, LSL #+2]
   \   000000E6   0xF890 0x60E6      LDRB     R6,[R0, #+230]
   \   000000EA   0xF994 0x10AC      LDRSB    R1,[R4, #+172]
   \   000000EE   0xB9D9             CBNZ.N   R1,??cbPreHeatWin_13
    123          						if(gCfgItems.curSprayerChoose == 0)
    124          						{
    125          							if((int)thermalManager.target_temperature[gCfgItems.curSprayerChoose] > (mksCfg.heater_0_maxtemp- (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1)))
   \   000000F0   0xF9B0 0x0030      LDRSH    R0,[R0, #+48]
   \   000000F4   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   000000F8   0xF855 0x2022      LDR      R2,[R5, R2, LSL #+2]
   \   000000FC   0x1B81             SUBS     R1,R0,R6
   \   000000FE   0x1EC9             SUBS     R1,R1,#+3
   \   00000100   0x4291             CMP      R1,R2
   \   00000102   0xF280 0x80BA      BGE.W    ??cbPreHeatWin_14
    126          							{
    127          								thermalManager.target_temperature[gCfgItems.curSprayerChoose] = (float)mksCfg.heater_0_maxtemp - (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1);
                 								                                                              ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000106   0x.... 0x....      BL       __aeabi_i2f
   \   0000010A   0x4607             MOV      R7,R0
   \   0000010C   0x1CF0             ADDS     R0,R6,#+3
   \   0000010E   0x.... 0x....      BL       __aeabi_i2f
   \   00000112   0x4601             MOV      R1,R0
   \   00000114   0x4638             MOV      R0,R7
   \   00000116   0x.... 0x....      BL       __aeabi_fsub
   \   0000011A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000011E   0xF994 0x10AC      LDRSB    R1,[R4, #+172]
   \   00000122   0xF845 0x0021      STR      R0,[R5, R1, LSL #+2]
    128          						
    129          								thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
   \   00000126   0xE09D             B.N      ??cbPreHeatWin_15
    130          							}
    131          						}
    132          						else
    133          						{
    134          							if((int)thermalManager.target_temperature[gCfgItems.curSprayerChoose] > (mksCfg.heater_1_maxtemp- (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1)))
   \                     ??cbPreHeatWin_13: (+1)
   \   00000128   0xF200 0x01E6      ADDW     R1,R0,#+230
   \   0000012C   0xF9B1 0x000E      LDRSH    R0,[R1, #+14]
   \   00000130   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   00000134   0xF855 0x2022      LDR      R2,[R5, R2, LSL #+2]
   \   00000138   0x1B81             SUBS     R1,R0,R6
   \   0000013A   0x1EC9             SUBS     R1,R1,#+3
   \   0000013C   0x4291             CMP      R1,R2
   \   0000013E   0xF280 0x809C      BGE.W    ??cbPreHeatWin_14
    135          							{
    136          								thermalManager.target_temperature[gCfgItems.curSprayerChoose] = (float)mksCfg.heater_1_maxtemp - (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1);
                 								                                                              ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   00000142   0x.... 0x....      BL       __aeabi_i2f
   \   00000146   0x4607             MOV      R7,R0
   \   00000148   0x1CF0             ADDS     R0,R6,#+3
   \   0000014A   0x.... 0x....      BL       __aeabi_i2f
   \   0000014E   0x4601             MOV      R1,R0
   \   00000150   0x4638             MOV      R0,R7
   \   00000152   0x.... 0x....      BL       __aeabi_fsub
   \   00000156   0x.... 0x....      BL       __aeabi_f2iz
   \   0000015A   0xF994 0x10AC      LDRSB    R1,[R4, #+172]
   \   0000015E   0xF845 0x0021      STR      R0,[R5, R1, LSL #+2]
    137          						
    138          								thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
   \   00000162   0xE07F             B.N      ??cbPreHeatWin_15
    139          							}						
    140          						}
    141          					}
    142          					else
    143          					{
    144          						
    145          						thermalManager.target_temperature_bed += gCfgItems.stepHeat;
   \                     ??cbPreHeatWin_12: (+1)
   \   00000164   0x.... 0x....      LDR.W    R4,??DataTable19_5
   \   00000168   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \   0000016C   0xF991 0x1003      LDRSB    R1,[R1, #+3]
   \   00000170   0x188A             ADDS     R2,R1,R2
    146          						
    147          						if((int)thermalManager.target_temperature_bed > mksCfg.bed_maxtemp- (WATCH_BED_TEMP_INCREASE + TEMP_BED_HYSTERESIS + 1))
   \   00000172   0xF200 0x01E6      ADDW     R1,R0,#+230
   \   00000176   0x3030             ADDS     R0,R0,#+48
   \   00000178   0x7A0D             LDRB     R5,[R1, #+8]
   \   0000017A   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   0000017E   0x8022             STRH     R2,[R4, #+0]
   \   00000180   0x1B41             SUBS     R1,R0,R5
   \   00000182   0x1EC9             SUBS     R1,R1,#+3
   \   00000184   0xB212             SXTH     R2,R2
   \   00000186   0x4291             CMP      R1,R2
   \   00000188   0xDA77             BGE.N    ??cbPreHeatWin_14
    148          						{
    149          							thermalManager.target_temperature_bed = (float)mksCfg.bed_maxtemp - (WATCH_BED_TEMP_INCREASE + TEMP_BED_HYSTERESIS + 1);
                 							                                      ^
Warning[Pa093]: implicit conversion from floating point to integer

  	char  buf[50] = {0};
  	      ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp",32  Warning[Pe177]: 
          variable "buf" was declared but never referenced
   \   0000018A   0x.... 0x....      BL       __aeabi_i2f
   \   0000018E   0x4606             MOV      R6,R0
   \   00000190   0x1CE8             ADDS     R0,R5,#+3
   \   00000192   0x.... 0x....      BL       __aeabi_i2f
   \   00000196   0x4601             MOV      R1,R0
   \   00000198   0x4630             MOV      R0,R6
   \   0000019A   0x.... 0x....      BL       __aeabi_fsub
   \   0000019E   0x.... 0x....      BL       __aeabi_f2iz
   \   000001A2   0x8020             STRH     R0,[R4, #+0]
    150          							thermalManager.start_watching_bed();
   \   000001A4   0xE067             B.N      ??cbPreHeatWin_16
    151          						}
    152          						
    153          					}
    154          				
    155          
    156          					disp_desire_temp();
    157          
    158          				}
    159          				
    160          				else if(pMsg->hWinSrc == buttonDec.btnHandle)
   \                     ??cbPreHeatWin_11: (+1)
   \   000001A6   0xF9B4 0x2020      LDRSH    R2,[R4, #+32]
   \   000001AA   0x4290             CMP      R0,R2
   \   000001AC   0xD12D             BNE.N    ??cbPreHeatWin_17
    161          				{
    162          					/*if(gCfgItems.curTempType == 0)
    163          					{
    164          						push_cb_stack(UI_ACTION_EXTRUDER_TEMP_DOWN);
    165          					}
    166          					
    167          					else
    168          					{
    169          						if(CfgPrinterItems.cfg_have_heated_bed == 1)
    170          						{
    171          							push_cb_stack(UI_ACTION_HEATED_BED_DOWN);
    172          						}
    173          					}*/
    174          					{
    175          						if(gCfgItems.curTempType == 0)
   \   000001AE   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   000001B2   0xF104 0x01AC      ADD      R1,R4,#+172
   \   000001B6   0xF991 0x0002      LDRSB    R0,[R1, #+2]
   \   000001BA   0xB9C8             CBNZ.N   R0,??cbPreHeatWin_18
    176          						{
    177          								if((int)thermalManager.target_temperature[gCfgItems.curSprayerChoose] > gCfgItems.stepHeat)
   \   000001BC   0xF991 0x0003      LDRSB    R0,[R1, #+3]
   \   000001C0   0x.... 0x....      LDR.W    R5,??DataTable19_4
   \   000001C4   0xF994 0x20AC      LDRSB    R2,[R4, #+172]
   \   000001C8   0xF855 0x2022      LDR      R2,[R5, R2, LSL #+2]
   \   000001CC   0x4290             CMP      R0,R2
   \   000001CE   0xDA09             BGE.N    ??cbPreHeatWin_19
    178          								{
    179          									thermalManager.target_temperature[gCfgItems.curSprayerChoose] -= gCfgItems.stepHeat;
   \   000001D0   0xF994 0x00AC      LDRSB    R0,[R4, #+172]
   \   000001D4   0xF855 0x2020      LDR      R2,[R5, R0, LSL #+2]
   \   000001D8   0xF991 0x1003      LDRSB    R1,[R1, #+3]
   \   000001DC   0x1A51             SUBS     R1,R2,R1
   \   000001DE   0xF845 0x1020      STR      R1,[R5, R0, LSL #+2]
    180          									thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
   \   000001E2   0xE03F             B.N      ??cbPreHeatWin_15
    181          								}
    182          								else
    183          								{
    184          									thermalManager.target_temperature[gCfgItems.curSprayerChoose] = (float)0;
   \                     ??cbPreHeatWin_19: (+1)
   \   000001E4   0x2000             MOVS     R0,#+0
   \   000001E6   0xF994 0x10AC      LDRSB    R1,[R4, #+172]
   \   000001EA   0xF845 0x0021      STR      R0,[R5, R1, LSL #+2]
    185          									thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
   \   000001EE   0xE039             B.N      ??cbPreHeatWin_15
    186          								}
    187          						}
    188          						
    189          						else
    190          						{
    191          							if((int)thermalManager.target_temperature_bed > gCfgItems.stepHeat)
   \                     ??cbPreHeatWin_18: (+1)
   \   000001F0   0x.... 0x....      LDR.W    R4,??DataTable19_5
   \   000001F4   0xF9B4 0x2000      LDRSH    R2,[R4, #+0]
   \   000001F8   0xF991 0x0003      LDRSB    R0,[R1, #+3]
   \   000001FC   0x4290             CMP      R0,R2
   \   000001FE   0xDA36             BGE.N    ??cbPreHeatWin_20
    192          							{
    193          								thermalManager.target_temperature_bed -= gCfgItems.stepHeat;	
   \   00000200   0xF991 0x0003      LDRSB    R0,[R1, #+3]
   \   00000204   0x1A10             SUBS     R0,R2,R0
   \   00000206   0x8020             STRH     R0,[R4, #+0]
    194          								thermalManager.start_watching_bed();
   \   00000208   0xE035             B.N      ??cbPreHeatWin_16
    195          							}
    196          							else
    197          							{
    198          								thermalManager.target_temperature_bed = (float)0;
    199          								thermalManager.start_watching_bed();
    200          							}
    201          						}
    202          					}						
    203          					disp_desire_temp();
    204          					
    205          													
    206          				}
    207          				
    208          				else if(pMsg->hWinSrc == buttondegree.btnHandle)
   \                     ??cbPreHeatWin_17: (+1)
   \   0000020A   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   0000020E   0x4288             CMP      R0,R1
   \   00000210   0xD115             BNE.N    ??cbPreHeatWin_21
    209          				{
    210          					switch(gCfgItems.stepHeat)
   \   00000212   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   00000216   0xF104 0x01AC      ADD      R1,R4,#+172
   \   0000021A   0xF991 0x0003      LDRSB    R0,[R1, #+3]
   \   0000021E   0x2801             CMP      R0,#+1
   \   00000220   0xD004             BEQ.N    ??cbPreHeatWin_22
   \   00000222   0x2805             CMP      R0,#+5
   \   00000224   0xD004             BEQ.N    ??cbPreHeatWin_23
   \   00000226   0x280A             CMP      R0,#+10
   \   00000228   0xD004             BEQ.N    ??cbPreHeatWin_24
   \   0000022A   0xE005             B.N      ??cbPreHeatWin_25
    211          					{
    212          						case 1:
    213          							gCfgItems.stepHeat = 5;
   \                     ??cbPreHeatWin_22: (+1)
   \   0000022C   0x2005             MOVS     R0,#+5
   \   0000022E   0xE002             B.N      ??cbPreHeatWin_26
    214          							break;
    215          
    216          						case 5:
    217          							gCfgItems.stepHeat = 10;
   \                     ??cbPreHeatWin_23: (+1)
   \   00000230   0x200A             MOVS     R0,#+10
   \   00000232   0xE000             B.N      ??cbPreHeatWin_26
    218          							break;
    219          							
    220          						case 10:
    221          							gCfgItems.stepHeat = 1;
   \                     ??cbPreHeatWin_24: (+1)
   \   00000234   0x2001             MOVS     R0,#+1
   \                     ??cbPreHeatWin_26: (+1)
   \   00000236   0x70C8             STRB     R0,[R1, #+3]
    222          							break;
    223          
    224          						default:
    225          							break;
    226          					}
    227          					disp_step_heat();
   \                     ??cbPreHeatWin_25: (+1)
   \   00000238   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   0000023C   0x....             B.N      disp_step_heat
    228          				}
    229          				
    230          				else if(pMsg->hWinSrc == buttonOff.btnHandle)
   \                     ??cbPreHeatWin_21: (+1)
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable19_6
   \   00000242   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   00000246   0x4290             CMP      R0,R2
   \   00000248   0xD11A             BNE.N    ??cbPreHeatWin_27
    231          				{
    232          				/*
    233          					if(preheat_on==1)
    234          					{
    235          						preheat_on = 0;
    236          						if(gCfgItems.curTempType == 0)
    237          						{
    238          							thermalManager.target_temperature[gCfgItems.curSprayerChoose] = (float)180;
    239          							thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
    240          						}
    241          						else
    242          						{
    243          							thermalManager.target_temperature_bed = (float)50;
    244          							thermalManager.start_watching_bed();						
    245          						}						
    246          					}
    247          					else
    248          					*/
    249          					{
    250          						//preheat_on = 1;
    251          						if(gCfgItems.curTempType == 0)
   \   0000024A   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   0000024E   0xF104 0x00AC      ADD      R0,R4,#+172
   \   00000252   0xF990 0x0002      LDRSB    R0,[R0, #+2]
   \   00000256   0xB950             CBNZ.N   R0,??cbPreHeatWin_20
    252          						{
    253          							thermalManager.target_temperature[gCfgItems.curSprayerChoose] = (float)0;
   \   00000258   0xF994 0x10AC      LDRSB    R1,[R4, #+172]
   \   0000025C   0x.... 0x....      LDR.W    R2,??DataTable19_4
   \   00000260   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
    254          							thermalManager.start_watching_heater(gCfgItems.curSprayerChoose);
   \                     ??cbPreHeatWin_15: (+1)
   \   00000264   0xF894 0x00AC      LDRB     R0,[R4, #+172]
   \   00000268   0x.... 0x....      BL       _ZN11Temperature21start_watching_heaterEh
   \   0000026C   0xE005             B.N      ??cbPreHeatWin_14
    255          						}
    256          						else
    257          						{
    258          							thermalManager.target_temperature_bed = (float)0;
   \                     ??cbPreHeatWin_20: (+1)
   \   0000026E   0x2000             MOVS     R0,#+0
   \   00000270   0x.... 0x....      LDR.W    R1,??DataTable19_5
   \   00000274   0x8008             STRH     R0,[R1, #+0]
    259          							thermalManager.start_watching_bed();						
   \                     ??cbPreHeatWin_16: (+1)
   \   00000276   0x.... 0x....      BL       _ZN11Temperature18start_watching_bedEv
    260          						}
    261          					}
    262          					disp_desire_temp();
   \                     ??cbPreHeatWin_14: (+1)
   \   0000027A   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   0000027E   0x....             B.N      disp_desire_temp
    263          				}
    264          				
    265          				else  if(pMsg->hWinSrc == buttonRet.btnHandle)
   \                     ??cbPreHeatWin_27: (+1)
   \   00000280   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   00000284   0x4288             CMP      R0,R1
   \   00000286   0xD115             BNE.N    ??cbPreHeatWin_1
    266          				{	
    267          					//if((mksCfg.extruders == 2)
    268          					//	&&(mksReprint.mks_printer_state!=MKS_IDLE)
    269          					//	&&(mksReprint.mks_printer_state!=MKS_REPRINTED))
    270          					//{
    271          					//	if(gCfgItems.curSprayerChoose_bak == 1)
    272          					//	{
    273          							//enqueue_and_echo_command("T1");
    274          					//	}
    275          					//	else
    276          					//	{
    277          							//enqueue_and_echo_command("T0");
    278          					//	}
    279          					//}
    280          					Clear_preHeat();
   \   00000288   0x.... 0x....      LDR.W    R0,??DataTable19_1
   \   0000028C   0x6940             LDR      R0,[R0, #+20]
   \   0000028E   0x.... 0x....      BL       GUI_SetBkColor
   \   00000292   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000296   0x.... 0x....      BL       WM_IsWindow
   \   0000029A   0xB118             CBZ.N    R0,??cbPreHeatWin_28
   \   0000029C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000002A0   0x.... 0x....      BL       WM_DeleteWindow
    281          					draw_return_ui();
   \                     ??cbPreHeatWin_28: (+1)
   \   000002A4   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000002A8   0x.... 0x....      B.W      draw_return_ui
    282          					
    283          				}
    284          			}
    285          			break;
    286          			
    287          		default:
    288          			WM_DefaultProc(pMsg);
   \                     ??cbPreHeatWin_2: (+1)
   \   000002AC   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   000002B0   0x.... 0x....      B.W      WM_DefaultProc
    289          		}
    290          	}
   \                     ??cbPreHeatWin_1: (+1)
   \   000002B4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    291          
    292          

   \                                 In section .text, align 2, keep-with-next
    293          void draw_preHeat()
    294          {
   \                     draw_preHeat: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    295          	
    296          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  						thermalManager.target_temperature[gCfgItems.curSprayerChoose] += gCfgItems.stepHeat; 
  						^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp",122  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  								if((int)thermalManager.target_temperature[gCfgItems.curSprayerChoose] > gCfgItems.stepHeat)
  								^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp",177  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement

  									thermalManager.target_temperature[gCfgItems.curSprayerChoose] -= gCfgItems.stepHeat;
  									^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_pre_heat.cpp",179  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
    297          	
    298          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != PRE_HEAT_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A09             CMP      R2,#+9
   \   00000012   0xD005             BEQ.N    ??draw_preHeat_0
    299          	{
    300          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    301          		disp_state_stack._disp_state[disp_state_stack._disp_index] = PRE_HEAT_UI;
   \   0000001A   0x2209             MOVS     R2,#+9
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    302          	}
    303          	disp_state = PRE_HEAT_UI;
   \                     ??draw_preHeat_0: (+1)
   \   00000020   0x2009             MOVS     R0,#+9
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable19_8
    304          	
    305          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable19_1
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x6960             LDR      R0,[R4, #+20]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    306          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0xF104 0x0514      ADD      R5,R4,#+20
   \   00000036   0x6868             LDR      R0,[R5, #+4]
   \   00000038   0x.... 0x....      BL       GUI_SetColor
    307          	GUI_Clear();
   \   0000003C   0x.... 0x....      BL       GUI_Clear
    308          
    309          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);	
   \   00000040   0x.... 0x....      BL       creat_title_text
   \   00000044   0x2205             MOVS     R2,#+5
   \   00000046   0x2103             MOVS     R1,#+3
   \   00000048   0x.... 0x....      BL       GUI_DispStringAt
    310          	
    311          	
    312          	hPreHeatWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbPreHeatWin, 0);
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0xF44F 0x738E      MOV      R3,#+284
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable19_9
   \   00000058   0x.... 0x....      LDR.W    R6,??DataTable19_3
   \   0000005C   0x9001             STR      R0,[SP, #+4]
   \   0000005E   0xF44F 0x72F0      MOV      R2,#+480
   \   00000062   0x2002             MOVS     R0,#+2
   \   00000064   0x9000             STR      R0,[SP, #+0]
   \   00000066   0x2124             MOVS     R1,#+36
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       WM_CreateWindow
   \   0000006E   0x8030             STRH     R0,[R6, #+0]
    313          	buttonInc.btnHandle = BUTTON_CreateEx(INTERVAL_V, 0,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000070   0x.... 0x....      BL       alloc_win_id
   \   00000074   0x9003             STR      R0,[SP, #+12]
   \   00000076   0x238C             MOVS     R3,#+140
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x9002             STR      R0,[SP, #+8]
   \   0000007C   0x2275             MOVS     R2,#+117
   \   0000007E   0x2002             MOVS     R0,#+2
   \   00000080   0x9001             STR      R0,[SP, #+4]
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000088   0x9000             STR      R0,[SP, #+0]
   \   0000008A   0x2002             MOVS     R0,#+2
   \   0000008C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000090   0x8130             STRH     R0,[R6, #+8]
    314          	buttonDec.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  0,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000092   0x.... 0x....      BL       alloc_win_id
   \   00000096   0x9003             STR      R0,[SP, #+12]
   \   00000098   0xF240 0x1767      MOVW     R7,#+359
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x9002             STR      R0,[SP, #+8]
   \   000000A0   0x238C             MOVS     R3,#+140
   \   000000A2   0x2002             MOVS     R0,#+2
   \   000000A4   0x9001             STR      R0,[SP, #+4]
   \   000000A6   0x2275             MOVS     R2,#+117
   \   000000A8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000AC   0x9000             STR      R0,[SP, #+0]
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x4638             MOV      R0,R7
   \   000000B2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000B6   0x8430             STRH     R0,[R6, #+32]
    315          	
    316          	buttonTempType.btnHandle = BUTTON_CreateEx(INTERVAL_V,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000B8   0x.... 0x....      BL       alloc_win_id
   \   000000BC   0x9003             STR      R0,[SP, #+12]
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x9002             STR      R0,[SP, #+8]
   \   000000C2   0x2002             MOVS     R0,#+2
   \   000000C4   0x9001             STR      R0,[SP, #+4]
   \   000000C6   0x238C             MOVS     R3,#+140
   \   000000C8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R8,??DataTable19
   \   000000D0   0x9000             STR      R0,[SP, #+0]
   \   000000D2   0x2275             MOVS     R2,#+117
   \   000000D4   0x218E             MOVS     R1,#+142
   \   000000D6   0x2002             MOVS     R0,#+2
   \   000000D8   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000DC   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    317          	buttondegree.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000E0   0x.... 0x....      BL       alloc_win_id
   \   000000E4   0x9003             STR      R0,[SP, #+12]
   \   000000E6   0x238C             MOVS     R3,#+140
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x9002             STR      R0,[SP, #+8]
   \   000000EC   0x2275             MOVS     R2,#+117
   \   000000EE   0x2002             MOVS     R0,#+2
   \   000000F0   0x9001             STR      R0,[SP, #+4]
   \   000000F2   0x218E             MOVS     R1,#+142
   \   000000F4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000000F8   0x9000             STR      R0,[SP, #+0]
   \   000000FA   0x2079             MOVS     R0,#+121
   \   000000FC   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000100   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    318          	buttonOff.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000104   0x.... 0x....      BL       alloc_win_id
   \   00000108   0x9003             STR      R0,[SP, #+12]
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x9002             STR      R0,[SP, #+8]
   \   0000010E   0x2002             MOVS     R0,#+2
   \   00000110   0x9001             STR      R0,[SP, #+4]
   \   00000112   0x238C             MOVS     R3,#+140
   \   00000114   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000118   0x.... 0x....      LDR.W    R9,??DataTable19_6
   \   0000011C   0x9000             STR      R0,[SP, #+0]
   \   0000011E   0x2275             MOVS     R2,#+117
   \   00000120   0x218E             MOVS     R1,#+142
   \   00000122   0x20F0             MOVS     R0,#+240
   \   00000124   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000128   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    319          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,  BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hPreHeatWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000012C   0x.... 0x....      BL       alloc_win_id
   \   00000130   0x9003             STR      R0,[SP, #+12]
   \   00000132   0x238C             MOVS     R3,#+140
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x9002             STR      R0,[SP, #+8]
   \   00000138   0x2275             MOVS     R2,#+117
   \   0000013A   0x2002             MOVS     R0,#+2
   \   0000013C   0x9001             STR      R0,[SP, #+4]
   \   0000013E   0x218E             MOVS     R1,#+142
   \   00000140   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000144   0x9000             STR      R0,[SP, #+0]
   \   00000146   0x4638             MOV      R0,R7
   \   00000148   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000014C   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    320          
    321          	#if VERSION_WITH_PIC	
    322          	BUTTON_SetBmpFileName(buttonInc.btnHandle, "bmp_Add.bin",1);
   \   00000150   0x2201             MOVS     R2,#+1
   \   00000152   0xF9B6 0x0008      LDRSH    R0,[R6, #+8]
   \   00000156   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Add.bin">`
   \   0000015A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    323          	BUTTON_SetBmpFileName(buttonDec.btnHandle, "bmp_Dec.bin",1);
   \   0000015E   0xF9B6 0x0020      LDRSH    R0,[R6, #+32]
   \   00000162   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Dec.bin">`
   \   00000166   0x2201             MOVS     R2,#+1
   \   00000168   0x.... 0x....      BL       BUTTON_SetBmpFileName
    324          	
    325          	BUTTON_SetBmpFileName(buttonOff.btnHandle, "bmp_speed0.bin",1);
   \   0000016C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000170   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed0.bin">`
   \   00000174   0x2201             MOVS     R2,#+1
   \   00000176   0x.... 0x....      BL       BUTTON_SetBmpFileName
    326          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \   0000017A   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000017E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   00000182   0x2201             MOVS     R2,#+1
   \   00000184   0x.... 0x....      BL       BUTTON_SetBmpFileName
    327          
    328          	BUTTON_SetBitmapEx(buttonInc.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000188   0x.... 0x....      LDR.W    R11,??DataTable19_10
   \   0000018C   0x.... 0x....      LDR.W    R10,??DataTable19_11
   \   00000190   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000194   0x.... 0x....      LDR.W    R7,??DataTable19_12
   \   00000198   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000019C   0x9000             STR      R0,[SP, #+0]
   \   0000019E   0x463A             MOV      R2,R7
   \   000001A0   0xF9B6 0x0008      LDRSH    R0,[R6, #+8]
   \   000001A4   0x2100             MOVS     R1,#+0
   \   000001A6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    329          	BUTTON_SetBitmapEx(buttonDec.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001AA   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001AE   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001B2   0x9000             STR      R0,[SP, #+0]
   \   000001B4   0x463A             MOV      R2,R7
   \   000001B6   0xF9B6 0x0020      LDRSH    R0,[R6, #+32]
   \   000001BA   0x2100             MOVS     R1,#+0
   \   000001BC   0x.... 0x....      BL       BUTTON_SetBitmapEx
    330          	BUTTON_SetBitmapEx(buttondegree.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001C0   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001C4   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001C8   0x9000             STR      R0,[SP, #+0]
   \   000001CA   0x463A             MOV      R2,R7
   \   000001CC   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000001D0   0x2100             MOVS     R1,#+0
   \   000001D2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    331          	BUTTON_SetBitmapEx(buttonOff.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001D6   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001DA   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001DE   0x9000             STR      R0,[SP, #+0]
   \   000001E0   0x463A             MOV      R2,R7
   \   000001E2   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001E6   0x2100             MOVS     R1,#+0
   \   000001E8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    332          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000001EC   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000001F0   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000001F4   0x9000             STR      R0,[SP, #+0]
   \   000001F6   0x463A             MOV      R2,R7
   \   000001F8   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000001FC   0x2100             MOVS     R1,#+0
   \   000001FE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    333          
    334          	if(gCfgItems.multiple_language != 0)
   \   00000202   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000206   0xB1B8             CBZ.N    R0,??draw_preHeat_1
    335          	{
    336          		BUTTON_SetText(buttonInc.btnHandle, preheat_menu.add);
   \   00000208   0x.... 0x....      LDR.W    R7,??DataTable19_13
   \   0000020C   0xF9B6 0x0008      LDRSH    R0,[R6, #+8]
   \   00000210   0x68B9             LDR      R1,[R7, #+8]
   \   00000212   0x.... 0x....      BL       BUTTON_SetText
    337          		BUTTON_SetText(buttonDec.btnHandle, preheat_menu.dec);
   \   00000216   0x68F9             LDR      R1,[R7, #+12]
   \   00000218   0xF9B6 0x0020      LDRSH    R0,[R6, #+32]
   \   0000021C   0x.... 0x....      BL       BUTTON_SetText
    338          		BUTTON_SetText(buttonOff.btnHandle, preheat_menu.off);
   \   00000220   0x69F9             LDR      R1,[R7, #+28]
   \   00000222   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000226   0x.... 0x....      BL       BUTTON_SetText
    339          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable19_14
   \   0000022E   0x6801             LDR      R1,[R0, #+0]
   \   00000230   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   00000234   0x.... 0x....      BL       BUTTON_SetText
    340          	}
    341          
    342          	#endif
    343          	
    344          	textDesireTemp = TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,(BTN_Y_PIXEL-60)/2,BTN_X_PIXEL*2+INTERVAL_V,30, hPreHeatWnd, WM_CF_SHOW, TEXT_CF_HCENTER,	GUI_ID_TEXT1, "Extruder1");
   \                     ??draw_preHeat_1: (+1)
   \   00000238   0x.... 0x....      ADR.W    R0,`?<Constant "Extruder1">`
   \   0000023C   0x9004             STR      R0,[SP, #+16]
   \   0000023E   0xF240 0x1761      MOVW     R7,#+353
   \   00000242   0x2002             MOVS     R0,#+2
   \   00000244   0x9002             STR      R0,[SP, #+8]
   \   00000246   0x9001             STR      R0,[SP, #+4]
   \   00000248   0x9703             STR      R7,[SP, #+12]
   \   0000024A   0x231E             MOVS     R3,#+30
   \   0000024C   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000250   0x9000             STR      R0,[SP, #+0]
   \   00000252   0x22EC             MOVS     R2,#+236
   \   00000254   0x2128             MOVS     R1,#+40
   \   00000256   0x2079             MOVS     R0,#+121
   \   00000258   0x.... 0x....      BL       TEXT_CreateEx
   \   0000025C   0x8070             STRH     R0,[R6, #+2]
    345          	textDesireValue = TEXT_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,(BTN_Y_PIXEL-60)/2+30, BTN_X_PIXEL*2+INTERVAL_V,30, hPreHeatWnd, WM_CF_SHOW, TEXT_CF_HCENTER,	GUI_ID_TEXT1, "0/0");
   \   0000025E   0x9703             STR      R7,[SP, #+12]
   \   00000260   0x....             ADR.N    R0,??DataTable18  ;; "0/0"
   \   00000262   0x9004             STR      R0,[SP, #+16]
   \   00000264   0x231E             MOVS     R3,#+30
   \   00000266   0x2002             MOVS     R0,#+2
   \   00000268   0x9002             STR      R0,[SP, #+8]
   \   0000026A   0x9001             STR      R0,[SP, #+4]
   \   0000026C   0x22EC             MOVS     R2,#+236
   \   0000026E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000272   0x9000             STR      R0,[SP, #+0]
   \   00000274   0x2146             MOVS     R1,#+70
   \   00000276   0x2079             MOVS     R0,#+121
   \   00000278   0x.... 0x....      BL       TEXT_CreateEx
   \   0000027C   0x80B0             STRH     R0,[R6, #+4]
    346          
    347          	TEXT_SetBkColor(textDesireTemp,gCfgItems.background_color);
   \   0000027E   0x6961             LDR      R1,[R4, #+20]
   \   00000280   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000284   0x.... 0x....      BL       TEXT_SetBkColor
    348          	TEXT_SetBkColor(textDesireValue,gCfgItems.background_color); 
   \   00000288   0x6961             LDR      R1,[R4, #+20]
   \   0000028A   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   0000028E   0x.... 0x....      BL       TEXT_SetBkColor
    349          	TEXT_SetTextColor(textDesireTemp,gCfgItems.title_color);
   \   00000292   0x6869             LDR      R1,[R5, #+4]
   \   00000294   0xF9B6 0x0002      LDRSH    R0,[R6, #+2]
   \   00000298   0x.... 0x....      BL       TEXT_SetTextColor
    350          	TEXT_SetTextColor(textDesireValue,gCfgItems.title_color);
   \   0000029C   0x6869             LDR      R1,[R5, #+4]
   \   0000029E   0xF9B6 0x0004      LDRSH    R0,[R6, #+4]
   \   000002A2   0x.... 0x....      BL       TEXT_SetTextColor
    351          	if(gCfgItems.singleNozzle == 1)
   \   000002A6   0xF894 0x02B2      LDRB     R0,[R4, #+690]
   \   000002AA   0x2801             CMP      R0,#+1
   \   000002AC   0xBF0E             ITEE     EQ 
    352          		gCfgItems.curSprayerChoose = 0;
   \   000002AE   0x2000             MOVEQ    R0,#+0
    353          	else
    354          		gCfgItems.curSprayerChoose = active_extruder;
   \   000002B0   0x....             LDRNE.N  R0,??DataTable19_15
   \   000002B2   0xF990 0x0000      LDRSBNE  R0,[R0, #+0]
   \   000002B6   0xF884 0x00AC      STRB     R0,[R4, #+172]
    355          	disp_desire_temp();
   \   000002BA   0x.... 0x....      BL       disp_desire_temp
    356          	disp_temp_type();
   \   000002BE   0x.... 0x....      BL       disp_temp_type
    357          
    358          	disp_step_heat();
   \   000002C2   0xB005             ADD      SP,SP,#+20
   \   000002C4   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000002C8   0x....             B.N      disp_step_heat
    359          	
    360          	//GUI_Exec();
    361          
    362          
    363          	
    364          }
    365          

   \                                 In section .text, align 2, keep-with-next
    366          void Clear_preHeat()
    367          {
   \                     Clear_preHeat: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    368          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable19_1
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    369          	if(WM_IsWindow(hPreHeatWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable19_3
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_preHeat_0
    370          	{
    371          		WM_DeleteWindow(hPreHeatWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    372          		//GUI_Exec();
    373          	}
    374          	
    375          	//GUI_Clear();
    376          }
   \                     ??Clear_preHeat_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
    377          
    378          

   \                                 In section .text, align 2, keep-with-next
    379          void disp_step_heat()
    380          {
   \                     disp_step_heat: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    381          	BUTTON_SetBkColor(buttondegree.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R4,??DataTable19
   \   00000004   0x....             LDR.N    R5,??DataTable19_1
   \   00000006   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   0000000A   0x696A             LDR      R2,[R5, #+20]
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x.... 0x....      BL       BUTTON_SetBkColor
    382          	BUTTON_SetBkColor(buttondegree.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   00000012   0x696A             LDR      R2,[R5, #+20]
   \   00000014   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x.... 0x....      BL       BUTTON_SetBkColor
    383          	BUTTON_SetTextColor(buttondegree.btnHandle, BUTTON_CI_PRESSED, gCfgItems.title_color);
   \   0000001E   0xF105 0x0614      ADD      R6,R5,#+20
   \   00000022   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   00000026   0x6872             LDR      R2,[R6, #+4]
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x.... 0x....      BL       BUTTON_SetTextColor
    384          	BUTTON_SetTextColor(buttondegree.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.title_color);
   \   0000002E   0x6872             LDR      R2,[R6, #+4]
   \   00000030   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x.... 0x....      BL       BUTTON_SetTextColor
    385          
    386          	if(gCfgItems.stepHeat == 1)
   \   0000003A   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xD103             BNE.N    ??disp_step_heat_0
    387          		BUTTON_SetBmpFileName(buttondegree.btnHandle, "bmp_step1_degree.bin",1);
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step1_degree.bin">`
   \   00000048   0xE00E             B.N      ??disp_step_heat_1
    388          	else if(gCfgItems.stepHeat == 5)
   \                     ??disp_step_heat_0: (+1)
   \   0000004A   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   0000004E   0x2805             CMP      R0,#+5
   \   00000050   0xD103             BNE.N    ??disp_step_heat_2
    389          		BUTTON_SetBmpFileName(buttondegree.btnHandle, "bmp_step5_degree.bin",1);
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step5_degree.bin">`
   \   00000058   0xE006             B.N      ??disp_step_heat_1
    390          	else if(gCfgItems.stepHeat == 10)
   \                     ??disp_step_heat_2: (+1)
   \   0000005A   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   0000005E   0x280A             CMP      R0,#+10
   \   00000060   0xD106             BNE.N    ??disp_step_heat_3
    391          		BUTTON_SetBmpFileName(buttondegree.btnHandle, "bmp_step10_degree.bin",1);
   \   00000062   0x2201             MOVS     R2,#+1
   \   00000064   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_step10_degree.bin">`
   \                     ??disp_step_heat_1: (+1)
   \   00000068   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   0000006C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    392          
    393          	if(gCfgItems.multiple_language != 0)
   \                     ??disp_step_heat_3: (+1)
   \   00000070   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000074   0xB1C8             CBZ.N    R0,??disp_step_heat_4
    394          	{
    395          		if(gCfgItems.stepHeat == 1)
   \   00000076   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD102             BNE.N    ??disp_step_heat_5
    396          			BUTTON_SetText(buttondegree.btnHandle,preheat_menu.step_1c);	
   \   0000007E   0x....             LDR.N    R0,??DataTable19_13
   \   00000080   0x6A01             LDR      R1,[R0, #+32]
   \   00000082   0xE00C             B.N      ??disp_step_heat_6
    397          		else if(gCfgItems.stepHeat == 5)
   \                     ??disp_step_heat_5: (+1)
   \   00000084   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   00000088   0x2805             CMP      R0,#+5
   \   0000008A   0xD102             BNE.N    ??disp_step_heat_7
    398          			BUTTON_SetText(buttondegree.btnHandle,preheat_menu.step_5c);
   \   0000008C   0x....             LDR.N    R0,??DataTable19_13
   \   0000008E   0x6A41             LDR      R1,[R0, #+36]
   \   00000090   0xE005             B.N      ??disp_step_heat_6
    399          		else if(gCfgItems.stepHeat == 10)
   \                     ??disp_step_heat_7: (+1)
   \   00000092   0xF995 0x00AF      LDRSB    R0,[R5, #+175]
   \   00000096   0x280A             CMP      R0,#+10
   \   00000098   0xD107             BNE.N    ??disp_step_heat_4
    400          			BUTTON_SetText(buttondegree.btnHandle,preheat_menu.step_10c);	
   \   0000009A   0x....             LDR.N    R0,??DataTable19_13
   \   0000009C   0x6A81             LDR      R1,[R0, #+40]
   \                     ??disp_step_heat_6: (+1)
   \   0000009E   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   000000A2   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   000000A6   0x.... 0x....      B.W      BUTTON_SetText
    401          
    402          	}	
    403          }
   \                     ??disp_step_heat_4: (+1)
   \   000000AA   0xBD70             POP      {R4-R6,PC}       ;; return
    404          

   \                                 In section .text, align 2, keep-with-next
    405          void disp_desire_temp()
    406          {
   \                     disp_desire_temp: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    407          	char buf[20] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0xC00E             STM      R0!,{R1-R3}
   \   0000000E   0xC006             STM      R0!,{R1,R2}
    408          	char buf1[20] = {0};
   \   00000010   0xC00E             STM      R0!,{R1-R3}
   \   00000012   0xC006             STM      R0!,{R1,R2}
    409          	
    410          	TEXT_SetBkColor(textDesireTemp,gCfgItems.background_color);
   \   00000014   0x....             LDR.N    R4,??DataTable19_3
   \   00000016   0x....             LDR.N    R5,??DataTable19_1
   \   00000018   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001C   0x6969             LDR      R1,[R5, #+20]
   \   0000001E   0x.... 0x....      BL       TEXT_SetBkColor
    411          	TEXT_SetBkColor(textDesireValue,gCfgItems.background_color); 
   \   00000022   0x6969             LDR      R1,[R5, #+20]
   \   00000024   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000028   0x.... 0x....      BL       TEXT_SetBkColor
    412          	TEXT_SetTextColor(textDesireTemp,gCfgItems.title_color);
   \   0000002C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000030   0xF105 0x0614      ADD      R6,R5,#+20
   \   00000034   0x6871             LDR      R1,[R6, #+4]
   \   00000036   0x.... 0x....      BL       TEXT_SetTextColor
    413          	TEXT_SetTextColor(textDesireValue,gCfgItems.title_color);
   \   0000003A   0x6871             LDR      R1,[R6, #+4]
   \   0000003C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000040   0x.... 0x....      BL       TEXT_SetTextColor
    414          	
    415          
    416          	if(gCfgItems.curTempType == 0)
   \   00000044   0xF995 0x00AE      LDRSB    R0,[R5, #+174]
   \   00000048   0x....             LDR.N    R6,??DataTable19_13
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD132             BNE.N    ??disp_desire_temp_0
    417          	{
    418          		if(gCfgItems.singleNozzle == 0)
   \   0000004E   0xF895 0x02B2      LDRB     R0,[R5, #+690]
   \   00000052   0xB928             CBNZ.N   R0,??disp_desire_temp_1
    419          		{
    420          			if(gCfgItems.curSprayerChoose<1)
   \   00000054   0xF995 0x00AC      LDRSB    R0,[R5, #+172]
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xBFA8             IT       GE 
    421          			{
    422          				sprintf(buf1,preheat_menu.ext1);
    423          			}
    424          			else
    425          			{
    426          				sprintf(buf1,preheat_menu.ext2);
   \   0000005C   0x6971             LDRGE    R1,[R6, #+20]
   \   0000005E   0xDA00             BGE.N    ??disp_desire_temp_2
    427          			}
    428          		}
    429          		else
    430          		{	
    431          			sprintf(buf1,preheat_menu.ext1);
   \                     ??disp_desire_temp_1: (+1)
   \   00000060   0x6931             LDR      R1,[R6, #+16]
   \                     ??disp_desire_temp_2: (+1)
   \   00000062   0xA805             ADD      R0,SP,#+20
   \   00000064   0x.... 0x....      BL       sprintf
    432          		}
    433          		memset(buf,' ',(sizeof(buf)-1));
   \   00000068   0x2220             MOVS     R2,#+32
   \   0000006A   0x2113             MOVS     R1,#+19
   \   0000006C   0xA800             ADD      R0,SP,#+0
   \   0000006E   0x.... 0x....      BL       __aeabi_memset4
    434          		TEXT_SetText(textDesireValue, buf);
   \   00000072   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000076   0xA900             ADD      R1,SP,#+0
   \   00000078   0x.... 0x....      BL       TEXT_SetText
    435          		/*
    436          		if(last_disp_state == PRINT_READY_UI)//‘§»»ΩÁ√ÊŒ™ƒ¨»œ÷µ
    437          		{
    438          			sprintf(buf, preheat_menu.value_state,(int)gCfgItems.curSprayerTemp[gCfgItems.curSprayerChoose],  (int)gCfgItems.preheat_desireSprayerTemp[gCfgItems.curSprayerChoose]);
    439          
    440          		}
    441          		else
    442          		*/
    443          		{	
    444          			if(gCfgItems.singleNozzle == 0)	
   \   0000007C   0x6B36             LDR      R6,[R6, #+48]
   \   0000007E   0xF895 0x22B2      LDRB     R2,[R5, #+690]
   \   00000082   0x....             LDR.N    R0,??DataTable19_16
   \   00000084   0x....             LDR.N    R1,??DataTable19_4
   \   00000086   0xB96A             CBNZ.N   R2,??disp_desire_temp_3
    445          				sprintf(buf, preheat_menu.value_state, (int)thermalManager.current_temperature[gCfgItems.curSprayerChoose],  (int)thermalManager.target_temperature[gCfgItems.curSprayerChoose]);
                 				^
Warning[Pa082]: undefined behavior: the order of volatile accesses is
          undefined in this statement
   \   00000088   0xF995 0x20AC      LDRSB    R2,[R5, #+172]
   \   0000008C   0xF851 0x7022      LDR      R7,[R1, R2, LSL #+2]
   \   00000090   0xF995 0x10AC      LDRSB    R1,[R5, #+172]
   \   00000094   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000098   0x.... 0x....      BL       __aeabi_f2iz
   \   0000009C   0x4602             MOV      R2,R0
   \   0000009E   0x463B             MOV      R3,R7
   \   000000A0   0x4631             MOV      R1,R6
   \   000000A2   0xE01F             B.N      ??disp_desire_temp_4
    446          			else
    447          				sprintf(buf, preheat_menu.value_state, (int)thermalManager.current_temperature[0],  (int)thermalManager.target_temperature[0]);
   \                     ??disp_desire_temp_3: (+1)
   \   000000A4   0x680D             LDR      R5,[R1, #+0]
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x.... 0x....      BL       __aeabi_f2iz
   \   000000AC   0x4602             MOV      R2,R0
   \   000000AE   0x462B             MOV      R3,R5
   \   000000B0   0x4631             MOV      R1,R6
   \   000000B2   0xE017             B.N      ??disp_desire_temp_4
    448          		}
    449          	}
    450          	else
    451          	{
    452          		sprintf(buf1,preheat_menu.hotbed);
   \                     ??disp_desire_temp_0: (+1)
   \   000000B4   0x69B1             LDR      R1,[R6, #+24]
   \   000000B6   0xA805             ADD      R0,SP,#+20
   \   000000B8   0x.... 0x....      BL       sprintf
    453          		memset(buf,' ',sizeof(buf)-1);
   \   000000BC   0x2220             MOVS     R2,#+32
   \   000000BE   0x2113             MOVS     R1,#+19
   \   000000C0   0xA800             ADD      R0,SP,#+0
   \   000000C2   0x.... 0x....      BL       __aeabi_memset4
    454          		TEXT_SetText(textDesireValue, buf);
   \   000000C6   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000000CA   0xA900             ADD      R1,SP,#+0
   \   000000CC   0x.... 0x....      BL       TEXT_SetText
    455          		/*
    456          		if(last_disp_state == PRINT_READY_UI)
    457          		{			
    458          			sprintf(buf, preheat_menu.value_state, (int)gCfgItems.curBedTemp,  (int)gCfgItems.preheat_desireBedTemp);
    459          		}
    460          		else
    461          		*/
    462          		{
    463          			sprintf(buf, preheat_menu.value_state, (int)thermalManager.current_temperature_bed,  (int)thermalManager.target_temperature_bed);
   \   000000D0   0x....             LDR.N    R0,??DataTable19_5
   \   000000D2   0xF9B0 0x5000      LDRSH    R5,[R0, #+0]
   \   000000D6   0x....             LDR.N    R0,??DataTable19_17
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x.... 0x....      BL       __aeabi_f2iz
   \   000000DE   0x6B31             LDR      R1,[R6, #+48]
   \   000000E0   0x4602             MOV      R2,R0
   \   000000E2   0x462B             MOV      R3,R5
   \                     ??disp_desire_temp_4: (+1)
   \   000000E4   0xA800             ADD      R0,SP,#+0
   \   000000E6   0x.... 0x....      BL       sprintf
    464          		}
    465          	}
    466          	TEXT_SetText(textDesireTemp, buf1);
   \   000000EA   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000EE   0xA905             ADD      R1,SP,#+20
   \   000000F0   0x.... 0x....      BL       TEXT_SetText
    467          	TEXT_SetText(textDesireValue, buf);
   \   000000F4   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000000F8   0xA900             ADD      R1,SP,#+0
   \   000000FA   0x.... 0x....      BL       TEXT_SetText
    468          }
   \   000000FE   0xB00B             ADD      SP,SP,#+44
   \   00000100   0xBDF0             POP      {R4-R7,PC}       ;; return
    469          

   \                                 In section .text, align 2, keep-with-next
    470          void disp_temp_type()
    471          {
   \                     disp_temp_type: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    472          	BUTTON_SetBkColor(buttonTempType.btnHandle, BUTTON_CI_PRESSED, gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R4,??DataTable19
   \   00000004   0x....             LDR.N    R5,??DataTable19_1
   \   00000006   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000000A   0x696A             LDR      R2,[R5, #+20]
   \   0000000C   0xB082             SUB      SP,SP,#+8
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x.... 0x....      BL       BUTTON_SetBkColor
    473          	BUTTON_SetBkColor(buttonTempType.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x696A             LDR      R2,[R5, #+20]
   \   00000018   0x5E60             LDRSH    R0,[R4, R1]
   \   0000001A   0x.... 0x....      BL       BUTTON_SetBkColor
    474          	BUTTON_SetTextColor(buttonTempType.btnHandle, BUTTON_CI_PRESSED, gCfgItems.title_color);
   \   0000001E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000022   0xF105 0x0614      ADD      R6,R5,#+20
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x6872             LDR      R2,[R6, #+4]
   \   0000002A   0x.... 0x....      BL       BUTTON_SetTextColor
    475          	BUTTON_SetTextColor(buttonTempType.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.title_color);
   \   0000002E   0x6872             LDR      R2,[R6, #+4]
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x5E60             LDRSH    R0,[R4, R1]
   \   00000034   0x.... 0x....      BL       BUTTON_SetTextColor
    476          
    477          	if(gCfgItems.curTempType == 0)
   \   00000038   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000003C   0xF995 0x10AE      LDRSB    R1,[R5, #+174]
   \   00000040   0xBB29             CBNZ.N   R1,??disp_temp_type_0
    478          	{	
    479          		if(gCfgItems.singleNozzle == 0)
   \   00000042   0xF895 0x12B2      LDRB     R1,[R5, #+690]
   \   00000046   0xB9B9             CBNZ.N   R1,??disp_temp_type_1
    480          		{
    481          			if(gCfgItems.curSprayerChoose == 1)
   \   00000048   0xF995 0x10AC      LDRSB    R1,[R5, #+172]
   \   0000004C   0x2901             CMP      R1,#+1
   \   0000004E   0xD10A             BNE.N    ??disp_temp_type_2
    482          			{			
    483          				BUTTON_SetBmpFileName(buttonTempType.btnHandle, "bmp_extru2.bin",1);
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extru2.bin">`
   \   00000056   0x.... 0x....      BL       BUTTON_SetBmpFileName
    484          				if(gCfgItems.multiple_language != 0)
   \   0000005A   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   0000005E   0xB320             CBZ.N    R0,??disp_temp_type_3
    485          					BUTTON_SetText(buttonTempType.btnHandle, preheat_menu.ext2);		
   \   00000060   0x....             LDR.N    R0,??DataTable19_13
   \   00000062   0x6941             LDR      R1,[R0, #+20]
   \   00000064   0xE01D             B.N      ??disp_temp_type_4
    486          			}
    487          			else
    488          			{
    489          				BUTTON_SetBmpFileName(buttonTempType.btnHandle, "bmp_extru1.bin",1);
   \                     ??disp_temp_type_2: (+1)
   \   00000066   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extru1.bin">`
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    490          				if(gCfgItems.multiple_language != 0)
   \   00000070   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000074   0xB940             CBNZ.N   R0,??disp_temp_type_5
   \   00000076   0xE018             B.N      ??disp_temp_type_3
    491          					BUTTON_SetText(buttonTempType.btnHandle, preheat_menu.ext1);
    492          			}	
    493          		}
    494          		else
    495          		{
    496          			BUTTON_SetBmpFileName(buttonTempType.btnHandle, "bmp_extru1.bin",1);
   \                     ??disp_temp_type_1: (+1)
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extru1.bin">`
   \   0000007E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    497          			if(gCfgItems.multiple_language != 0)
   \   00000082   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   00000086   0xB180             CBZ.N    R0,??disp_temp_type_3
    498          				BUTTON_SetText(buttonTempType.btnHandle, preheat_menu.ext1);
   \                     ??disp_temp_type_5: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable19_13
   \   0000008A   0x6901             LDR      R1,[R0, #+16]
   \   0000008C   0xE009             B.N      ??disp_temp_type_4
    499          		}
    500          	}
    501          	else
    502          	{	
    503          		BUTTON_SetBmpFileName(buttonTempType.btnHandle, "bmp_bed.bin",1);
   \                     ??disp_temp_type_0: (+1)
   \   0000008E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_bed.bin">`
   \   00000092   0x2201             MOVS     R2,#+1
   \   00000094   0x.... 0x....      BL       BUTTON_SetBmpFileName
    504          		if(gCfgItems.multiple_language != 0)
   \   00000098   0xF895 0x01CF      LDRB     R0,[R5, #+463]
   \   0000009C   0xB128             CBZ.N    R0,??disp_temp_type_3
    505          			BUTTON_SetText(buttonTempType.btnHandle, preheat_menu.hotbed);
   \   0000009E   0x....             LDR.N    R0,??DataTable19_13
   \   000000A0   0x6981             LDR      R1,[R0, #+24]
   \                     ??disp_temp_type_4: (+1)
   \   000000A2   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000A6   0x.... 0x....      BL       BUTTON_SetText
    506          	}
    507          	BUTTON_SetBitmapEx(buttonTempType.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??disp_temp_type_3: (+1)
   \   000000AA   0x....             LDR.N    R0,??DataTable19_10
   \   000000AC   0x....             LDR.N    R2,??DataTable19_12
   \   000000AE   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000B2   0x9000             STR      R0,[SP, #+0]
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x....             LDR.N    R0,??DataTable19_11
   \   000000B8   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   000000BC   0x5E60             LDRSH    R0,[R4, R1]
   \   000000BE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    508          
    509          }
   \   000000C2   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x30 0x2F          DC8      "0/0"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x........         DC32     buttonTempType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \   00000000   0x........         DC32     hPreHeatWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \   00000000   0x........         DC32     _ZN11Temperature22target_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \   00000000   0x........         DC32     buttonOff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_8:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_9:
   \   00000000   0x........         DC32     _Z12cbPreHeatWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_10:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_11:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_12:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_13:
   \   00000000   0x........         DC32     preheat_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_14:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_15:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_16:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_17:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Add.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Add.bin"
   \              0x70 0x5F    
   \              0x41 0x64    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Dec.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Dec.bin"
   \              0x70 0x5F    
   \              0x44 0x65    
   \              0x63 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed0.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed0.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x30    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Extruder1">`:
   \   00000000   0x45 0x78          DC8 "Extruder1"
   \              0x74 0x72    
   \              0x75 0x64    
   \              0x65 0x72    
   \              0x31 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step1_degree.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step1_degree.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x5F    
   \              0x64 0x65    
   \              0x67 0x72    
   \              0x65 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step5_degree.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step5_degree.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x35 0x5F    
   \              0x64 0x65    
   \              0x67 0x72    
   \              0x65 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_step10_degree.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_step10_degree.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x31 0x30    
   \              0x5F 0x64    
   \              0x65 0x67    
   \              0x72 0x65    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extru2.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extru2.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x32    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extru1.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extru1.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x31    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_bed.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_bed.bin"
   \              0x70 0x5F    
   \              0x62 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "0/0">`:
   \   00000000   0x30 0x2F          DC8 "0/0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    510          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_preHeat
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbPreHeatWin(WM_MESSAGE *)
        24   -> GUI_SetBkColor
        24   -> Temperature::start_watching_bed()
        24   -> Temperature::start_watching_heater(uint8_t)
         0   -> WM_DefaultProc
        24   -> WM_DeleteWindow
        24   -> WM_IsWindow
        24   -> __aeabi_f2iz
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
         0   -> disp_desire_temp
        24   -> disp_desire_temp
         0   -> disp_step_heat
         0   -> disp_temp_type
         0   -> draw_return_ui
      64   disp_desire_temp
        64   -> TEXT_SetBkColor
        64   -> TEXT_SetText
        64   -> TEXT_SetTextColor
        64   -> __aeabi_f2iz
        64   -> __aeabi_memset4
        64   -> sprintf
      16   disp_step_heat
        16   -> BUTTON_SetBkColor
        16   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        16   -> BUTTON_SetTextColor
      24   disp_temp_type
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBkColor
        24   -> BUTTON_SetBmpFileName
        24   -> BUTTON_SetText
        24   -> BUTTON_SetTextColor
      56   draw_preHeat
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetText
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> TEXT_CreateEx
        56   -> TEXT_SetBkColor
        56   -> TEXT_SetTextColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id
        56   -> creat_title_text
        56   -> disp_desire_temp
         0   -> disp_step_heat
        56   -> disp_temp_type


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "0/0">
      12  ?<Constant "Extruder1">
      12  ?<Constant "bmp_Add.bin">
      12  ?<Constant "bmp_Dec.bin">
      12  ?<Constant "bmp_bed.bin">
      16  ?<Constant "bmp_extru1.bin">
      16  ?<Constant "bmp_extru2.bin">
      16  ?<Constant "bmp_return.bin">
      16  ?<Constant "bmp_speed0.bin">
      24  ?<Constant "bmp_step10_degree.bin">
      24  ?<Constant "bmp_step1_degree.bin">
      24  ?<Constant "bmp_step5_degree.bin">
      20  ?<Constant {'\000'}>
      20  ?<Constant {'\000'}>_1
       4  ??DataTable18
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_10
       4  ??DataTable19_11
       4  ??DataTable19_12
       4  ??DataTable19_13
       4  ??DataTable19_14
       4  ??DataTable19_15
       4  ??DataTable19_16
       4  ??DataTable19_17
       4  ??DataTable19_2
       4  ??DataTable19_3
       4  ??DataTable19_4
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable19_8
       4  ??DataTable19_9
      36  Clear_preHeat
      48  buttonOff
          buttonRet
      48  buttonTempType
          buttondegree
     694  cbPreHeatWin(WM_MESSAGE *)
     258  disp_desire_temp
     172  disp_step_heat
     196  disp_temp_type
     714  draw_preHeat
      56  hPreHeatWnd
          textDesireTemp
          textDesireValue
          buttonInc
          buttonDec
       1  -- Other

 
   152 bytes in section .bss
    45 bytes in section .rodata
 2 330 bytes in section .text
 
 2 330 bytes of CODE  memory
    44 bytes of CONST memory (+ 1 byte shared)
   152 bytes of DATA  memory

Errors: none
Warnings: 41
