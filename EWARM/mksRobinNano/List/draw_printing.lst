###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:32
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_printing.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_printing.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_printing.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "draw_operate.h"
     10          #include "pic_manager.h"
     11          
     12          #include "draw_ready_print.h"
     13          //#include "others.h"
     14          //#include "mks_tft_com.h"
     15          
     16          #include "draw_print_file.h"
     17          #include "CHECKBOX.h"
     18          #include "pic.h"
     19          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     20          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     21          #include "stm32f10x_gpio.h"

  #define IS_GPIO_SPEED(SPEED) (((SPEED) == GPIO_Speed_10MHz) || ((SPEED) == GPIO_Speed_2MHz) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",64  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_SPEED" (declared at line
          201 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")

  #define IS_GPIO_MODE(MODE) (((MODE) == GPIO_Mode_AIN) || ((MODE) == GPIO_Mode_IN_FLOATING) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",82  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_MODE" (declared at line
          204 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")

  #define IS_GPIO_PIN(PIN) ((((PIN) & (uint16_t)0x00) == 0x00) && ((PIN) != (uint16_t)0x00))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_gpio.h",145  Warning[Pe047]: 
          incompatible redefinition of macro "IS_GPIO_PIN" (declared at line
          196 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_gpio.h")
     22          
     23          
     24          
     25          #ifndef GUI_FLASH
     26          #define GUI_FLASH
     27          #endif
     28          extern GUI_CONST_STORAGE GUI_FONT GUI_FontD36x48;
     29          
     30          extern FIL *srcfp;
     31          
     32          extern volatile uint8_t temper_error_flg;
     33          

   \                                 In section .bss, align 4
     34          int8_t curFilePath[30];
   \                     curFilePath:
   \   00000000                      DS8 32
     35          
     36          PRINT_TIME  print_time;
     37          
     38          int once_flag = 0;
     39          
     40          //////////FIL *srcfp;
     41          
     42          static GUI_HWIN hPrintingWnd, hRetDlgWnd;
     43          static PROGBAR_Handle printingBar;
     44          static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
     45          static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
     46          static TEXT_Handle printRetDlgText;
     47          
     48          static BUTTON_STRUCT buttonPause,buttonStop,buttonOperat,buttonExt1, buttonExt2, buttonFanstate, buttonBedstate,buttonPrintSpeed,buttonTime,buttonZpos,buttonAutoclose;
     49          static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
     50          static CHECKBOX_Handle auto_close;
     51          ///////static FIL curFile;
     52          
     53          static FIL curFile;
     54          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     55          extern GUI_BITMAP bmp_struct;
     56          
     57          extern volatile int16_t logo_time;
     58          //extern PR_STATUS printerStaus;
     59          extern FILE_PRINT_STATE gCurFileState;
     60          extern int X_ADD;
     61          extern int X_INTERVAL;   //**Õº∆¨º‰∏Ù
     62          
     63          uint8_t print_start_flg = 0;
     64          
     65          uint8_t pause_resum=0;
     66          
     67          
     68          extern uint8_t gcode_preview_over;
     69          
     70          extern uint8_t from_flash_pic;
     71          extern volatile uint8_t pause_from_high_level;
     72          extern volatile uint8_t pause_from_low_level;
     73          extern uint8_t button_disp_pause_state;
     74          
     75          #if 0
     76          static print_delay(int nCount)
     77          {
     78          	int i, j;
     79          	for(i = nCount; i > 0; i--)
     80          		for(j = 0; j < 120; j++);
     81          }
     82          
     83          
     84          static void cbRetDlgWin(WM_MESSAGE * pMsg)
     85          {
     86          	int8_t sel_item;
     87          	int8_t i;
     88          	//int8_t sel_file[30];
     89          
     90          	//struct PressEvt *press_event;
     91          	switch (pMsg->MsgId) {
     92          	case WM_PAINT:
     93          		GUI_SetBkColor(gCfgItems.background_color);
     94          		GUI_Clear();
     95          		break;
     96          
     97          	case WM_TOUCH:		
     98          		break;
     99          		
    100          	case WM_TOUCH_CHILD:
    101          	 	break;
    102          
    103          	case WM_NOTIFY_PARENT:
    104          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
    105          		{
    106          			if(pMsg->hWinSrc == buttonOk.btnHandle)
    107          			{			
    108          				//hAlertWin = GUI_CreateDialogBox(aDialogAlert, GUI_COUNTOF(aDialogAlert), _cbAlert, 0, 0, 0);
    109          				last_disp_state = PRINTING_UI;
    110          				BUTTON_Delete(buttonOk.btnHandle);
    111          				BUTTON_Delete(buttonCancle.btnHandle);
    112          				if(WM_IsWindow(hRetDlgWnd))
    113          				{
    114          					WM_DeleteWindow(hRetDlgWnd);
    115          				}
    116          				Clear_printing();
    117          				
    118          				draw_ready_print();
    119          				
    120          			}
    121          			else if(pMsg->hWinSrc == buttonCancle.btnHandle)
    122          			{			
    123          				if(WM_IsWindow(hRetDlgWnd))
    124          				{
    125          					BUTTON_Delete(buttonOk.btnHandle);
    126          					BUTTON_Delete(buttonCancle.btnHandle);
    127          					WM_DeleteWindow(hRetDlgWnd);
    128          					//WM_EnableWindow(hPrintFileWnd);
    129          					//GUI_Exec();
    130          				}
    131          				
    132          			}
    133          		}
    134          	}
    135          }
    136          #endif

   \                                 In section .text, align 2, keep-with-next
    137          static void cbPrintingWin(WM_MESSAGE * pMsg) {
    138          
    139          struct PressEvt *press_event;
    140          switch (pMsg->MsgId)
   \                     _Z13cbPrintingWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbPrintingWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbPrintingWin_0: (+1)
   \   00000008   0xB5F8             PUSH     {R3-R7,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x290F             CMPNE    R1,#+15
   \   00000010   0xF000 0x81DA      BEQ.W    ??cbPrintingWin_1
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xF040 0x81D3      BNE.W    ??cbPrintingWin_2
    141          {
    142          	case WM_PAINT:
    143          		/*
    144          		GUI_SetColor(gCfgItems.state_background_color);
    145          		GUI_FillRect(1, 1, LCD_WIDTH *3 / 4 - 3, imgHeight /2 - 3);
    146          		GUI_FillRect(1, imgHeight/2 , LCD_WIDTH , imgHeight );
    147          		GUI_SetColor(gCfgItems.state_text_color);
    148          		GUI_DrawRect(0, 1, LCD_WIDTH *3 / 4 - 2, imgHeight /2 - 3);
    149          		GUI_DrawRect(0, imgHeight/2 + 1, LCD_WIDTH  -4, imgHeight - 2);
    150          	*/
    151          	#if 0
    152          		GUI_SetColor(gCfgItems.state_background_color);
    153          		GUI_DrawRect(75, 0, LCD_WIDTH *3 / 4 -16, imgHeight /2 - X_INTERVAL);
    154          		GUI_SetColor(gCfgItems.state_background_color);
    155          		GUI_FillRect(75, 0, LCD_WIDTH *3 / 4 -16, imgHeight /2 - X_INTERVAL);
    156          	#endif			
    157          		//GUI_SetBkColor(GUI_BLUE);
    158          		//GUI_Clear();
    159          		
    160          		//GUI_DispString("window");
    161          		break;
    162          	case WM_TOUCH:
    163          	 	press_event = (struct PressEvt *)pMsg->Data.p;
    164          		
    165          		break;
    166          	case WM_TOUCH_CHILD:
    167          		press_event = (struct PressEvt *)pMsg->Data.p;
    168          
    169          		break;
    170          		
    171          	case WM_NOTIFY_PARENT:
    172          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001A   0x6881             LDR      R1,[R0, #+8]
   \   0000001C   0x2902             CMP      R1,#+2
   \   0000001E   0xF040 0x81D3      BNE.W    ??cbPrintingWin_1
    173          		{
    174          			if(pMsg->hWinSrc == buttonOperat.btnHandle)
   \   00000022   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   00000026   0x.... 0x....      LDR.W    R4,??DataTable29
   \   0000002A   0xF9B4 0x002C      LDRSH    R0,[R4, #+44]
   \   0000002E   0x4281             CMP      R1,R0
   \   00000030   0xD139             BNE.N    ??cbPrintingWin_3
    175          			{
    176          				if(gcode_preview_over != 1)
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable30
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x2801             CMP      R0,#+1
   \   0000003A   0xF000 0x81C5      BEQ.W    ??cbPrintingWin_1
    177          				{
    178          					last_disp_state = PRINTING_UI;
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable30_1
   \   00000042   0x2003             MOVS     R0,#+3
   \   00000044   0x7008             STRB     R0,[R1, #+0]
    179          					Clear_printing();
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000004A   0x6940             LDR      R0,[R0, #+20]
   \   0000004C   0x.... 0x....      BL       GUI_SetBkColor
   \   00000050   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   00000054   0x.... 0x....      BL       WM_IsWindow
   \   00000058   0xB118             CBZ.N    R0,??cbPrintingWin_4
   \   0000005A   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   0000005E   0x.... 0x....      BL       WM_DeleteWindow
    180          					if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (gCurFileState.totalSend == 100) )
   \                     ??cbPrintingWin_4: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable30_2
   \   00000066   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000006A   0x28A6             CMP      R0,#+166
   \   0000006C   0xBF01             ITTTT    EQ 
   \   0000006E   0x.... 0x....      LDREQ.W  R5,??DataTable30_3
   \   00000072   0xF505 0x740B      ADDEQ    R4,R5,#+556
   \   00000076   0x68E0             LDREQ    R0,[R4, #+12]
   \   00000078   0x2864             CMPEQ    R0,#+100
   \   0000007A   0xBF1C             ITT      NE 
    181          					{
    182          						f_close(srcfp);
    183          
    184          						reset_file_info();
    185          						//**reset_tx_fifo();
    186          						//Get_Temperature_Flg = 0;
    187          						draw_ready_print();
    188          					}
    189          					else
    190          					{
    191          						draw_operate();
   \   0000007C   0xE8BD 0x40F1      POPNE    {R0,R4-R7,LR}
   \   00000080   0x.... 0x....      BNE.W    draw_operate
    192          					}
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable30_4
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      BL       f_close
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0xF8C5 0x022C      STR      R0,[R5, #+556]
   \   00000094   0x60A0             STR      R0,[R4, #+8]
   \   00000096   0x60E0             STR      R0,[R4, #+12]
   \   00000098   0x80A0             STRH     R0,[R4, #+4]
   \   0000009A   0x8220             STRH     R0,[R4, #+16]
   \   0000009C   0x74A0             STRB     R0,[R4, #+18]
   \   0000009E   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000A2   0x.... 0x....      B.W      draw_ready_print
    193          				}
    194          			}
    195          			/*else if(pMsg->hWinSrc == btnRetMainPage) 
    196          			{
    197          				 f_close(srcfp);
    198          
    199          				reset_file_info();
    200          				reset_tx_fifo();
    201          				
    202          				Clear_printing();
    203          				draw_ready_print();
    204          			}*/
    205          			#if defined(TFT35)
    206          			else if(pMsg->hWinSrc == buttonPause.btnHandle)
   \                     ??cbPrintingWin_3: (+1)
   \   000000A6   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   000000AA   0x4281             CMP      R1,R0
   \   000000AC   0xF040 0x8160      BNE.W    ??cbPrintingWin_5
    207          			{
    208          				if(gcode_preview_over != 1)
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable30
   \   000000B4   0x7809             LDRB     R1,[R1, #+0]
   \   000000B6   0x2901             CMP      R1,#+1
   \   000000B8   0xF000 0x8186      BEQ.W    ??cbPrintingWin_1
    209          				{
    210          					if(mksReprint.mks_printer_state == MKS_WORKING)
   \   000000BC   0x.... 0x....      LDR.W    R5,??DataTable30_2
   \   000000C0   0xF895 0x10AC      LDRB     R1,[R5, #+172]
   \   000000C4   0x29A7             CMP      R1,#+167
   \   000000C6   0xD13C             BNE.N    ??cbPrintingWin_6
    211          					{
    212          					#if 0
    213          						if(disp_state_stack._disp_state[disp_state_stack._disp_index] != PAUSE_UI)
    214          						{
    215          							disp_state_stack._disp_index++;
    216          							disp_state_stack._disp_state[disp_state_stack._disp_index] = PAUSE_UI;
    217          						}
    218          						disp_state = PAUSE_UI;					
    219          
    220          						GUI_UC_SetEncodeNone();
    221          						GUI_SetFont(&GUI_FontHZ16);
    222          						GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    223          						GUI_SetFont(&FONT_TITLE);
    224          						GUI_UC_SetEncodeUTF8();
    225          					#endif
    226          						stop_print_time();
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x71E0             STRB     R0,[R4, #+7]
    227          						if(mksCfg.extruders==2)
   \   000000CC   0x.... 0x....      LDR.W    R6,??DataTable32
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable30_5
   \   000000D4   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000000D8   0x2802             CMP      R0,#+2
   \   000000DA   0xD10C             BNE.N    ??cbPrintingWin_7
    228          						{
    229          							gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable30_6
   \   000000E0   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000E4   0xF886 0x00AD      STRB     R0,[R6, #+173]
    230          							gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 							                        ^
Warning[Pa093]: implicit conversion from floating point to integer

  struct PressEvt *press_event;
                   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",139  Warning[Pe550]: 
          variable "press_event" was set but never used
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable30_7
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F2   0xF8A6 0x00C2      STRH     R0,[R6, #+194]
    231          						}
    232          						//MX_I2C1_Init();
    233          						//mksReprint.mks_printer_state = MKS_PAUSED;	
    234                						card.pauseSDPrint();
   \                     ??cbPrintingWin_7: (+1)
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable30_8
   \   000000FA   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
    235                						print_job_timer.pause();
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable30_9
   \   00000102   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
    236          						mksReprint.mks_printer_state = MKS_PAUSING;
    237           
    238          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
   \   00000106   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_resume.bin">`
   \   0000010A   0x20A9             MOVS     R0,#+169
   \   0000010C   0xF885 0x00AC      STRB     R0,[R5, #+172]
   \   00000110   0x2201             MOVS     R2,#+1
   \   00000112   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000116   0x.... 0x....      BL       BUTTON_SetBmpFileName
    239          						#if defined(TFT70)
    240          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);
    241          						#elif defined(TFT35)
    242          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   0000011A   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x9000             STR      R0,[SP, #+0]
   \   00000122   0x4601             MOV      R1,R0
   \   00000124   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000128   0x2300             MOVS     R3,#+0
   \   0000012A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    243          						if(gCfgItems.multiple_language != 0)
   \   0000012E   0xF206 0x10CD      ADDW     R0,R6,#+461
   \   00000132   0x7880             LDRB     R0,[R0, #+2]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xF000 0x8147      BEQ.W    ??cbPrintingWin_1
    244          						{
    245          								BUTTON_SetText(buttonPause.btnHandle, printing_menu.resume);	
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable30_11
   \   0000013E   0x69C1             LDR      R1,[R0, #+28]
   \   00000140   0xE110             B.N      ??cbPrintingWin_8
    246          						}						
    247          						#endif
    248          					}
    249          					else if(mksReprint.mks_printer_state == MKS_PAUSED)
   \                     ??cbPrintingWin_6: (+1)
   \   00000142   0x29AA             CMP      R1,#+170
   \   00000144   0xF040 0x80F1      BNE.W    ??cbPrintingWin_9
    250          					{
    251          						#if 0
    252          						disp_state_stack._disp_index = 0;
    253          						memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
    254          						disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
    255          
    256          						disp_state = PRINTING_UI;	
    257          
    258          						GUI_UC_SetEncodeNone();
    259          						GUI_SetFont(&GUI_FontHZ16);
    260          						GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    261          						GUI_SetFont(&FONT_TITLE);
    262          						GUI_UC_SetEncodeUTF8();
    263          						#endif
    264          				   
    265          						 //∂œ¡œºÏ≤‚Œ™∏ﬂµÁ∆Ω¥•∑¢ ±£¨÷ª”–‘⁄◊∞…œ¡œ£¨
    266          						 //ºÏ≤‚π‹Ω≈Œ™µÕµÁ∆Ω ±£¨∞¥ª÷∏¥∞¥≈•≤≈”––ß°£
    267          		                        	 if(mksCfg.extruders==2)
   \   00000148   0x.... 0x....      LDR.W    R2,??DataTable30_5
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable30_12
   \   00000150   0xF892 0x20F7      LDRB     R2,[R2, #+247]
   \   00000154   0x2A02             CMP      R2,#+2
   \   00000156   0xF040 0x80A2      BNE.W    ??cbPrintingWin_10
    268          			                        {
    269          			                           //if((gCfgItems.filament_det0_level_flg == 1)||(gCfgItems.filament_det1_level_flg == 1))
    270          			                           //{
    271          			                              if(pause_from_high_level==1)
   \   0000015A   0x780A             LDRB     R2,[R1, #+0]
   \   0000015C   0x.... 0x....      LDR.W    R6,??DataTable32
   \   00000160   0x2A01             CMP      R2,#+1
   \   00000162   0xD140             BNE.N    ??cbPrintingWin_11
    272          			                              {
    273          			                                if(((MKS_MT_DET1_OP == Bit_SET)&&(gCfgItems.filament_det0_level_flg == 1))
    274          			                                    ||((MKS_MT_DET2_OP == Bit_SET)&&(gCfgItems.filament_det1_level_flg == 1)))
   \   00000164   0x.... 0x....      LDR.W    R2,??DataTable30_13  ;; 0x42210110
   \   00000168   0x6813             LDR      R3,[R2, #+0]
   \   0000016A   0x2B01             CMP      R3,#+1
   \   0000016C   0xBF04             ITT      EQ 
   \   0000016E   0xF896 0x31CD      LDRBEQ   R3,[R6, #+461]
   \   00000172   0x2B01             CMPEQ    R3,#+1
   \   00000174   0xF000 0x80A9      BEQ.W    ??cbPrintingWin_12
   \   00000178   0x.... 0x....      LDR.W    R3,??DataTable30_14  ;; 0x42230118
   \   0000017C   0x681F             LDR      R7,[R3, #+0]
   \   0000017E   0x2F01             CMP      R7,#+1
   \   00000180   0xBF02             ITTT     EQ 
   \   00000182   0xF206 0x17CD      ADDWEQ   R7,R6,#+461
   \   00000186   0x787F             LDRBEQ   R7,[R7, #+1]
   \   00000188   0x2F01             CMPEQ    R7,#+1
   \   0000018A   0xF000 0x809E      BEQ.W    ??cbPrintingWin_12
    275          			                                	{
    276          			                                		last_disp_state = PRINTING_UI;
    277          			                    			  Clear_printing();
    278          			                    			  draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);  
    279          			                                	}
    280          							else	if(((MKS_MT_DET1_OP == Bit_RESET)&&(gCfgItems.filament_det0_level_flg == 0))
    281          			                                    ||((MKS_MT_DET2_OP == Bit_RESET)&&(gCfgItems.filament_det1_level_flg == 0)))
   \   0000018E   0x6812             LDR      R2,[R2, #+0]
   \   00000190   0x2A00             CMP      R2,#+0
   \   00000192   0xBF04             ITT      EQ 
   \   00000194   0xF896 0x21CD      LDRBEQ   R2,[R6, #+461]
   \   00000198   0x2A00             CMPEQ    R2,#+0
   \   0000019A   0xF000 0x8096      BEQ.W    ??cbPrintingWin_12
   \   0000019E   0x681A             LDR      R2,[R3, #+0]
   \   000001A0   0xF206 0x16CD      ADDW     R6,R6,#+461
   \   000001A4   0x2A00             CMP      R2,#+0
   \   000001A6   0xBF04             ITT      EQ 
   \   000001A8   0x7872             LDRBEQ   R2,[R6, #+1]
   \   000001AA   0x2A00             CMPEQ    R2,#+0
   \   000001AC   0xF000 0x808D      BEQ.W    ??cbPrintingWin_12
    282          			                                	{
    283          			                                		last_disp_state = PRINTING_UI;
    284          			                    			  Clear_printing();
    285          			                    			  draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);  
    286          			                                	}
    287          								else
    288          			                                {
    289          			                                        pause_from_high_level=0;
   \   000001B0   0x2200             MOVS     R2,#+0
   \   000001B2   0x700A             STRB     R2,[R1, #+0]
    290          			                                        start_print_time();
   \   000001B4   0x2101             MOVS     R1,#+1
    291          			                                        pause_resum = 1;
   \   000001B6   0x.... 0x....      LDR.W    R2,??DataTable32_1
   \   000001BA   0x71E1             STRB     R1,[R4, #+7]
   \   000001BC   0x7011             STRB     R1,[R2, #+0]
    292          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    293          			                                        #if 0
    294          			                                        last_disp_state = PAUSE_UI;
    295          			                                        Clear_pause();
    296          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    297          			                                        {
    298          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    299          			                                            disp_state_stack._disp_index--;
    300          			                                        }                                        
    301          			                                        draw_operate();   
    302          								   #endif
    303          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   000001BE   0x2201             MOVS     R2,#+1
   \   000001C0   0x21A8             MOVS     R1,#+168
   \   000001C2   0xF885 0x10AC      STRB     R1,[R5, #+172]
   \   000001C6   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   000001CA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    304          								#if defined(TFT70)
    305          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    306          								#elif defined(TFT35)				
    307          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   000001CE   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x9000             STR      R0,[SP, #+0]
   \   000001D6   0x4601             MOV      R1,R0
   \   000001D8   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   000001DC   0x2300             MOVS     R3,#+0
   \   000001DE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    308          								if(gCfgItems.multiple_language != 0)
   \   000001E2   0x78B0             LDRB     R0,[R6, #+2]
   \   000001E4   0xE09F             B.N      ??cbPrintingWin_13
    309          								{
    310          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    311          								}
    312          								#endif
    313          			                                }
    314          			                                 
    315          			                              }
    316          							   else if(pause_from_low_level==1)
   \                     ??cbPrintingWin_11: (+1)
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable32_2
   \   000001EA   0x780A             LDRB     R2,[R1, #+0]
   \   000001EC   0x2A01             CMP      R2,#+1
   \   000001EE   0xD13C             BNE.N    ??cbPrintingWin_14
    317          							   {
    318          							   	if(((MKS_MT_DET1_OP == Bit_SET)&&(gCfgItems.filament_det0_level_flg == 1))
    319          			                                    ||((MKS_MT_DET2_OP == Bit_SET)&&(gCfgItems.filament_det1_level_flg == 1)))
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable30_13  ;; 0x42210110
   \   000001F4   0x6813             LDR      R3,[R2, #+0]
   \   000001F6   0x2B01             CMP      R3,#+1
   \   000001F8   0xBF04             ITT      EQ 
   \   000001FA   0xF896 0x31CD      LDRBEQ   R3,[R6, #+461]
   \   000001FE   0x2B01             CMPEQ    R3,#+1
   \   00000200   0xD063             BEQ.N    ??cbPrintingWin_12
   \   00000202   0x.... 0x....      LDR.W    R3,??DataTable30_14  ;; 0x42230118
   \   00000206   0x681F             LDR      R7,[R3, #+0]
   \   00000208   0x2F01             CMP      R7,#+1
   \   0000020A   0xBF02             ITTT     EQ 
   \   0000020C   0xF206 0x17CD      ADDWEQ   R7,R6,#+461
   \   00000210   0x787F             LDRBEQ   R7,[R7, #+1]
   \   00000212   0x2F01             CMPEQ    R7,#+1
   \   00000214   0xD059             BEQ.N    ??cbPrintingWin_12
    320          							   	{
    321          							   		last_disp_state = PRINTING_UI;
    322          			                    			  Clear_printing();
    323          			                    			  draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS); 
    324          							   	}
    325          								else if(((MKS_MT_DET1_OP == Bit_RESET)&&(gCfgItems.filament_det0_level_flg == 0))
    326          			                                    ||((MKS_MT_DET2_OP == Bit_RESET)&&(gCfgItems.filament_det1_level_flg == 0)))
   \   00000216   0x6812             LDR      R2,[R2, #+0]
   \   00000218   0x2A00             CMP      R2,#+0
   \   0000021A   0xBF04             ITT      EQ 
   \   0000021C   0xF896 0x21CD      LDRBEQ   R2,[R6, #+461]
   \   00000220   0x2A00             CMPEQ    R2,#+0
   \   00000222   0xD052             BEQ.N    ??cbPrintingWin_12
   \   00000224   0x681A             LDR      R2,[R3, #+0]
   \   00000226   0xF206 0x16CD      ADDW     R6,R6,#+461
   \   0000022A   0x2A00             CMP      R2,#+0
   \   0000022C   0xBF04             ITT      EQ 
   \   0000022E   0x7872             LDRBEQ   R2,[R6, #+1]
   \   00000230   0x2A00             CMPEQ    R2,#+0
   \   00000232   0xD04A             BEQ.N    ??cbPrintingWin_12
    327          							   	{
    328          							   		last_disp_state = PRINTING_UI;
    329          			                    			  Clear_printing();
    330          			                    			  draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS); 
    331          							   	}
    332          								else
    333          			                                {
    334          			                                        pause_from_low_level=0;
   \   00000234   0x2200             MOVS     R2,#+0
   \   00000236   0x700A             STRB     R2,[R1, #+0]
    335          			                                        start_print_time();
   \   00000238   0x2101             MOVS     R1,#+1
    336          			                                        pause_resum = 1;
   \   0000023A   0x.... 0x....      LDR.W    R2,??DataTable32_1
   \   0000023E   0x71E1             STRB     R1,[R4, #+7]
   \   00000240   0x7011             STRB     R1,[R2, #+0]
    337          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    338          			                                        #if 0
    339          			                                        last_disp_state = PAUSE_UI;
    340          			                                        Clear_pause();
    341          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    342          			                                        {
    343          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    344          			                                            disp_state_stack._disp_index--;
    345          			                                        }                                        
    346          			                                        draw_operate();   
    347          								   #endif
    348          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   00000242   0x2201             MOVS     R2,#+1
   \   00000244   0x21A8             MOVS     R1,#+168
   \   00000246   0xF885 0x10AC      STRB     R1,[R5, #+172]
   \   0000024A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   0000024E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    349          								#if defined(TFT70)
    350          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    351          								#elif defined(TFT35)				
    352          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000252   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   00000256   0x2000             MOVS     R0,#+0
   \   00000258   0x9000             STR      R0,[SP, #+0]
   \   0000025A   0x4601             MOV      R1,R0
   \   0000025C   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000260   0x2300             MOVS     R3,#+0
   \   00000262   0x.... 0x....      BL       BUTTON_SetBitmapEx
    353          								if(gCfgItems.multiple_language != 0)
   \   00000266   0x78B0             LDRB     R0,[R6, #+2]
   \   00000268   0xE05D             B.N      ??cbPrintingWin_13
    354          								{
    355          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    356          								}
    357          								#endif
    358          			                                }
    359          			                                 
    360          							   }
    361          			                              else
    362          			                              {
    363          			                                    start_print_time();
    364          			                                    pause_resum = 1;
   \                     ??cbPrintingWin_14: (+1)
   \   0000026A   0x.... 0x....      LDR.W    R2,??DataTable32_1
   \   0000026E   0x2101             MOVS     R1,#+1
   \   00000270   0x71E1             STRB     R1,[R4, #+7]
   \   00000272   0x7011             STRB     R1,[R2, #+0]
    365          			                                    mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    366          			                                    #if 0
    367          			                                    last_disp_state = PAUSE_UI;
    368          			                                    Clear_pause();
    369          			                                    if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    370          			                                    {
    371          			                                        disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    372          			                                        disp_state_stack._disp_index--;
    373          			                                    }                                    
    374          			                                    draw_operate();
    375          								#endif
    376          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   00000274   0x2201             MOVS     R2,#+1
   \   00000276   0x21A8             MOVS     R1,#+168
   \   00000278   0xF885 0x10AC      STRB     R1,[R5, #+172]
   \   0000027C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000280   0x.... 0x....      BL       BUTTON_SetBmpFileName
    377          								#if defined(TFT70)
    378          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    379          								#elif defined(TFT35)				
    380          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000284   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   00000288   0x2000             MOVS     R0,#+0
   \   0000028A   0x9000             STR      R0,[SP, #+0]
   \   0000028C   0x4601             MOV      R1,R0
   \   0000028E   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000292   0x2300             MOVS     R3,#+0
   \   00000294   0x.... 0x....      BL       BUTTON_SetBitmapEx
    381          								if(gCfgItems.multiple_language != 0)
   \   00000298   0xF206 0x10CD      ADDW     R0,R6,#+461
   \   0000029C   0xE042             B.N      ??cbPrintingWin_15
    382          								{
    383          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    384          								}
    385          								#endif
    386          			                              }
    387          			                           //}
    388          			                           /*else
    389          			                           {
    390          			                                start_print_time();
    391          			                                pause_resum = 1;
    392          			                                mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    393          			                                #if 0
    394          			                                last_disp_state = PAUSE_UI;
    395          			                                Clear_pause();
    396          			                                if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    397          			                                {
    398          			                                    disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    399          			                                    disp_state_stack._disp_index--;
    400          			                                }                                
    401          			                                draw_operate();   
    402          							   #endif
    403          							   	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    404          								#if defined(TFT70)
    405          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    406          								#elif defined(TFT35)				
    407          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
    408          								if(gCfgItems.multiple_language != 0)
    409          								{
    410          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    411          								}
    412          								#endif
    413          			                           }*/
    414          			                        }
    415          		                        	else
    416          			                        {
    417          			                            //if(gCfgItems.filament_det0_level_flg == 1)
    418          			                            //{
    419          			                                if(pause_from_high_level==1)
   \                     ??cbPrintingWin_10: (+1)
   \   0000029E   0x780A             LDRB     R2,[R1, #+0]
   \   000002A0   0x2A01             CMP      R2,#+1
   \   000002A2   0xD105             BNE.N    ??cbPrintingWin_16
    420          			                                {
    421          			                                    if(MKS_MT_DET1_OP == Bit_RESET)
   \   000002A4   0x.... 0x....      LDR.W    R2,??DataTable30_13  ;; 0x42210110
   \   000002A8   0x6812             LDR      R2,[R2, #+0]
   \   000002AA   0xB972             CBNZ.N   R2,??cbPrintingWin_12
    422          			                                    {
    423          			                                        pause_from_high_level=0;
   \   000002AC   0x700A             STRB     R2,[R1, #+0]
    424          			                                        start_print_time();
   \   000002AE   0xE020             B.N      ??cbPrintingWin_17
    425          			                                        pause_resum = 1;
    426          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    427          			                                        #if 0
    428          			                                        last_disp_state = PAUSE_UI;
    429          			                                        Clear_pause();
    430          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    431          			                                        {
    432          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    433          			                                            disp_state_stack._disp_index--;
    434          			                                        }                                        
    435          			                                        draw_operate();
    436          								   #endif
    437          								   	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    438          									#if defined(TFT70)
    439          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    440          									#elif defined(TFT35)				
    441          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
    442          									if(gCfgItems.multiple_language != 0)
    443          									{
    444          										BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    445          									}
    446          									#endif
    447          			                                    }
    448          			                                    else
    449          			                                    {
    450          					                                     last_disp_state = PRINTING_UI;
    451          					                    			Clear_printing();
    452          			                    					draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);   
    453          			                                    }
    454          			                                }
    455          							     else if(pause_from_low_level==1)
   \                     ??cbPrintingWin_16: (+1)
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable32_2
   \   000002B4   0x780A             LDRB     R2,[R1, #+0]
   \   000002B6   0x2A01             CMP      R2,#+1
   \   000002B8   0xD11B             BNE.N    ??cbPrintingWin_17
    456          			                                {
    457          			                                    if(MKS_MT_DET1_OP == Bit_SET)
   \   000002BA   0x.... 0x....      LDR.W    R2,??DataTable30_13  ;; 0x42210110
   \   000002BE   0x6812             LDR      R2,[R2, #+0]
   \   000002C0   0x2A01             CMP      R2,#+1
   \   000002C2   0xD102             BNE.N    ??cbPrintingWin_12
    458          			                                    {
    459          			                                        pause_from_low_level=0;
   \   000002C4   0x2200             MOVS     R2,#+0
   \   000002C6   0x700A             STRB     R2,[R1, #+0]
    460          			                                        start_print_time();
   \   000002C8   0xE013             B.N      ??cbPrintingWin_17
    461          			                                        pause_resum = 1;
    462          			                                        mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    463          			                                        #if 0
    464          			                                        last_disp_state = PAUSE_UI;
    465          			                                        Clear_pause();
    466          			                                        if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    467          			                                        {
    468          			                                            disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    469          			                                            disp_state_stack._disp_index--;
    470          			                                        }                                        
    471          			                                        draw_operate();
    472          								   #endif
    473          								   	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    474          									#if defined(TFT70)
    475          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    476          									#elif defined(TFT35)				
    477          									BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
    478          									if(gCfgItems.multiple_language != 0)
    479          									{
    480          										BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    481          									}
    482          									#endif
    483          			                                    }
    484          			                                    else
    485          			                                    {
    486          					                                     last_disp_state = PRINTING_UI;
   \                     ??cbPrintingWin_12: (+1)
   \   000002CA   0x2003             MOVS     R0,#+3
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable30_1
   \   000002D0   0x7008             STRB     R0,[R1, #+0]
    487          					                    			Clear_printing();
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000002D6   0x6940             LDR      R0,[R0, #+20]
   \   000002D8   0x.... 0x....      BL       GUI_SetBkColor
   \   000002DC   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   000002E0   0x.... 0x....      BL       WM_IsWindow
   \   000002E4   0xB118             CBZ.N    R0,??cbPrintingWin_18
   \   000002E6   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   000002EA   0x.... 0x....      BL       WM_DeleteWindow
    488          			                    					draw_dialog(DIALOG_TYPE_FILAMENT_NO_PRESS);   
   \                     ??cbPrintingWin_18: (+1)
   \   000002EE   0x2012             MOVS     R0,#+18
   \   000002F0   0xE062             B.N      ??cbPrintingWin_19
    489          			                                    }
    490          			                                }
    491          			                                else
    492          			                                {
    493          			                                    start_print_time();
    494          			                                    pause_resum = 1;
   \                     ??cbPrintingWin_17: (+1)
   \   000002F2   0x.... 0x....      LDR.W    R2,??DataTable32_1
   \   000002F6   0x2101             MOVS     R1,#+1
   \   000002F8   0x71E1             STRB     R1,[R4, #+7]
   \   000002FA   0x7011             STRB     R1,[R2, #+0]
    495          			                                    mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    496          			                                    #if 0
    497          			                                    last_disp_state = PAUSE_UI;
    498          			                                    Clear_pause();
    499          			                                    if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    500          			                                    {
    501          			                                        disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    502          			                                        disp_state_stack._disp_index--;
    503          			                                    }
    504          			                                    draw_operate();
    505          							      #endif
    506          							        BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   000002FC   0x2201             MOVS     R2,#+1
   \   000002FE   0x21A8             MOVS     R1,#+168
   \   00000300   0xF885 0x10AC      STRB     R1,[R5, #+172]
   \   00000304   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000308   0x.... 0x....      BL       BUTTON_SetBmpFileName
    507          								#if defined(TFT70)
    508          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    509          								#elif defined(TFT35)				
    510          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   0000030C   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   00000310   0x2000             MOVS     R0,#+0
   \   00000312   0x9000             STR      R0,[SP, #+0]
   \   00000314   0x4601             MOV      R1,R0
   \   00000316   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   0000031A   0x2300             MOVS     R3,#+0
   \   0000031C   0x.... 0x....      BL       BUTTON_SetBitmapEx
    511          								if(gCfgItems.multiple_language != 0)
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable32_4
   \                     ??cbPrintingWin_15: (+1)
   \   00000324   0x7880             LDRB     R0,[R0, #+2]
   \                     ??cbPrintingWin_13: (+1)
   \   00000326   0xB9D0             CBNZ.N   R0,??cbPrintingWin_20
   \   00000328   0xBDF1             POP      {R0,R4-R7,PC}
    512          								{
    513          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    514          								}
    515          								#endif
    516          			                                }
    517          			                            //}
    518          			                           /*else
    519          			                           {
    520          			                                start_print_time();
    521          			                                pause_resum = 1;
    522          			                                mksReprint.mks_printer_state = MKS_RESUMING;//MKS_WORKING;
    523          			                                #if 0
    524          			                                last_disp_state = PAUSE_UI;
    525          			                                Clear_pause();
    526          			                                if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    527          			                                {
    528          			                                    disp_state_stack._disp_state[disp_state_stack._disp_index]=MAIN_UI;
    529          			                                    disp_state_stack._disp_index--;
    530          			                                }                                
    531          			                                draw_operate();
    532          							  #endif
    533          								BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    534          								#if defined(TFT70)
    535          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    536          								#elif defined(TFT35)				
    537          								BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
    538          								if(gCfgItems.multiple_language != 0)
    539          								{
    540          									BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
    541          								}
    542          								#endif
    543          			                           }     */                       
    544          			                        }
    545          					}
    546          					else if(mksReprint.mks_printer_state == MKS_REPRINTING)
   \                     ??cbPrintingWin_9: (+1)
   \   0000032A   0x29AB             CMP      R1,#+171
   \   0000032C   0xD14C             BNE.N    ??cbPrintingWin_1
    547          					{
    548          						//int erase_data_save=0xffffffff;
    549          						//for(int i=0;i<63;i++)
    550          						//{
    551                     				//	epr_write_data(1024+i*4, (uint8_t *)erase_data_save, sizeof(erase_data_save));
    552          						//}
    553          								
    554          						start_print_time();
   \   0000032E   0x2101             MOVS     R1,#+1
   \   00000330   0x71E1             STRB     R1,[R4, #+7]
    555          						mksReprint.mks_printer_state = MKS_REPRINTED;
    556          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \   00000332   0x2201             MOVS     R2,#+1
   \   00000334   0x21AC             MOVS     R1,#+172
   \   00000336   0xF885 0x10AC      STRB     R1,[R5, #+172]
   \   0000033A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   0000033E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    557          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000342   0x.... 0x....      LDR.W    R2,??DataTable30_10
   \   00000346   0x2000             MOVS     R0,#+0
   \   00000348   0x9000             STR      R0,[SP, #+0]
   \   0000034A   0x4601             MOV      R1,R0
   \   0000034C   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000350   0x2300             MOVS     R3,#+0
   \   00000352   0x.... 0x....      BL       BUTTON_SetBitmapEx
    558          						if(gCfgItems.multiple_language != 0)
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable32_4
   \   0000035A   0x7880             LDRB     R0,[R0, #+2]
   \   0000035C   0xB3A0             CBZ.N    R0,??cbPrintingWin_1
    559          						{
    560          							BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);	
   \                     ??cbPrintingWin_20: (+1)
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable30_11
   \   00000362   0x6981             LDR      R1,[R0, #+24]
   \                     ??cbPrintingWin_8: (+1)
   \   00000364   0xF9B4 0x0014      LDRSH    R0,[R4, #+20]
   \   00000368   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000036C   0x.... 0x....      B.W      BUTTON_SetText
    561          						}
    562          					#if tan_mask
    563          						#ifdef SAVE_FROM_SD
    564          						if(gCfgItems.pwroff_save_mode != 0)
    565          						#endif
    566          						{
    567          							rePrintProcess();
    568          						}
    569          						#ifdef SAVE_FROM_SD
    570          						else
    571          						{
    572          							if((RE_PRINT_STATUS)gCfgItems.rePrintFlag == printer_pwdwn_reprint)
    573          							{
    574          								rePrintProcess_pwrdwn();
    575          							}
    576          							else
    577          							{
    578          								rePrintProcess();
    579          							}
    580          						}
    581          						#endif
    582          
    583          						printerStaus = pr_working;
    584          						start_print_time();
    585          						MX_I2C1_Init(400000);//ª÷∏¥¥Ú”°£¨Ω´ÀŸ∂»∏ƒ≥…400k
    586          						BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    587          						#if defined(TFT70)
    588          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21);	
    589          						#elif defined(TFT35)
    590          						BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_92, 0, 0);	
    591          						
    592          						#endif
    593          					#endif
    594          					}
    595          				}
    596          			}
    597          			else if(pMsg->hWinSrc == buttonStop.btnHandle)
   \                     ??cbPrintingWin_5: (+1)
   \   00000370   0x.... 0x....      LDR.W    R0,??DataTable32_1
   \   00000374   0xF9B0 0x000C      LDRSH    R0,[R0, #+12]
   \   00000378   0x4281             CMP      R1,R0
   \   0000037A   0xD125             BNE.N    ??cbPrintingWin_1
    598          			{	
    599          				if(gcode_preview_over != 1)
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable30
   \   00000380   0x7800             LDRB     R0,[R0, #+0]
   \   00000382   0x2801             CMP      R0,#+1
   \   00000384   0xBF1E             ITTT     NE 
    600          				{
    601          					if(mksReprint.mks_printer_state != MKS_IDLE)
   \   00000386   0x.... 0x....      LDRNE.W  R0,??DataTable30_2
   \   0000038A   0xF890 0x00AC      LDRBNE   R0,[R0, #+172]
   \   0000038E   0x28A6             CMPNE    R0,#+166
   \   00000390   0xD01A             BEQ.N    ??cbPrintingWin_1
    602          					{
    603          						last_disp_state = PRINTING_UI;
   \   00000392   0x.... 0x....      LDR.W    R1,??DataTable30_1
   \   00000396   0x2003             MOVS     R0,#+3
   \   00000398   0x7008             STRB     R0,[R1, #+0]
    604          						Clear_printing();
   \   0000039A   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000039E   0x6940             LDR      R0,[R0, #+20]
   \   000003A0   0x.... 0x....      BL       GUI_SetBkColor
   \   000003A4   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   000003A8   0x.... 0x....      BL       WM_IsWindow
   \   000003AC   0xB118             CBZ.N    R0,??cbPrintingWin_21
   \   000003AE   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   000003B2   0x.... 0x....      BL       WM_DeleteWindow
    605          						draw_dialog(DIALOG_TYPE_STOP);
   \                     ??cbPrintingWin_21: (+1)
   \   000003B6   0x2000             MOVS     R0,#+0
   \                     ??cbPrintingWin_19: (+1)
   \   000003B8   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   000003BC   0x.... 0x....      B.W      draw_dialog
    606          					}
    607          				}
    608          			}
    609          			#if 0
    610          			else if(pMsg->hWinSrc == buttonAutoclose.btnHandle)
    611          			{
    612          				if(IsChooseAutoShutdown == 1)
    613          				{
    614          					BUTTON_SetBmpFileName(buttonAutoclose.btnHandle, "bmp_manual_off.bin",1);
    615          				}
    616          				else
    617          				{
    618          					IsChooseAutoShutdown = 1;
    619          					BUTTON_SetBmpFileName(buttonAutoclose.btnHandle, "bmp_auto_off.bin",1);
    620          				}
    621          				BUTTON_SetBitmapEx(buttonAutoclose.btnHandle, 0, &bmp_struct_50, 0, 0);
    622          			}
    623          
    624          			#endif
    625                      #endif
    626          		}
    627          		break;
    628          		
    629          	default:
    630          		WM_DefaultProc(pMsg);
   \                     ??cbPrintingWin_2: (+1)
   \   000003C0   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   000003C4   0x.... 0x....      B.W      WM_DefaultProc
    631          	}
    632          }
   \                     ??cbPrintingWin_1: (+1)
   \   000003C8   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    633          

   \                                 In section .text, align 2, keep-with-next
    634          void reset_file_info()
    635          {
    636          	gCurFileState.fileSize = 0;
   \                     reset_file_info: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable32_5
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0xF8C0 0x122C      STR      R1,[R0, #+556]
    637          	gCurFileState.totalRead = 0;
   \   0000000A   0xF500 0x700B      ADD      R0,R0,#+556
   \   0000000E   0x6081             STR      R1,[R0, #+8]
    638          	gCurFileState.totalSend = 0;
   \   00000010   0x60C1             STR      R1,[R0, #+12]
    639          	gCurFileState.bytesHaveRead = 0;
   \   00000012   0x8081             STRH     R1,[R0, #+4]
    640          	gCurFileState.bufPoint = 0;
   \   00000014   0x8201             STRH     R1,[R0, #+16]
    641          	gCurFileState.file_open_flag = 0;
   \   00000016   0x7481             STRB     R1,[R0, #+18]
    642          }
   \   00000018   0x4770             BX       LR               ;; return
    643          
    644          #if defined(TFT70)
    645          void draw_printing()
    646          {
    647          	FRESULT res;
    648          	int i;
    649          
    650          	disp_state_stack._disp_index = 0;
    651          	memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
    652          	disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
    653          
    654          	disp_state = PRINTING_UI;
    655          	//Clear_print_file();
    656          
    657          	//GUI_SetFont(&GUI_Font8x18);
    658          	GUI_SetBkColor(gCfgItems.background_color);//0x4f433d
    659          	GUI_SetColor(gCfgItems.title_color);
    660          	GUI_Clear();
    661          #if 0
    662          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    663          	{
    664          		GUI_SetFont(&GUI_FontHZ16);
    665          	}
    666          	else if(gCfgItems.language == LANG_SIMPLE_CHINESE)
    667          	{
    668          		GUI_SetFont(&GUI_FontHZ16);
    669          	}
    670          	else
    671          	{
    672          		GUI_SetFont(&GUI_FontHZ_fontHz18);
    673          	}	
    674          	#endif
    675          
    676          	
    677          	//GUI_SetColor(0x290c14);
    678          	//GUI_FillRect(5, 50, 400,460);
    679          
    680          		 
    681          	GUI_UC_SetEncodeNone();
    682          	GUI_SetFont(&GUI_FontHZ16);
    683          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
    684          	GUI_SetFont(&FONT_TITLE);
    685          	GUI_UC_SetEncodeUTF8();
    686          
    687          	hPrintingWnd = WM_CreateWindow(3, titleHeight, LCD_WIDTH-3*2, imgHeight, WM_CF_SHOW, cbPrintingWin, 0);
    688          
    689          	//Printing_Name = TEXT_CreateEx(300, 0,240,40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "test.gcode");;
    690          	
    691          
    692          	//buttonExt1.btnHandle = BUTTON_CreateEx(25,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 301);
    693          	//E1_Temp = TEXT_CreateEx(80, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "28/255");
    694          
    695          	buttonExt1.btnHandle = BUTTON_CreateEx(230,20,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    696          	E1_Temp = TEXT_CreateEx(290, 20, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    697          	if(gCfgItems.sprayerNum == 2)
    698          	{
    699          		//buttonExt2.btnHandle = BUTTON_CreateEx(225,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 302);
    700          		//E2_Temp = TEXT_CreateEx(275, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "30/255");
    701          		buttonExt2.btnHandle = BUTTON_CreateEx(410,20,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    702          		E2_Temp = TEXT_CreateEx(470,20, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    703          	}
    704          	if(gCfgItems.custom_bed_flag == 1)
    705          	{
    706          		//buttonBedstate.btnHandle = BUTTON_CreateEx(425,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
    707          		//Bed_Temp = TEXT_CreateEx(475, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, "25/150");
    708          		buttonBedstate.btnHandle = BUTTON_CreateEx(230,90,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    709          		Bed_Temp = TEXT_CreateEx(290, 90, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    710          	}
    711          	//buttonFanstate.btnHandle = BUTTON_CreateEx(625,225,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 304);
    712          	//Fan_Pwm = TEXT_CreateEx(675, 225, 100, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "255");
    713          	buttonFanstate.btnHandle = BUTTON_CreateEx(410,90,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    714          	Fan_Pwm = TEXT_CreateEx(470, 90, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    715          
    716          	buttonPrintSpeed.btnHandle = BUTTON_CreateEx(230,160,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    717          	Printing_speed = TEXT_CreateEx(290, 160, 150, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    718          
    719          	buttonZpos.btnHandle = BUTTON_CreateEx(410,160,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    720          	Zpos = TEXT_CreateEx(470, 160, 160, 50, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    721          
    722          	printTimeLeft = TEXT_CreateEx(2, 240, 270, 40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
    723          	//printZposRight = TEXT_CreateEx(270,240,270,40, hPrintingWnd, WM_CF_SHOW, TEXT_CF_RIGHT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, "Z:0.0");	
    724          	printingBar = PROGBAR_CreateEx(0,290, 592, 142, hPrintingWnd, WM_CF_SHOW, 0, 0);
    725          
    726          	//PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color);//0xc88f75
    727          	//PROGBAR_SetTextColor(printingBar,  0, gCfgItems.printing_bar_text_color);
    728          	
    729          	PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color_left);
    730          	PROGBAR_SetBarColor(printingBar, 1, gCfgItems.printing_bar_color_right);
    731          	PROGBAR_SetTextColor(printingBar, 0, gCfgItems.printing_bar_text_color_left);
    732          	PROGBAR_SetTextColor(printingBar, 1, gCfgItems.printing_bar_text_color_right);
    733          	
    734          	PROGBAR_SetFont(printingBar, &GUI_FontD36x48);
    735          	buttonPause.btnHandle = BUTTON_CreateEx(595,0,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    736          	buttonStop.btnHandle = BUTTON_CreateEx(595,145,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    737          	buttonOperat.btnHandle = BUTTON_CreateEx(595,290,197,142,hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());//alloc_win_id());
    738          
    739          	BUTTON_SetBmpFileName(buttonExt1.btnHandle, "bmp_ext1_state.bin",0);
    740          	if(gCfgItems.sprayerNum == 2)
    741          	{
    742          		BUTTON_SetBmpFileName(buttonExt2.btnHandle, "bmp_ext2_state.bin",0);
    743          	}
    744          	//if(gCfgItems.custom_bed_flag == 1)
    745          	{
    746          		BUTTON_SetBmpFileName(buttonBedstate.btnHandle, "bmp_bed_state.bin",0);
    747          	}
    748          	BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_state.bin",0);
    749          	
    750          	BUTTON_SetBmpFileName(buttonPrintSpeed.btnHandle, "bmp_speed_state.bin",0);
    751          	
    752          	BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos.bin",0);
    753          	
    754          	BUTTON_SetBitmapEx(buttonExt1.btnHandle, 0, &bmp_struct_50, 0, 0);	
    755          	if(gCfgItems.sprayerNum == 2)
    756          	{
    757          		BUTTON_SetBitmapEx(buttonExt2.btnHandle, 0, &bmp_struct_50, 0, 0);
    758          	}
    759          	//if(gCfgItems.custom_bed_flag == 1)
    760          	{
    761          		BUTTON_SetBitmapEx(buttonBedstate.btnHandle, 0, &bmp_struct_50, 0, 0);
    762          	}
    763          	BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct_50, 0, 0);
    764          	BUTTON_SetBitmapEx(buttonPrintSpeed.btnHandle, 0, &bmp_struct_50, 0, 0);
    765          	BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);
    766          	if((printerStaus == pr_reprint)||(printerStaus == pr_pause))
    767          	{
    768          		BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
    769          	}
    770          	else
    771          	{
    772          		BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    773          	}
    774          	BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",1);
    775          	BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_operate.bin",1);
    776          	BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    777          	BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    778          	BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    779          	BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    780          	BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    781          	BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    782          
    783          	bmp_struct.XSize = 100;
    784          	bmp_struct.YSize = 100;
    785          	BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, 48, 21); 
    786          	BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct, 48, 21);
    787          	BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, 48, 21);
    788          
    789          	TEXT_SetBkColor(Printing_speed,  gCfgItems.background_color);
    790          	TEXT_SetTextColor(Printing_speed, gCfgItems.state_text_color);
    791          	TEXT_SetBkColor(Zpos,  gCfgItems.background_color);
    792          	TEXT_SetTextColor(Zpos, gCfgItems.state_text_color);
    793          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.background_color);
    794          	TEXT_SetTextColor(printTimeLeft, gCfgItems.state_text_color);	
    795          	TEXT_SetBkColor(E1_Temp,  gCfgItems.background_color);
    796          	TEXT_SetTextColor(E1_Temp, gCfgItems.state_text_color);
    797          	TEXT_SetBkColor(E2_Temp,  gCfgItems.background_color);
    798          	TEXT_SetTextColor(E2_Temp, gCfgItems.state_text_color);
    799          	TEXT_SetBkColor(Bed_Temp,  gCfgItems.background_color);
    800          	TEXT_SetTextColor(Bed_Temp, gCfgItems.state_text_color);
    801          	TEXT_SetBkColor(Fan_Pwm,  gCfgItems.background_color);
    802          	TEXT_SetTextColor(Fan_Pwm, gCfgItems.state_text_color);
    803          	TEXT_SetBkColor(Autoclose,  gCfgItems.background_color);
    804          	TEXT_SetTextColor(Autoclose, gCfgItems.state_text_color);
    805          	
    806          	disp_sprayer_tem_printing();
    807          	disp_bed_temp_printing();
    808          	disp_fan_speed_printing();
    809          	disp_printing_speed();
    810          
    811          	if(gCurFileState.file_open_flag != 0xaa)
    812          	{
    813          		if((from_flash_pic != 1)||(gCfgItems.breakpoint_reprint_flg == 1))
    814          		{
    815          			reset_file_info();
    816          			res = f_open(&curFile, curFileName, FA_OPEN_EXISTING | FA_READ);
    817          			if(res == FR_OK)
    818          			{
    819          				gCurFileState.file_open_flag = 0xaa;
    820          
    821          				bakup_file_path((uint8_t *)curFileName, strlen(curFileName));
    822          
    823          				srcfp = &curFile;
    824          				if(gCfgItems.breakpoint_reprint_flg == 1)
    825          				{
    826          					printerStaus = breakpoint_reprint;
    827          				}
    828          				else
    829          				{
    830          					printerStaus = pr_working;
    831          				}
    832          
    833          				once_flag = 0;
    834          			}
    835          		}
    836          
    837          	}
    838          	else
    839          	{
    840          		
    841          		//setProBarRate(gCurFileState.totalSend);
    842          		PROGBAR_SetValue(printingBar,gCurFileState.totalSend);
    843          		
    844          	}
    845          		
    846          }
    847          
    848          #else

   \                                 In section .text, align 4, keep-with-next
    849          void draw_printing()
    850          {
   \                     draw_printing: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    851          	FRESULT res;
                 	        ^
Warning[Pe177]: variable "res" was declared but never referenced
    852          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static GUI_HWIN hPrintingWnd, hRetDlgWnd;
                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",42  Warning[Pe177]: 
          variable "hRetDlgWnd" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "printSpeed" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "sprayTem1" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                           ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "sprayTem2" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                                      ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "BedTem" was declared but never referenced

  static TEXT_Handle printTimeLeft, printSpeed, sprayTem1, sprayTem2, BedTem, fanSpeed;
                                                                              ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",44  Warning[Pe177]: 
          variable "fanSpeed" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                       ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button1" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button2" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button3" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button4" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "button5" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonE1" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonE2" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonFan" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                               ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonBed" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonOk" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "buttonCancle" was declared but never referenced

  static BUTTON_STRUCT button1, button2,button3,button4,button5,buttonE1, buttonE2, buttonFan, buttonBed, buttonOk, buttonCancle, btnRetMainPage;
                                                                                                                                  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",45  Warning[Pe177]: 
          variable "btnRetMainPage" was declared but never referenced

  static TEXT_Handle printRetDlgText;
                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",46  Warning[Pe177]: 
          variable "printRetDlgText" was declared but never referenced

  static BUTTON_STRUCT buttonPause,buttonStop,buttonOperat,buttonExt1, buttonExt2, buttonFanstate, buttonBedstate,buttonPrintSpeed,buttonTime,buttonZpos,buttonAutoclose;
                                                                                                                  ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",48  Warning[Pe177]: 
          variable "buttonPrintSpeed" was declared but never referenced

  static BUTTON_STRUCT buttonPause,buttonStop,buttonOperat,buttonExt1, buttonExt2, buttonFanstate, buttonBedstate,buttonPrintSpeed,buttonTime,buttonZpos,buttonAutoclose;
                                                                                                                                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",48  Warning[Pe177]: 
          variable "buttonAutoclose" was declared but never referenced

  static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",49  Warning[Pe177]: 
          variable "printZposRight" was declared but never referenced

  static TEXT_Handle printZposRight,E1_Temp, E2_Temp, Fan_Pwm, Bed_Temp,Printing_speed,Zpos,Autoclose;
                                                                                            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",49  Warning[Pe177]: 
          variable "Autoclose" was declared but never referenced

  static CHECKBOX_Handle auto_close;
                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",50  Warning[Pe177]: 
          variable "auto_close" was declared but never referenced

  static FIL curFile;
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",53  Warning[Pe177]: 
          variable "curFile" was declared but never referenced
    853          
    854          	disp_state_stack._disp_index = 0;
   \   00000004   0x.... 0x....      LDR.W    R4,??DataTable32_6
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF884 0x0064      STRB     R0,[R4, #+100]
   \   0000000E   0xB085             SUB      SP,SP,#+20
    855          	memset(disp_state_stack._disp_state, 0, sizeof(disp_state_stack._disp_state));
   \   00000010   0x2164             MOVS     R1,#+100
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       __aeabi_memclr
    856          	disp_state_stack._disp_state[disp_state_stack._disp_index] = PRINTING_UI;
   \   00000018   0xF994 0x1064      LDRSB    R1,[R4, #+100]
   \   0000001C   0x2003             MOVS     R0,#+3
   \   0000001E   0x5508             STRB     R0,[R1, R4]
    857          
    858          	disp_state = PRINTING_UI;
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable32_7
    859          
    860          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000024   0x.... 0x....      LDR.W    R4,??DataTable32
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0x6960             LDR      R0,[R4, #+20]
   \   0000002C   0x.... 0x....      BL       GUI_SetBkColor
    861          	GUI_SetColor(gCfgItems.title_color);
   \   00000030   0xF104 0x0514      ADD      R5,R4,#+20
   \   00000034   0x6868             LDR      R0,[R5, #+4]
   \   00000036   0x.... 0x....      BL       GUI_SetColor
    862          	GUI_Clear();
   \   0000003A   0x.... 0x....      BL       GUI_Clear
    863          
    864          
    865          	GUI_UC_SetEncodeNone();
   \   0000003E   0x.... 0x....      BL       GUI_UC_SetEncodeNone
    866          	GUI_SetFont(&GUI_FontHZ16);
   \   00000042   0x.... 0x....      LDR.W    R6,??DataTable32_8
   \   00000046   0x4630             MOV      R0,R6
   \   00000048   0x.... 0x....      BL       GUI_SetFont
    867          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000004C   0x.... 0x....      BL       creat_title_text
   \   00000050   0x2205             MOVS     R2,#+5
   \   00000052   0x2103             MOVS     R1,#+3
   \   00000054   0x.... 0x....      BL       GUI_DispStringAt
    868          	//GUI_SetFont(&FONT_TITLE);
    869          	//GUI_UC_SetEncodeUTF8();
    870          
    871              if((gCfgItems.language == LANG_SIMPLE_CHINESE)||(gCfgItems.language == LANG_COMPLEX_CHINESE))
   \   00000058   0xF994 0x00C8      LDRSB    R0,[R4, #+200]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xBF1C             ITT      NE 
   \   00000060   0xF994 0x00C8      LDRSBNE  R0,[R4, #+200]
   \   00000064   0x2802             CMPNE    R0,#+2
   \   00000066   0xD10B             BNE.N    ??draw_printing_0
    872              {
    873                GUI_SetFont(&GUI_FontHZ16);
   \   00000068   0x4630             MOV      R0,R6
   \   0000006A   0x.... 0x....      BL       GUI_SetFont
    874                BUTTON_SetDefaultFont(&GUI_FontHZ16);
   \   0000006E   0x4630             MOV      R0,R6
   \   00000070   0x.... 0x....      BL       BUTTON_SetDefaultFont
    875                TEXT_SetDefaultFont(&GUI_FontHZ16);  
   \   00000074   0x4630             MOV      R0,R6
   \   00000076   0x.... 0x....      BL       TEXT_SetDefaultFont
    876                GUI_UC_SetEncodeNone();
   \   0000007A   0x.... 0x....      BL       GUI_UC_SetEncodeNone
   \   0000007E   0xE00C             B.N      ??draw_printing_1
    877              }
    878              else
    879              {
    880                GUI_SetFont(&FONT_TITLE);
   \                     ??draw_printing_0: (+1)
   \   00000080   0x.... 0x....      LDR.W    R6,??DataTable32_9
   \   00000084   0x4630             MOV      R0,R6
   \   00000086   0x.... 0x....      BL       GUI_SetFont
    881                BUTTON_SetDefaultFont(&FONT_TITLE);
   \   0000008A   0x4630             MOV      R0,R6
   \   0000008C   0x.... 0x....      BL       BUTTON_SetDefaultFont
    882                TEXT_SetDefaultFont(&FONT_TITLE);                    
   \   00000090   0x4630             MOV      R0,R6
   \   00000092   0x.... 0x....      BL       TEXT_SetDefaultFont
    883                GUI_UC_SetEncodeUTF8();
   \   00000096   0x.... 0x....      BL       GUI_UC_SetEncodeUTF8
    884              }
    885          
    886              
    887          #if defined(TFT35)
    888          		hPrintingWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbPrintingWin, 0);
   \                     ??draw_printing_1: (+1)
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x9002             STR      R0,[SP, #+8]
   \   0000009E   0xF44F 0x738E      MOV      R3,#+284
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable32_10
   \   000000A6   0x9001             STR      R0,[SP, #+4]
   \   000000A8   0xF44F 0x72F0      MOV      R2,#+480
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x9000             STR      R0,[SP, #+0]
   \   000000B0   0x2124             MOVS     R1,#+36
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       WM_CreateWindow
    889          		
    890          		buttonExt1.btnHandle = BUTTON_CreateEx(205,100,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 301);
   \   000000B8   0xF240 0x112D      MOVW     R1,#+301
   \   000000BC   0x9103             STR      R1,[SP, #+12]
   \   000000BE   0x2100             MOVS     R1,#+0
   \   000000C0   0x9102             STR      R1,[SP, #+8]
   \   000000C2   0x2102             MOVS     R1,#+2
   \   000000C4   0x.... 0x....      LDR.W    R6,??DataTable29
   \   000000C8   0x9101             STR      R1,[SP, #+4]
   \   000000CA   0x8170             STRH     R0,[R6, #+10]
   \   000000CC   0x9000             STR      R0,[SP, #+0]
   \   000000CE   0x232D             MOVS     R3,#+45
   \   000000D0   0x.... 0x....      LDR.W    R10,??DataTable32_11
   \   000000D4   0x222D             MOVS     R2,#+45
   \   000000D6   0x2164             MOVS     R1,#+100
   \   000000D8   0x20CD             MOVS     R0,#+205
   \   000000DA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000DE   0xF8AA 0x0000      STRH     R0,[R10, #+0]
    891          			E1_Temp = TEXT_CreateEx(205+STATE_PIC_X_PIXEL, 100, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   000000E2   0xA7E6             ADR.N    R7,??draw_printing_2  ;; " "
   \   000000E4   0x9704             STR      R7,[SP, #+16]
   \   000000E6   0xF44F 0x70B0      MOV      R0,#+352
   \   000000EA   0x9003             STR      R0,[SP, #+12]
   \   000000EC   0x200C             MOVS     R0,#+12
   \   000000EE   0x9002             STR      R0,[SP, #+8]
   \   000000F0   0x2002             MOVS     R0,#+2
   \   000000F2   0x9001             STR      R0,[SP, #+4]
   \   000000F4   0x232D             MOVS     R3,#+45
   \   000000F6   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000000FA   0x.... 0x....      LDR.W    R8,??DataTable32_1
   \   000000FE   0x9000             STR      R0,[SP, #+0]
   \   00000100   0x2250             MOVS     R2,#+80
   \   00000102   0x2164             MOVS     R1,#+100
   \   00000104   0x20FA             MOVS     R0,#+250
   \   00000106   0x.... 0x....      BL       TEXT_CreateEx
   \   0000010A   0xF8A8 0x0002      STRH     R0,[R8, #+2]
    892          			if(mksCfg.extruders == 2 && gCfgItems.singleNozzle == 0)
   \   0000010E   0x.... 0x....      LDR.W    R9,??DataTable30_5
   \   00000112   0xF899 0x00F7      LDRB     R0,[R9, #+247]
   \   00000116   0x2802             CMP      R0,#+2
   \   00000118   0xBF04             ITT      EQ 
   \   0000011A   0xF894 0x02B2      LDRBEQ   R0,[R4, #+690]
   \   0000011E   0x2800             CMPEQ    R0,#+0
   \   00000120   0xD126             BNE.N    ??draw_printing_3
    893          			{
    894          				buttonExt2.btnHandle = BUTTON_CreateEx(340+10,100,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 302);
   \   00000122   0xF44F 0x7097      MOV      R0,#+302
   \   00000126   0x9003             STR      R0,[SP, #+12]
   \   00000128   0x232D             MOVS     R3,#+45
   \   0000012A   0x2000             MOVS     R0,#+0
   \   0000012C   0x9002             STR      R0,[SP, #+8]
   \   0000012E   0x222D             MOVS     R2,#+45
   \   00000130   0x2002             MOVS     R0,#+2
   \   00000132   0x9001             STR      R0,[SP, #+4]
   \   00000134   0x2164             MOVS     R1,#+100
   \   00000136   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   0000013A   0x9000             STR      R0,[SP, #+0]
   \   0000013C   0xF44F 0x70AF      MOV      R0,#+350
   \   00000140   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000144   0xF8AA 0x0018      STRH     R0,[R10, #+24]
    895          				E2_Temp = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10,100,80,STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   00000148   0x9704             STR      R7,[SP, #+16]
   \   0000014A   0xF44F 0x70B0      MOV      R0,#+352
   \   0000014E   0x9003             STR      R0,[SP, #+12]
   \   00000150   0x232D             MOVS     R3,#+45
   \   00000152   0x200C             MOVS     R0,#+12
   \   00000154   0x9002             STR      R0,[SP, #+8]
   \   00000156   0x2250             MOVS     R2,#+80
   \   00000158   0x2002             MOVS     R0,#+2
   \   0000015A   0x9001             STR      R0,[SP, #+4]
   \   0000015C   0x2164             MOVS     R1,#+100
   \   0000015E   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000162   0x9000             STR      R0,[SP, #+0]
   \   00000164   0xF240 0x108B      MOVW     R0,#+395
   \   00000168   0x.... 0x....      BL       TEXT_CreateEx
   \   0000016C   0xF8A8 0x0004      STRH     R0,[R8, #+4]
    896          			}
    897          			//if(gCfgItems.custom_bed_flag == 1)
    898          			{
    899          				buttonBedstate.btnHandle = BUTTON_CreateEx(205,150,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
   \                     ??draw_printing_3: (+1)
   \   00000170   0xF240 0x102F      MOVW     R0,#+303
   \   00000174   0x9003             STR      R0,[SP, #+12]
   \   00000176   0x232D             MOVS     R3,#+45
   \   00000178   0x2000             MOVS     R0,#+0
   \   0000017A   0x9002             STR      R0,[SP, #+8]
   \   0000017C   0x222D             MOVS     R2,#+45
   \   0000017E   0x2002             MOVS     R0,#+2
   \   00000180   0x9001             STR      R0,[SP, #+4]
   \   00000182   0x2196             MOVS     R1,#+150
   \   00000184   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000188   0x9000             STR      R0,[SP, #+0]
   \   0000018A   0x20CD             MOVS     R0,#+205
   \   0000018C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000190   0xF8AA 0x0048      STRH     R0,[R10, #+72]
    900          				Bed_Temp = TEXT_CreateEx(205+STATE_PIC_X_PIXEL,150,80,STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
   \   00000194   0x9704             STR      R7,[SP, #+16]
   \   00000196   0xF44F 0x70B0      MOV      R0,#+352
   \   0000019A   0x9003             STR      R0,[SP, #+12]
   \   0000019C   0x232D             MOVS     R3,#+45
   \   0000019E   0x200C             MOVS     R0,#+12
   \   000001A0   0x9002             STR      R0,[SP, #+8]
   \   000001A2   0x2250             MOVS     R2,#+80
   \   000001A4   0x2002             MOVS     R0,#+2
   \   000001A6   0x9001             STR      R0,[SP, #+4]
   \   000001A8   0x2196             MOVS     R1,#+150
   \   000001AA   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000001AE   0x9000             STR      R0,[SP, #+0]
   \   000001B0   0x20FA             MOVS     R0,#+250
   \   000001B2   0x.... 0x....      BL       TEXT_CreateEx
   \   000001B6   0xF8A8 0x0008      STRH     R0,[R8, #+8]
    901          			}
    902          			buttonFanstate.btnHandle = BUTTON_CreateEx(340+10,150,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 304);
   \   000001BA   0x232D             MOVS     R3,#+45
   \   000001BC   0xF44F 0x7098      MOV      R0,#+304
   \   000001C0   0x9003             STR      R0,[SP, #+12]
   \   000001C2   0x461A             MOV      R2,R3
   \   000001C4   0x2000             MOVS     R0,#+0
   \   000001C6   0x9002             STR      R0,[SP, #+8]
   \   000001C8   0x2196             MOVS     R1,#+150
   \   000001CA   0x2002             MOVS     R0,#+2
   \   000001CC   0x9001             STR      R0,[SP, #+4]
   \   000001CE   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000001D2   0x9000             STR      R0,[SP, #+0]
   \   000001D4   0xF44F 0x70AF      MOV      R0,#+350
   \   000001D8   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001DC   0xF8AA 0x0030      STRH     R0,[R10, #+48]
   \   000001E0   0x9704             STR      R7,[SP, #+16]
   \   000001E2   0xF44F 0x70B0      MOV      R0,#+352
   \   000001E6   0x9003             STR      R0,[SP, #+12]
   \   000001E8   0x232D             MOVS     R3,#+45
   \   000001EA   0x200C             MOVS     R0,#+12
   \   000001EC   0x9002             STR      R0,[SP, #+8]
   \   000001EE   0x2250             MOVS     R2,#+80
   \   000001F0   0x2002             MOVS     R0,#+2
   \   000001F2   0x9001             STR      R0,[SP, #+4]
   \   000001F4   0x2196             MOVS     R1,#+150
   \   000001F6   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000001FA   0x9000             STR      R0,[SP, #+0]
   \   000001FC   0xF240 0x108B      MOVW     R0,#+395
    903          			Fan_Pwm = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10, 150, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,  GUI_ID_TEXT0, " ");
   \   00000200   0x.... 0x....      BL       TEXT_CreateEx
   \   00000204   0xF8A8 0x0006      STRH     R0,[R8, #+6]
    904          		
    905          			printingBar = PROGBAR_CreateEx(205,0, 270, 40, hPrintingWnd, WM_CF_SHOW, 0, 0);
   \   00000208   0x2328             MOVS     R3,#+40
   \   0000020A   0x2000             MOVS     R0,#+0
   \   0000020C   0x9003             STR      R0,[SP, #+12]
   \   0000020E   0x9002             STR      R0,[SP, #+8]
   \   00000210   0xF44F 0x7287      MOV      R2,#+270
   \   00000214   0x2002             MOVS     R0,#+2
   \   00000216   0x9001             STR      R0,[SP, #+4]
   \   00000218   0x2100             MOVS     R1,#+0
   \   0000021A   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   0000021E   0x9000             STR      R0,[SP, #+0]
   \   00000220   0x20CD             MOVS     R0,#+205
   \   00000222   0x.... 0x....      BL       PROGBAR_CreateEx
   \   00000226   0x81B0             STRH     R0,[R6, #+12]
    906          
    907          			buttonTime.btnHandle = BUTTON_CreateEx(205,50,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 305);		
   \   00000228   0xF240 0x1B31      MOVW     R11,#+305
   \   0000022C   0x2000             MOVS     R0,#+0
   \   0000022E   0x9002             STR      R0,[SP, #+8]
   \   00000230   0x232D             MOVS     R3,#+45
   \   00000232   0x2002             MOVS     R0,#+2
   \   00000234   0x9001             STR      R0,[SP, #+4]
   \   00000236   0xF8CD 0xB00C      STR      R11,[SP, #+12]
   \   0000023A   0x461A             MOV      R2,R3
   \   0000023C   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000240   0x9000             STR      R0,[SP, #+0]
   \   00000242   0x2132             MOVS     R1,#+50
   \   00000244   0x20CD             MOVS     R0,#+205
   \   00000246   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000024A   0xF8AA 0x0060      STRH     R0,[R10, #+96]
    908          			printTimeLeft = TEXT_CreateEx(205+STATE_PIC_X_PIXEL,50,80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
   \   0000024E   0x9704             STR      R7,[SP, #+16]
   \   00000250   0xF44F 0x70B0      MOV      R0,#+352
   \   00000254   0x9003             STR      R0,[SP, #+12]
   \   00000256   0x232D             MOVS     R3,#+45
   \   00000258   0x200C             MOVS     R0,#+12
   \   0000025A   0x9002             STR      R0,[SP, #+8]
   \   0000025C   0x2250             MOVS     R2,#+80
   \   0000025E   0x2002             MOVS     R0,#+2
   \   00000260   0x9001             STR      R0,[SP, #+4]
   \   00000262   0x2132             MOVS     R1,#+50
   \   00000264   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000268   0x9000             STR      R0,[SP, #+0]
   \   0000026A   0x20FA             MOVS     R0,#+250
   \   0000026C   0x.... 0x....      BL       TEXT_CreateEx
   \   00000270   0x81F0             STRH     R0,[R6, #+14]
    909          		
    910          			buttonZpos.btnHandle = BUTTON_CreateEx(340+10,50,STATE_PIC_X_PIXEL,STATE_PIC_Y_PIXEL,hPrintingWnd, BUTTON_CF_SHOW, 0, 306);
   \   00000272   0x232D             MOVS     R3,#+45
   \   00000274   0xF44F 0x7099      MOV      R0,#+306
   \   00000278   0x9003             STR      R0,[SP, #+12]
   \   0000027A   0x461A             MOV      R2,R3
   \   0000027C   0x2000             MOVS     R0,#+0
   \   0000027E   0x9002             STR      R0,[SP, #+8]
   \   00000280   0x2132             MOVS     R1,#+50
   \   00000282   0x2002             MOVS     R0,#+2
   \   00000284   0x9001             STR      R0,[SP, #+4]
   \   00000286   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   0000028A   0x9000             STR      R0,[SP, #+0]
   \   0000028C   0xF44F 0x70AF      MOV      R0,#+350
   \   00000290   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000294   0xF8AA 0x0078      STRH     R0,[R10, #+120]
    911          			Zpos = TEXT_CreateEx(340+STATE_PIC_X_PIXEL+10, 50, 80, STATE_PIC_Y_PIXEL, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER, GUI_ID_TEXT0, " ");
   \   00000298   0x9704             STR      R7,[SP, #+16]
   \   0000029A   0xF44F 0x70B0      MOV      R0,#+352
   \   0000029E   0x9003             STR      R0,[SP, #+12]
   \   000002A0   0x232D             MOVS     R3,#+45
   \   000002A2   0x200C             MOVS     R0,#+12
   \   000002A4   0x9002             STR      R0,[SP, #+8]
   \   000002A6   0x2250             MOVS     R2,#+80
   \   000002A8   0x2002             MOVS     R0,#+2
   \   000002AA   0x9001             STR      R0,[SP, #+4]
   \   000002AC   0x2132             MOVS     R1,#+50
   \   000002AE   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   000002B2   0x9000             STR      R0,[SP, #+0]
   \   000002B4   0xF240 0x108B      MOVW     R0,#+395
   \   000002B8   0x.... 0x....      BL       TEXT_CreateEx
   \   000002BC   0x8230             STRH     R0,[R6, #+16]
    912          		
    913          			//printTimeLeft = TEXT_CreateEx(205+10,50,135, 30, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT|TEXT_CF_VCENTER,	GUI_ID_TEXT0, " ");
    914          		
    915          			//buttonZpos.btnHandle = BUTTON_CreateEx(440,249,50,50,hPrintingWnd, BUTTON_CF_SHOW, 0, 303);
    916          			//Zpos = TEXT_CreateEx(340, 50, 135, 30, hPrintingWnd, WM_CF_SHOW, TEXT_CF_RIGHT|TEXT_CF_VCENTER, GUI_ID_TEXT0, " ");
    917          		
    918          			PROGBAR_SetBarColor(printingBar, 0, gCfgItems.printing_bar_color_left);
   \   000002BE   0x2100             MOVS     R1,#+0
   \   000002C0   0x6C2A             LDR      R2,[R5, #+64]
   \   000002C2   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000002C6   0x.... 0x....      BL       PROGBAR_SetBarColor
    919          			PROGBAR_SetBarColor(printingBar, 1, gCfgItems.printing_bar_color_right);
   \   000002CA   0x6C6A             LDR      R2,[R5, #+68]
   \   000002CC   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000002D0   0x2101             MOVS     R1,#+1
   \   000002D2   0x.... 0x....      BL       PROGBAR_SetBarColor
    920          			PROGBAR_SetTextColor(printingBar, 0, gCfgItems.printing_bar_text_color_left);
   \   000002D6   0x6CAA             LDR      R2,[R5, #+72]
   \   000002D8   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000002DC   0x2100             MOVS     R1,#+0
   \   000002DE   0x.... 0x....      BL       PROGBAR_SetTextColor
    921          			PROGBAR_SetTextColor(printingBar, 1, gCfgItems.printing_bar_text_color_right);
   \   000002E2   0x6CEA             LDR      R2,[R5, #+76]
   \   000002E4   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000002E8   0x2101             MOVS     R1,#+1
   \   000002EA   0x.... 0x....      BL       PROGBAR_SetTextColor
    922          			
    923          			PROGBAR_SetFont(printingBar, &FONT_TITLE);
   \   000002EE   0xF9B6 0x000C      LDRSH    R0,[R6, #+12]
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable32_9
   \   000002F6   0x.... 0x....      BL       PROGBAR_SetFont
    924          			
    925          			buttonPause.btnHandle = BUTTON_CreateEx(5,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 306);//alloc_win_id());
   \   000002FA   0xF44F 0x7099      MOV      R0,#+306
   \   000002FE   0x9003             STR      R0,[SP, #+12]
   \   00000300   0x2350             MOVS     R3,#+80
   \   00000302   0x2000             MOVS     R0,#+0
   \   00000304   0x9002             STR      R0,[SP, #+8]
   \   00000306   0x2296             MOVS     R2,#+150
   \   00000308   0x2002             MOVS     R0,#+2
   \   0000030A   0x9001             STR      R0,[SP, #+4]
   \   0000030C   0x21CC             MOVS     R1,#+204
   \   0000030E   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000312   0x9000             STR      R0,[SP, #+0]
   \   00000314   0x2005             MOVS     R0,#+5
   \   00000316   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000031A   0x82B0             STRH     R0,[R6, #+20]
    926          			buttonStop.btnHandle = BUTTON_CreateEx(165,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 307);//alloc_win_id());
   \   0000031C   0x2350             MOVS     R3,#+80
   \   0000031E   0xF240 0x1033      MOVW     R0,#+307
   \   00000322   0x9003             STR      R0,[SP, #+12]
   \   00000324   0x2296             MOVS     R2,#+150
   \   00000326   0x2000             MOVS     R0,#+0
   \   00000328   0x9002             STR      R0,[SP, #+8]
   \   0000032A   0x21CC             MOVS     R1,#+204
   \   0000032C   0x2002             MOVS     R0,#+2
   \   0000032E   0x9001             STR      R0,[SP, #+4]
   \   00000330   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000334   0x9000             STR      R0,[SP, #+0]
   \   00000336   0x20A5             MOVS     R0,#+165
   \   00000338   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000033C   0xF8A8 0x000C      STRH     R0,[R8, #+12]
    927          			buttonOperat.btnHandle = BUTTON_CreateEx(325,204,150,80,hPrintingWnd, BUTTON_CF_SHOW, 0, 305);//alloc_win_id());
   \   00000340   0xF8CD 0xB00C      STR      R11,[SP, #+12]
   \   00000344   0x2000             MOVS     R0,#+0
   \   00000346   0x9002             STR      R0,[SP, #+8]
   \   00000348   0x2350             MOVS     R3,#+80
   \   0000034A   0x2002             MOVS     R0,#+2
   \   0000034C   0x9001             STR      R0,[SP, #+4]
   \   0000034E   0x2296             MOVS     R2,#+150
   \   00000350   0xF9B6 0x000A      LDRSH    R0,[R6, #+10]
   \   00000354   0x9000             STR      R0,[SP, #+0]
   \   00000356   0x21CC             MOVS     R1,#+204
   \   00000358   0xF240 0x1045      MOVW     R0,#+325
   \   0000035C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000360   0x85B0             STRH     R0,[R6, #+44]
    928          
    929          			BUTTON_SetBmpFileName(buttonTime.btnHandle, "bmp_time_state.bin",0);
   \   00000362   0x2200             MOVS     R2,#+0
   \   00000364   0xF9BA 0x0060      LDRSH    R0,[R10, #+96]
   \   00000368   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_time_state.bin">`
   \   0000036C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    930          			BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos_state.bin",0);
   \   00000370   0xF9BA 0x0078      LDRSH    R0,[R10, #+120]
   \   00000374   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_zpos_state.bin">`
   \   00000378   0x2200             MOVS     R2,#+0
   \   0000037A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    931          			
    932          
    933          		BUTTON_SetBmpFileName(buttonExt1.btnHandle, "bmp_ext1_state.bin",0);
   \   0000037E   0x2200             MOVS     R2,#+0
   \   00000380   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_ext1_state.bin">`
   \   00000384   0xF93A 0x0002      LDRSH    R0,[R10, R2]
   \   00000388   0x.... 0x....      BL       BUTTON_SetBmpFileName
    934          		if(mksCfg.extruders == 2 && gCfgItems.singleNozzle == 0)
   \   0000038C   0xF899 0x00F7      LDRB     R0,[R9, #+247]
   \   00000390   0x2802             CMP      R0,#+2
   \   00000392   0xBF04             ITT      EQ 
   \   00000394   0xF894 0x02B2      LDRBEQ   R0,[R4, #+690]
   \   00000398   0x2800             CMPEQ    R0,#+0
   \   0000039A   0xD106             BNE.N    ??draw_printing_4
    935          		{
    936          			BUTTON_SetBmpFileName(buttonExt2.btnHandle, "bmp_ext2_state.bin",0);
   \   0000039C   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000003A0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_ext2_state.bin">`
   \   000003A4   0x2200             MOVS     R2,#+0
   \   000003A6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    937          		}
    938          		//if(gCfgItems.custom_bed_flag == 1)
    939          		{
    940          			BUTTON_SetBmpFileName(buttonBedstate.btnHandle, "bmp_bed_state.bin",0);
   \                     ??draw_printing_4: (+1)
   \   000003AA   0xF9BA 0x0048      LDRSH    R0,[R10, #+72]
   \   000003AE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_bed_state.bin">`
   \   000003B2   0x2200             MOVS     R2,#+0
   \   000003B4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    941          		}
    942          		BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_state.bin",0);
   \   000003B8   0xF9BA 0x0030      LDRSH    R0,[R10, #+48]
   \   000003BC   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_fan_state.bin">`
   \   000003C0   0x2200             MOVS     R2,#+0
   \   000003C2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    943          		
    944          		//BUTTON_SetBmpFileName(buttonPrintSpeed.btnHandle, "bmp_speed_state.bin",0);
    945          		
    946          		//BUTTON_SetBmpFileName(buttonZpos.btnHandle, "bmp_zpos.bin",0);
    947          		BUTTON_SetBitmapEx(buttonTime.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   000003C6   0x2000             MOVS     R0,#+0
   \   000003C8   0x9000             STR      R0,[SP, #+0]
   \   000003CA   0x4601             MOV      R1,R0
   \   000003CC   0x.... 0x....      LDR.W    R7,??DataTable32_12
   \   000003D0   0xF9BA 0x0060      LDRSH    R0,[R10, #+96]
   \   000003D4   0x2300             MOVS     R3,#+0
   \   000003D6   0x463A             MOV      R2,R7
   \   000003D8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    948          		BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);				
   \   000003DC   0x2000             MOVS     R0,#+0
   \   000003DE   0x9000             STR      R0,[SP, #+0]
   \   000003E0   0x4603             MOV      R3,R0
   \   000003E2   0x4601             MOV      R1,R0
   \   000003E4   0xF9BA 0x0078      LDRSH    R0,[R10, #+120]
   \   000003E8   0x463A             MOV      R2,R7
   \   000003EA   0x.... 0x....      BL       BUTTON_SetBitmapEx
    949          		BUTTON_SetBitmapEx(buttonExt1.btnHandle, 0, &bmp_struct_50, 0, 0);	
   \   000003EE   0x2000             MOVS     R0,#+0
   \   000003F0   0x9000             STR      R0,[SP, #+0]
   \   000003F2   0x4603             MOV      R3,R0
   \   000003F4   0x4601             MOV      R1,R0
   \   000003F6   0xF93A 0x0000      LDRSH    R0,[R10, R0]
   \   000003FA   0x463A             MOV      R2,R7
   \   000003FC   0x.... 0x....      BL       BUTTON_SetBitmapEx
    950          		if(mksCfg.extruders == 2 && gCfgItems.singleNozzle == 0)
   \   00000400   0xF899 0x00F7      LDRB     R0,[R9, #+247]
   \   00000404   0x2802             CMP      R0,#+2
   \   00000406   0xBF04             ITT      EQ 
   \   00000408   0xF894 0x02B2      LDRBEQ   R0,[R4, #+690]
   \   0000040C   0x2800             CMPEQ    R0,#+0
   \   0000040E   0xD107             BNE.N    ??draw_printing_5
    951          		{
    952          			BUTTON_SetBitmapEx(buttonExt2.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   00000410   0x9000             STR      R0,[SP, #+0]
   \   00000412   0x2300             MOVS     R3,#+0
   \   00000414   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000418   0x463A             MOV      R2,R7
   \   0000041A   0x2100             MOVS     R1,#+0
   \   0000041C   0x.... 0x....      BL       BUTTON_SetBitmapEx
    953          		}
    954          		//if(gCfgItems.custom_bed_flag == 1)
    955          		{
    956          			BUTTON_SetBitmapEx(buttonBedstate.btnHandle, 0, &bmp_struct_50, 0, 0);
   \                     ??draw_printing_5: (+1)
   \   00000420   0x2000             MOVS     R0,#+0
   \   00000422   0x9000             STR      R0,[SP, #+0]
   \   00000424   0x4601             MOV      R1,R0
   \   00000426   0xF9BA 0x0048      LDRSH    R0,[R10, #+72]
   \   0000042A   0x2300             MOVS     R3,#+0
   \   0000042C   0x463A             MOV      R2,R7
   \   0000042E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    957          		}
    958          		BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   00000432   0x2000             MOVS     R0,#+0
   \   00000434   0x9000             STR      R0,[SP, #+0]
   \   00000436   0x4603             MOV      R3,R0
   \   00000438   0x4601             MOV      R1,R0
   \   0000043A   0xF9BA 0x0030      LDRSH    R0,[R10, #+48]
   \   0000043E   0x463A             MOV      R2,R7
   \   00000440   0x.... 0x....      BL       BUTTON_SetBitmapEx
    959          		//BUTTON_SetBitmapEx(buttonPrintSpeed.btnHandle, 0, &bmp_struct_50, 0, 0);
    960          		BUTTON_SetBitmapEx(buttonZpos.btnHandle, 0, &bmp_struct_50, 0, 0);
   \   00000444   0x2000             MOVS     R0,#+0
   \   00000446   0x9000             STR      R0,[SP, #+0]
   \   00000448   0x4603             MOV      R3,R0
   \   0000044A   0x4601             MOV      R1,R0
   \   0000044C   0xF9BA 0x0078      LDRSH    R0,[R10, #+120]
   \   00000450   0x463A             MOV      R2,R7
   \   00000452   0x.... 0x....      BL       BUTTON_SetBitmapEx
    961          		if(gCfgItems.standby_mode==1 && mksReprint.mks_printer_state == MKS_REPRINTED && button_disp_pause_state==1)
   \   00000456   0x.... 0x....      LDR.W    R10,??DataTable30_2
   \   0000045A   0xF894 0x12B4      LDRB     R1,[R4, #+692]
   \   0000045E   0xF89A 0x00AC      LDRB     R0,[R10, #+172]
   \   00000462   0x2901             CMP      R1,#+1
   \   00000464   0xBF08             IT       EQ 
   \   00000466   0x28AC             CMPEQ    R0,#+172
   \   00000468   0xD00A             BEQ.N    ??draw_printing_6
    962          		{
    963          			BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
    964          		}
    965          		else
    966          		{
    967          			if((mksReprint.mks_printer_state == MKS_REPRINTING)
    968          				||(mksReprint.mks_printer_state == MKS_PAUSING)
    969          				||(mksReprint.mks_printer_state == MKS_PAUSED))
   \   0000046A   0x28AB             CMP      R0,#+171
   \   0000046C   0xBF1C             ITT      NE 
   \   0000046E   0x28A9             CMPNE    R0,#+169
   \   00000470   0x28AA             CMPNE    R0,#+170
   \   00000472   0xD105             BNE.N    ??draw_printing_6
    970          			{
    971          				BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_resume.bin",1);
   \   00000474   0x2201             MOVS     R2,#+1
   \   00000476   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_resume.bin">`
   \   0000047A   0xE004             B.N      ??draw_printing_7
   \                     ??draw_printing_2:
   \   0000047C   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    
    972          			}
    973          			else
    974          			{
    975          				BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",1);
   \                     ??draw_printing_6: (+1)
   \   00000480   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pause.bin">`
   \   00000484   0x2201             MOVS     R2,#+1
   \                     ??draw_printing_7: (+1)
   \   00000486   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   0000048A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    976          			}
    977          		}
    978          		BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",1);
   \   0000048E   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   00000492   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_stop.bin">`
   \   00000496   0x2201             MOVS     R2,#+1
   \   00000498   0x.... 0x....      BL       BUTTON_SetBmpFileName
    979          		BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_operate.bin",1);
   \   0000049C   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   000004A0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_operate.bin">`
   \   000004A4   0x2201             MOVS     R2,#+1
   \   000004A6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    980          		
    981          		BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000004AA   0x6A2A             LDR      R2,[R5, #+32]
   \   000004AC   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   000004B0   0x2101             MOVS     R1,#+1
   \   000004B2   0x.... 0x....      BL       BUTTON_SetBkColor
    982          		BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004B6   0x6A2A             LDR      R2,[R5, #+32]
   \   000004B8   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   000004BC   0x2100             MOVS     R1,#+0
   \   000004BE   0x.... 0x....      BL       BUTTON_SetBkColor
    983          		BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000004C2   0x6A2A             LDR      R2,[R5, #+32]
   \   000004C4   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   000004C8   0x2101             MOVS     R1,#+1
   \   000004CA   0x.... 0x....      BL       BUTTON_SetBkColor
    984          		BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004CE   0x6A2A             LDR      R2,[R5, #+32]
   \   000004D0   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   000004D4   0x2100             MOVS     R1,#+0
   \   000004D6   0x.... 0x....      BL       BUTTON_SetBkColor
    985          		BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   000004DA   0x6A2A             LDR      R2,[R5, #+32]
   \   000004DC   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   000004E0   0x2101             MOVS     R1,#+1
   \   000004E2   0x.... 0x....      BL       BUTTON_SetBkColor
    986          		BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004E6   0x6A2A             LDR      R2,[R5, #+32]
   \   000004E8   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   000004EC   0x2100             MOVS     R1,#+0
   \   000004EE   0x.... 0x....      BL       BUTTON_SetBkColor
    987          		
    988          		BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004F2   0x6A6A             LDR      R2,[R5, #+36]
   \   000004F4   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   000004F8   0x2101             MOVS     R1,#+1
   \   000004FA   0x.... 0x....      BL       BUTTON_SetTextColor
    989          		BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004FE   0x6A6A             LDR      R2,[R5, #+36]
   \   00000500   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   00000504   0x2100             MOVS     R1,#+0
   \   00000506   0x.... 0x....      BL       BUTTON_SetTextColor
    990          		BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000050A   0x6A6A             LDR      R2,[R5, #+36]
   \   0000050C   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   00000510   0x2101             MOVS     R1,#+1
   \   00000512   0x.... 0x....      BL       BUTTON_SetTextColor
    991          		BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000516   0x6A6A             LDR      R2,[R5, #+36]
   \   00000518   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   0000051C   0x2100             MOVS     R1,#+0
   \   0000051E   0x.... 0x....      BL       BUTTON_SetTextColor
    992          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   00000522   0x6A6A             LDR      R2,[R5, #+36]
   \   00000524   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   00000528   0x2101             MOVS     R1,#+1
   \   0000052A   0x.... 0x....      BL       BUTTON_SetTextColor
    993          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   0000052E   0x6A6A             LDR      R2,[R5, #+36]
   \   00000530   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   00000534   0x2100             MOVS     R1,#+0
   \   00000536   0x.... 0x....      BL       BUTTON_SetTextColor
    994          
    995          	
    996          		BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct_150, 0, 0); 
   \   0000053A   0x2000             MOVS     R0,#+0
   \   0000053C   0x9000             STR      R0,[SP, #+0]
   \   0000053E   0x4601             MOV      R1,R0
   \   00000540   0x.... 0x....      LDR.W    R7,??DataTable30_10
   \   00000544   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   00000548   0x2300             MOVS     R3,#+0
   \   0000054A   0x463A             MOV      R2,R7
   \   0000054C   0x.... 0x....      BL       BUTTON_SetBitmapEx
    997          		BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000550   0x2000             MOVS     R0,#+0
   \   00000552   0x9000             STR      R0,[SP, #+0]
   \   00000554   0x4603             MOV      R3,R0
   \   00000556   0x4601             MOV      R1,R0
   \   00000558   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   0000055C   0x463A             MOV      R2,R7
   \   0000055E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    998          		BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, 0, 0);
   \   00000562   0x2000             MOVS     R0,#+0
   \   00000564   0x9000             STR      R0,[SP, #+0]
   \   00000566   0x4603             MOV      R3,R0
   \   00000568   0x4601             MOV      R1,R0
   \   0000056A   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   0000056E   0x463A             MOV      R2,R7
   \   00000570   0x.... 0x....      BL       BUTTON_SetBitmapEx
    999          	
   1000          		//TEXT_SetBkColor(Printing_speed,  gCfgItems.state_background_color);
   1001          		//TEXT_SetTextColor(Printing_speed, gCfgItems.state_text_color);
   1002          		TEXT_SetBkColor(Zpos,  gCfgItems.background_color);
   \   00000574   0x6961             LDR      R1,[R4, #+20]
   \   00000576   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   0000057A   0x.... 0x....      BL       TEXT_SetBkColor
   1003          		TEXT_SetTextColor(Zpos, gCfgItems.title_color);
   \   0000057E   0x6869             LDR      R1,[R5, #+4]
   \   00000580   0xF9B6 0x0010      LDRSH    R0,[R6, #+16]
   \   00000584   0x.... 0x....      BL       TEXT_SetTextColor
   1004          		TEXT_SetBkColor(printTimeLeft,	gCfgItems.background_color);
   \   00000588   0x6961             LDR      R1,[R4, #+20]
   \   0000058A   0xF9B6 0x000E      LDRSH    R0,[R6, #+14]
   \   0000058E   0x.... 0x....      BL       TEXT_SetBkColor
   1005          		TEXT_SetTextColor(printTimeLeft, gCfgItems.title_color);	
   \   00000592   0x6869             LDR      R1,[R5, #+4]
   \   00000594   0xF9B6 0x000E      LDRSH    R0,[R6, #+14]
   \   00000598   0x.... 0x....      BL       TEXT_SetTextColor
   1006          		TEXT_SetBkColor(E1_Temp,  gCfgItems.background_color);
   \   0000059C   0x6961             LDR      R1,[R4, #+20]
   \   0000059E   0xF9B8 0x0002      LDRSH    R0,[R8, #+2]
   \   000005A2   0x.... 0x....      BL       TEXT_SetBkColor
   1007          		TEXT_SetTextColor(E1_Temp, gCfgItems.title_color);
   \   000005A6   0x6869             LDR      R1,[R5, #+4]
   \   000005A8   0xF9B8 0x0002      LDRSH    R0,[R8, #+2]
   \   000005AC   0x.... 0x....      BL       TEXT_SetTextColor
   1008                  if(mksCfg.extruders == 2 && gCfgItems.singleNozzle == 0){
   \   000005B0   0xF899 0x00F7      LDRB     R0,[R9, #+247]
   \   000005B4   0x2802             CMP      R0,#+2
   \   000005B6   0xBF04             ITT      EQ 
   \   000005B8   0xF894 0x02B2      LDRBEQ   R0,[R4, #+690]
   \   000005BC   0x2800             CMPEQ    R0,#+0
   \   000005BE   0xD109             BNE.N    ??draw_printing_8
   1009          		    TEXT_SetBkColor(E2_Temp,  gCfgItems.background_color);
   \   000005C0   0x6961             LDR      R1,[R4, #+20]
   \   000005C2   0xF9B8 0x0004      LDRSH    R0,[R8, #+4]
   \   000005C6   0x.... 0x....      BL       TEXT_SetBkColor
   1010          		    TEXT_SetTextColor(E2_Temp, gCfgItems.title_color);
   \   000005CA   0x6869             LDR      R1,[R5, #+4]
   \   000005CC   0xF9B8 0x0004      LDRSH    R0,[R8, #+4]
   \   000005D0   0x.... 0x....      BL       TEXT_SetTextColor
   1011                  }
   1012          		TEXT_SetBkColor(Bed_Temp,  gCfgItems.background_color);
   \                     ??draw_printing_8: (+1)
   \   000005D4   0x6961             LDR      R1,[R4, #+20]
   \   000005D6   0xF9B8 0x0008      LDRSH    R0,[R8, #+8]
   \   000005DA   0x.... 0x....      BL       TEXT_SetBkColor
   1013          		TEXT_SetTextColor(Bed_Temp, gCfgItems.title_color);
   \   000005DE   0x6869             LDR      R1,[R5, #+4]
   \   000005E0   0xF9B8 0x0008      LDRSH    R0,[R8, #+8]
   \   000005E4   0x.... 0x....      BL       TEXT_SetTextColor
   1014          		TEXT_SetBkColor(Fan_Pwm,  gCfgItems.background_color);
   \   000005E8   0x6961             LDR      R1,[R4, #+20]
   \   000005EA   0xF9B8 0x0006      LDRSH    R0,[R8, #+6]
   \   000005EE   0x.... 0x....      BL       TEXT_SetBkColor
   1015          		TEXT_SetTextColor(Fan_Pwm, gCfgItems.title_color);
   \   000005F2   0x6869             LDR      R1,[R5, #+4]
   \   000005F4   0xF9B8 0x0006      LDRSH    R0,[R8, #+6]
   \   000005F8   0x.... 0x....      BL       TEXT_SetTextColor
   1016          		//TEXT_SetBkColor(Autoclose,	gCfgItems.state_background_color);
   1017          		//TEXT_SetTextColor(Autoclose, gCfgItems.state_text_color);
   1018          		
   1019          		BUTTON_SetTextAlign(buttonOperat.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);
   \   000005FC   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   00000600   0x211C             MOVS     R1,#+28
   \   00000602   0x.... 0x....      BL       BUTTON_SetTextAlign
   1020          		BUTTON_SetTextAlign(buttonStop.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);
   \   00000606   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   0000060A   0x211C             MOVS     R1,#+28
   \   0000060C   0x.... 0x....      BL       BUTTON_SetTextAlign
   1021          		BUTTON_SetTextAlign(buttonPause.btnHandle,GUI_TA_VCENTER | GUI_CUSTOM_POS);		
   \   00000610   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   00000614   0x211C             MOVS     R1,#+28
   \   00000616   0x.... 0x....      BL       BUTTON_SetTextAlign
   1022          		if(gCfgItems.multiple_language != 0)
   \   0000061A   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   0000061E   0xB1C0             CBZ.N    R0,??draw_printing_9
   1023          		{
   1024          			BUTTON_SetText(buttonOperat.btnHandle, printing_menu.option);
   \   00000620   0x....             LDR.N    R4,??DataTable30_11
   \   00000622   0xF9B6 0x002C      LDRSH    R0,[R6, #+44]
   \   00000626   0x6861             LDR      R1,[R4, #+4]
   \   00000628   0x.... 0x....      BL       BUTTON_SetText
   1025          			BUTTON_SetText(buttonStop.btnHandle,printing_menu.stop);
   \   0000062C   0x6A21             LDR      R1,[R4, #+32]
   \   0000062E   0xF9B8 0x000C      LDRSH    R0,[R8, #+12]
   \   00000632   0x.... 0x....      BL       BUTTON_SetText
   \   00000636   0xF89A 0x00AC      LDRB     R0,[R10, #+172]
   \   0000063A   0x28AB             CMP      R0,#+171
   \   0000063C   0xBF1C             ITT      NE 
   \   0000063E   0x28A9             CMPNE    R0,#+169
   \   00000640   0x28AA             CMPNE    R0,#+170
   \   00000642   0xD101             BNE.N    ??draw_printing_10
   1026          			//if((mksReprint.mks_printer_state == MKS_REPRINTING)||(mksReprint.mks_printer_state == MKS_PAUSING))
   1027                      if((mksReprint.mks_printer_state == MKS_REPRINTING)
   1028                          ||(mksReprint.mks_printer_state == MKS_PAUSING)
   1029                          ||(mksReprint.mks_printer_state == MKS_PAUSED))
   1030          
   1031                          BUTTON_SetText(buttonPause.btnHandle, printing_menu.resume);
   \   00000644   0x69E1             LDR      R1,[R4, #+28]
   \   00000646   0xE000             B.N      ??draw_printing_11
   1032          			else
   1033          				BUTTON_SetText(buttonPause.btnHandle, printing_menu.pause);		
   \                     ??draw_printing_10: (+1)
   \   00000648   0x69A1             LDR      R1,[R4, #+24]
   \                     ??draw_printing_11: (+1)
   \   0000064A   0xF9B6 0x0014      LDRSH    R0,[R6, #+20]
   \   0000064E   0x.... 0x....      BL       BUTTON_SetText
   1034          		}
   1035          		
   1036          		disp_sprayer_tem_printing();
   \                     ??draw_printing_9: (+1)
   \   00000652   0x.... 0x....      BL       disp_sprayer_tem_printing
   1037          		disp_bed_temp_printing();
   \   00000656   0x.... 0x....      BL       disp_bed_temp_printing
   1038          		disp_fan_speed_printing();
   \   0000065A   0xB005             ADD      SP,SP,#+20
   \   0000065C   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000660   0x....             B.N      disp_fan_speed_printing
   1039          		//disp_printing_speed();
   1040          
   1041          #else
   1042          
   1043          
   1044                  hPrintingWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight / 2, WM_CF_SHOW, cbPrintingWin, 0);
   1045          
   1046                  printingBar = PROGBAR_CreateEx(10, 20, LCD_WIDTH * 3 / 4 - 20, 30, hPrintingWnd, WM_CF_SHOW, 0, 0);
   1047          
   1048                  PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
   1049          
   1050                  PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
   1051                  PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz14);
   1052          
   1053                  buttonOperat.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4 , 0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hPrintingWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   1054          
   1055                  BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   1056                  BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   1057                  BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_textcolor);
   1058                  BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   1059                  
   1060          
   1061                  BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_menu.bin",0);
   1062                  BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);    
   1063                  if(gCfgItems.multiple_language != 0)
   1064                  {
   1065                      BUTTON_SetText(buttonOperat.btnHandle,printing_menu.option);
   1066                  }
   1067          
   1068                  printTimeLeft = TEXT_CreateEx(10, imgHeight * 3/ 8 - 5, LCD_WIDTH * 3 / 4 -10, imgHeight / 10, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT0, "");
   1069          
   1070                  sprayTem1 = TEXT_CreateEx(10, imgHeight - 30, 160, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
   1071          
   1072                  sprayTem2 = TEXT_CreateEx(10+78, imgHeight - 30, 160, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
   1073          
   1074                  BedTem = TEXT_CreateEx(170, imgHeight - 30, 80, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
   1075          
   1076                  fanSpeed = TEXT_CreateEx(300, imgHeight - 30, 60, 25, hPrintingWnd, WM_CF_SHOW, TEXT_CF_LEFT,  GUI_ID_TEXT2, "");
   1077          
   1078                  start_print_time();
   1079          
   1080                  disp_print_time();
   1081          
   1082                  TEXT_SetBkColor(printTimeLeft, gCfgItems.background_color); 
   1083          
   1084                  Pic_Read((uint8_t *)"bmp_extru1_no_words.bin",bmp_public_buf);
   1085                  GUI_DrawBitmap(&bmp_struct,  5, titleHeight + imgHeight/2 + 2);
   1086                  if(mksCfg.extruders == 2)
   1087                  {
   1088                      Pic_Read((uint8_t *)"bmp_extru2_no_words.bin",bmp_public_buf);
   1089                      GUI_DrawBitmap(&bmp_struct,  83, titleHeight + imgHeight/2 + 2);
   1090          
   1091                  }
   1092                  if(mksCfg.has_temp_bed == 1)
   1093                  {
   1094                      Pic_Read((uint8_t *)"bmp_bed_no_words.bin",bmp_public_buf);
   1095                      GUI_DrawBitmap(&bmp_struct,  161, titleHeight + imgHeight/2 + 2);
   1096                  }
   1097          
   1098                  Pic_Read((uint8_t *)"bmp_fan_no_words.bin",bmp_public_buf);
   1099                  GUI_DrawBitmap(&bmp_struct,  239, titleHeight + imgHeight/2 + 2);
   1100          
   1101                  disp_sprayer_tem_printing();
   1102                  disp_bed_temp_printing();
   1103                  disp_fan_speed_printing();  
   1104          #endif
   1105          	
   1106          	
   1107          }
   1108          #endif

   \                                 In section .text, align 2, keep-with-next
   1109          void reset_print_time()
   1110          {
   1111          	//print_time.days = 0;
   1112          	print_time.hours = 0;
   \                     reset_print_time: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable32_13
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x8041             STRH     R1,[R0, #+2]
   1113          	print_time.minutes = 0;
   \   00000008   0x7101             STRB     R1,[R0, #+4]
   1114          	print_time.seconds = 0;
   \   0000000A   0x7141             STRB     R1,[R0, #+5]
   1115          	print_time.ms_10 = 0;
   \   0000000C   0x7181             STRB     R1,[R0, #+6]
   1116          	//print_time.start = 1;
   1117          }
   \   0000000E   0x4770             BX       LR               ;; return
   1118          

   \                                 In section .text, align 2, keep-with-next
   1119          void start_print_time()
   1120          {
   1121          	print_time.start = 1;
   \                     start_print_time: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable32_13
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x71C8             STRB     R0,[R1, #+7]
   1122          }
   \   00000008   0x4770             BX       LR               ;; return
   1123          

   \                                 In section .text, align 2, keep-with-next
   1124          void stop_print_time()
   1125          {
   1126          	print_time.start = 0;
   \                     stop_print_time: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable32_13
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x71C8             STRB     R0,[R1, #+7]
   1127          }
   \   00000008   0x4770             BX       LR               ;; return
   1128          #if defined(TFT35)
   1129          extern uint32_t rcv_ok_nums;

   \                                 In section .text, align 2, keep-with-next
   1130          void disp_print_time()		//disp timer -- skyblue
   1131          {
   \                     disp_print_time: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB08C             SUB      SP,SP,#+48
   1132          	char buf[30] = {0};
   \   00000006   0xA804             ADD      R0,SP,#+16
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x460B             MOV      R3,R1
   \   0000000E   0x460C             MOV      R4,R1
   \   00000010   0xC01E             STM      R0!,{R1-R4}
   \   00000012   0xC01E             STM      R0!,{R1-R4}
   1133          	
   1134          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.background_color);
   \   00000014   0x....             LDR.N    R4,??DataTable29
   \   00000016   0x.... 0x....      LDR.W    R5,??DataTable32
   \   0000001A   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   0000001E   0x6969             LDR      R1,[R5, #+20]
   \   00000020   0x.... 0x....      BL       TEXT_SetBkColor
   1135          	TEXT_SetTextColor(printTimeLeft, gCfgItems.title_color);
   \   00000024   0x69A9             LDR      R1,[R5, #+24]
   \   00000026   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   0000002A   0x.... 0x....      BL       TEXT_SetTextColor
   1136          	TEXT_SetBkColor(Zpos,gCfgItems.background_color);
   \   0000002E   0x6969             LDR      R1,[R5, #+20]
   \   00000030   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   00000034   0x.... 0x....      BL       TEXT_SetBkColor
   1137          	TEXT_SetTextColor(Zpos,gCfgItems.title_color);
   \   00000038   0x69A9             LDR      R1,[R5, #+24]
   \   0000003A   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   0000003E   0x.... 0x....      BL       TEXT_SetTextColor
   1138          		
   1139          	//TEXT_SetFont(printTimeLeft, &FONT_TITLE);
   1140          	//TEXT_SetFont(Zpos, &FONT_TITLE);
   1141          	memset(buf, 0, sizeof(buf));
   \   00000042   0x251E             MOVS     R5,#+30
   \   00000044   0x2600             MOVS     R6,#+0
   \   00000046   0x4632             MOV      R2,R6
   \   00000048   0x4629             MOV      R1,R5
   \   0000004A   0xA804             ADD      R0,SP,#+16
   \   0000004C   0x.... 0x....      BL       __aeabi_memset4
   1142          	//sprintf(buf, "T: %d%d:%d%d:%d%d  Z:", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
   1143          	sprintf(buf, "%d%d:%d%d:%d%d", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
   \   00000050   0xF994 0xC005      LDRSB    R12,[R4, #+5]
   \   00000054   0xF994 0x0005      LDRSB    R0,[R4, #+5]
   \   00000058   0x7921             LDRB     R1,[R4, #+4]
   \   0000005A   0x8863             LDRH     R3,[R4, #+2]
   \   0000005C   0xF04F 0x0E0A      MOV      LR,#+10
   \   00000060   0xFB9C 0xFEFE      SDIV     LR,R12,LR
   \   00000064   0xEB0E 0x088E      ADD      R8,LR,LR, LSL #+2
   \   00000068   0xEBAC 0x0C48      SUB      R12,R12,R8, LSL #+1
   \   0000006C   0xF8CD 0xC00C      STR      R12,[SP, #+12]
   \   00000070   0x270A             MOVS     R7,#+10
   \   00000072   0xF04F 0x0C0A      MOV      R12,#+10
   \   00000076   0xFB90 0xF0FC      SDIV     R0,R0,R12
   \   0000007A   0x9002             STR      R0,[SP, #+8]
   \   0000007C   0xFB91 0xF7F7      SDIV     R7,R1,R7
   \   00000080   0xEB07 0x0087      ADD      R0,R7,R7, LSL #+2
   \   00000084   0xEBA1 0x0040      SUB      R0,R1,R0, LSL #+1
   \   00000088   0x220A             MOVS     R2,#+10
   \   0000008A   0x9001             STR      R0,[SP, #+4]
   \   0000008C   0xFB93 0xF2F2      SDIV     R2,R3,R2
   \   00000090   0xEB02 0x0082      ADD      R0,R2,R2, LSL #+2
   \   00000094   0xEBA3 0x0340      SUB      R3,R3,R0, LSL #+1
   \   00000098   0x9700             STR      R7,[SP, #+0]
   \   0000009A   0xA804             ADD      R0,SP,#+16
   \   0000009C   0x.... 0x....      ADR.W    R1,`?<Constant "%d%d:%d%d:%d%d">`
   \   000000A0   0x.... 0x....      BL       sprintf
   1144          	//if((printerStaus == pr_idle)  &&  (gCurFileState.totalSend == 100))memset((void *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1145          	//strcat(buf,(const char *)gCfgItems.z_display_pos);
   1146          	TEXT_SetText(printTimeLeft, buf);
   \   000000A4   0xF9B4 0x000E      LDRSH    R0,[R4, #+14]
   \   000000A8   0xA904             ADD      R1,SP,#+16
   \   000000AA   0x.... 0x....      BL       TEXT_SetText
   1147          	memset(buf, ' ', sizeof(buf)-1);
   \   000000AE   0x2220             MOVS     R2,#+32
   \   000000B0   0x211D             MOVS     R1,#+29
   \   000000B2   0xA804             ADD      R0,SP,#+16
   \   000000B4   0x.... 0x....      BL       __aeabi_memset4
   1148          	TEXT_SetText(Zpos, buf);
   \   000000B8   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000000BC   0xA904             ADD      R1,SP,#+16
   \   000000BE   0x.... 0x....      BL       TEXT_SetText
   1149          	memset(buf, 0, sizeof(buf));
   \   000000C2   0x4632             MOV      R2,R6
   \   000000C4   0x4629             MOV      R1,R5
   \   000000C6   0xA804             ADD      R0,SP,#+16
   \   000000C8   0x.... 0x....      BL       __aeabi_memset4
   1150          	//sprintf(buf,"Z: %s",(const char *)gCfgItems.z_display_pos);
   1151          	sprintf(buf,"%.3f",current_position[Z_AXIS]);
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable32_14
   \   000000D0   0x6880             LDR      R0,[R0, #+8]
   \   000000D2   0x.... 0x....      BL       __aeabi_f2d
   \   000000D6   0x4602             MOV      R2,R0
   \   000000D8   0x460B             MOV      R3,R1
   \   000000DA   0x.... 0x....      ADR.W    R1,`?<Constant "%.3f">`
   \   000000DE   0xA804             ADD      R0,SP,#+16
   \   000000E0   0x.... 0x....      BL       sprintf
   1152          	TEXT_SetText(Zpos, buf);
   \   000000E4   0xF9B4 0x0010      LDRSH    R0,[R4, #+16]
   \   000000E8   0xA904             ADD      R1,SP,#+16
   \   000000EA   0x.... 0x....      BL       TEXT_SetText
   1153          }
   \   000000EE   0xB00C             ADD      SP,SP,#+48
   \   000000F0   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1154          #else
   1155          void disp_print_time()
   1156          {
   1157          	char buf[30] = {0};
   1158          	
   1159          	TEXT_SetTextColor(printTimeLeft, gCfgItems.title_color);
   1160          	TEXT_SetBkColor(printTimeLeft,  gCfgItems.background_color);
   1161          	memset(buf, 0, sizeof(buf));
   1162          	sprintf(buf, "T: %d%d:%d%d:%d%d  Z:%0.2f", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10,current_position[Z_AXIS]);
   1163          	//sprintf(buf, "ok nums:  %d%d%d:%d%d", wan,qian, bai,shi,ge);
   1164          	
   1165          	TEXT_SetText(printTimeLeft, buf);
   1166          }
   1167          #endif

   \                                 In section .text, align 2, keep-with-next
   1168          void print_time_run()
   1169          {
   \                     print_time_run: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1170          	static uint8_t lastSec = 0;
   1171          	
   1172          	if(print_time.seconds >= 60)
   \   00000002   0x....             LDR.N    R4,??DataTable29
   \   00000004   0xF994 0x0005      LDRSB    R0,[R4, #+5]
   \   00000008   0x283C             CMP      R0,#+60
   \   0000000A   0xDB0C             BLT.N    ??print_time_run_0
   1173          	{
   1174          		print_time.seconds = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x7160             STRB     R0,[R4, #+5]
   1175          		print_time.minutes++;
   \   00000010   0x7920             LDRB     R0,[R4, #+4]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0x7120             STRB     R0,[R4, #+4]
   1176          		if(print_time.minutes >= 60)
   \   00000016   0xB2C0             UXTB     R0,R0
   \   00000018   0x283C             CMP      R0,#+60
   \   0000001A   0xDB04             BLT.N    ??print_time_run_0
   1177          		{
   1178          			print_time.minutes = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x7120             STRB     R0,[R4, #+4]
   1179          			print_time.hours++;
   \   00000020   0x8860             LDRH     R0,[R4, #+2]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x8060             STRH     R0,[R4, #+2]
   1180          			/*if(print_time.hours >= 24)
   1181          			{
   1182          				print_time.hours = 0;
   1183          				print_time.days++;
   1184          			}*/
   1185          		}
   1186          		
   1187          	}
   1188          	if(disp_state == PRINTING_UI)
   \                     ??print_time_run_0: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable32_7
   \   00000028   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000002C   0x2803             CMP      R0,#+3
   \   0000002E   0xD108             BNE.N    ??print_time_run_1
   1189          	{
   1190          		if(lastSec != print_time.seconds)
   \   00000030   0x7A20             LDRB     R0,[R4, #+8]
   \   00000032   0xF994 0x1005      LDRSB    R1,[R4, #+5]
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xBF18             IT       NE 
   1191          		{
   1192          			disp_print_time();
   \   0000003A   0x.... 0x....      BLNE     disp_print_time
   1193          		}
   1194          		lastSec =  print_time.seconds;
   \   0000003E   0x7960             LDRB     R0,[R4, #+5]
   \   00000040   0x7220             STRB     R0,[R4, #+8]
   1195          	}
   1196          }
   \                     ??print_time_run_1: (+1)
   \   00000042   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     print_time:
   \   00000000                      DS8 8
   \   00000008                      DS8 1
   \   00000009                      DS8 1
   \   0000000A                      DS8 2
   \   0000000C                      DS8 2
   \   0000000E                      DS8 2
   \   00000010                      DS8 2
   \   00000012                      DS8 2
   \   00000014                      DS8 24
   \   0000002C                      DS8 24
   \                     once_flag:
   \   00000044                      DS8 4

   \                                 In section .bss, align 4
   \                     pause_resum:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 2
   \   0000000A                      DS8 2
   \   0000000C                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonExt1:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
   \   00000030                      DS8 24
   \   00000048                      DS8 24
   \   00000060                      DS8 24
   \   00000078                      DS8 24

   \                                 In section .bss, align 2
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     print_start_flg:
   \   00000000                      DS8 1
   1197          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1198          void disp_sprayer_tem_printing()
   1199          {
   \                     disp_sprayer_tem_printing: (+1)
   \   00000000   0xE92D 0x4CF0      PUSH     {R4-R7,R10,R11,LR}
   \   00000004   0xB08B             SUB      SP,SP,#+44
   1200          	char buf[30] = {0};
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x460B             MOV      R3,R1
   \   0000000E   0x460C             MOV      R4,R1
   \   00000010   0xC01E             STM      R0!,{R1-R4}
   \   00000012   0xC01E             STM      R0!,{R1-R4}
   1201          	volatile uint8_t i0 = 0;
   \   00000014   0xF88D 0x1000      STRB     R1,[SP, #+0]
   1202          	
   1203          	//if(gCfgItems.sprayerNum == 2)
   1204          	{		
   1205          		
   1206          		TEXT_SetBkColor(E1_Temp,  gCfgItems.background_color);
   \   00000018   0x....             LDR.N    R4,??DataTable32_1
   \   0000001A   0x....             LDR.N    R5,??DataTable32
   \   0000001C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000020   0x6969             LDR      R1,[R5, #+20]
   \   00000022   0x.... 0x....      BL       TEXT_SetBkColor
   1207          		TEXT_SetTextColor(E1_Temp, gCfgItems.title_color);
   \   00000026   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000002A   0xF105 0x0614      ADD      R6,R5,#+20
   \   0000002E   0x6871             LDR      R1,[R6, #+4]
   \   00000030   0x.... 0x....      BL       TEXT_SetTextColor
   1208          
   1209          
   1210          		memset(buf, 0, sizeof(buf));
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x211E             MOVS     R1,#+30
   \   00000038   0xA801             ADD      R0,SP,#+4
   \   0000003A   0x.... 0x....      BL       __aeabi_memset4
   1211          		sprintf(buf, printing_menu.temp1, (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   \   0000003E   0x.... 0x....      LDR.W    R11,??DataTable32_15
   \   00000042   0x.... 0x....      LDR.W    R10,??DataTable32_16
   \   00000046   0xF8DB 0x3000      LDR      R3,[R11, #+0]
   \   0000004A   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \   0000004E   0x....             LDR.N    R7,??DataTable30_11
   \   00000050   0x9300             STR      R3,[SP, #+0]
   \   00000052   0x.... 0x....      BL       __aeabi_f2iz
   \   00000056   0x4602             MOV      R2,R0
   \   00000058   0x9B00             LDR      R3,[SP, #+0]
   \   0000005A   0x68B9             LDR      R1,[R7, #+8]
   \   0000005C   0xA801             ADD      R0,SP,#+4
   \   0000005E   0x.... 0x....      BL       sprintf
   1212          		TEXT_SetText(E1_Temp, buf);	
   \   00000062   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000066   0xA901             ADD      R1,SP,#+4
   \   00000068   0x.... 0x....      BL       TEXT_SetText
   1213          	    if(mksCfg.extruders == 2 && gCfgItems.singleNozzle == 0){
   \   0000006C   0x....             LDR.N    R0,??DataTable30_5
   \   0000006E   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   00000072   0x2802             CMP      R0,#+2
   \   00000074   0xBF04             ITT      EQ 
   \   00000076   0xF895 0x02B2      LDRBEQ   R0,[R5, #+690]
   \   0000007A   0x2800             CMPEQ    R0,#+0
   \   0000007C   0xD11F             BNE.N    ??disp_sprayer_tem_printing_0
   1214                     TEXT_SetBkColor(E2_Temp,gCfgItems.background_color);
   \   0000007E   0x6969             LDR      R1,[R5, #+20]
   \   00000080   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000084   0x.... 0x....      BL       TEXT_SetBkColor
   1215                     TEXT_SetTextColor(E2_Temp,gCfgItems.title_color);
   \   00000088   0x6871             LDR      R1,[R6, #+4]
   \   0000008A   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000008E   0x.... 0x....      BL       TEXT_SetTextColor
   1216          		   memset(buf,0,sizeof(buf));
   \   00000092   0x2200             MOVS     R2,#+0
   \   00000094   0x211E             MOVS     R1,#+30
   \   00000096   0xA801             ADD      R0,SP,#+4
   \   00000098   0x.... 0x....      BL       __aeabi_memset4
   1217          		   sprintf(buf, printing_menu.temp2, (int)thermalManager.current_temperature[1], (int)thermalManager.target_temperature[1]);
   \   0000009C   0xF8DB 0x5004      LDR      R5,[R11, #+4]
   \   000000A0   0xF8DA 0x0004      LDR      R0,[R10, #+4]
   \   000000A4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000A8   0x68F9             LDR      R1,[R7, #+12]
   \   000000AA   0x4602             MOV      R2,R0
   \   000000AC   0x462B             MOV      R3,R5
   \   000000AE   0xA801             ADD      R0,SP,#+4
   \   000000B0   0x.... 0x....      BL       sprintf
   1218          		   TEXT_SetText(E2_Temp, buf);
   \   000000B4   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000000B8   0xA901             ADD      R1,SP,#+4
   \   000000BA   0x.... 0x....      BL       TEXT_SetText
   1219                  }
   1220          	}
   1221          	#if 0
   1222          	else
   1223          	{
   1224          		TEXT_SetBkColor(E1_Temp,0x000000);
   1225          		TEXT_SetTextColor(E1_Temp,gCfgItems.title_color);
   1226          		//TEXT_SetFont(E1_Temp, &FONT_TITLE);
   1227          
   1228          		memset(buf, 0, sizeof(buf));
   1229          		sprintf(buf, printing_menu.temp1, (int)thermalManager.current_temperature[gCfgItems.curSprayerChoose],  (int)thermalManager.target_temperature[gCfgItems.curSprayerChoose]);
   1230          		TEXT_SetText(E1_Temp, buf);
   1231          	}
   1232          	#endif
   1233          }
   \                     ??disp_sprayer_tem_printing_0: (+1)
   \   000000BE   0xB00B             ADD      SP,SP,#+44
   \   000000C0   0xE8BD 0x8CF0      POP      {R4-R7,R10,R11,PC}  ;; return
   1234          #else
   1235          void disp_sprayer_tem_printing()
   1236          {
   1237          	char buf[30] = {0};
   1238          	volatile uint8_t i0 = 0;
   1239          	volatile uint8_t extruder_bak;
   1240          	
   1241          	TEXT_SetTextColor(sprayTem1, gCfgItems.printingstate_word_background_color);
   1242          	TEXT_SetBkColor(sprayTem1,  gCfgItems.printingstate_word_color);
   1243          	TEXT_SetTextColor(sprayTem2, gCfgItems.printingstate_word_background_color);
   1244          	TEXT_SetBkColor(sprayTem2,  gCfgItems.printingstate_word_color);
   1245          
   1246          	if(mksCfg.extruders == 2)
   1247          	{
   1248          		GUI_SetBkColor(gCfgItems.background_color);
   1249          
   1250          		memset(buf, ' ', sizeof(buf));
   1251          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1252                  if((thermalManager.current_temperature[0] - ((int)thermalManager.current_temperature[0]))>=0.5)
   1253          		{
   1254          			thermalManager.current_temperature[0] += 1;
   1255          		}
   1256          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   1257                  GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);	
   1258          
   1259              
   1260          		memset(buf,' ',sizeof(buf));
   1261          		GUI_DispStringAt(buf, 10+78, titleHeight + imgHeight - 20);
   1262          		if((thermalManager.current_temperature[1] - ((int)thermalManager.current_temperature[1]))>=0.5)
   1263          		{
   1264          			thermalManager.current_temperature[1] += 1;
   1265          		}
   1266          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[1], (int)thermalManager.target_temperature[1]);
   1267          		GUI_DispStringAt(buf, 10+78, titleHeight + imgHeight - 20);	
   1268             
   1269          	}
   1270          	else
   1271          	{
   1272          		GUI_SetBkColor(gCfgItems.background_color);
   1273          		memset(buf, ' ', sizeof(buf));
   1274          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1275          		if((thermalManager.current_temperature[0] - ((int)thermalManager.current_temperature[0]))>=0.5)
   1276          		{
   1277          			thermalManager.current_temperature[0] += 1;
   1278          		}
   1279          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature[0], (int)thermalManager.target_temperature[0]);
   1280          		GUI_DispStringAt(buf, 10, titleHeight + imgHeight - 20);
   1281          	}
   1282          }
   1283          #endif
   1284          
   1285          static int8_t fan_dir = 0;
                               ^
Warning[Pe177]: variable "fan_dir" was declared but never referenced

  	sprintf(buf, "%d%d:%d%d:%d%d", print_time.hours/10, print_time.hours%10, print_time.minutes/10, print_time.minutes%10,  print_time.seconds/10, print_time.seconds%10);
  	^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_printing.cpp",1143  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
   1286          
   1287          #if VERSION_WITH_PIC
   1288          

   \                                 In section .text, align 2, keep-with-next
   1289          void disp_fan_move_printing()
   1290          {
   1291          	#if !defined(TFT35)
   1292          	if(gCfgItems.fanOnoff == 1)
   1293          	{
   1294          		fan_dir++;
   1295          		if(fan_dir%2)
   1296          		{
   1297          			BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_move.bin",1);
   1298          			BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct, 0, 0);	
   1299          		}
   1300          		else
   1301          		{
   1302          			BUTTON_SetBmpFileName(buttonFanstate.btnHandle, "bmp_fan_no_words.bin",1);
   1303          			BUTTON_SetBitmapEx(buttonFanstate.btnHandle, 0, &bmp_struct, 0, 0);	
   1304          		}
   1305          	}
   1306          	#endif
   1307          	disp_fan_speed_printing();
   \                     disp_fan_move_printing: (+1)
   \   00000000   0x....             B.N      disp_fan_speed_printing
   1308          }
   1309          #endif
   1310          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1311          void disp_bed_temp_printing()
   1312          {
   \                     disp_bed_temp_printing: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   1313          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
   1314          
   1315          	//if(gCfgItems.custom_bed_flag == 1)
   1316          	{
   1317          		TEXT_SetBkColor(Bed_Temp,  gCfgItems.background_color);
   \   00000012   0x....             LDR.N    R4,??DataTable32_1
   \   00000014   0x....             LDR.N    R5,??DataTable32
   \   00000016   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   0000001A   0x6969             LDR      R1,[R5, #+20]
   \   0000001C   0x.... 0x....      BL       TEXT_SetBkColor
   1318          		TEXT_SetTextColor(Bed_Temp, gCfgItems.title_color);
   \   00000020   0x69A9             LDR      R1,[R5, #+24]
   \   00000022   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000026   0x.... 0x....      BL       TEXT_SetTextColor
   1319          		//TEXT_SetFont(Bed_Temp, &FONT_TITLE);
   1320          
   1321          		
   1322          		memset(buf, 0, sizeof(buf));
   \   0000002A   0x211E             MOVS     R1,#+30
   \   0000002C   0xA800             ADD      R0,SP,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_memclr4
   1323          		sprintf(buf, printing_menu.bed_temp, (int)thermalManager.current_temperature_bed,  (int)thermalManager.target_temperature_bed);
   \   00000032   0x....             LDR.N    R0,??DataTable32_17
   \   00000034   0xF9B0 0x5000      LDRSH    R5,[R0, #+0]
   \   00000038   0x....             LDR.N    R0,??DataTable32_18
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000040   0x4602             MOV      R2,R0
   \   00000042   0x....             LDR.N    R0,??DataTable30_11
   \   00000044   0x6901             LDR      R1,[R0, #+16]
   \   00000046   0x462B             MOV      R3,R5
   \   00000048   0xA800             ADD      R0,SP,#+0
   \   0000004A   0x.... 0x....      BL       sprintf
   1324          		TEXT_SetText(Bed_Temp, buf);
   \   0000004E   0xF9B4 0x0008      LDRSH    R0,[R4, #+8]
   \   00000052   0x....             B.N      ?Subroutine0
   1325          	}
   1326          
   1327          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xA900             ADD      R1,SP,#+0
   \   00000002   0x.... 0x....      BL       TEXT_SetText
   \   00000006   0xB009             ADD      SP,SP,#+36
   \   00000008   0xBD30             POP      {R4,R5,PC}       ;; return
   1328          #else
   1329          void disp_bed_temp_printing()
   1330          {
   1331          	char buf[30] = {0};
   1332          	volatile uint8_t i1 = 0;	
   1333          	
   1334          	TEXT_SetTextColor(BedTem, gCfgItems.printingstate_word_background_color);
   1335          	TEXT_SetBkColor(BedTem,  gCfgItems.printingstate_word_color);
   1336          	GUI_SetBkColor(gCfgItems.background_color);
   1337          	if(mksCfg.has_temp_bed == 1)
   1338          	{
   1339          		memset(buf, ' ', sizeof(buf));
   1340          		GUI_DispStringAt(buf, 165, titleHeight + imgHeight - 20);
   1341          		sprintf(buf, "%3d/%d", (int)thermalManager.current_temperature_bed, (int)thermalManager.target_temperature_bed);
   1342          		GUI_DispStringAt(buf, 165, titleHeight + imgHeight - 20);
   1343          	}
   1344          }
   1345          #endif
   1346          
   1347          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
   1348          void disp_fan_speed_printing()
   1349          {
   \                     disp_fan_speed_printing: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   1350          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
   1351          	
   1352          	TEXT_SetBkColor(Fan_Pwm,  gCfgItems.background_color);
   \   00000012   0x....             LDR.N    R4,??DataTable32_1
   \   00000014   0x....             LDR.N    R5,??DataTable32
   \   00000016   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   0000001A   0x6969             LDR      R1,[R5, #+20]
   \   0000001C   0x.... 0x....      BL       TEXT_SetBkColor
   1353          	TEXT_SetTextColor(Fan_Pwm, gCfgItems.title_color);
   \   00000020   0x69A9             LDR      R1,[R5, #+24]
   \   00000022   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000026   0x.... 0x....      BL       TEXT_SetTextColor
   1354          	//TEXT_SetFont(Fan_Pwm, &FONT_TITLE);
   1355          
   1356          
   1357          	memset(buf, 0, sizeof(buf));
   \   0000002A   0x211E             MOVS     R1,#+30
   \   0000002C   0xA800             ADD      R0,SP,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_memclr4
   1358          	//sprintf(buf, "%3d", gCfgItems.fanSpeed);
   1359          	sprintf(buf, "%3d", fanSpeeds[0]);
   \   00000032   0x....             LDR.N    R0,??DataTable32_19
   \   00000034   0x6802             LDR      R2,[R0, #+0]
   \   00000036   0x....             ADR.N    R1,??DataTable32_3  ;; "%3d"
   \   00000038   0xA800             ADD      R0,SP,#+0
   \   0000003A   0x.... 0x....      BL       sprintf
   1360          	TEXT_SetText(Fan_Pwm, buf);
   \   0000003E   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000042                      REQUIRE ?Subroutine0
   \   00000042                      ;; // Fall through to label ?Subroutine0
   1361          }
   1362          #else
   1363          void disp_fan_speed_printing()
   1364          {
   1365          	char buf[30] = {0};
   1366          	volatile uint8_t i2 = 0;
   1367          	
   1368          	TEXT_SetTextColor(fanSpeed, gCfgItems.printingstate_word_background_color);
   1369          	TEXT_SetBkColor(fanSpeed,  gCfgItems.printingstate_word_color);
   1370              GUI_SetBkColor(gCfgItems.background_color);
   1371          
   1372          	memset(buf, ' ', sizeof(buf));
   1373          	GUI_DispStringAt(buf, 255, titleHeight + imgHeight - 20);
   1374          
   1375          	sprintf(buf, "%3d", fanSpeeds[0]);
   1376          	GUI_DispStringAt(buf, 255, titleHeight + imgHeight - 20);
   1377          }
   1378          #endif

   \                                 In section .text, align 2, keep-with-next
   1379          void disp_printing_speed()
   1380          {
   \                     disp_printing_speed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   1381          	char buf[30] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0x460C             MOV      R4,R1
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0xC01E             STM      R0!,{R1-R4}
   1382          	
   1383          	TEXT_SetBkColor(Printing_speed,0x000000);
   \   00000012   0x4608             MOV      R0,R1
   \   00000014   0x.... 0x....      BL       TEXT_SetBkColor
   1384          	TEXT_SetTextColor(Printing_speed,gCfgItems.title_color);
   \   00000018   0x....             LDR.N    R4,??DataTable32
   \   0000001A   0x69A1             LDR      R1,[R4, #+24]
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       TEXT_SetTextColor
   1385          	//TEXT_SetFont(Printing_speed, &FONT_TITLE);
   1386          
   1387          
   1388          	memset(buf, 0, sizeof(buf));
   \   00000022   0x211E             MOVS     R1,#+30
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       __aeabi_memclr4
   1389          	sprintf(buf, "%3d%%", gCfgItems.printSpeed);
   \   0000002A   0xF8B4 0x20B4      LDRH     R2,[R4, #+180]
   \   0000002E   0x.... 0x....      ADR.W    R1,`?<Constant "%3d%%">`
   \   00000032   0xA800             ADD      R0,SP,#+0
   \   00000034   0x.... 0x....      BL       sprintf
   1390          	TEXT_SetText(Printing_speed, buf);
   \   00000038   0xA900             ADD      R1,SP,#+0
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       TEXT_SetText
   1391          }
   \   00000040   0xB008             ADD      SP,SP,#+32
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
   1392          

   \                                 In section .text, align 2, keep-with-next
   1393          void setProBarValue(int added)
   1394          {
   1395          	if(added <= 0)
   1396          		return;
   1397          #if 0	
   1398          	gCurFileState.totalSend += added;
   1399          	if(disp_state == PRINTING_UI)
   1400          	{
   1401          		PROGBAR_SetValue(printingBar, gCurFileState.totalSend * 100 / gCurFileState.fileSize );
   1402          	}
   1403          #endif
   1404          }
   \                     setProBarValue: (+1)
   \   00000000   0x4770             BX       LR               ;; return
   1405          
   1406          
   1407          #if 0
   1408          void setProBarRate(int rate)
   1409          {
   1410          	if(rate <= 0)
   1411          		return;
   1412          
   1413          	if((mksReprint.mks_printer_state != MKS_IDLE)  &&  (rate == 100))
   1414          	{	
   1415          		rate = 99;
   1416          	}
   1417          
   1418          	gCurFileState.totalSend = rate;
   1419          
   1420          	
   1421          	if(disp_state == PRINTING_UI)
   1422          	{
   1423          		PROGBAR_SetValue(printingBar, rate );
   1424          
   1425          		if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (rate == 100) )
   1426          		{
   1427          			//memset((char *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1428          			if(once_flag == 0)
   1429          			{					
   1430          				stop_print_time();				
   1431          				#if VERSION_WITH_PIC	
   1432          				#if defined(TFT70)
   1433          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1434          				#elif defined(TFT35)
   1435                          #if defined(MKS_ROBIN_MINI)||defined(MKS_ROBIN_NANO)
   1436                          BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1437                          #else
   1438          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_back.bin",1);
   1439                          #endif
   1440          				#endif
   1441          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   1442          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1443          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_color);
   1444          				#endif
   1445          				once_flag = 1;
   1446          			}					
   1447          		}
   1448          		
   1449          	}
   1450          	
   1451          }
   1452          #else

   \                                 In section .text, align 2, keep-with-next
   1453          void setProBarRate()
   1454          {
   \                     setProBarRate: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   1455          	int rate;
   1456          	volatile long long rate_tmp_r;
   1457          	
   1458          	if(from_flash_pic != 1)
   \   00000002   0x....             LDR.N    R2,??DataTable32_20
   \   00000004   0x....             LDR.N    R3,??DataTable32_21
   \   00000006   0x781B             LDRB     R3,[R3, #+0]
   \   00000008   0xF202 0x405C      ADDW     R0,R2,#+1116
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x6840             LDR      R0,[R0, #+4]
   \   00000010   0xF8D2 0x245C      LDR      R2,[R2, #+1116]
   \   00000014   0x2464             MOVS     R4,#+100
   \   00000016   0xB083             SUB      SP,SP,#+12
   \   00000018   0x2B01             CMP      R3,#+1
   \   0000001A   0xD006             BEQ.N    ??setProBarRate_0
   1459          	{
   1460          		rate_tmp_r =(long long)card.sdpos * 100;
   \   0000001C   0xFBA4 0x6700      UMULL    R6,R7,R4,R0
   \   00000020   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
   1461          		rate = rate_tmp_r / card.filesize;
   \   00000024   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000028   0xE010             B.N      ??setProBarRate_1
   1462          	}
   1463          	else
   1464          	{
   1465          		rate_tmp_r =(long long)card.sdpos;
   \                     ??setProBarRate_0: (+1)
   \   0000002A   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1466          		rate = (rate_tmp_r-(PREVIEW_SIZE+To_pre_view))* 100 / (card.filesize-(PREVIEW_SIZE+To_pre_view));
   \   0000002E   0x....             LDR.N    R0,??DataTable32_22
   \   00000030   0x6803             LDR      R3,[R0, #+0]
   \   00000032   0x....             LDR.N    R0,??DataTable32_23  ;; 0x317e0
   \   00000034   0xE9DD 0x6700      LDRD     R6,R7,[SP, #+0]
   \   00000038   0x18C0             ADDS     R0,R0,R3
   \   0000003A   0x1A36             SUBS     R6,R6,R0
   \   0000003C   0x418F             SBCS     R7,R7,R1
   \   0000003E   0x1AD2             SUBS     R2,R2,R3
   \   00000040   0xFBA4 0x0106      UMULL    R0,R1,R4,R6
   \   00000044   0x....             LDR.N    R3,??DataTable32_24  ;; 0xfffce820
   \   00000046   0xFB04 0x1107      MLA      R1,R4,R7,R1
   \   0000004A   0x189A             ADDS     R2,R3,R2
   \                     ??setProBarRate_1: (+1)
   \   0000004C   0x2300             MOVS     R3,#+0
   \   0000004E   0x.... 0x....      BL       __aeabi_ldivmod
   \   00000052   0x4604             MOV      R4,R0
   1467          	}
   1468          	gCurFileState.totalSend = rate;
   \   00000054   0x....             LDR.N    R0,??DataTable32_5
   \   00000056   0xF8C0 0x4238      STR      R4,[R0, #+568]
   1469          	
   1470          	if(rate <= 0)
   \   0000005A   0x2C01             CMP      R4,#+1
   \   0000005C   0xDB33             BLT.N    ??setProBarRate_2
   1471          		return;
   1472          
   1473          	if(disp_state == PRINTING_UI)
   \   0000005E   0x....             LDR.N    R0,??DataTable32_7
   \   00000060   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000064   0x2803             CMP      R0,#+3
   \   00000066   0xD12E             BNE.N    ??setProBarRate_2
   1474          	{
   1475          		PROGBAR_SetValue(printingBar, rate );
   \   00000068   0x....             LDR.N    R5,??DataTable32_13
   \   0000006A   0xF9B5 0x000C      LDRSH    R0,[R5, #+12]
   \   0000006E   0x4621             MOV      R1,R4
   \   00000070   0x.... 0x....      BL       PROGBAR_SetValue
   1476          
   1477          		if((mksReprint.mks_printer_state == MKS_IDLE)  &&  (rate == 100) )
   \   00000074   0x....             LDR.N    R0,??DataTable32_25
   \   00000076   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   0000007A   0x28A6             CMP      R0,#+166
   \   0000007C   0xBF08             IT       EQ 
   \   0000007E   0x2C64             CMPEQ    R4,#+100
   \   00000080   0xD121             BNE.N    ??setProBarRate_2
   1478          		{
   1479          			//memset((char *)gCfgItems.z_display_pos,0,sizeof(gCfgItems.z_display_pos));
   1480          			if(once_flag == 0)
   \   00000082   0x6C68             LDR      R0,[R5, #+68]
   \   00000084   0xB9F8             CBNZ.N   R0,??setProBarRate_2
   1481          			{					
   1482          				stop_print_time();				
   1483          				#if VERSION_WITH_PIC	
   1484          				#if defined(TFT70)
   1485          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_return.bin",1);
   1486          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   1487          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1488          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_color);				
   1489          				#elif defined(TFT35)
   1490                          #if defined(MKS_ROBIN_MINI)||defined(MKS_ROBIN_NANO)
   1491          				/*BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_printing_back.bin",1);
   1492          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, BMP_PIC_X, BMP_PIC_Y);
   1493          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_color);
   1494          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_color);
   1495                          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.btn_textcolor);
   1496                          		BUTTON_SetTextColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   1497          				*/
   1498          				flash_preview_begin = 0;
   \   00000086   0x....             LDR.N    R1,??DataTable32_26
   1499          				default_preview_flg = 0;
   1500          				Clear_printing();
   \   00000088   0x....             LDR.N    R4,??DataTable32
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
   \   0000008C   0x71E8             STRB     R0,[R5, #+7]
   \   0000008E   0x....             LDR.N    R1,??DataTable32_27
   \   00000090   0x7008             STRB     R0,[R1, #+0]
   \   00000092   0x6960             LDR      R0,[R4, #+20]
   \   00000094   0x.... 0x....      BL       GUI_SetBkColor
   \   00000098   0xF9B5 0x000A      LDRSH    R0,[R5, #+10]
   \   0000009C   0x.... 0x....      BL       WM_IsWindow
   \   000000A0   0xB118             CBZ.N    R0,??setProBarRate_3
   \   000000A2   0xF9B5 0x000A      LDRSH    R0,[R5, #+10]
   \   000000A6   0x.... 0x....      BL       WM_DeleteWindow
   1501          				draw_dialog(DIALOG_TYPE_FINISH_PRINT);
   \                     ??setProBarRate_3: (+1)
   \   000000AA   0x2013             MOVS     R0,#+19
   \   000000AC   0x.... 0x....      BL       draw_dialog
   1502                          #else
   1503          				BUTTON_SetBmpFileName(buttonOperat.btnHandle, "bmp_printing_back.bin",1);
   1504          				BUTTON_SetBitmapEx(buttonOperat.btnHandle, 0, &bmp_struct_150, BMP_PIC_X, BMP_PIC_Y);
   1505          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_PRESSED,gCfgItems.back_btn_color);
   1506          				BUTTON_SetBkColor(buttonOperat.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.back_btn_textcolor);
   1507                          #endif
   1508          				if(gCfgItems.multiple_language != 0)
   \   000000B0   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   000000B4   0xB128             CBZ.N    R0,??setProBarRate_4
   1509          				{
   1510          					BUTTON_SetText(buttonOperat.btnHandle, common_menu.text_back);	
   \   000000B6   0x....             LDR.N    R0,??DataTable32_28
   \   000000B8   0x6801             LDR      R1,[R0, #+0]
   \   000000BA   0xF9B5 0x002C      LDRSH    R0,[R5, #+44]
   \   000000BE   0x.... 0x....      BL       BUTTON_SetText
   1511          				}				
   1512          				#endif
   1513          
   1514          				#endif
   1515          				once_flag = 1;
   \                     ??setProBarRate_4: (+1)
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x6468             STR      R0,[R5, #+68]
   1516          			}					
   1517          		}
   1518          		
   1519          	}	
   1520          }
   \                     ??setProBarRate_2: (+1)
   \   000000C6   0xB003             ADD      SP,SP,#+12
   \   000000C8   0xBDF0             POP      {R4-R7,PC}       ;; return
   1521          
   1522          #endif

   \                                 In section .text, align 2, keep-with-next
   1523          void Clear_printing()
   1524          {
   \                     Clear_printing: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1525          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable32
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
   1526          	if(WM_IsWindow(hPrintingWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable32_13
   \   0000000C   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_printing_0
   1527          	{
   1528          		WM_DeleteWindow(hPrintingWnd);
   \   00000016   0xF9B4 0x000A      LDRSH    R0,[R4, #+10]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
   1529          		//GUI_Exec();
   1530          	}
   1531          	
   1532          	//GUI_Clear();
   1533          }
   \                     ??Clear_printing_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_resume.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_resume.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x........         DC32     print_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x........         DC32     gcode_preview_over

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_2:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_3:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_4:
   \   00000000   0x........         DC32     srcfp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_5:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_6:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_7:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_8:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_9:
   \   00000000   0x........         DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_10:
   \   00000000   0x........         DC32     bmp_struct_150

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_11:
   \   00000000   0x........         DC32     printing_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_12:
   \   00000000   0x........         DC32     pause_from_high_level

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_13:
   \   00000000   0x42210110         DC32     0x42210110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_14:
   \   00000000   0x42230118         DC32     0x42230118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \   00000000   0x........         DC32     pause_resum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \   00000000   0x........         DC32     pause_from_low_level

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_3:
   \   00000000   0x25 0x33          DC8      "%3d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_4:
   \   00000000   0x........         DC32     gCfgItems+0x1CD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_5:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_6:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_7:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_8:
   \   00000000   0x........         DC32     GUI_FontHZ16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_9:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_10:
   \   00000000   0x........         DC32     _Z13cbPrintingWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_11:
   \   00000000   0x........         DC32     buttonExt1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_12:
   \   00000000   0x........         DC32     bmp_struct_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_13:
   \   00000000   0x........         DC32     print_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_14:
   \   00000000   0x........         DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_15:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_16:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_17:
   \   00000000   0x........         DC32     _ZN11Temperature22target_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_18:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_19:
   \   00000000   0x........         DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_20:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_21:
   \   00000000   0x........         DC32     from_flash_pic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_22:
   \   00000000   0x........         DC32     To_pre_view

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_23:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_24:
   \   00000000   0xFFFCE820         DC32     0xfffce820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_25:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_26:
   \   00000000   0x........         DC32     flash_preview_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_27:
   \   00000000   0x........         DC32     default_preview_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_28:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_pause.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_pause.bin"
   \              0x70 0x5F    
   \              0x70 0x61    
   \              0x75 0x73    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_time_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_time_state.bin"
   \              0x70 0x5F    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_zpos_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_zpos_state.bin"
   \              0x70 0x5F    
   \              0x7A 0x70    
   \              0x6F 0x73    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_ext1_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_ext1_state.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x31    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_ext2_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_ext2_state.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x32    
   \              0x5F 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_bed_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_bed_state.bin"
   \              0x70 0x5F    
   \              0x62 0x65    
   \              0x64 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_fan_state.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_fan_state.bin"
   \              0x70 0x5F    
   \              0x66 0x61    
   \              0x6E 0x5F    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_stop.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_stop.bin"
   \              0x70 0x5F    
   \              0x73 0x74    
   \              0x6F 0x70    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_operate.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_operate.bin"
   \              0x70 0x5F    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d%d:%d%d:%d%d">`:
   \   00000000   0x25 0x64          DC8 "%d%d:%d%d:%d%d"
   \              0x25 0x64    
   \              0x3A 0x25    
   \              0x64 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.3f">`:
   \   00000000   0x25 0x2E          DC8 "%.3f"
   \              0x33 0x66    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%3d%%">`:
   \   00000000   0x25 0x33          DC8 "%3d%%"
   \              0x64 0x25    
   \              0x25 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant " ">`:
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_1`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_2`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_3`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%3d">`:
   \   00000000   0x25 0x33          DC8 "%3d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>_4`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_printing
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbPrintingWin(WM_MESSAGE *)
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        24   -> CardReader::pauseSDPrint()
        24   -> GUI_SetBkColor
        24   -> Stopwatch::pause()
         0   -> WM_DefaultProc
        24   -> WM_DeleteWindow
        24   -> WM_IsWindow
        24   -> __aeabi_f2iz
         0   -> draw_dialog
        24   -> draw_operate
         0   -> draw_ready_print
        24   -> f_close
      48   disp_bed_temp_printing
        48   -> TEXT_SetBkColor
        48   -> TEXT_SetText
        48   -> TEXT_SetTextColor
        48   -> __aeabi_f2iz
        48   -> __aeabi_memclr4
        48   -> sprintf
       0   disp_fan_move_printing
         0   -> disp_fan_speed_printing
      48   disp_fan_speed_printing
        48   -> TEXT_SetBkColor
        48   -> TEXT_SetText
        48   -> TEXT_SetTextColor
        48   -> __aeabi_memclr4
        48   -> sprintf
      72   disp_print_time
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2d
        72   -> __aeabi_memset4
        72   -> sprintf
      40   disp_printing_speed
        40   -> TEXT_SetBkColor
        40   -> TEXT_SetText
        40   -> TEXT_SetTextColor
        40   -> __aeabi_memclr4
        40   -> sprintf
      72   disp_sprayer_tem_printing
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2iz
        72   -> __aeabi_memset4
        72   -> sprintf
      56   draw_printing
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetDefaultFont
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> GUI_SetFont
        56   -> GUI_UC_SetEncodeNone
        56   -> GUI_UC_SetEncodeUTF8
        56   -> PROGBAR_CreateEx
        56   -> PROGBAR_SetBarColor
        56   -> PROGBAR_SetFont
        56   -> PROGBAR_SetTextColor
        56   -> TEXT_CreateEx
        56   -> TEXT_SetBkColor
        56   -> TEXT_SetDefaultFont
        56   -> TEXT_SetTextColor
        56   -> WM_CreateWindow
        56   -> __aeabi_memclr
        56   -> creat_title_text
        56   -> disp_bed_temp_printing
         0   -> disp_fan_speed_printing
        56   -> disp_sprayer_tem_printing
       8   print_time_run
         8   -> disp_print_time
       0   reset_file_info
       0   reset_print_time
      32   setProBarRate
        32   -> BUTTON_SetText
        32   -> GUI_SetBkColor
        32   -> PROGBAR_SetValue
        32   -> WM_DeleteWindow
        32   -> WM_IsWindow
        32   -> __aeabi_ldivmod
        32   -> draw_dialog
       0   setProBarValue
       0   start_print_time
       0   stop_print_time


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant " ">
       8  ?<Constant "%.3f">
       4  ?<Constant "%3d">
       8  ?<Constant "%3d%%">
      16  ?<Constant "%d%d:%d%d:%d%d">
      20  ?<Constant "bmp_bed_state.bin">
      20  ?<Constant "bmp_ext1_state.bin">
      20  ?<Constant "bmp_ext2_state.bin">
      20  ?<Constant "bmp_fan_state.bin">
      16  ?<Constant "bmp_operate.bin">
      16  ?<Constant "bmp_pause.bin">
      16  ?<Constant "bmp_resume.bin">
      16  ?<Constant "bmp_stop.bin">
      20  ?<Constant "bmp_time_state.bin">
      20  ?<Constant "bmp_zpos_state.bin">
      32  ?<Constant {'\000'}>
      32  ?<Constant {'\000'}>_1
      32  ?<Constant {'\000'}>_2
      32  ?<Constant {'\000'}>_3
      32  ?<Constant {'\000'}>_4
       4  ??DataTable29
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable30_10
       4  ??DataTable30_11
       4  ??DataTable30_12
       4  ??DataTable30_13
       4  ??DataTable30_14
       4  ??DataTable30_2
       4  ??DataTable30_3
       4  ??DataTable30_4
       4  ??DataTable30_5
       4  ??DataTable30_6
       4  ??DataTable30_7
       4  ??DataTable30_8
       4  ??DataTable30_9
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_10
       4  ??DataTable32_11
       4  ??DataTable32_12
       4  ??DataTable32_13
       4  ??DataTable32_14
       4  ??DataTable32_15
       4  ??DataTable32_16
       4  ??DataTable32_17
       4  ??DataTable32_18
       4  ??DataTable32_19
       4  ??DataTable32_2
       4  ??DataTable32_20
       4  ??DataTable32_21
       4  ??DataTable32_22
       4  ??DataTable32_23
       4  ??DataTable32_24
       4  ??DataTable32_25
       4  ??DataTable32_26
       4  ??DataTable32_27
       4  ??DataTable32_28
       4  ??DataTable32_3
       4  ??DataTable32_4
       4  ??DataTable32_5
       4  ??DataTable32_6
       4  ??DataTable32_7
       4  ??DataTable32_8
       4  ??DataTable32_9
      10  ?Subroutine0
      36  Clear_printing
       2  Printing_speed
     144  buttonExt1
          buttonExt2
          buttonFanstate
          buttonBedstate
          buttonTime
          buttonZpos
     970  cbPrintingWin(WM_MESSAGE *)
      32  curFilePath
      84  disp_bed_temp_printing
       2  disp_fan_move_printing
      66  disp_fan_speed_printing
     244  disp_print_time
      68  disp_printing_speed
     196  disp_sprayer_tem_printing
    1634  draw_printing
      36  pause_resum
          E1_Temp
          E2_Temp
          Fan_Pwm
          Bed_Temp
          buttonStop
       1  print_start_flg
      72  print_time
          lastSec
          hPrintingWnd
          printingBar
          printTimeLeft
          Zpos
          buttonPause
          buttonOperat
          once_flag
      68  print_time_run
      26  reset_file_info
      16  reset_print_time
     202  setProBarRate
       2  setProBarValue
      10  start_print_time
      10  stop_print_time
       1  -- Other

 
   287 bytes in section .bss
   167 bytes in section .rodata
 4 040 bytes in section .text
 
 4 040 bytes of CODE  memory
   166 bytes of CONST memory (+ 1 byte shared)
   287 bytes of DATA  memory

Errors: none
Warnings: 66
