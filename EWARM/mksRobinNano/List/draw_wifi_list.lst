###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:41
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_wifi_list.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_wifi_list.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_wifi_list.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_wifi_list.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_wifi_list.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      5          #include "fontLib.h"
      6          #include "LISTBOX.h"
      7          #include "draw_bind.h"
      8          #include "wifi_module.h"
      9          #include "draw_keyboard.h"
     10          #include "draw_set.h"
     11          #include "draw_wifi.h"
     12          #include "wifi_list.h"
     13          #include "draw_wifi_list.h"
     14          #include "string.h"
     15          #include "stdio.h"
     16          
     17          //#include "draw_wifi_connected.h"
     18          
     19          #ifndef GUI_FLASH
     20          #define GUI_FLASH
     21          #endif
     22          
     23          static GUI_HWIN hWifiWnd;
     24          
     25          static TEXT_Handle textWifiTitle,Wifi_Page_text;
     26          
     27          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     28          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
     29          

   \                                 In section .data, align 4
     30          GUI_BITMAP bmp_struct_18x14 = {
   \                     bmp_struct_18x14:
   \   00000000   0x0012 0x000E      DC16 18, 14, 160, 16
   \              0x00A0 0x0010
   \   00000008   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   
     31            18,//80, /* XSize */
     32            14,//50, /* YSize */
     33            160, /* BytesPerLine */
     34            16, /* BitsPerPixel */
     35            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     36            NULL  /* Pointer to palette */
     37           ,GUI_DRAW_BMPM565
     38          };
     39          

   \                                 In section .data, align 4
     40          GUI_BITMAP bmp_struct_0x0 = {
   \                     bmp_struct_0x0:
   \   00000000   0x0000 0x0000      DC16 0, 0, 160, 16
   \              0x00A0 0x0010
   \   00000008   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   

   \                                 In section .bss, align 4
   \                     hWifiWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24
     41            0,//80, /* XSize */
     42            0,//50, /* YSize */
     43            160, /* BytesPerLine */
     44            16, /* BitsPerPixel */
     45            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     46            NULL  /* Pointer to palette */
     47           ,GUI_DRAW_BMPM565
     48          };
     49          	
     50          static BUTTON_STRUCT  buttonWifiPd,buttonRet,buttonN[4];
     51          
     52          WIFI_LIST wifi_list;
     53          list_menu_def list_menu;	
   \                     list_menu:
   \   00000034                      DS8 8

   \                                 In section .bss, align 4
   \                     buttonN:
   \   00000000                      DS8 96

   \                                 In section .bss, align 4
   \                     wifi_list:
   \   00000000                      DS8 720
     54          extern GUI_CONST_STORAGE GUI_FONT GUI_FontHelvetica26;
     55          
     56          #define NAME_BTN_X 330
     57          #define NAME_BTN_Y 48
     58          
     59          #define MARK_BTN_X 0
     60          #define MARK_BTN_Y 68
     61          

   \                                 In section .text, align 2, keep-with-next
     62          static void cbWifiWin(WM_MESSAGE * pMsg) {
   \                     _Z9cbWifiWinP10WM_MESSAGE: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4606             MOV      R6,R0
     63          	int8_t i;
     64          
     65          	struct PressEvt *press_event;
                 	                 ^
Warning[Pe550]: variable "press_event" was set but never used

  static TEXT_Handle textWifiTitle,Wifi_Page_text;
                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_wifi_list.cpp",25  Warning[Pe177]: 
          variable "textWifiTitle" was declared but never referenced
     66          	switch (pMsg->MsgId)
   \   00000006   0x6830             LDR      R0,[R6, #+0]
   \   00000008   0x280C             CMP      R0,#+12
   \   0000000A   0xBF1C             ITT      NE 
   \   0000000C   0x280D             CMPNE    R0,#+13
   \   0000000E   0x280F             CMPNE    R0,#+15
   \   00000010   0xF000 0x80C8      BEQ.W    ??cbWifiWin_0
   \   00000014   0x2826             CMP      R0,#+38
   \   00000016   0xF040 0x80C0      BNE.W    ??cbWifiWin_1
     67          	{
     68          		case WM_PAINT:
     69          			/*GUI_SetColor(0x00dfe0);
     70          			GUI_FillRect(0,titleHeight-2,LCD_WIDTH,titleHeight);
     71          
     72          			GUI_SetColor(0x4c4c4c);
     73          			GUI_DrawHLine((imgHeight/6)*1+titleHeight,0,LCD_WIDTH);
     74          			GUI_DrawHLine((imgHeight/6)*2+titleHeight,0,LCD_WIDTH);
     75          			GUI_DrawHLine((imgHeight/6)*3+titleHeight,0,LCD_WIDTH);
     76          			GUI_DrawHLine((imgHeight/6)*4+titleHeight,0,LCD_WIDTH);
     77          			GUI_DrawHLine((imgHeight/6)*5+titleHeight,0,LCD_WIDTH);*/
     78          			break;
     79          		case WM_TOUCH:
     80          		 	press_event = (struct PressEvt *)pMsg->Data.p;
     81          			
     82          			break;
     83          		case WM_TOUCH_CHILD:
     84          			press_event = (struct PressEvt *)pMsg->Data.p;
     85          
     86          			break;
     87          			
     88          		case WM_NOTIFY_PARENT:
     89          			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001A   0x68B0             LDR      R0,[R6, #+8]
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xF040 0x8091      BNE.W    ??cbWifiWin_2
     90          			{
     91          				
     92          				if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000022   0x.... 0x....      LDR.W    R9,??DataTable8_2
   \   00000026   0xF9B6 0x1006      LDRSH    R1,[R6, #+6]
   \   0000002A   0xF9B9 0x001C      LDRSH    R0,[R9, #+28]
   \   0000002E   0x4281             CMP      R1,R0
   \   00000030   0xD115             BNE.N    ??cbWifiWin_3
     93          				{
     94          					//GUI_Exec();
     95          					//GUI_UC_SetEncodeUTF8();
     96          					
     97          					last_disp_state = WIFI_LIST_UI;
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000036   0x2022             MOVS     R0,#+34
   \   00000038   0x7008             STRB     R0,[R1, #+0]
     98          					Clear_Wifi_list();
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   0000003E   0x6940             LDR      R0,[R0, #+20]
   \   00000040   0x.... 0x....      BL       GUI_SetBkColor
   \   00000044   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000048   0x.... 0x....      BL       WM_IsWindow
   \   0000004C   0xB118             CBZ.N    R0,??cbWifiWin_4
   \   0000004E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000052   0x.... 0x....      BL       WM_DeleteWindow
     99          					draw_Set();
   \                     ??cbWifiWin_4: (+1)
   \   00000056   0xE8BD 0x4FF1      POP      {R0,R4-R11,LR}
   \   0000005A   0x.... 0x....      B.W      draw_Set
    100          				}	
    101          				else if(pMsg->hWinSrc == buttonWifiPd.btnHandle)
   \                     ??cbWifiWin_3: (+1)
   \   0000005E   0xF9B9 0x0004      LDRSH    R0,[R9, #+4]
   \   00000062   0x.... 0x....      LDR.W    R4,??DataTable8_5
   \   00000066   0x4281             CMP      R1,R0
   \   00000068   0xD115             BNE.N    ??cbWifiWin_5
   \   0000006A   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xF2C0 0x8098      BLT.W    ??cbWifiWin_0
    102          				{
    103          					#if 1
    104          					if(wifi_list.getNameNum > 0)
    105          					{
    106          						if((wifi_list.nameIndex + NUMBER_OF_PAGE) >= wifi_list.getNameNum)
   \   00000074   0xF994 0x1001      LDRSB    R1,[R4, #+1]
   \   00000078   0x1D4A             ADDS     R2,R1,#+5
   \   0000007A   0x4282             CMP      R2,R0
   \   0000007C   0xDB03             BLT.N    ??cbWifiWin_6
    107          						{
    108          							wifi_list.nameIndex = 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x7060             STRB     R0,[R4, #+1]
    109          							wifi_list.currentWifipage = 1;
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0xE003             B.N      ??cbWifiWin_7
    110          						}
    111          						else 
    112          						{
    113          							wifi_list.nameIndex += NUMBER_OF_PAGE;
   \                     ??cbWifiWin_6: (+1)
   \   00000086   0x1D48             ADDS     R0,R1,#+5
   \   00000088   0x7060             STRB     R0,[R4, #+1]
    114          							wifi_list.currentWifipage++;
   \   0000008A   0x78A0             LDRB     R0,[R4, #+2]
   \   0000008C   0x1C40             ADDS     R0,R0,#+1
   \                     ??cbWifiWin_7: (+1)
   \   0000008E   0x70A0             STRB     R0,[R4, #+2]
    115          						}
    116          						disp_wifi_list();
   \   00000090   0xE8BD 0x4FF1      POP      {R0,R4-R11,LR}
   \   00000094   0x....             B.N      disp_wifi_list
    117          					}
    118          					#else
    119          					Clear_Wifi_list();
    120          					draw_Keyboard();
    121          					#endif
    122          				}
    123          				else
    124          				{
    125          					i = NUMBER_OF_PAGE;
   \                     ??cbWifiWin_5: (+1)
   \   00000096   0xF504 0x702B      ADD      R0,R4,#+684
   \   0000009A   0x2505             MOVS     R5,#+5
   \   0000009C   0x9000             STR      R0,[SP, #+0]
   \   0000009E   0x.... 0x....      LDR.W    R8,??DataTable8_6
   \   000000A2   0x.... 0x....      LDR.W    R7,??DataTable8_7
   \   000000A6   0x.... 0x....      LDR.W    R10,??DataTable8_4
   \   000000AA   0x.... 0x....      LDR.W    R11,??DataTable8_3
    126          					while(i--)
    127          					{
    128          						if(pMsg->hWinSrc == buttonN[i].btnHandle)
   \                     ??cbWifiWin_8: (+1)
   \   000000AE   0xF9B6 0x0006      LDRSH    R0,[R6, #+6]
   \   000000B2   0x1E6D             SUBS     R5,R5,#+1
   \   000000B4   0xEB05 0x0145      ADD      R1,R5,R5, LSL #+1
   \   000000B8   0x00C9             LSLS     R1,R1,#+3
   \   000000BA   0x5FC9             LDRSH    R1,[R1, R7]
   \   000000BC   0x4288             CMP      R0,R1
   \   000000BE   0xD127             BNE.N    ??cbWifiWin_9
    129          						{
    130          							if(wifi_list.getNameNum !=0)
   \   000000C0   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   000000C4   0xB320             CBZ.N    R0,??cbWifiWin_9
    131          							{
    132          								//GUI_Exec();
    133          								//GUI_UC_SetEncodeUTF8();
    134          								
    135          								if(wifi_link_state == WIFI_CONNECTED && strcmp((const char *)wifi_list.wifiConnectedName,(const char *)wifi_list.wifiName[wifi_list.nameIndex + i]) == 0)
   \   000000C6   0xF998 0x0000      LDRSB    R0,[R8, #+0]
   \   000000CA   0x280E             CMP      R0,#+14
   \   000000CC   0xD124             BNE.N    ??cbWifiWin_10
   \   000000CE   0xF994 0x0001      LDRSB    R0,[R4, #+1]
   \   000000D2   0x1828             ADDS     R0,R5,R0
   \   000000D4   0xEB00 0x1040      ADD      R0,R0,R0, LSL #+5
   \   000000D8   0x1900             ADDS     R0,R0,R4
   \   000000DA   0xF100 0x0118      ADD      R1,R0,#+24
   \   000000DE   0x9800             LDR      R0,[SP, #+0]
   \   000000E0   0x.... 0x....      BL       strcmp
   \   000000E4   0xB9C0             CBNZ.N   R0,??cbWifiWin_10
    136          								{
    137          									//BUTTON_SetBmpFileName(buttonN[i].btnHandle, "bmp_Check_Mark_Yellow.bin",1);
    138          									//BUTTON_SetBitmapEx(buttonN[i].btnHandle, 0, &bmp_struct_18x14,MARK_BTN_X, (NAME_BTN_Y-1-14)/2);
    139          
    140          									wifi_list.nameIndex = wifi_list.nameIndex + i;
   \   000000E6   0x7860             LDRB     R0,[R4, #+1]
   \   000000E8   0x1828             ADDS     R0,R5,R0
   \   000000EA   0x7060             STRB     R0,[R4, #+1]
    141          									last_disp_state = WIFI_LIST_UI;
   \   000000EC   0x2022             MOVS     R0,#+34
   \   000000EE   0xF88B 0x0000      STRB     R0,[R11, #+0]
    142          									Clear_Wifi_list();
   \   000000F2   0xF8DA 0x0014      LDR      R0,[R10, #+20]
   \   000000F6   0x.... 0x....      BL       GUI_SetBkColor
   \   000000FA   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000000FE   0x.... 0x....      BL       WM_IsWindow
   \   00000102   0xB118             CBZ.N    R0,??cbWifiWin_11
   \   00000104   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000108   0x.... 0x....      BL       WM_DeleteWindow
    143          									//draw_WifiConnected();
    144          									draw_Wifi();
   \                     ??cbWifiWin_11: (+1)
   \   0000010C   0x.... 0x....      BL       draw_Wifi
    145          								}
   \                     ??cbWifiWin_9: (+1)
   \   00000110   0x2D00             CMP      R5,#+0
   \   00000112   0xD1CC             BNE.N    ??cbWifiWin_8
    146          								else
    147          								{
    148          									wifi_list.nameIndex = wifi_list.nameIndex + i;
    149          									last_disp_state = WIFI_LIST_UI;
    150          									Clear_Wifi_list();
    151          									draw_Keyboard();
    152          								}
    153          							}
    154          						}
    155          					}
    156          				}
    157          				
    158          			}
    159          			else if(pMsg->Data.v == WM_NOTIFICATION_CLICKED)
    160          			{
    161          				if(pMsg->hWinSrc == buttonWifiPd.btnHandle)
    162          				{
    163          					//BUTTON_SetFont(buttonWifiPd.btnHandle,&GUI_FontHelvetica36_bold);
    164          				}
    165          				else
    166          				{
    167          					i = NUMBER_OF_PAGE;
    168          					while(i--)
    169          					{
    170          						if(pMsg->hWinSrc == buttonN[i].btnHandle)
    171          						{
    172          							if(wifi_link_state == WIFI_CONNECTED && strcmp((const char *)wifi_list.wifiConnectedName,(const char *)wifi_list.wifiName[wifi_list.nameIndex + i]) == 0)
    173          							{
    174          								//BUTTON_SetBmpFileName(buttonN[i].btnHandle, "bmp_Check_Mark_Black.bin",1);
    175          								//BUTTON_SetBitmapEx(buttonN[i].btnHandle, 0, &bmp_struct_18x14,MARK_BTN_X, (NAME_BTN_Y-1-14)/2);
    176          							}
    177          						}
    178          					}
    179          				}
    180          			}
    181          			break;
    182          			
    183          		default:
    184          			WM_DefaultProc(pMsg);
    185          		}
    186          	}
   \   00000114   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}
   \                     ??cbWifiWin_10: (+1)
   \   00000118   0x7860             LDRB     R0,[R4, #+1]
   \   0000011A   0x1828             ADDS     R0,R5,R0
   \   0000011C   0x7060             STRB     R0,[R4, #+1]
   \   0000011E   0x2022             MOVS     R0,#+34
   \   00000120   0xF88B 0x0000      STRB     R0,[R11, #+0]
   \   00000124   0xF8DA 0x0014      LDR      R0,[R10, #+20]
   \   00000128   0x.... 0x....      BL       GUI_SetBkColor
   \   0000012C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000130   0x.... 0x....      BL       WM_IsWindow
   \   00000134   0xB118             CBZ.N    R0,??cbWifiWin_12
   \   00000136   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000013A   0x.... 0x....      BL       WM_DeleteWindow
   \                     ??cbWifiWin_12: (+1)
   \   0000013E   0x.... 0x....      BL       draw_Keyboard
   \   00000142   0xE7E5             B.N      ??cbWifiWin_9
   \                     ??cbWifiWin_2: (+1)
   \   00000144   0x2801             CMP      R0,#+1
   \   00000146   0xD12D             BNE.N    ??cbWifiWin_0
   \   00000148   0x....             LDR.N    R0,??DataTable8_2
   \   0000014A   0xF9B6 0x6006      LDRSH    R6,[R6, #+6]
   \   0000014E   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   00000152   0x4286             CMP      R6,R0
   \   00000154   0xD026             BEQ.N    ??cbWifiWin_0
   \   00000156   0x....             LDR.N    R4,??DataTable8_5
   \   00000158   0x.... 0x....      LDR.W    R9,??DataTable8_6
   \   0000015C   0x....             LDR.N    R7,??DataTable8_7
   \   0000015E   0xF504 0x702B      ADD      R0,R4,#+684
   \   00000162   0x2505             MOVS     R5,#+5
   \   00000164   0x9000             STR      R0,[SP, #+0]
   \                     ??cbWifiWin_13: (+1)
   \   00000166   0x1E6D             SUBS     R5,R5,#+1
   \   00000168   0xEB05 0x0045      ADD      R0,R5,R5, LSL #+1
   \   0000016C   0x00C0             LSLS     R0,R0,#+3
   \   0000016E   0x5FC0             LDRSH    R0,[R0, R7]
   \   00000170   0x4286             CMP      R6,R0
   \   00000172   0xBF04             ITT      EQ 
   \   00000174   0xF999 0x0000      LDRSBEQ  R0,[R9, #+0]
   \   00000178   0x280E             CMPEQ    R0,#+14
   \   0000017A   0xD10A             BNE.N    ??cbWifiWin_14
   \   0000017C   0xF994 0x0001      LDRSB    R0,[R4, #+1]
   \   00000180   0x1828             ADDS     R0,R5,R0
   \   00000182   0xEB00 0x1040      ADD      R0,R0,R0, LSL #+5
   \   00000186   0x1900             ADDS     R0,R0,R4
   \   00000188   0xF100 0x0118      ADD      R1,R0,#+24
   \   0000018C   0x9800             LDR      R0,[SP, #+0]
   \   0000018E   0x.... 0x....      BL       strcmp
   \                     ??cbWifiWin_14: (+1)
   \   00000192   0x2D00             CMP      R5,#+0
   \   00000194   0xD1E7             BNE.N    ??cbWifiWin_13
   \   00000196   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}
   \                     ??cbWifiWin_1: (+1)
   \   0000019A   0x4630             MOV      R0,R6
   \   0000019C   0xE8BD 0x4FF2      POP      {R1,R4-R11,LR}
   \   000001A0   0x.... 0x....      B.W      WM_DefaultProc
   \                     ??cbWifiWin_0: (+1)
   \   000001A4   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    187          

   \                                 In section .text, align 2, keep-with-next
    188          void draw_Wifi_list()
    189          {	
   \                     draw_Wifi_list: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    190          	//int row;
    191          
    192          	//char buf[60];
    193          	//char page[20];
    194          	
    195          	
    196          	int8_t i;
    197          
    198          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != WIFI_LIST_UI)
   \   00000004   0x....             LDR.N    R0,??DataTable8_8
   \   00000006   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000A   0xB085             SUB      SP,SP,#+20
   \   0000000C   0x560A             LDRSB    R2,[R1, R0]
   \   0000000E   0x2A22             CMP      R2,#+34
   \   00000010   0xD005             BEQ.N    ??draw_Wifi_list_0
    199          	{
    200          		disp_state_stack._disp_index++;
   \   00000012   0x1C49             ADDS     R1,R1,#+1
   \   00000014   0xF880 0x1064      STRB     R1,[R0, #+100]
    201          		disp_state_stack._disp_state[disp_state_stack._disp_index] = WIFI_LIST_UI;
   \   00000018   0x2222             MOVS     R2,#+34
   \   0000001A   0xB249             SXTB     R1,R1
   \   0000001C   0x540A             STRB     R2,[R1, R0]
    202          	}
    203          	disp_state = WIFI_LIST_UI;
   \                     ??draw_Wifi_list_0: (+1)
   \   0000001E   0x2022             MOVS     R0,#+34
   \   00000020   0x....             LDR.N    R1,??DataTable8_9
   \   00000022   0x7008             STRB     R0,[R1, #+0]
    204          	GUI_Clear();	
   \   00000024   0x.... 0x....      BL       GUI_Clear
    205          
    206          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000028   0x....             LDR.N    R4,??DataTable8_4
   \   0000002A   0x6960             LDR      R0,[R4, #+20]
   \   0000002C   0x.... 0x....      BL       GUI_SetBkColor
    207          	GUI_SetColor(gCfgItems.title_color);
   \   00000030   0x69A0             LDR      R0,[R4, #+24]
   \   00000032   0x.... 0x....      BL       GUI_SetColor
    208          	GUI_Clear();
   \   00000036   0x.... 0x....      BL       GUI_Clear
    209          
    210          	
    211          
    212          	GUI_DispStringAt(creat_title_text(),  TITLE_XPOS, TITLE_YPOS);
   \   0000003A   0x.... 0x....      BL       creat_title_text
   \   0000003E   0x2205             MOVS     R2,#+5
   \   00000040   0x2103             MOVS     R1,#+3
   \   00000042   0x.... 0x....      BL       GUI_DispStringAt
    213          	
    214          	hWifiWnd = WM_CreateWindow(0 , titleHeight,LCD_WIDTH,imgHeight, WM_CF_SHOW, cbWifiWin, 0);
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x9002             STR      R0,[SP, #+8]
   \   0000004A   0xF44F 0x738E      MOV      R3,#+284
   \   0000004E   0x....             LDR.N    R0,??DataTable8_10
   \   00000050   0x9001             STR      R0,[SP, #+4]
   \   00000052   0xF44F 0x72F0      MOV      R2,#+480
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0x2124             MOVS     R1,#+36
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      BL       WM_CreateWindow
    215          
    216          	    buttonRet.btnHandle = BUTTON_CreateEx(OTHER_BTN_XPIEL*3+INTERVAL_V*4,OTHER_BTN_YPIEL*2+INTERVAL_H*2,OTHER_BTN_XPIEL,OTHER_BTN_YPIEL, hWifiWnd, BUTTON_CF_SHOW, 0, 308);
   \   00000062   0xF44F 0x719A      MOV      R1,#+308
   \   00000066   0x9103             STR      R1,[SP, #+12]
   \   00000068   0xF240 0x1667      MOVW     R6,#+359
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0x9102             STR      R1,[SP, #+8]
   \   00000070   0x2102             MOVS     R1,#+2
   \   00000072   0x....             LDR.N    R5,??DataTable8_2
   \   00000074   0x9101             STR      R1,[SP, #+4]
   \   00000076   0x8028             STRH     R0,[R5, #+0]
   \   00000078   0x9000             STR      R0,[SP, #+0]
   \   0000007A   0x235C             MOVS     R3,#+92
   \   0000007C   0x2275             MOVS     R2,#+117
   \   0000007E   0x21BC             MOVS     R1,#+188
   \   00000080   0x4630             MOV      R0,R6
   \   00000082   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000086   0x83A8             STRH     R0,[R5, #+28]
    217          	    Wifi_Page_text = TEXT_CreateEx(LCD_WIDTH-90,titleHeight+5,90,30, hWifiWnd, WM_CF_SHOW, TEXT_CF_HCENTER|TEXT_CF_VCENTER,	GUI_ID_TEXT1, "");
   \   00000088   0x231E             MOVS     R3,#+30
   \   0000008A   0x....             ADR.N    R0,??DataTable8  ;; ""
   \   0000008C   0x9004             STR      R0,[SP, #+16]
   \   0000008E   0x225A             MOVS     R2,#+90
   \   00000090   0xF240 0x1061      MOVW     R0,#+353
   \   00000094   0x9003             STR      R0,[SP, #+12]
   \   00000096   0x2129             MOVS     R1,#+41
   \   00000098   0x200E             MOVS     R0,#+14
   \   0000009A   0x9002             STR      R0,[SP, #+8]
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0x9001             STR      R0,[SP, #+4]
   \   000000A0   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0xF44F 0x70C3      MOV      R0,#+390
   \   000000AA   0x.... 0x....      BL       TEXT_CreateEx
   \   000000AE   0x8068             STRH     R0,[R5, #+2]
    218          	    //if(wifi_list.getPage>=2)
    219          	     buttonWifiPd.btnHandle = BUTTON_CreateEx(OTHER_BTN_XPIEL*3+INTERVAL_V*4,OTHER_BTN_YPIEL+INTERVAL_H,OTHER_BTN_XPIEL,OTHER_BTN_YPIEL, hWifiWnd, BUTTON_CF_SHOW, 0, 309);
   \   000000B0   0x235C             MOVS     R3,#+92
   \   000000B2   0xF240 0x1035      MOVW     R0,#+309
   \   000000B6   0x9003             STR      R0,[SP, #+12]
   \   000000B8   0x2275             MOVS     R2,#+117
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x9002             STR      R0,[SP, #+8]
   \   000000BE   0x215E             MOVS     R1,#+94
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x9001             STR      R0,[SP, #+4]
   \   000000C4   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   000000C8   0x9000             STR      R0,[SP, #+0]
   \   000000CA   0x4630             MOV      R0,R6
   \   000000CC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D0   0x80A8             STRH     R0,[R5, #+4]
    220          
    221          
    222          	BUTTON_SetBmpFileName(buttonWifiPd.btnHandle, "bmp_pageDown.bin",1);
   \   000000D2   0x2201             MOVS     R2,#+1
   \   000000D4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_pageDown.bin">`
   \   000000D8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    223          
    224          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_back.bin",1);
   \   000000DC   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000000E0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_back.bin">`
   \   000000E4   0x2201             MOVS     R2,#+1
   \   000000E6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    225          	BUTTON_SetBitmapEx(buttonWifiPd.btnHandle, 0, &bmp_struct_92,BMP_PIC_X, BMP_PIC_Y);
   \   000000EA   0x.... 0x....      LDR.W    R8,??DataTable8_11
   \   000000EE   0x....             LDR.N    R7,??DataTable8_12
   \   000000F0   0xF998 0x0000      LDRSB    R0,[R8, #+0]
   \   000000F4   0x....             LDR.N    R6,??DataTable8_13
   \   000000F6   0xF997 0x3000      LDRSB    R3,[R7, #+0]
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0x4632             MOV      R2,R6
   \   000000FE   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000102   0x2100             MOVS     R1,#+0
   \   00000104   0x.... 0x....      BL       BUTTON_SetBitmapEx
    226          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct_92,BMP_PIC_X, BMP_PIC_Y);
   \   00000108   0xF998 0x0000      LDRSB    R0,[R8, #+0]
   \   0000010C   0xF997 0x3000      LDRSB    R3,[R7, #+0]
   \   00000110   0x9000             STR      R0,[SP, #+0]
   \   00000112   0x4632             MOV      R2,R6
   \   00000114   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    227          
    228          	/*BUTTON_SetBkColor(buttonWifiPd.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    229          	BUTTON_SetBkColor(buttonWifiPd.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    230          	BUTTON_SetTextColor(buttonWifiPd.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    231          	BUTTON_SetTextColor(buttonWifiPd.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    232          
    233          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    234          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    235          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    236          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    237          */
    238          	//GUI_Exec();
    239          
    240          	    //GUI_UC_SetEncodeNone();
    241          
    242          	  
    243          	    
    244          	#if 1	
    245          		  TEXT_SetFont(Wifi_Page_text,&GUI_FontHelvetica26);
   \   0000011E   0x.... 0x....      LDR.W    R9,??DataTable8_14
   \   00000122   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000126   0x4649             MOV      R1,R9
   \   00000128   0x.... 0x....      BL       TEXT_SetFont
    246                     TEXT_SetTextColor(Wifi_Page_text,gCfgItems.title_color);
   \   0000012C   0x69A1             LDR      R1,[R4, #+24]
   \   0000012E   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000132   0x.... 0x....      BL       TEXT_SetTextColor
    247          		   TEXT_SetBkColor(Wifi_Page_text,gCfgItems.background_color);
   \   00000136   0x6961             LDR      R1,[R4, #+20]
   \   00000138   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   0000013C   0x.... 0x....      BL       TEXT_SetBkColor
    248          
    249          	   for(i = 0; i < NUMBER_OF_PAGE; i++)
   \   00000140   0x.... 0x....      LDR.W    R8,??DataTable8_7
   \   00000144   0x2700             MOVS     R7,#+0
   \   00000146   0x260A             MOVS     R6,#+10
   \   00000148   0xF64D 0x7AE0      MOVW     R10,#+57312
   \   0000014C   0xF06F 0x4B7F      MVN      R11,#-16777216
    250          	    {
    251                  	buttonN[i].btnHandle = BUTTON_CreateEx(0,NAME_BTN_Y*i+10,NAME_BTN_X,NAME_BTN_Y,hWifiWnd, BUTTON_CF_SHOW, 0, 107 + i);
   \                     ??draw_Wifi_list_1: (+1)
   \   00000150   0xF107 0x006B      ADD      R0,R7,#+107
   \   00000154   0x9003             STR      R0,[SP, #+12]
   \   00000156   0x2330             MOVS     R3,#+48
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x9002             STR      R0,[SP, #+8]
   \   0000015C   0xF44F 0x72A5      MOV      R2,#+330
   \   00000160   0x2002             MOVS     R0,#+2
   \   00000162   0x9001             STR      R0,[SP, #+4]
   \   00000164   0x4631             MOV      R1,R6
   \   00000166   0xF9B5 0x0000      LDRSH    R0,[R5, #+0]
   \   0000016A   0x9000             STR      R0,[SP, #+0]
   \   0000016C   0x2000             MOVS     R0,#+0
   \   0000016E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000172   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    252          
    253          		BUTTON_SetFont(buttonN[i].btnHandle,&GUI_FontHelvetica26);
   \   00000176   0x4649             MOV      R1,R9
   \   00000178   0x.... 0x....      BL       BUTTON_SetFont
    254          		BUTTON_SetTextAlign(buttonN[i].btnHandle,GUI_CUSTOM_POS|GUI_TA_VCENTER);
   \   0000017C   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000180   0x211C             MOVS     R1,#+28
   \   00000182   0x.... 0x....      BL       BUTTON_SetTextAlign
    255          
    256          		
    257          		BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_PRESSED,0X000000);
   \   00000186   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000018A   0x2200             MOVS     R2,#+0
   \   0000018C   0x2101             MOVS     R1,#+1
   \   0000018E   0x.... 0x....      BL       BUTTON_SetTextColor
    258          	       BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   00000192   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000196   0x465A             MOV      R2,R11
   \   00000198   0x2100             MOVS     R1,#+0
   \   0000019A   0x.... 0x....      BL       BUTTON_SetTextColor
    259          		BUTTON_SetBkColor(buttonN[i].btnHandle, BUTTON_CI_PRESSED, 0X00DFE0);
   \   0000019E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000001A2   0x4652             MOV      R2,R10
   \   000001A4   0x2101             MOVS     R1,#+1
   \   000001A6   0x.... 0x....      BL       BUTTON_SetBkColor
    260          	       BUTTON_SetBkColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.background_color);
   \   000001AA   0x6962             LDR      R2,[R4, #+20]
   \   000001AC   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000001B0   0x2100             MOVS     R1,#+0
   \   000001B2   0x.... 0x....      BL       BUTTON_SetBkColor
    261          	       
    262                  	BUTTON_SetBmpFileName(buttonN[i].btnHandle, NULL,1);
   \   000001B6   0xF938 0x0B18      LDRSH    R0,[R8], #+24
   \   000001BA   0x2201             MOVS     R2,#+1
   \   000001BC   0x2100             MOVS     R1,#+0
   \   000001BE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    263          	    }
   \   000001C2   0x1C7F             ADDS     R7,R7,#+1
   \   000001C4   0x3630             ADDS     R6,R6,#+48
   \   000001C6   0x2F05             CMP      R7,#+5
   \   000001C8   0xDBC2             BLT.N    ??draw_Wifi_list_1
    264          
    265          	       /*wifi_list.getPage = 0;
    266          		wifi_list.currentWifipage = 0;
    267          		wifi_list.getNameNum = 0;
    268          		wifi_list.nameIndex = 0;
    269          		memset(&wifi_list.wifiConnectedName,0,sizeof(wifi_list.wifiConnectedName));
    270          		memset(&wifi_list.wifiName,0,sizeof(wifi_list.wifiName));*/
    271          
    272          		/*if(last_disp_state == SET_UI && wifi_link_state != WIFI_CONNECTED)
    273          		{
    274          			wifi_list.getPage = 0;
    275          			wifi_list.currentWifipage = 0;
    276          			wifi_list.getNameNum = 0;
    277          			wifi_list.nameIndex = 0;
    278          			memset(wifi_list.wifiName,0,sizeof(wifi_list.wifiName));
    279          		}
    280          		else*/
    281          		//{
    282          			wifi_list.nameIndex = 0;
   \   000001CA   0x....             LDR.N    R0,??DataTable8_5
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x7041             STRB     R1,[R0, #+1]
    283          			wifi_list.currentWifipage = 1;
   \   000001D0   0x2101             MOVS     R1,#+1
   \   000001D2   0x7081             STRB     R1,[R0, #+2]
    284          		//}
    285          
    286          		if(wifi_link_state == WIFI_CONNECTED && wifiPara.mode == 0x02)
   \   000001D4   0x....             LDR.N    R1,??DataTable8_6
   \   000001D6   0xF991 0x1000      LDRSB    R1,[R1, #+0]
   \   000001DA   0x290E             CMP      R1,#+14
   \   000001DC   0xBF02             ITTT     EQ 
   \   000001DE   0x....             LDREQ.N  R1,??DataTable8_15
   \   000001E0   0x6E8A             LDREQ    R2,[R1, #+104]
   \   000001E2   0x2A02             CMPEQ    R2,#+2
   \   000001E4   0xD106             BNE.N    ??draw_Wifi_list_2
    287          		{
    288          			memset(wifi_list.wifiConnectedName, 0, sizeof(&wifi_list.wifiConnectedName));
   \   000001E6   0xF500 0x702B      ADD      R0,R0,#+684
   \   000001EA   0x2200             MOVS     R2,#+0
   \   000001EC   0x6002             STR      R2,[R0, #+0]
    289          			memcpy(wifi_list.wifiConnectedName, wifiPara.ap_name, sizeof(wifi_list.wifiConnectedName));
   \   000001EE   0x2221             MOVS     R2,#+33
   \   000001F0   0x.... 0x....      BL       __aeabi_memcpy4
    290          		}
    291          	    
    292          	    disp_wifi_list();
   \                     ??draw_Wifi_list_2: (+1)
   \   000001F4   0xB005             ADD      SP,SP,#+20
   \   000001F6   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000001FA                      REQUIRE disp_wifi_list
   \   000001FA                      ;; // Fall through to label disp_wifi_list
    293          		#endif
    294          }
    295          

   \                                 In section .text, align 2, keep-with-next
    296          void disp_wifi_list(void)
    297          {
   \                     disp_wifi_list: (+1)
   \   00000000   0xE92D 0x4BF0      PUSH     {R4-R9,R11,LR}
   \   00000004   0xB08C             SUB      SP,SP,#+48
    298          	int8_t tmpStr[WIFI_NAME_BUFFER_SIZE] = {0};
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x2124             MOVS     R1,#+36
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    299          	//int8_t buf[WIFI_NAME_BUFFER_SIZE] = {0};
    300          	uint8_t i,j;
    301          	
    302          	
    303          
    304          	if(wifi_list.getPage >= 2)
    305          	{
    306          		//file_menu.page_down = FILE_NEXT_PAGE_EN;
    307          	}
    308          	else
    309          	{
    310          		//file_menu.page_down = 0;
    311          	}
    312          	//BUTTON_SetText(buttonWifiPd.btnHandle, file_menu.page_down);
    313          
    314                 sprintf((char *)tmpStr,list_menu.file_pages,wifi_list.currentWifipage,wifi_list.getPage);
   \   0000000E   0x....             LDR.N    R5,??DataTable8_2
   \   00000010   0x....             LDR.N    R4,??DataTable8_5
   \   00000012   0x6BA9             LDR      R1,[R5, #+56]
   \   00000014   0xF994 0x3003      LDRSB    R3,[R4, #+3]
   \   00000018   0xF994 0x2002      LDRSB    R2,[R4, #+2]
   \   0000001C   0xA801             ADD      R0,SP,#+4
   \   0000001E   0x.... 0x....      BL       sprintf
    315                 TEXT_SetText(Wifi_Page_text,(const char *)tmpStr);
   \   00000022   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000026   0xA901             ADD      R1,SP,#+4
   \   00000028   0x.... 0x....      BL       TEXT_SetText
    316          	
    317          	#if 1
    318          	for(i=0;i<NUMBER_OF_PAGE;i++)
   \   0000002C   0xF504 0x702B      ADD      R0,R4,#+684
   \   00000030   0x2500             MOVS     R5,#+0
   \   00000032   0x....             LDR.N    R6,??DataTable8_7
   \   00000034   0x.... 0x....      LDR.W    R9,??DataTable8_6
   \   00000038   0x9000             STR      R0,[SP, #+0]
   \   0000003A   0xF06F 0x4B7F      MVN      R11,#-16777216
   \   0000003E   0xF64D 0x78E0      MOVW     R8,#+57312
    319          	{
    320          
    321          		/*buttonN[i].btnHandle = BUTTON_CreateEx(0,NAME_BTN_Y*i+10,NAME_BTN_X,NAME_BTN_Y,hWifiWnd, BUTTON_CF_SHOW, 0, 107 + i);
    322          
    323          		BUTTON_SetFont(buttonN[i].btnHandle,&GUI_FontHZ16);
    324          		BUTTON_SetTextAlign(buttonN[i].btnHandle,GUI_CUSTOM_POS|GUI_TA_VCENTER);
    325          
    326          		
    327          		BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_PRESSED,0X000000);
    328          	       BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    329          		BUTTON_SetBkColor(buttonN[i].btnHandle, BUTTON_CI_PRESSED, 0X00DFE0);
    330          	       BUTTON_SetBkColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED, 0x000000);
    331          	       
    332                  	BUTTON_SetBmpFileName(buttonN[i].btnHandle, NULL,1);*/
    333          			
    334          		memset(tmpStr, 0, sizeof(tmpStr));
   \                     ??disp_wifi_list_0: (+1)
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2121             MOVS     R1,#+33
   \   00000046   0xA801             ADD      R0,SP,#+4
   \   00000048   0x.... 0x....      BL       __aeabi_memset4
    335          
    336          		j = wifi_list.nameIndex + i;
   \   0000004C   0xF994 0x0001      LDRSB    R0,[R4, #+1]
    337          		if(j >= wifi_list.getNameNum)
   \   00000050   0xF994 0x2000      LDRSB    R2,[R4, #+0]
   \   00000054   0x1829             ADDS     R1,R5,R0
   \   00000056   0xB2C9             UXTB     R1,R1
   \   00000058   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000005C   0x4291             CMP      R1,R2
   \   0000005E   0xDB03             BLT.N    ??disp_wifi_list_1
    338          		{
    339          			BUTTON_SetText(buttonN[i].btnHandle, (char const *)(tmpStr));
   \   00000060   0xA901             ADD      R1,SP,#+4
   \   00000062   0x.... 0x....      BL       BUTTON_SetText
   \   00000066   0xE019             B.N      ??disp_wifi_list_2
    340          		}
    341          		else
    342          		{
    343          			//cutWifiName((char *)wifi_list.wifiName[j], 20,  (char *)tmpStr); 
    344          			//BUTTON_SetText(buttonN[i].btnHandle, (char const *)(tmpStr));
    345          			BUTTON_SetText(buttonN[i].btnHandle, (char const *)wifi_list.wifiName[j]);
   \                     ??disp_wifi_list_1: (+1)
   \   00000068   0xEB01 0x1141      ADD      R1,R1,R1, LSL #+5
   \   0000006C   0x190F             ADDS     R7,R1,R4
   \   0000006E   0xF107 0x0118      ADD      R1,R7,#+24
   \   00000072   0x.... 0x....      BL       BUTTON_SetText
    346          			
    347          			if(wifi_link_state == WIFI_CONNECTED && strcmp((const char *)wifi_list.wifiConnectedName,(const char *)wifi_list.wifiName[j]) == 0)
   \   00000076   0xF999 0x0000      LDRSB    R0,[R9, #+0]
   \   0000007A   0x280E             CMP      R0,#+14
   \   0000007C   0xD109             BNE.N    ??disp_wifi_list_3
   \   0000007E   0x9800             LDR      R0,[SP, #+0]
   \   00000080   0xF107 0x0118      ADD      R1,R7,#+24
   \   00000084   0x.... 0x....      BL       strcmp
   \   00000088   0xB918             CBNZ.N   R0,??disp_wifi_list_3
    348          			{
    349          				//BUTTON_SetBmpFileName(buttonN[i].btnHandle, "bmp_Check_Mark_Yellow.bin",1);
    350          				//BUTTON_SetBitmapEx(buttonN[i].btnHandle, 0, &bmp_struct_18x14,MARK_BTN_X, (NAME_BTN_Y-1-14)/2);
    351          	       		BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED,0X00DFE0);
   \   0000008A   0x5E30             LDRSH    R0,[R6, R0]
   \   0000008C   0x4642             MOV      R2,R8
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0xE002             B.N      ??disp_wifi_list_4
    352          			}
    353          			else
    354          			{
    355          				//BUTTON_SetBmpFileName(buttonN[i].btnHandle, "bmp_Check_Mark_None.bin",1);
    356          				//BUTTON_SetBitmapEx(buttonN[i].btnHandle, 0, &bmp_struct_0x0,0,0);
    357          				BUTTON_SetTextColor(buttonN[i].btnHandle, BUTTON_CI_UNPRESSED,0Xffffff);
   \                     ??disp_wifi_list_3: (+1)
   \   00000092   0x2100             MOVS     R1,#+0
   \   00000094   0x465A             MOV      R2,R11
   \   00000096   0x5E70             LDRSH    R0,[R6, R1]
   \                     ??disp_wifi_list_4: (+1)
   \   00000098   0x.... 0x....      BL       BUTTON_SetTextColor
    358          			}
    359          		}
    360          	}
   \                     ??disp_wifi_list_2: (+1)
   \   0000009C   0x1C6D             ADDS     R5,R5,#+1
   \   0000009E   0x3618             ADDS     R6,R6,#+24
   \   000000A0   0x2D05             CMP      R5,#+5
   \   000000A2   0xDBCE             BLT.N    ??disp_wifi_list_0
    361          	//GUI_Exec();
    362          	//GUI_UC_SetEncodeUTF8();
    363                  #endif    
    364          }
   \   000000A4   0xB00C             ADD      SP,SP,#+48
   \   000000A6   0xE8BD 0x8BF0      POP      {R4-R9,R11,PC}   ;; return
    365          

   \                                 In section .text, align 2, keep-with-next
    366          void cutWifiName(char *name, int len,char *outStr)
    367          {
   \                     cutWifiName: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    368          	if(name == 0 || len <= 3 || outStr == 0)
   \   00000008   0xD017             BEQ.N    ??cutWifiName_0
   \   0000000A   0x2D04             CMP      R5,#+4
   \   0000000C   0xDB15             BLT.N    ??cutWifiName_0
   \   0000000E   0xB1A6             CBZ.N    R6,??cutWifiName_0
    369          	{
    370          		return;
    371          	}
    372          	if(strlen(name) > len)
   \   00000010   0x.... 0x....      BL       strlen
   \   00000014   0x4285             CMP      R5,R0
   \   00000016   0xD20A             BCS.N    ??cutWifiName_1
    373          	{
    374          		strncpy(outStr, name, len);
   \   00000018   0x462A             MOV      R2,R5
   \   0000001A   0x4621             MOV      R1,R4
   \   0000001C   0x4630             MOV      R0,R6
   \   0000001E   0x.... 0x....      BL       strncpy
    375          		strcat(outStr, "~");
   \   00000022   0x4630             MOV      R0,R6
   \   00000024   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000028   0x....             ADR.N    R1,??DataTable8_1  ;; "~"
   \   0000002A   0x.... 0x....      B.W      strcat
    376          	}
    377          	else
    378          	{
    379          		strcpy(outStr, name);
   \                     ??cutWifiName_1: (+1)
   \   0000002E   0x4621             MOV      R1,R4
   \   00000030   0x4630             MOV      R0,R6
   \   00000032   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000036   0x.... 0x....      B.W      strcpy
    380          	}
    381          }
   \                     ??cutWifiName_0: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    382          
    383          

   \                                 In section .text, align 2, keep-with-next
    384          void Clear_Wifi_list()
    385          {
   \                     Clear_Wifi_list: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    386          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable8_4
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    387          	if(WM_IsWindow(hWifiWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable8_2
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_Wifi_list_0
    388          	{
    389          		WM_DeleteWindow(hWifiWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    390          	//	GUI_Exec();
    391          	}
    392          	
    393          	//GUI_Clear();
    394          }
   \                     ??Clear_Wifi_list_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x7E 0x00          DC8      "~",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     hWifiWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     wifi_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     wifi_link_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     buttonN

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     _Z9cbWifiWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     bmp_struct_92

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     GUI_FontHelvetica26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     wifiPara

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_pageDown.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_pageDown.bin"
   \              0x70 0x5F    
   \              0x70 0x61    
   \              0x67 0x65    
   \              0x44 0x6F    
   \              0x77 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_back.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_back.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {(int8_t)'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "~">`:
   \   00000000   0x7E 0x00          DC8 "~"
    395          
    396          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_Wifi_list
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      40   cbWifiWin(WM_MESSAGE *)
        40   -> GUI_SetBkColor
         0   -> WM_DefaultProc
        40   -> WM_DeleteWindow
        40   -> WM_IsWindow
         0   -> disp_wifi_list
        40   -> draw_Keyboard
         0   -> draw_Set
        40   -> draw_Wifi
        40   -> strcmp
      16   cutWifiName
         0   -> strcat
         0   -> strcpy
        16   -> strlen
        16   -> strncpy
      80   disp_wifi_list
        80   -> BUTTON_SetText
        80   -> BUTTON_SetTextColor
        80   -> TEXT_SetText
        80   -> __aeabi_memclr4
        80   -> __aeabi_memset4
        80   -> sprintf
        80   -> strcmp
      56   draw_Wifi_list
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
        56   -> BUTTON_SetFont
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> TEXT_CreateEx
        56   -> TEXT_SetBkColor
        56   -> TEXT_SetFont
        56   -> TEXT_SetTextColor
        56   -> WM_CreateWindow
        56   -> __aeabi_memcpy4
        56   -> creat_title_text
         0   -> disp_wifi_list


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Constant "">
      16  ?<Constant "bmp_back.bin">
      20  ?<Constant "bmp_pageDown.bin">
       2  ?<Constant "~">
      36  ?<Constant {(int8_t)'\000'}>
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
      36  Clear_Wifi_list
      20  bmp_struct_0x0
      20  bmp_struct_18x14
      96  buttonN
     424  cbWifiWin(WM_MESSAGE *)
      60  cutWifiName
     170  disp_wifi_list
     506  draw_Wifi_list
      60  hWifiWnd
          Wifi_Page_text
          buttonWifiPd
          buttonRet
          list_menu
     720  wifi_list

 
   876 bytes in section .bss
    40 bytes in section .data
    39 bytes in section .rodata
 1 296 bytes in section .text
 
 1 296 bytes of CODE  memory
    39 bytes of CONST memory
   916 bytes of DATA  memory

Errors: none
Warnings: 19
