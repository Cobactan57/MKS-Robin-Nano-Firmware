###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:03
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_bind.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_bind.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_bind.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_bind.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_bind.cpp
      1          #include "stm32f1xx.h"
      2          #include "gui.h"
      3          #include "button.h"
      4          #include "draw_bind.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) (void) (x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\macros.h",101  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 87 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          
     10          #include "wifi_module.h"
     11          
     12          //typedef unsigned char bool;
     13          
     14          #include "qr_encode.h"
     15          
     16          #ifndef GUI_FLASH
     17          #define GUI_FLASH
     18          #endif
     19          
     20          static GUI_HWIN hBindWnd;
     21          
     22          
     23          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     24          
     25          extern int package_to_wifi(WIFI_RET_TYPE type, char *buf, int len);
     26          
     27          static BUTTON_STRUCT buttonRet, buttonReleaseBind;
     28          static TEXT_Handle bind_or_not;
     29          
     30          static uint8_t unbinding_flag = 0;
     31          

   \                                 In section .text, align 2, keep-with-next
     32          static void cbBindWin(WM_MESSAGE * pMsg) {
     33          
     34          	struct PressEvt *press_event;
                 	                 ^
Warning[Pe550]: variable "press_event" was set but never used
     35          	switch (pMsg->MsgId)
   \                     _Z9cbBindWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbBindWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbBindWin_0: (+1)
   \   00000008   0xB510             PUSH     {R4,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x290F             CMPNE    R1,#+15
   \   00000010   0xD03E             BEQ.N    ??cbBindWin_1
   \   00000012   0x2926             CMP      R1,#+38
   \   00000014   0xD138             BNE.N    ??cbBindWin_2
     36          	{
     37          		case WM_PAINT:
     38          			//GUI_SetBkColor(GUI_BLUE);
     39          			//GUI_Clear();
     40          			//GUI_DispString("window");
     41          			break;
     42          		case WM_TOUCH:
     43          		 	press_event = (struct PressEvt *)pMsg->Data.p;
     44          			
     45          			break;
     46          		case WM_TOUCH_CHILD:
     47          			press_event = (struct PressEvt *)pMsg->Data.p;
     48          
     49          			break;
     50          			
     51          		case WM_NOTIFY_PARENT:
     52          			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   00000016   0x6881             LDR      R1,[R0, #+8]
   \   00000018   0x2902             CMP      R1,#+2
   \   0000001A   0xD139             BNE.N    ??cbBindWin_1
     53          			{
     54          				if(pMsg->hWinSrc == buttonReleaseBind.btnHandle)
   \   0000001C   0x.... 0x....      LDR.W    R4,??DataTable7_1
   \   00000020   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000024   0xF9B4 0x1020      LDRSH    R1,[R4, #+32]
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD118             BNE.N    ??cbBindWin_3
     55          				{
     56          					if(cloud_para.state == 0x12)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000030   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000034   0x2812             CMP      R0,#+18
   \   00000036   0xD12B             BNE.N    ??cbBindWin_1
     57          					{			
     58          						Clear_Bind();
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   0000003C   0x6940             LDR      R0,[R0, #+20]
   \   0000003E   0x.... 0x....      BL       GUI_SetBkColor
   \   00000042   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000046   0x.... 0x....      BL       WM_IsWindow
   \   0000004A   0xB118             CBZ.N    R0,??cbBindWin_4
   \   0000004C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000050   0x.... 0x....      BL       WM_DeleteWindow
     59          						draw_dialog(DIALOG_TYPE_UNBIND);
   \                     ??cbBindWin_4: (+1)
   \   00000054   0xE8BD 0x4010      POP      {R4,LR}
   \   00000058   0x2008             MOVS     R0,#+8
   \   0000005A   0x.... 0x....      B.W      draw_dialog
     60          					}
     61          					
     62          				}
     63          				else if(pMsg->hWinSrc == buttonRet.btnHandle)
   \                     ??cbBindWin_3: (+1)
   \   0000005E   0xF9B4 0x1008      LDRSH    R1,[R4, #+8]
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD114             BNE.N    ??cbBindWin_1
     64          				{
     65          					Clear_Bind();
   \   00000066   0x....             LDR.N    R0,??DataTable7_3
   \   00000068   0x6940             LDR      R0,[R0, #+20]
   \   0000006A   0x.... 0x....      BL       GUI_SetBkColor
   \   0000006E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000072   0x.... 0x....      BL       WM_IsWindow
   \   00000076   0xB118             CBZ.N    R0,??cbBindWin_5
   \   00000078   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000007C   0x.... 0x....      BL       WM_DeleteWindow
     66          					draw_return_ui();
   \                     ??cbBindWin_5: (+1)
   \   00000080   0xE8BD 0x4010      POP      {R4,LR}
   \   00000084   0x.... 0x....      B.W      draw_return_ui
     67          					
     68          				}			
     69          				
     70          			}
     71          			break;
     72          			
     73          		default:
     74          			WM_DefaultProc(pMsg);
   \                     ??cbBindWin_2: (+1)
   \   00000088   0xE8BD 0x4010      POP      {R4,LR}
   \   0000008C   0x.... 0x....      B.W      WM_DefaultProc
     75          		}
     76          	}
   \                     ??cbBindWin_1: (+1)
   \   00000090   0xBD10             POP      {R4,PC}          ;; return
     77          

   \                                 In section .text, align 2, keep-with-next
     78          void cloud_unbind()
     79          {
   \                     cloud_unbind: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     80          	package_to_wifi(WIFI_CLOUD_UNBIND, (char *)0, 0);
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2005             MOVS     R0,#+5
   \   00000008   0x.... 0x....      BL       _Z15package_to_wifi13WIFI_RET_TYPEPci
     81          	unbinding_flag = 1;
   \   0000000C   0x....             LDR.N    R1,??DataTable7_1
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x7008             STRB     R0,[R1, #+0]
     82          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     83          
     84          
     85          #define QRCODE_X 	20
     86          #define QRCODE_Y 	40//35
     87          #define QRCODE_WIDTH	160
     88          
     89          
     90          static uint8_t id_mark = 0;
     91          
     92          

   \                                 In section .text, align 2, keep-with-next
     93          void DISPLAY_RENCODE_TO_TFT(u8 *qrcode_data)
     94          {
   \                     _Z22DISPLAY_RENCODE_TO_TFTPh: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
     95          	u8 i,j;
     96          	u16 x,y,p;
     97          
     98          	if(id_mark ==0)
   \   00000004   0x....             LDR.N    R4,??DataTable7_1
   \   00000006   0x7861             LDRB     R1,[R4, #+1]
   \   00000008   0xB919             CBNZ.N   R1,??DISPLAY_RENCODE_TO_TFT_0
     99          	{
    100          		EncodeData((char *)qrcode_data);
   \   0000000A   0x.... 0x....      BL       EncodeData
    101          
    102          		id_mark = 1;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x7060             STRB     R0,[R4, #+1]
    103          		
    104          		
    105          	}
    106          	
    107          	
    108          	GUI_SetBkColor(GUI_WHITE);
   \                     ??DISPLAY_RENCODE_TO_TFT_0: (+1)
   \   00000012   0xF06F 0x447F      MVN      R4,#-16777216
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0x.... 0x....      BL       GUI_SetBkColor
    109          	GUI_SetColor(GUI_WHITE);
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       GUI_SetColor
    110          	//TEXT_SetDefaultFont(&FONT_TITLE);
    111          	GUI_FillRect(10, QRCODE_Y, 300, QRCODE_Y + 300);
   \   00000022   0xF44F 0x73AA      MOV      R3,#+340
   \   00000026   0xF44F 0x7296      MOV      R2,#+300
   \   0000002A   0x2128             MOVS     R1,#+40
   \   0000002C   0x200A             MOVS     R0,#+10
   \   0000002E   0x.... 0x....      BL       GUI_FillRect
    112          	GUI_SetColor(GUI_BLACK);
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    113          	
    114          	if(m_nSymbleSize*2>QRCODE_WIDTH)	
   \   00000038   0x....             LDR.N    R4,??DataTable7_4
   \   0000003A   0x6820             LDR      R0,[R4, #+0]
   \   0000003C   0x0041             LSLS     R1,R0,#+1
   \   0000003E   0x29A1             CMP      R1,#+161
   \   00000040   0xDA36             BGE.N    ??DISPLAY_RENCODE_TO_TFT_1
    115          	{
    116          		return;
    117          	}
    118          	
    119          	for(i=0;i<40;i++)
   \   00000042   0x2100             MOVS     R1,#+0
    120          	{
    121          		if((m_nSymbleSize*i*2) > QRCODE_WIDTH)	break;
   \                     ??DISPLAY_RENCODE_TO_TFT_2: (+1)
   \   00000044   0xFB01 0xF200      MUL      R2,R1,R0
   \   00000048   0x0052             LSLS     R2,R2,#+1
   \   0000004A   0x2AA1             CMP      R2,#+161
   \   0000004C   0xBFBE             ITTT     LT 
    122          	}
   \   0000004E   0x1C49             ADDLT    R1,R1,#+1
   \   00000050   0xB2C9             UXTBLT   R1,R1
   \   00000052   0x2928             CMPLT    R1,#+40
   \   00000054   0xDBF6             BLT.N    ??DISPLAY_RENCODE_TO_TFT_2
    123          	
    124          	p=(i-1)*2;//???
   \   00000056   0x1E48             SUBS     R0,R1,#+1
   \   00000058   0x0045             LSLS     R5,R0,#+1
   \   0000005A   0xB2AD             UXTH     R5,R5
    125          	
    126          	//x=(QRCODE_WIDTH - m_nSymbleSize*p)/2 + QRCODE_X;
    127          	x= QRCODE_X + 70;
    128          	y= QRCODE_Y + 70;
    129          	
    130          	for(i=0;i<m_nSymbleSize;i++)
   \   0000005C   0x2600             MOVS     R6,#+0
   \   0000005E   0xE016             B.N      ??DISPLAY_RENCODE_TO_TFT_3
    131          	{
    132          		for(j=0;j<m_nSymbleSize;j++)
    133          		{
    134          			//USART1_SendData(m_byModuleData[j][i]);
    135          			if(m_byModuleData[i][j]==1)
   \                     ??DISPLAY_RENCODE_TO_TFT_4: (+1)
   \   00000060   0xF817 0x0008      LDRB     R0,[R7, R8]
   \   00000064   0x2801             CMP      R0,#+1
   \   00000066   0xD10B             BNE.N    ??DISPLAY_RENCODE_TO_TFT_5
    136          				GUI_FillRect(x+p*i,y+p*j,x+p*(i+1)-1,y+p*(j+1)-1);
   \   00000068   0x1C78             ADDS     R0,R7,#+1
   \   0000006A   0x4368             MULS     R0,R0,R5
   \   0000006C   0xF100 0x036D      ADD      R3,R0,#+109
   \   00000070   0xFB07 0xF005      MUL      R0,R7,R5
   \   00000074   0xF100 0x016E      ADD      R1,R0,#+110
   \   00000078   0x464A             MOV      R2,R9
   \   0000007A   0x4650             MOV      R0,R10
   \   0000007C   0x.... 0x....      BL       GUI_FillRect
    137          
    138          		}
   \                     ??DISPLAY_RENCODE_TO_TFT_5: (+1)
   \   00000080   0x1C78             ADDS     R0,R7,#+1
   \   00000082   0xB2C7             UXTB     R7,R0
   \                     ??DISPLAY_RENCODE_TO_TFT_6: (+1)
   \   00000084   0x6820             LDR      R0,[R4, #+0]
   \   00000086   0x4287             CMP      R7,R0
   \   00000088   0xDBEA             BLT.N    ??DISPLAY_RENCODE_TO_TFT_4
   \   0000008A   0x1C76             ADDS     R6,R6,#+1
   \   0000008C   0xB2F6             UXTB     R6,R6
   \                     ??DISPLAY_RENCODE_TO_TFT_3: (+1)
   \   0000008E   0x6820             LDR      R0,[R4, #+0]
   \   00000090   0x4286             CMP      R6,R0
   \   00000092   0xDA0D             BGE.N    ??DISPLAY_RENCODE_TO_TFT_1
   \   00000094   0x1C70             ADDS     R0,R6,#+1
   \   00000096   0x4368             MULS     R0,R0,R5
   \   00000098   0xF100 0x0959      ADD      R9,R0,#+89
   \   0000009C   0xFB06 0xF005      MUL      R0,R6,R5
   \   000000A0   0xF100 0x0A5A      ADD      R10,R0,#+90
   \   000000A4   0x2015             MOVS     R0,#+21
   \   000000A6   0x....             LDR.N    R1,??DataTable7_5
   \   000000A8   0x2700             MOVS     R7,#+0
   \   000000AA   0xFB00 0x1806      MLA      R8,R0,R6,R1
   \   000000AE   0xE7E9             B.N      ??DISPLAY_RENCODE_TO_TFT_6
    139          			
    140          	}
    141          	
    142          }
   \                     ??DISPLAY_RENCODE_TO_TFT_1: (+1)
   \   000000B0   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    143          
    144          
    145          //every key:22*23

   \                                 In section .text, align 2, keep-with-next
    146          void draw_bind()
    147          {
   \                     draw_bind: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    148          		
    149          //	int titleHeight = 30;
    150          
    151          //	int imgHeight = LCD_HEIGHT - titleHeight;	
    152          	int row;
                 	    ^
Warning[Pe177]: variable "row" was declared but never referenced
    153          
    154          	
    155          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced
    156          
    157          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != BIND_UI)
   \   00000002   0x....             LDR.N    R0,??DataTable7_6
   \   00000004   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   00000008   0xB086             SUB      SP,SP,#+24
   \   0000000A   0x560A             LDRSB    R2,[R1, R0]
   \   0000000C   0x2A1E             CMP      R2,#+30
   \   0000000E   0xD005             BEQ.N    ??draw_bind_0
    158          	{
    159          		disp_state_stack._disp_index++;
   \   00000010   0x1C49             ADDS     R1,R1,#+1
   \   00000012   0xF880 0x1064      STRB     R1,[R0, #+100]
    160          		disp_state_stack._disp_state[disp_state_stack._disp_index] = BIND_UI;
   \   00000016   0x221E             MOVS     R2,#+30
   \   00000018   0xB249             SXTB     R1,R1
   \   0000001A   0x540A             STRB     R2,[R1, R0]
    161          	}
    162          	disp_state = BIND_UI;
   \                     ??draw_bind_0: (+1)
   \   0000001C   0x201E             MOVS     R0,#+30
   \   0000001E   0x....             LDR.N    R1,??DataTable7_7
    163          	//GUI_Clear();	
    164          	
    165          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000020   0x....             LDR.N    R4,??DataTable7_3
   \   00000022   0x7008             STRB     R0,[R1, #+0]
   \   00000024   0x6960             LDR      R0,[R4, #+20]
   \   00000026   0x.... 0x....      BL       GUI_SetBkColor
    166          	GUI_SetColor(gCfgItems.title_color);
   \   0000002A   0x69A0             LDR      R0,[R4, #+24]
   \   0000002C   0x.... 0x....      BL       GUI_SetColor
    167          	GUI_Clear();
   \   00000030   0x.... 0x....      BL       GUI_Clear
    168          	#if 0
    169          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    170          	{
    171          		GUI_SetFont(&GUI_FontHZ16);
    172          	}
    173          	else
    174          	{
    175          		GUI_SetFont(&FONT_TITLE);
    176          	}
    177          	#endif
    178          	GUI_DispStringAt(creat_title_text(), 0, 0);
   \   00000034   0x.... 0x....      BL       creat_title_text
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x.... 0x....      BL       GUI_DispStringAt
    179          	
    180          	//GUI_SetFont(&FONT_TITLE);
    181          	
    182          	//disp_wifi_state();
    183          	
    184          	
    185          	//GUI_SetFont(&FONT_TITLE);
    186          
    187          	//GUI_SetColor(gCfgItems.state_text_color);
    188          
    189          	//GUI_DrawRect(1, titleHeight + 1, LCD_WIDTH  - 3, LCD_HEIGHT - 3);
    190          
    191          	//GUI_DispStringAt("????->??", 0, 0);
    192          	
    193          	hBindWnd = WM_CreateWindow(BTN_X_PIXEL*3+INTERVAL_V*4 , titleHeight, BTN_X_PIXEL, imgHeight, WM_CF_SHOW, cbBindWin, 0);
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x9002             STR      R0,[SP, #+8]
   \   00000044   0xF44F 0x738E      MOV      R3,#+284
   \   00000048   0x....             LDR.N    R0,??DataTable7_8
   \   0000004A   0x9001             STR      R0,[SP, #+4]
   \   0000004C   0x2275             MOVS     R2,#+117
   \   0000004E   0x2002             MOVS     R0,#+2
   \   00000050   0x9000             STR      R0,[SP, #+0]
   \   00000052   0x2124             MOVS     R1,#+36
   \   00000054   0xF240 0x1067      MOVW     R0,#+359
   \   00000058   0x.... 0x....      BL       WM_CreateWindow
    194          	
    195          	//if(gCfgItems.cloud_enable)
    196          	
    197          	bind_or_not = TEXT_CreateEx(0, 15, BTN_X_PIXEL, 25, hBindWnd, WM_CF_SHOW, GUI_TA_VCENTER | GUI_TA_HCENTER,  GUI_ID_TEXT2, "");
   \   0000005C   0x....             ADR.N    R1,??DataTable7  ;; ""
   \   0000005E   0x9104             STR      R1,[SP, #+16]
   \   00000060   0xF44F 0x71B1      MOV      R1,#+354
   \   00000064   0x9103             STR      R1,[SP, #+12]
   \   00000066   0x210E             MOVS     R1,#+14
   \   00000068   0x9102             STR      R1,[SP, #+8]
   \   0000006A   0x2102             MOVS     R1,#+2
   \   0000006C   0x....             LDR.N    R5,??DataTable7_1
   \   0000006E   0x9101             STR      R1,[SP, #+4]
   \   00000070   0x80A8             STRH     R0,[R5, #+4]
   \   00000072   0x9000             STR      R0,[SP, #+0]
   \   00000074   0x2319             MOVS     R3,#+25
   \   00000076   0x2275             MOVS     R2,#+117
   \   00000078   0x210F             MOVS     R1,#+15
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       TEXT_CreateEx
   \   00000080   0x80E8             STRH     R0,[R5, #+6]
    198          
    199          	//TEXT_SetTextAlign(bind_or_not, GUI_TA_VCENTER | GUI_TA_HCENTER);
    200          	
    201          	buttonRet.btnHandle = BUTTON_CreateEx(0 , BTN_Y_PIXEL+INTERVAL_H, BTN_X_PIXEL, BTN_Y_PIXEL, hBindWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000082   0x.... 0x....      BL       alloc_win_id
   \   00000086   0x9003             STR      R0,[SP, #+12]
   \   00000088   0x238C             MOVS     R3,#+140
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x9002             STR      R0,[SP, #+8]
   \   0000008E   0x2275             MOVS     R2,#+117
   \   00000090   0x2002             MOVS     R0,#+2
   \   00000092   0x9001             STR      R0,[SP, #+4]
   \   00000094   0x218E             MOVS     R1,#+142
   \   00000096   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000009A   0x9000             STR      R0,[SP, #+0]
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A2   0x8128             STRH     R0,[R5, #+8]
    202          
    203          
    204          	buttonReleaseBind.btnHandle = BUTTON_CreateEx(0 , 50, BTN_X_PIXEL, 40, hBindWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000A4   0x.... 0x....      BL       alloc_win_id
   \   000000A8   0x9003             STR      R0,[SP, #+12]
   \   000000AA   0x2328             MOVS     R3,#+40
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x9002             STR      R0,[SP, #+8]
   \   000000B0   0x2275             MOVS     R2,#+117
   \   000000B2   0x2002             MOVS     R0,#+2
   \   000000B4   0x9001             STR      R0,[SP, #+4]
   \   000000B6   0x2132             MOVS     R1,#+50
   \   000000B8   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000BC   0x9000             STR      R0,[SP, #+0]
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000C4   0x8428             STRH     R0,[R5, #+32]
    205          /*
    206          	if(gCfgItems.language == LANG_ENGLISH)
    207          	{		
    208          		buttonReleaseBind = BUTTON_CreateEx(0 , 50, LCD_WIDTH / 4, 40, hBindWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    209          	
    210          		//BUTTON_SetText(buttonReleaseBind, "unbind ");
    211          	}
    212          	else if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    213          	{
    214          		buttonReleaseBind = BUTTON_CreateEx(0 , 50, LCD_WIDTH / 4, 40, hBindWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    215          	
    216          		//BUTTON_SetText(buttonReleaseBind, "  Ω‚Ωâ");
    217          	}
    218          	else
    219          	{
    220          		buttonReleaseBind = BUTTON_CreateEx(0 , 50, LCD_WIDTH / 4, 40, hBindWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    221          	
    222          		//BUTTON_SetText(buttonReleaseBind, "  Ω‚∞Û  ");
    223          	}
    224          	*/
    225          	
    226          	BUTTON_SetBmpFileName(buttonReleaseBind.btnHandle,NULL,1);
   \   000000C6   0x2201             MOVS     R2,#+1
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    227          	BUTTON_SetTextAlign(buttonReleaseBind.btnHandle, GUI_TA_VCENTER | GUI_TA_HCENTER);		
   \   000000CE   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   000000D2   0x210E             MOVS     R1,#+14
   \   000000D4   0x.... 0x....      BL       BUTTON_SetTextAlign
    228          	BUTTON_SetBkColor(buttonReleaseBind.btnHandle, BUTTON_CI_UNPRESSED, GUI_BLUE);
   \   000000D8   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   000000DC   0xF44F 0x027F      MOV      R2,#+16711680
   \   000000E0   0x2100             MOVS     R1,#+0
   \   000000E2   0x.... 0x....      BL       BUTTON_SetBkColor
    229          	BUTTON_SetBkColor(buttonReleaseBind.btnHandle, BUTTON_CI_PRESSED, GUI_LIGHTBLUE);
   \   000000E6   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   000000EA   0x....             LDR.N    R2,??DataTable7_9  ;; 0xff8080
   \   000000EC   0x2101             MOVS     R1,#+1
   \   000000EE   0x.... 0x....      BL       BUTTON_SetBkColor
    230          	
    231          	
    232          	
    233          	DISPLAY_RENCODE_TO_TFT((u8 *)cloud_para.id);
   \   000000F2   0x....             LDR.N    R6,??DataTable7_2
   \   000000F4   0xF106 0x0068      ADD      R0,R6,#+104
   \   000000F8   0x.... 0x....      BL       _Z22DISPLAY_RENCODE_TO_TFTPh
    234          	GUI_DispStringAt((const char *)cloud_para.id, 45, 275);
   \   000000FC   0xF240 0x1213      MOVW     R2,#+275
   \   00000100   0x212D             MOVS     R1,#+45
   \   00000102   0xF106 0x0068      ADD      R0,R6,#+104
   \   00000106   0x.... 0x....      BL       GUI_DispStringAt
    235          	
    236          #if VERSION_WITH_PIC	
    237          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \   0000010A   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   0000010E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   00000112   0x2201             MOVS     R2,#+1
   \   00000114   0x.... 0x....      BL       BUTTON_SetBmpFileName
    238          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct,BMP_PIC_X, BMP_PIC_Y);
   \   00000118   0x....             LDR.N    R0,??DataTable7_10
   \   0000011A   0x....             LDR.N    R2,??DataTable7_11
   \   0000011C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000120   0x9000             STR      R0,[SP, #+0]
   \   00000122   0x2100             MOVS     R1,#+0
   \   00000124   0x....             LDR.N    R0,??DataTable7_12
   \   00000126   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   0000012A   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   0000012E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    239          	
    240          	//BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    241          	//BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);	
    242          	//BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    243          	//BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);	
    244          
    245          #endif
    246          	if(gCfgItems.multiple_language != 0)
   \   00000132   0xF894 0x01CF      LDRB     R0,[R4, #+463]
   \   00000136   0xB128             CBZ.N    R0,??draw_bind_1
    247          	{
    248          		BUTTON_SetText(buttonRet.btnHandle,common_menu.text_back);
   \   00000138   0x....             LDR.N    R0,??DataTable7_13
   \   0000013A   0x6801             LDR      R1,[R0, #+0]
   \   0000013C   0xF9B5 0x0008      LDRSH    R0,[R5, #+8]
   \   00000140   0x.... 0x....      BL       BUTTON_SetText
    249          	}
    250          
    251          	BUTTON_SetText(buttonReleaseBind.btnHandle,cloud_menu.unbind);
   \                     ??draw_bind_1: (+1)
   \   00000144   0x....             LDR.N    R0,??DataTable7_14
   \   00000146   0x6841             LDR      R1,[R0, #+4]
   \   00000148   0xF9B5 0x0020      LDRSH    R0,[R5, #+32]
   \   0000014C   0x.... 0x....      BL       BUTTON_SetText
    252          	disp_bind_state();
   \   00000150   0xB006             ADD      SP,SP,#+24
   \   00000152   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000156                      REQUIRE disp_bind_state
   \   00000156                      ;; // Fall through to label disp_bind_state
    253          
    254          
    255          	
    256          }
    257          
    258          

   \                                 In section .text, align 2, keep-with-next
    259          void disp_bind_state()
    260          {
   \                     disp_bind_state: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    261          	TEXT_SetTextColor(bind_or_not, gCfgItems.title_color);
   \   00000002   0x....             LDR.N    R4,??DataTable7_1
   \   00000004   0x....             LDR.N    R5,??DataTable7_3
   \   00000006   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   0000000A   0x69A9             LDR      R1,[R5, #+24]
   \   0000000C   0x.... 0x....      BL       TEXT_SetTextColor
    262          	TEXT_SetBkColor(bind_or_not,  gCfgItems.background_color);
   \   00000010   0x6969             LDR      R1,[R5, #+20]
   \   00000012   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000016   0x.... 0x....      BL       TEXT_SetBkColor
    263          
    264          	if(cloud_para.state != 0x12)
   \   0000001A   0x....             LDR.N    R5,??DataTable7_2
   \   0000001C   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   00000020   0x2812             CMP      R0,#+18
   \   00000022   0xD00A             BEQ.N    ??disp_bind_state_0
    265          	{
    266          		unbinding_flag = 0;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x7020             STRB     R0,[R4, #+0]
   \                     ??disp_bind_state_1: (+1)
   \   00000028   0xF995 0x1000      LDRSB    R1,[R5, #+0]
   \   0000002C   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000030   0x....             LDR.N    R2,??DataTable7_14
   \   00000032   0x2910             CMP      R1,#+16
   \   00000034   0xD10F             BNE.N    ??disp_bind_state_2
    267          	}
    268          	if(unbinding_flag)
    269          	{
    270          		TEXT_SetText(bind_or_not, cloud_menu.unbinding);
    271          		WM_DisableWindow(buttonReleaseBind.btnHandle);
    272          	}
    273          	else
    274          	{
    275          		if(cloud_para.state == 0x10)
    276          		{
    277          			TEXT_SetText(bind_or_not,cloud_menu.disconnected);
   \   00000036   0x6A11             LDR      R1,[R2, #+32]
   \   00000038   0xE015             B.N      ??disp_bind_state_3
    278          		}
   \                     ??disp_bind_state_0: (+1)
   \   0000003A   0x7820             LDRB     R0,[R4, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD0F3             BEQ.N    ??disp_bind_state_1
   \   00000040   0x....             LDR.N    R0,??DataTable7_14
   \   00000042   0x6881             LDR      R1,[R0, #+8]
   \   00000044   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   00000048   0x.... 0x....      BL       TEXT_SetText
   \   0000004C   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   00000050   0x.... 0x....      BL       WM_DisableWindow
   \   00000054   0xE009             B.N      ??disp_bind_state_4
    279          		else if(cloud_para.state == 0x11)
   \                     ??disp_bind_state_2: (+1)
   \   00000056   0x2911             CMP      R1,#+17
   \   00000058   0xBF08             IT       EQ 
    280          		{
    281          			TEXT_SetText(bind_or_not, cloud_menu.unbinded);
   \   0000005A   0x68D1             LDREQ    R1,[R2, #+12]
   \   0000005C   0xD003             BEQ.N    ??disp_bind_state_3
    282          		}
    283          		else if(cloud_para.state == 0x12)
   \   0000005E   0x2912             CMP      R1,#+18
   \   00000060   0xBF0C             ITE      EQ 
    284          		{
    285          			TEXT_SetText(bind_or_not, cloud_menu.binded);
   \   00000062   0x6991             LDREQ    R1,[R2, #+24]
    286          		}
    287          		else
    288          		{
    289          			TEXT_SetText(bind_or_not, cloud_menu.disable);
   \   00000064   0x69D1             LDRNE    R1,[R2, #+28]
   \                     ??disp_bind_state_3: (+1)
   \   00000066   0x.... 0x....      BL       TEXT_SetText
    290          		}
    291          	}
    292          
    293          	
    294          	if((cloud_para.state == 0x12) && (unbinding_flag == 0))
   \                     ??disp_bind_state_4: (+1)
   \   0000006A   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   0000006E   0x2812             CMP      R0,#+18
   \   00000070   0xBF04             ITT      EQ 
   \   00000072   0x7820             LDRBEQ   R0,[R4, #+0]
   \   00000074   0x2800             CMPEQ    R0,#+0
   \   00000076   0xD104             BNE.N    ??disp_bind_state_5
    295          	{
    296          		WM_EnableWindow(buttonReleaseBind.btnHandle);
   \   00000078   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   0000007C   0x.... 0x....      BL       WM_EnableWindow
   \   00000080   0xE003             B.N      ??disp_bind_state_6
    297          		
    298          	}
    299          	else// if(WM_IsWindow(buttonReleaseBind))
    300          	{
    301          		//BUTTON_Delete(buttonReleaseBind);
    302          		WM_DisableWindow(buttonReleaseBind.btnHandle);
   \                     ??disp_bind_state_5: (+1)
   \   00000082   0xF9B4 0x0020      LDRSH    R0,[R4, #+32]
   \   00000086   0x.... 0x....      BL       WM_DisableWindow
    303          	}
    304          	
    305          	
    306          
    307          	if(cloud_para.id[0] != 0)
   \                     ??disp_bind_state_6: (+1)
   \   0000008A   0xF995 0x0068      LDRSB    R0,[R5, #+104]
   \   0000008E   0xB140             CBZ.N    R0,??disp_bind_state_7
    308          	{		
    309          		
    310          		if(id_mark == 0)
   \   00000090   0x7860             LDRB     R0,[R4, #+1]
   \   00000092   0xB938             CBNZ.N   R0,??disp_bind_state_8
    311          		{
    312          			DISPLAY_RENCODE_TO_TFT((u8 *)cloud_para.id);
   \   00000094   0xF105 0x0068      ADD      R0,R5,#+104
   \   00000098   0x.... 0x....      BL       _Z22DISPLAY_RENCODE_TO_TFTPh
    313          			GUI_DispStringAt((const char *)cloud_para.id, 10, 200);
   \   0000009C   0xF105 0x0068      ADD      R0,R5,#+104
   \   000000A0   0x....             B.N      ?Subroutine0
    314          		}
    315          
    316          		
    317          	}
    318          	else
    319          		id_mark = 0;
   \                     ??disp_bind_state_7: (+1)
   \   000000A2   0x7060             STRB     R0,[R4, #+1]
    320          	
    321          	
    322          }
   \                     ??disp_bind_state_8: (+1)
   \   000000A4   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000004   0x22C8             MOVS     R2,#+200
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0x.... 0x....      B.W      GUI_DispStringAt

   \                                 In section .bss, align 4
   \                     unbinding_flag:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 1
   \   00000003                      DS8 1
   \   00000004                      DS8 2
   \   00000006                      DS8 2
   \   00000008                      DS8 24
   \   00000020                      DS8 24
    323          
    324          static char last_cloud_state = 0;

   \                                 In section .text, align 2, keep-with-next
    325          void refresh_bind_ui()
    326          {
   \                     refresh_bind_ui: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    327          	if((last_cloud_state != cloud_para.state) || unbinding_flag)
   \   00000002   0x....             LDR.N    R4,??DataTable7_2
   \   00000004   0x....             LDR.N    R5,??DataTable7_1
   \   00000006   0xF994 0x1000      LDRSB    R1,[R4, #+0]
   \   0000000A   0xF995 0x0002      LDRSB    R0,[R5, #+2]
   \   0000000E   0x4288             CMP      R0,R1
   \   00000010   0xBF04             ITT      EQ 
   \   00000012   0x7828             LDRBEQ   R0,[R5, #+0]
   \   00000014   0x2800             CMPEQ    R0,#+0
   \   00000016   0xD003             BEQ.N    ??refresh_bind_ui_0
    328          	{
    329          		disp_bind_state();
   \   00000018   0x.... 0x....      BL       disp_bind_state
    330          		last_cloud_state = cloud_para.state;
   \   0000001C   0x7820             LDRB     R0,[R4, #+0]
   \   0000001E   0x70A8             STRB     R0,[R5, #+2]
    331          	}
    332          	if(cloud_para.id[0] != 0)
   \                     ??refresh_bind_ui_0: (+1)
   \   00000020   0xF994 0x0068      LDRSB    R0,[R4, #+104]
   \   00000024   0xB140             CBZ.N    R0,??refresh_bind_ui_1
    333          	{		
    334          		
    335          		if(id_mark == 0)
   \   00000026   0x7868             LDRB     R0,[R5, #+1]
   \   00000028   0xB938             CBNZ.N   R0,??refresh_bind_ui_2
    336          		{
    337          			DISPLAY_RENCODE_TO_TFT((u8 *)cloud_para.id);
   \   0000002A   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000002E   0x.... 0x....      BL       _Z22DISPLAY_RENCODE_TO_TFTPh
    338          			GUI_DispStringAt((const char *)cloud_para.id, 10, 200);
   \   00000032   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000036   0x....             B.N      ?Subroutine0
    339          		}
    340          
    341          		
    342          	}
    343          	else
    344          		id_mark = 0;
   \                     ??refresh_bind_ui_1: (+1)
   \   00000038   0x7068             STRB     R0,[R5, #+1]
    345          }
   \                     ??refresh_bind_ui_2: (+1)
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    346          
    347          

   \                                 In section .text, align 2, keep-with-next
    348          void Clear_Bind()
    349          {
   \                     Clear_Bind: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    350          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable7_3
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    351          	if(WM_IsWindow(hBindWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable7_1
   \   0000000C   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_Bind_0
    352          	{
    353          		WM_DeleteWindow(hBindWnd);
   \   00000016   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    354          	//	GUI_Exec();
    355          	}
    356          	
    357          	//GUI_Clear();
    358          }
   \                     ??Clear_Bind_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     unbinding_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     cloud_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     m_nSymbleSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     m_byModuleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     _Z9cbBindWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x00FF8080         DC32     0xff8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     cloud_menu

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0
    359          
    360          
    361          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_Bind
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      32   DISPLAY_RENCODE_TO_TFT(u8 *)
        32   -> EncodeData
        32   -> GUI_FillRect
        32   -> GUI_SetBkColor
        32   -> GUI_SetColor
       8   cbBindWin(WM_MESSAGE *)
         8   -> GUI_SetBkColor
         0   -> WM_DefaultProc
         8   -> WM_DeleteWindow
         8   -> WM_IsWindow
         0   -> draw_dialog
         0   -> draw_return_ui
       8   cloud_unbind
         8   -> package_to_wifi(WIFI_RET_TYPE, char *, int)
      16   disp_bind_state
        16   -> DISPLAY_RENCODE_TO_TFT(u8 *)
         0   -> GUI_DispStringAt
        16   -> TEXT_SetBkColor
        16   -> TEXT_SetText
        16   -> TEXT_SetTextColor
        16   -> WM_DisableWindow
        16   -> WM_EnableWindow
      40   draw_bind
        40   -> BUTTON_CreateEx
        40   -> BUTTON_SetBitmapEx
        40   -> BUTTON_SetBkColor
        40   -> BUTTON_SetBmpFileName
        40   -> BUTTON_SetText
        40   -> BUTTON_SetTextAlign
        40   -> DISPLAY_RENCODE_TO_TFT(u8 *)
        40   -> GUI_Clear
        40   -> GUI_DispStringAt
        40   -> GUI_SetBkColor
        40   -> GUI_SetColor
        40   -> TEXT_CreateEx
        40   -> WM_CreateWindow
        40   -> alloc_win_id
        40   -> creat_title_text
         0   -> disp_bind_state
      16   refresh_bind_ui
        16   -> DISPLAY_RENCODE_TO_TFT(u8 *)
         0   -> GUI_DispStringAt
        16   -> disp_bind_state


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Constant "">
      16  ?<Constant "bmp_return.bin">
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      12  ?Subroutine0
      36  Clear_Bind
     180  DISPLAY_RENCODE_TO_TFT(u8 *)
     146  cbBindWin(WM_MESSAGE *)
      20  cloud_unbind
     166  disp_bind_state
     342  draw_bind
      60  refresh_bind_ui
      56  unbinding_flag
          id_mark
          last_cloud_state
          hBindWnd
          bind_or_not
          buttonRet
          buttonReleaseBind

 
    56 bytes in section .bss
     1 byte  in section .rodata
 1 038 bytes in section .text
 
 1 038 bytes of CODE  memory
     1 byte  of CONST memory
    56 bytes of DATA  memory

Errors: none
Warnings: 20
