###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  09:24:39
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_ui.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_ui.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "string_deal.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      6          #include "draw_ready_print.h"
      7          //#include "gcode.h"
      8          //#include "printer.h"
      9          #include "draw_machine.h"
     10          #include "draw_log_ui.h"
     11          #include "draw_language.h"
     12          #include "draw_about.h"
     13          #include "draw_wifi.h"
     14          #include "draw_print_file.h"
     15          #include "draw_printing.h"
     16          #include "draw_move_motor.h"
     17          #include "draw_operate.h"
     18          #include "draw_pause_ui.h"
     19          #include "draw_extrusion.h"
     20          #include "draw_pre_heat.h"
     21          #include "draw_change_speed.h"
     22          #include "draw_fan.h"
     23          #include "draw_set.h"
     24          #include "draw_zero.h"
     25          #include "draw_sprayer.h"
     26          #include "draw_machine.h"
     27          #include "draw_language.h"
     28          #include "draw_log_ui.h"
     29          #include "draw_wifi.h"
     30          #include "draw_more.h"
     31          #include "ff.h"
     32          #include "pic_manager.h"
     33          #include "ili9320.h"
     34          #include "draw_printing_moremenu.h"
     35          #include "draw_filamentchange.h"
     36          /******add********/
     37          #include "draw_main.h"
     38          #include "tim.h"
     39          //#include "mks_tft_com.h"
     40          #include "draw_manual_leveling.h"
     41          #include "Configuration.h"
     42          //#include "mks_tft_reprint.h"
     43          #include "configuration_adv.h"
     44          #include "types.h"
     45          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\configuration_adv.h")

  #define pgm_read_byte(addr) (*(const unsigned char *)(addr))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin_export.h",64  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          32 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\cardreader.h")

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define PSTR(x)          (x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",63  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 31 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\cardreader.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
     46          
     47          #include "stm32f1xx_hal.h"
     48          #include "stm32f1xx_hal_flash_ex.h"
     49          
     50          #include "at24cxx.h"
     51          #include "draw_bind.h"
     52          #include "draw_disk.h"
     53          #include "draw_zoffset.h"
     54          #include "draw_tool.h"
     55          #include "fatfs.h"
     56          
     57          #include "marlin.h"
     58          #include "mks_test.h"

  #define IS_SPI_DIRECTION_MODE(MODE) (((MODE) == SPI_Direction_2Lines_FullDuplex) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DIRECTION_MODE" (declared
          at line 466 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_MODE(MODE) (((MODE) == SPI_Mode_Master) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",146  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_MODE" (declared at line
          459 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_DATASIZE(DATASIZE) (((DATASIZE) == SPI_DataSize_16b) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",158  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DATASIZE" (declared at
          line 488 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPOL(CPOL) (((CPOL) == SPI_CPOL_Low) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",170  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPOL" (declared at line
          496 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPHA(CPHA) (((CPHA) == SPI_CPHA_1Edge) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",182  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPHA" (declared at line
          504 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_NSS(NSS) (((NSS) == SPI_NSS_Soft) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",194  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_NSS" (declared at line
          512 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_BAUDRATE_PRESCALER(PRESCALER) (((PRESCALER) == SPI_BaudRatePrescaler_2) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",212  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_BAUDRATE_PRESCALER"
          (declared at line 521 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_FIRST_BIT(BIT) (((BIT) == SPI_FirstBit_MSB) || \
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_FIRST_BIT" (declared at
          line 535 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_CRCERR                 ((uint16_t)0x0010)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_CRCERR" (declared at
          line 308 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_MODF                   ((uint16_t)0x0020)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",409  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_MODF" (declared at line
          309 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CRC_POLYNOMIAL(POLYNOMIAL) ((POLYNOMIAL) >= 0x1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",425  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CRC_POLYNOMIAL" (declared
          at line 558 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\ST
          M32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #else defined(MKS_ROBIN_NANO)
        ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\BSP\Components\w25qxx\spi_flash.h",40  Warning[Pe014]: 
          extra text after expected end of preprocessing directive
     59          #include "wifi_list.h"
     60          #include "draw_wifi_list.h"
     61          #include "draw_keyboard.h"
     62          #include "draw_Tips.h"
     63          #include "wifi_module.h"
     64          #include "draw_babyStep.h"
     65          //Screen TFT_screen;
     66          

   \                                 In section .bss, align 1
     67          value_state value;
   \                     value:
   \   00000000                      DS8 1
     68          
     69          static float zpos_bak = -1;
     70          extern volatile uint8_t temper_error_flg;
     71          
     72          extern volatile int16_t logo_time;
     73          //extern PR_STATUS printerStaus;
     74          extern uint8_t temp_update_flag;
     75          
     76          extern uint8_t print_start_flg;
     77          extern uint8_t from_flash_pic;
     78          /******end********/
     79          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz14;
     80          
     81          extern GUI_CONST_STORAGE GUI_BITMAP bmpreheat;
     82          extern GUI_CONST_STORAGE GUI_BITMAP bmadd;
     83          extern GUI_CONST_STORAGE GUI_BITMAP bmdec;
     84          extern GUI_CONST_STORAGE GUI_BITMAP bmdir;
     85          extern GUI_CONST_STORAGE GUI_BITMAP bmextru;
     86          extern GUI_CONST_STORAGE GUI_BITMAP bmfile;
     87          extern GUI_CONST_STORAGE GUI_BITMAP bmmov;
     88          extern GUI_CONST_STORAGE GUI_BITMAP bmpageDown;
     89          extern GUI_CONST_STORAGE GUI_BITMAP bmpageUp;
     90          extern GUI_CONST_STORAGE GUI_BITMAP bmprinting;
     91          extern GUI_CONST_STORAGE GUI_BITMAP bmreturn;
     92          extern GUI_CONST_STORAGE GUI_BITMAP bmset;
     93          extern GUI_CONST_STORAGE GUI_BITMAP bmzero;
     94          
     95          extern uint8_t gcode_preview_over;
     96          
     97          uint8_t temperature_change_frequency = 1;//”√”⁄œ‘ æŒ¬∂»∏¸–¬µƒ∆µ¬ 
     98          //unsigned char bmp_public_buf[16*1024] = {0};
     99          
    100          extern uint8_t wifi_refresh_flg;
    101          extern void disp_wifi_state();
    102          
    103          extern void filament_dialog_handle(void);
    104          
    105          FIL TEST_FIL1;
    106          uint8_t from_flash_pic;
    107          
    108          DISP_STATE_STACK disp_state_stack;
    109          DISP_STATE disp_state = MAIN_UI;
    110          DISP_STATE last_disp_state;
    111          
    112          char BMP_PIC_X = 0 ;
    113          char BMP_PIC_Y = 0;
    114          
    115          uint32_t To_pre_view;
    116          
    117          static   GUI_HWIN hMainWnd;
    118          static  BUTTON_STRUCT button4;//button1, button2, button3, button4;
    119          
    120          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
    121          #if _LFN_UNICODE
    122          extern TCHAR curFileName[100];
    123          //TCHAR curFileName[150];
    124          #else
    125          extern char curFileName[100];
    126          //char curFileName[150];
    127          #endif
    128          
    129          extern GUI_CONST_STORAGE GUI_BITMAP bmlogo;
    130          extern GUI_CONST_STORAGE GUI_BITMAP bmpreheat;
    131          
    132          extern CFG_ITMES gCfgItems;
    133          
    134          extern int X_ADD,X_INTERVAL;   //**Õº∆¨º‰∏Ù
    135          extern uint8_t volatile printing_rate_update_flag;
    136          extern volatile uint32_t TimeIncrease;
    137          static volatile uint8_t fan_move_flag;
    138          //extern FILE_PRINT_STATE gCurFileState ;
    139          extern uint8_t fan_change_flag;
    140          
    141          extern uint8_t DialogType;
    142          
    143          
    144          //PR_STATUS printerStaus = pr_idle;
    145          
    146          #define MAX_TITLE_LEN	28
    147          
    148          static CB_EVENT_STACK gCbEventStack;
    149          //Tan21060406
    150          #define INC_RD_POINT(b)	((b.r_idx+1 == sizeof(b.event) / sizeof(b.event[0])) ? 0 : b.r_idx+1)
    151          #define INC_WR_POINT(b)	((b.w_idx+1 == sizeof(b.event) / sizeof(b.event[0])) ? 0 : b.w_idx+1)
    152          
    153          FIL *srcfp;
    154          

   \                                 In section .text, align 2, keep-with-next
    155          void init_cb_stack()
    156          {
   \                     _Z13init_cb_stackv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    157          	memset(&gCbEventStack.event, 0, sizeof(gCbEventStack.event));
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable17
   \   00000006   0x2128             MOVS     R1,#+40
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    158          	gCbEventStack.r_idx = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x8520             STRH     R0,[R4, #+40]
    159          	gCbEventStack.w_idx = 0;
    160          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    161          

   \                                 In section .text, align 2, keep-with-next
    162          void push_cb_stack(int16_t event_id)
    163          {
   \                     push_cb_stack: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    164          
    165          	if(INC_WR_POINT(gCbEventStack) == gCbEventStack.r_idx) //overflow
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable17
   \   00000006   0xF101 0x0228      ADD      R2,R1,#+40
   \   0000000A   0xF992 0x3001      LDRSB    R3,[R2, #+1]
   \   0000000E   0x1C5C             ADDS     R4,R3,#+1
   \   00000010   0x2C14             CMP      R4,#+20
   \   00000012   0xBF08             IT       EQ 
   \   00000014   0x2400             MOVEQ    R4,#+0
   \   00000016   0xF991 0x5028      LDRSB    R5,[R1, #+40]
   \   0000001A   0x42AC             CMP      R4,R5
   \   0000001C   0xD009             BEQ.N    ??push_cb_stack_0
    166          	{
    167          		return;
    168          	}
    169          	gCbEventStack.event[gCbEventStack.w_idx] = event_id;
   \   0000001E   0xF821 0x0013      STRH     R0,[R1, R3, LSL #+1]
    170          	gCbEventStack.w_idx = INC_WR_POINT(gCbEventStack);
   \   00000022   0xF992 0x0001      LDRSB    R0,[R2, #+1]
   \   00000026   0x1C41             ADDS     R1,R0,#+1
   \   00000028   0x2914             CMP      R1,#+20
   \   0000002A   0xBF0C             ITE      EQ 
   \   0000002C   0x2000             MOVEQ    R0,#+0
   \   0000002E   0x1C40             ADDNE    R0,R0,#+1
   \   00000030   0x7050             STRB     R0,[R2, #+1]
    171          	
    172          			
    173          }
   \                     ??push_cb_stack_0: (+1)
   \   00000032   0xBC30             POP      {R4,R5}
   \   00000034   0x4770             BX       LR               ;; return
    174          

   \                                 In section .text, align 2, keep-with-next
    175          int16_t pop_cb_stack()
    176          {
    177          	int16_t ret;
    178          	if(gCbEventStack.r_idx != gCbEventStack.w_idx)
   \                     _Z12pop_cb_stackv: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable17
   \   00000004   0xF991 0x2028      LDRSB    R2,[R1, #+40]
   \   00000008   0xF991 0x0029      LDRSB    R0,[R1, #+41]
   \   0000000C   0x4282             CMP      R2,R0
   \   0000000E   0xD009             BEQ.N    ??pop_cb_stack_0
    179          	{
    180          		ret = gCbEventStack.event[gCbEventStack.r_idx];
   \   00000010   0xF931 0x0012      LDRSH    R0,[R1, R2, LSL #+1]
    181          		gCbEventStack.r_idx = INC_RD_POINT(gCbEventStack);
   \   00000014   0x1C53             ADDS     R3,R2,#+1
   \   00000016   0x2B14             CMP      R3,#+20
   \   00000018   0xBF0C             ITE      EQ 
   \   0000001A   0x2200             MOVEQ    R2,#+0
   \   0000001C   0x1C52             ADDNE    R2,R2,#+1
   \   0000001E   0xF881 0x2028      STRB     R2,[R1, #+40]
    182          		return ret;
   \   00000022   0x4770             BX       LR
    183          	
    184          	}
    185          	else
    186          	{
    187          		return -1;
   \                     ??pop_cb_stack_0: (+1)
   \   00000024   0xF04F 0x30FF      MOV      R0,#-1
   \   00000028   0x4770             BX       LR               ;; return
    188          	}
    189          	
    190          	
    191          }
    192          

   \                                 In section .text, align 2, keep-with-next
    193          void GUI_callback()
    194          {
    195          	int16_t action_id = pop_cb_stack();
   \                     GUI_callback: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable17
   \   00000004   0xF990 0x1028      LDRSB    R1,[R0, #+40]
   \   00000008   0xF990 0x2029      LDRSB    R2,[R0, #+41]
   \   0000000C   0x4291             CMP      R1,R2
   \   0000000E   0xD006             BEQ.N    ??GUI_callback_0
   \   00000010   0x1C4A             ADDS     R2,R1,#+1
   \   00000012   0x2A14             CMP      R2,#+20
   \   00000014   0xBF0C             ITE      EQ 
   \   00000016   0x2100             MOVEQ    R1,#+0
   \   00000018   0x1C49             ADDNE    R1,R1,#+1
   \   0000001A   0xF880 0x1028      STRB     R1,[R0, #+40]
    196          	if(action_id != (int16_t)-1)
    197          	{
    198          		//uid.executeAction(action_id);
    199          	}
    200          }
   \                     ??GUI_callback_0: (+1)
   \   0000001E   0x4770             BX       LR               ;; return
    201          
    202          

   \                                 In section .text, align 2, keep-with-next
    203          void titleText_cat(char *str, int strSize, char *addPart)
    204          {
   \                     _Z13titleText_catPciS_: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
    205          	if(str == 0 || addPart == 0)
   \   00000008   0xBF18             IT       NE 
   \   0000000A   0x2E00             CMPNE    R6,#+0
   \   0000000C   0xD00E             BEQ.N    ??titleText_cat_0
    206          	{
    207          		return;
    208          	}
    209          
    210          	if(strlen(str) + strlen(addPart) >= strSize)
   \   0000000E   0x.... 0x....      BL       strlen
   \   00000012   0x4607             MOV      R7,R0
   \   00000014   0x4630             MOV      R0,R6
   \   00000016   0x.... 0x....      BL       strlen
   \   0000001A   0x19C0             ADDS     R0,R0,R7
   \   0000001C   0x42A8             CMP      R0,R5
   \   0000001E   0xD205             BCS.N    ??titleText_cat_0
    211          	{
    212          		return;
    213          	}
    214          
    215          	strcat(str, addPart);
   \   00000020   0x4631             MOV      R1,R6
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000028   0x.... 0x....      B.W      strcat
   \                     ??titleText_cat_0: (+1)
   \   0000002C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    216          }
    217          
    218          static char TitleText[30];
    219          

   \                                 In section .text, align 4, keep-with-next
    220          char *getDispText(int index)
    221          {
   \                     _Z11getDispTexti: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4605             MOV      R5,R0
    222          	memset(TitleText, 0, sizeof(TitleText));
   \   00000004   0x.... 0x....      LDR.W    R4,??DataTable18
   \   00000008   0x211E             MOVS     R1,#+30
   \   0000000A   0xF104 0x0068      ADD      R0,R4,#+104
   \   0000000E   0x.... 0x....      BL       __aeabi_memclr4
    223          	
    224          	switch(disp_state_stack._disp_state[index])
   \   00000012   0x5728             LDRSB    R0,[R5, R4]
   \   00000014   0x1E40             SUBS     R0,R0,#+1
   \   00000016   0x283D             CMP      R0,#+61
   \   00000018   0xF200 0x80B0      BHI.W    ??getDispText_1
   \   0000001C   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??getDispText_0:
   \   00000020   0x1F 0x23          DC8      0x1F,0x23,0x27,0x33
   \              0x27 0x33    
   \   00000024   0x37 0x43          DC8      0x37,0x43,0x53,0x5B
   \              0x53 0x5B    
   \   00000028   0x5F 0x57          DC8      0x5F,0x57,0xAE,0x6B
   \              0xAE 0x6B    
   \   0000002C   0x6F 0xAE          DC8      0x6F,0xAE,0xAE,0x73
   \              0xAE 0x73    
   \   00000030   0x77 0xAE          DC8      0x77,0xAE,0x7B,0xAE
   \              0x7B 0xAE    
   \   00000034   0x7F 0x83          DC8      0x7F,0x83,0x87,0xAE
   \              0x87 0xAE    
   \   00000038   0xAE 0x87          DC8      0xAE,0x87,0x8B,0x8F
   \              0x8B 0x8F    
   \   0000003C   0x8F 0x93          DC8      0x8F,0x93,0x97,0x9B
   \              0x97 0x9B    
   \   00000040   0xAE 0x9F          DC8      0xAE,0x9F,0xAE,0xAE
   \              0xAE 0xAE    
   \   00000044   0xA3 0xAE          DC8      0xA3,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   00000048   0xAE 0xAE          DC8      0xAE,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   0000004C   0xAE 0xAE          DC8      0xAE,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   00000050   0xAE 0xAE          DC8      0xAE,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   00000054   0xAE 0xAE          DC8      0xAE,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   00000058   0xAE 0xAE          DC8      0xAE,0xAE,0xAE,0xAE
   \              0xAE 0xAE    
   \   0000005C   0xAE 0xA7          DC8      0xAE,0xA7
    225          	{
    226          		case PRINT_READY_UI:
    227          			strcpy(TitleText, main_menu.title);
   \                     ??getDispText_2: (+1)
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable18_1
   \   00000062   0x6801             LDR      R1,[R0, #+0]
   \   00000064   0xE086             B.N      ??getDispText_3
    228          
    229          			break;
    230          
    231          		case PRINT_FILE_UI:
    232          			strcpy(TitleText, file_menu.title);
   \                     ??getDispText_4: (+1)
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   0000006A   0x6801             LDR      R1,[R0, #+0]
   \   0000006C   0xE082             B.N      ??getDispText_3
    233          
    234          			break;
    235          
    236          		case PRINTING_UI:
    237          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    238          			#if !defined(TFT35)
    239          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    240          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI
    241          			#endif
    242          			)
   \                     ??getDispText_5: (+1)
   \   0000006E   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   00000072   0x5700             LDRSB    R0,[R0, R4]
   \   00000074   0x2803             CMP      R0,#+3
   \   00000076   0xBF19             ITTEE    NE 
    243          			{
    244          				strcpy(TitleText, common_menu.print_special_title);
    245          			}
    246          			else
    247          			{
    248          				strcpy(TitleText, printing_menu.title);
   \   00000078   0x.... 0x....      LDRNE.W  R0,??DataTable18_3
   \   0000007C   0x6801             LDRNE    R1,[R0, #+0]
    249          			}
   \   0000007E   0x.... 0x....      LDREQ.W  R0,??DataTable18_4
   \   00000082   0x6901             LDREQ    R1,[R0, #+16]
   \   00000084   0xE076             B.N      ??getDispText_3
    250          
    251          			break;
    252          
    253          		case MOVE_MOTOR_UI:
    254          			strcpy(TitleText, move_menu.title);
   \                     ??getDispText_6: (+1)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   0000008A   0x6801             LDR      R1,[R0, #+0]
   \   0000008C   0xE072             B.N      ??getDispText_3
    255          
    256          			break;
    257          
    258          		case OPERATE_UI:
    259          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    260          			#if !defined(TFT35)
    261          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    262          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI
    263          			#endif
    264          			)
   \                     ??getDispText_7: (+1)
   \   0000008E   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   00000092   0x5700             LDRSB    R0,[R0, R4]
   \   00000094   0x2803             CMP      R0,#+3
   \   00000096   0xBF19             ITTEE    NE 
    265          			{
    266          				strcpy(TitleText, common_menu.operate_special_title);
    267          			}
    268          			else
    269          			{
    270          				strcpy(TitleText, operation_menu.title);
   \   00000098   0x.... 0x....      LDRNE.W  R0,??DataTable18_6
   \   0000009C   0x6801             LDRNE    R1,[R0, #+0]
    271          			}
   \   0000009E   0x.... 0x....      LDREQ.W  R0,??DataTable18_4
   \   000000A2   0x6981             LDREQ    R1,[R0, #+24]
   \   000000A4   0xE066             B.N      ??getDispText_3
   \                     ??getDispText_8: (+1)
   \   000000A6   0xF994 0x0064      LDRSB    R0,[R4, #+100]
   \   000000AA   0x5700             LDRSB    R0,[R0, R4]
   \   000000AC   0x2803             CMP      R0,#+3
   \   000000AE   0xBF1C             ITT      NE 
   \   000000B0   0x2805             CMPNE    R0,#+5
   \   000000B2   0x2806             CMPNE    R0,#+6
   \   000000B4   0xD103             BNE.N    ??getDispText_9
    272          
    273          			break;
    274          
    275          		case PAUSE_UI:
    276          			if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    277          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    278          			|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI)
    279          			{
    280          				strcpy(TitleText, common_menu.pause_special_title);
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable18_4
   \   000000BA   0x6941             LDR      R1,[R0, #+20]
   \   000000BC   0xE05A             B.N      ??getDispText_3
    281          			}
    282          			else
    283          			{
    284          				strcpy(TitleText, pause_menu.title);
   \                     ??getDispText_9: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   000000C2   0x6801             LDR      R1,[R0, #+0]
   \   000000C4   0xE056             B.N      ??getDispText_3
    285          			}
    286          
    287          			break;
    288          
    289          		case EXTRUSION_UI:
    290          			strcpy(TitleText, extrude_menu.title);
   \                     ??getDispText_10: (+1)
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   000000CA   0x6801             LDR      R1,[R0, #+0]
   \   000000CC   0xE052             B.N      ??getDispText_3
    291          
    292          			break;
    293          
    294          		case CHANGE_SPEED_UI:
    295          			strcpy(TitleText, speed_menu.title);
   \                     ??getDispText_11: (+1)
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable18_9
   \   000000D2   0x6801             LDR      R1,[R0, #+0]
   \   000000D4   0xE04E             B.N      ??getDispText_3
    296          
    297          			break;
    298          			
    299          		case FAN_UI:
    300          			strcpy(TitleText, fan_menu.title);
   \                     ??getDispText_12: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable18_10
   \   000000DA   0x6801             LDR      R1,[R0, #+0]
   \   000000DC   0xE04A             B.N      ??getDispText_3
    301          
    302          			break;
    303          			
    304          		case PRE_HEAT_UI:
    305          			if((disp_state_stack._disp_state[disp_state_stack._disp_index - 1] == OPERATE_UI))
   \                     ??getDispText_13: (+1)
   \   000000DE   0xF994 0x1064      LDRSB    R1,[R4, #+100]
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable18_11
   \   000000E6   0x1909             ADDS     R1,R1,R4
   \   000000E8   0xF911 0x1C01      LDRSB    R1,[R1, #-1]
   \   000000EC   0x2905             CMP      R1,#+5
   \   000000EE   0xBF14             ITE      NE 
    306          			{
    307          				strcpy(TitleText,preheat_menu.adjust_title);
    308          
    309          			}
    310          			else
    311          			{
    312          				strcpy(TitleText, preheat_menu.title);
   \   000000F0   0x6841             LDRNE    R1,[R0, #+4]
    313          
    314          			} 			
   \   000000F2   0x6801             LDREQ    R1,[R0, #+0]
   \   000000F4   0xE03E             B.N      ??getDispText_3
    315          			break;
    316          
    317          		case SET_UI:
    318          			strcpy(TitleText, set_menu.title);
   \                     ??getDispText_14: (+1)
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable18_12
   \   000000FA   0x6801             LDR      R1,[R0, #+0]
   \   000000FC   0xE03A             B.N      ??getDispText_3
    319          
    320          			break;
    321          
    322          		case ZERO_UI:
    323          			strcpy(TitleText, home_menu.title);
   \                     ??getDispText_15: (+1)
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable18_13
   \   00000102   0x6801             LDR      R1,[R0, #+0]
   \   00000104   0xE036             B.N      ??getDispText_3
    324          
    325          			break;
    326          
    327          		case SPRAYER_UI:
    328          
    329          			break;
    330          
    331          		case MACHINE_UI:
    332          
    333          			break;
    334          
    335          		case LANGUAGE_UI:
    336          			strcpy(TitleText, language_menu.title);
   \                     ??getDispText_16: (+1)
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable18_14
   \   0000010A   0x6801             LDR      R1,[R0, #+0]
   \   0000010C   0xE032             B.N      ??getDispText_3
    337          
    338          			break;
    339          
    340          		case ABOUT_UI:
    341          			strcpy(TitleText, about_menu.title);
   \                     ??getDispText_17: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable18_15
   \   00000112   0x6801             LDR      R1,[R0, #+0]
   \   00000114   0xE02E             B.N      ??getDispText_3
    342          
    343          			break;
    344          
    345          		case LOG_UI:
    346          
    347          			break;
    348          
    349          		case DISK_UI:
    350          			strcpy(TitleText, filesys_menu.title);
   \                     ??getDispText_18: (+1)
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable18_16
   \   0000011A   0x6801             LDR      R1,[R0, #+0]
   \   0000011C   0xE02A             B.N      ??getDispText_3
    351          			break;
    352          
    353          		case DIALOG_UI:
    354          			strcpy(TitleText, common_menu.dialog_confirm_title);
   \                     ??getDispText_19: (+1)
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable18_4
   \   00000122   0x6841             LDR      R1,[R0, #+4]
   \   00000124   0xE026             B.N      ??getDispText_3
    355          			break;	
    356          
    357          		case WIFI_UI:
    358          			strcpy(TitleText, wifi_menu.title);
   \                     ??getDispText_20: (+1)
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable18_17
   \   0000012A   0x6801             LDR      R1,[R0, #+0]
   \   0000012C   0xE022             B.N      ??getDispText_3
    359          
    360          			break;	
    361          		case MORE_UI:
    362          		case PRINT_MORE_UI:
    363          			strcpy(TitleText, more_menu.title);
   \                     ??getDispText_21: (+1)
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable18_18
   \   00000132   0x6801             LDR      R1,[R0, #+0]
   \   00000134   0xE01E             B.N      ??getDispText_3
    364          
    365          			break;	
    366          		case FILAMENTCHANGE_UI:
    367          			strcpy(TitleText, filament_menu.title); 		
   \                     ??getDispText_22: (+1)
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable18_19
   \   0000013A   0x6801             LDR      R1,[R0, #+0]
   \   0000013C   0xE01A             B.N      ??getDispText_3
    368          			break;	
    369          		case LEVELING_UI:
    370                  case MESHLEVELING_UI:
    371          			strcpy(TitleText, leveling_menu.title); 					
   \                     ??getDispText_23: (+1)
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable18_20
   \   00000142   0x6801             LDR      R1,[R0, #+0]
   \   00000144   0xE016             B.N      ??getDispText_3
    372          			break;		
    373          		case BIND_UI:
    374          			strcpy(TitleText, cloud_menu.title);			
   \                     ??getDispText_24: (+1)
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable18_21
   \   0000014A   0x6801             LDR      R1,[R0, #+0]
   \   0000014C   0xE012             B.N      ??getDispText_3
    375          			break;
    376          		case ZOFFSET_UI:
    377          			strcpy(TitleText, zoffset_menu.title);			
   \                     ??getDispText_25: (+1)
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable18_22
   \   00000152   0x6801             LDR      R1,[R0, #+0]
   \   00000154   0xE00E             B.N      ??getDispText_3
    378          			break;	
    379          		case TOOL_UI:
    380          			strcpy(TitleText, tool_menu.title);			
   \                     ??getDispText_26: (+1)
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable18_23
   \   0000015A   0x6801             LDR      R1,[R0, #+0]
   \   0000015C   0xE00A             B.N      ??getDispText_3
    381          			break;
    382          		case WIFI_LIST_UI:
    383          			strcpy(TitleText, list_menu.title);			
   \                     ??getDispText_27: (+1)
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable18_24
   \   00000162   0x6801             LDR      R1,[R0, #+0]
   \   00000164   0xE006             B.N      ??getDispText_3
    384          			break;
    385                  case MACHINE_PARA_UI:
    386                      strcpy(TitleText, MachinePara_menu.title);
   \                     ??getDispText_28: (+1)
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable18_25
   \   0000016A   0x6801             LDR      R1,[R0, #+0]
   \   0000016C   0xE002             B.N      ??getDispText_3
    387                      break;
    388          	case BABY_STEP_UI:
    389                      strcpy(TitleText, operation_menu.babystep);
   \                     ??getDispText_29: (+1)
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable18_6
   \   00000172   0x6B41             LDR      R1,[R0, #+52]
   \                     ??getDispText_3: (+1)
   \   00000174   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000178   0x.... 0x....      BL       strcpy
    390                      break;
    391          		default:
    392          			break;
    393          	}
    394          
    395          	return TitleText;
   \                     ??getDispText_1: (+1)
   \   0000017C   0xF104 0x0068      ADD      R0,R4,#+104
   \   00000180   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    396          }

   \                                 In section .bss, align 4
   \                     disp_state_stack:
   \   00000000                      DS8 104
   \   00000068                      DS8 32
   \   00000088                      DS8 100

   \                                 In section .bss, align 1
   \                     BMP_PIC_X:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     BMP_PIC_Y:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     gCbEventStack:
   \   00000000                      DS8 44

   \                                 In section .bss, align 4
   \                     srcfp:
   \   00000000                      DS8 4
    397          
    398          static char titleText[100] = {0};
    399          //uint8_t curFileName[30] = {0};
    400          

   \                                 In section .text, align 2, keep-with-next
    401          char *creat_title_text()
    402          {
   \                     creat_title_text: (+1)
   \   00000000   0xE92D 0x4BF0      PUSH     {R4-R9,R11,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
    403          	int index = 0;
   \   00000006   0x2400             MOVS     R4,#+0
    404          	
    405          	char *tmpText = 0;
    406          	
    407          	TCHAR tmpCurFileStr[20];
    408          	
    409          
    410          	memset(tmpCurFileStr, 0, sizeof(tmpCurFileStr));
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       __aeabi_memset4
    411          
    412          	#if _LFN_UNICODE
    413          	cutFileName((TCHAR *)curFileName, 16, 16, (TCHAR *)tmpCurFileStr);	
    414          	#else
    415          	cutFileName(curFileName, 16, 16, tmpCurFileStr);
   \   00000012   0x2210             MOVS     R2,#+16
   \   00000014   0xAB00             ADD      R3,SP,#+0
   \   00000016   0x4611             MOV      R1,R2
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable18_26
   \   0000001C   0x.... 0x....      BL       cutFileName
    416          	#endif
    417          	
    418          	memset(titleText, 0, sizeof(titleText));
   \   00000020   0x.... 0x....      LDR.W    R6,??DataTable18
   \   00000024   0xF106 0x0888      ADD      R8,R6,#+136
   \   00000028   0x2764             MOVS     R7,#+100
   \   0000002A   0x4622             MOV      R2,R4
   \   0000002C   0x4639             MOV      R1,R7
   \   0000002E   0x4640             MOV      R0,R8
   \   00000030   0x.... 0x....      BL       __aeabi_memset4
   \   00000034   0x.... 0x....      ADR.W    R9,??DataTable12  ;; ">"
   \   00000038   0xE029             B.N      ??creat_title_text_0
    419          	
    420          	while(index <= disp_state_stack._disp_index)
    421          	{
    422          		
    423          		tmpText = getDispText(index);
   \                     ??creat_title_text_1: (+1)
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       _Z11getDispTexti
   \   00000040   0x4605             MOV      R5,R0
    424          		if((*tmpText == 0) || (tmpText == 0))
   \   00000042   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xBF18             IT       NE 
   \   0000004A   0x2D00             CMPNE    R5,#+0
   \   0000004C   0xD01E             BEQ.N    ??creat_title_text_2
    425          		{
    426          			index++;
    427          			continue;
    428          		}
    429          		
    430          		titleText_cat(titleText, sizeof(titleText), tmpText);
   \   0000004E   0x4640             MOV      R0,R8
   \   00000050   0x.... 0x....      BL       strlen
   \   00000054   0x4683             MOV      R11,R0
   \   00000056   0x4628             MOV      R0,R5
   \   00000058   0x.... 0x....      BL       strlen
   \   0000005C   0x4458             ADD      R0,R0,R11
   \   0000005E   0x2864             CMP      R0,#+100
   \   00000060   0xD203             BCS.N    ??creat_title_text_3
   \   00000062   0x4629             MOV      R1,R5
   \   00000064   0x4640             MOV      R0,R8
   \   00000066   0x.... 0x....      BL       strcat
    431          		if(index < disp_state_stack._disp_index)
   \                     ??creat_title_text_3: (+1)
   \   0000006A   0x57F0             LDRSB    R0,[R6, R7]
   \   0000006C   0x4284             CMP      R4,R0
   \   0000006E   0xDA0D             BGE.N    ??creat_title_text_2
    432          		{
    433          			titleText_cat(titleText, sizeof(titleText), ">");
   \   00000070   0x4640             MOV      R0,R8
   \   00000072   0x.... 0x....      BL       strlen
   \   00000076   0x4605             MOV      R5,R0
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x.... 0x....      BL       strlen
   \   0000007E   0x4428             ADD      R0,R0,R5
   \   00000080   0x2864             CMP      R0,#+100
   \   00000082   0xD203             BCS.N    ??creat_title_text_2
   \   00000084   0x4649             MOV      R1,R9
   \   00000086   0x4640             MOV      R0,R8
   \   00000088   0x.... 0x....      BL       strcat
    434          		}
    435          		
    436          		index++;
   \                     ??creat_title_text_2: (+1)
   \   0000008C   0x1C64             ADDS     R4,R4,#+1
    437          	}
   \                     ??creat_title_text_0: (+1)
   \   0000008E   0x57F0             LDRSB    R0,[R6, R7]
   \   00000090   0x42A0             CMP      R0,R4
   \   00000092   0xDAD2             BGE.N    ??creat_title_text_1
    438          	
    439          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] == PRINTING_UI
    440          		/*|| disp_state_stack._disp_state[disp_state_stack._disp_index] == OPERATE_UI
    441          		|| disp_state_stack._disp_state[disp_state_stack._disp_index] == PAUSE_UI*/)
   \   00000094   0x5780             LDRSB    R0,[R0, R6]
   \   00000096   0x2803             CMP      R0,#+3
   \   00000098   0xD11C             BNE.N    ??creat_title_text_4
    442          	{
    443          		titleText_cat(titleText, sizeof(titleText), ":");
   \   0000009A   0x....             ADR.N    R4,??DataTable12_1  ;; ":"
   \   0000009C   0x4640             MOV      R0,R8
   \   0000009E   0x.... 0x....      BL       strlen
   \   000000A2   0x4605             MOV      R5,R0
   \   000000A4   0x4620             MOV      R0,R4
   \   000000A6   0x.... 0x....      BL       strlen
   \   000000AA   0x4428             ADD      R0,R0,R5
   \   000000AC   0x2864             CMP      R0,#+100
   \   000000AE   0xD203             BCS.N    ??creat_title_text_5
   \   000000B0   0x4621             MOV      R1,R4
   \   000000B2   0x4640             MOV      R0,R8
   \   000000B4   0x.... 0x....      BL       strcat
    444          		titleText_cat(titleText, sizeof(titleText), (char *)tmpCurFileStr);	
   \                     ??creat_title_text_5: (+1)
   \   000000B8   0x4640             MOV      R0,R8
   \   000000BA   0x.... 0x....      BL       strlen
   \   000000BE   0x4604             MOV      R4,R0
   \   000000C0   0xA800             ADD      R0,SP,#+0
   \   000000C2   0x.... 0x....      BL       strlen
   \   000000C6   0x1900             ADDS     R0,R0,R4
   \   000000C8   0x2864             CMP      R0,#+100
   \   000000CA   0xD203             BCS.N    ??creat_title_text_4
   \   000000CC   0xA900             ADD      R1,SP,#+0
   \   000000CE   0x4640             MOV      R0,R8
   \   000000D0   0x.... 0x....      BL       strcat
    445          	}
    446          
    447          	if(strlen(titleText) > MAX_TITLE_LEN)
   \                     ??creat_title_text_4: (+1)
   \   000000D4   0x4640             MOV      R0,R8
   \   000000D6   0x.... 0x....      BL       strlen
   \   000000DA   0x281D             CMP      R0,#+29
   \   000000DC   0xD342             BCC.N    ??creat_title_text_6
    448          	{
    449          		memset(titleText, 0, sizeof(titleText));
   \   000000DE   0x2200             MOVS     R2,#+0
   \   000000E0   0x2164             MOVS     R1,#+100
   \   000000E2   0x4640             MOV      R0,R8
   \   000000E4   0x.... 0x....      BL       __aeabi_memset4
    450          	
    451          		tmpText = getDispText(0);
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x.... 0x....      BL       _Z11getDispTexti
   \   000000EE   0x4605             MOV      R5,R0
    452          		if(*tmpText != 0)
   \   000000F0   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   000000F4   0xB3B0             CBZ.N    R0,??creat_title_text_6
    453          		{
    454          			titleText_cat(titleText, sizeof(titleText), tmpText);
   \   000000F6   0xB16D             CBZ.N    R5,??creat_title_text_7
   \   000000F8   0x4640             MOV      R0,R8
   \   000000FA   0x.... 0x....      BL       strlen
   \   000000FE   0x4604             MOV      R4,R0
   \   00000100   0x4628             MOV      R0,R5
   \   00000102   0x.... 0x....      BL       strlen
   \   00000106   0x1900             ADDS     R0,R0,R4
   \   00000108   0x2864             CMP      R0,#+100
   \   0000010A   0xD203             BCS.N    ??creat_title_text_7
   \   0000010C   0x4629             MOV      R1,R5
   \   0000010E   0x4640             MOV      R0,R8
   \   00000110   0x.... 0x....      BL       strcat
    455          			titleText_cat(titleText, sizeof(titleText), ">...>");
   \                     ??creat_title_text_7: (+1)
   \   00000114   0x4640             MOV      R0,R8
   \   00000116   0x.... 0x....      BL       strlen
   \   0000011A   0x4604             MOV      R4,R0
   \   0000011C   0x.... 0x....      ADR.W    R5,`?<Constant ">...>">`
   \   00000120   0x4628             MOV      R0,R5
   \   00000122   0x.... 0x....      BL       strlen
   \   00000126   0x1900             ADDS     R0,R0,R4
   \   00000128   0x2864             CMP      R0,#+100
   \   0000012A   0xD203             BCS.N    ??creat_title_text_8
   \   0000012C   0x4629             MOV      R1,R5
   \   0000012E   0x4640             MOV      R0,R8
   \   00000130   0x.... 0x....      BL       strcat
    456          			tmpText = getDispText(disp_state_stack._disp_index);
   \                     ??creat_title_text_8: (+1)
   \   00000134   0x57F0             LDRSB    R0,[R6, R7]
   \   00000136   0x.... 0x....      BL       _Z11getDispTexti
   \   0000013A   0x4605             MOV      R5,R0
    457          			if(*tmpText != 0)
   \   0000013C   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   00000140   0x2800             CMP      R0,#+0
   \   00000142   0xBF18             IT       NE 
    458          			{
    459          				titleText_cat(titleText, sizeof(titleText), tmpText);
   \   00000144   0x2D00             CMPNE    R5,#+0
   \   00000146   0xD00D             BEQ.N    ??creat_title_text_6
   \   00000148   0x4640             MOV      R0,R8
   \   0000014A   0x.... 0x....      BL       strlen
   \   0000014E   0x4604             MOV      R4,R0
   \   00000150   0x4628             MOV      R0,R5
   \   00000152   0x.... 0x....      BL       strlen
   \   00000156   0x1900             ADDS     R0,R0,R4
   \   00000158   0x2864             CMP      R0,#+100
   \   0000015A   0xD203             BCS.N    ??creat_title_text_6
   \   0000015C   0x4629             MOV      R1,R5
   \   0000015E   0x4640             MOV      R0,R8
   \   00000160   0x.... 0x....      BL       strcat
    460          			}
    461          		}
    462          		
    463          	}
    464          
    465          	return titleText;
   \                     ??creat_title_text_6: (+1)
   \   00000164   0x4640             MOV      R0,R8
   \   00000166   0xB006             ADD      SP,SP,#+24
   \   00000168   0xE8BD 0x8BF0      POP      {R4-R9,R11,PC}   ;; return
    466          }
    467          

   \                                 In section .text, align 2, keep-with-next
    468          void disp_sel_lang()
    469          {
   \                     disp_sel_lang: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    470          	if(gCfgItems.language == LANG_ENGLISH)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable22
   \   00000006   0xF990 0x00C8      LDRSB    R0,[R0, #+200]
    471          	{
    472          		BUTTON_SetBkColor(button4.btnHandle, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
    473          		//BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    474          		//BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    475          	}
    476          	/*else if(gCfgItems.language == 3)
    477          	{
    478          		BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
    479          		BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    480          		BUTTON_SetBkColor(button2, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    481          	}*/
    482          	else
    483          	{
    484          		//BUTTON_SetBkColor(button1, BUTTON_CI_UNPRESSED, GUI_FOCUS_CLOLOR);	
    485          		BUTTON_SetBkColor(button4.btnHandle, BUTTON_CI_UNPRESSED, GUI_BUTTON_COLOR);	
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x4608             MOV      R0,R1
   \   00000010   0x.... 0x....      BL       BUTTON_SetBkColor
    486          		//BUTTON_SetBkColor(button3, BUTTON_CI_UNPRESSED, GUI_BLUE);	
    487          	}
    488          		
    489          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
    490          
    491          
    492          

   \                                 In section .text, align 4, keep-with-next
    493          void clear_cur_ui()
    494          {
    495          	last_disp_state = disp_state_stack._disp_state[disp_state_stack._disp_index];
   \                     clear_cur_ui: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable18
   \   00000004   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   00000008   0x5608             LDRSB    R0,[R1, R0]
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   0000000E   0x7088             STRB     R0,[R1, #+2]
    496          	
    497          	switch(disp_state_stack._disp_state[disp_state_stack._disp_index])
   \   00000010   0x1E40             SUBS     R0,R0,#+1
   \   00000012   0x283D             CMP      R0,#+61
   \   00000014   0xBF88             IT       HI 
   \   00000016   0x.... 0x....      BHI.W    GUI_Clear
   \   0000001A   0xB580             PUSH     {R7,LR}
   \   0000001C   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??clear_cur_ui_0:
   \   00000020   0x1F 0x22          DC8      0x1F,0x22,0x25,0x28
   \              0x25 0x28    
   \   00000024   0x2B 0x2E          DC8      0x2B,0x2E,0x31,0x3A
   \              0x31 0x3A    
   \   00000028   0x34 0x37          DC8      0x34,0x37,0xBA,0x3D
   \              0xBA 0x3D    
   \   0000002C   0x40 0xBA          DC8      0x40,0xBA,0xBA,0x43
   \              0xBA 0x43    
   \   00000030   0x46 0xBA          DC8      0x46,0xBA,0xBA,0xBA
   \              0xBA 0xBA    
   \   00000034   0x4F 0x49          DC8      0x4F,0x49,0x4C,0xBA
   \              0x4C 0xBA    
   \   00000038   0xBA 0x52          DC8      0xBA,0x52,0xBA,0x55
   \              0xBA 0x55    
   \   0000003C   0x5E 0x58          DC8      0x5E,0x58,0xBA,0x5B
   \              0xBA 0x5B    
   \   00000040   0x61 0x64          DC8      0x61,0x64,0x67,0x6A
   \              0x67 0x6A    
   \   00000044   0x6D 0x70          DC8      0x6D,0x70,0x73,0x76
   \              0x73 0x76    
   \   00000048   0x79 0x7C          DC8      0x79,0x7C,0x7F,0x82
   \              0x7F 0x82    
   \   0000004C   0x85 0x88          DC8      0x85,0x88,0x8B,0x8E
   \              0x8B 0x8E    
   \   00000050   0x91 0x94          DC8      0x91,0x94,0x97,0x9A
   \              0x97 0x9A    
   \   00000054   0x9D 0xA0          DC8      0x9D,0xA0,0xA3,0xA6
   \              0xA3 0xA6    
   \   00000058   0xA9 0xAC          DC8      0xA9,0xAC,0xAF,0xB2
   \              0xAF 0xB2    
   \   0000005C   0xB5 0xB8          DC8      0xB5,0xB8
    498          	{
    499          		case PRINT_READY_UI:	
    500          			//Get_Temperature_Flg = 0;
    501          			Clear_ready_print();
   \                     ??clear_cur_ui_1: (+1)
   \   0000005E   0x.... 0x....      BL       Clear_ready_print
    502          			break;
   \   00000062   0xE097             B.N      ??clear_cur_ui_2
    503          
    504          		case PRINT_FILE_UI:
    505          			Clear_print_file();
   \                     ??clear_cur_ui_3: (+1)
   \   00000064   0x.... 0x....      BL       Clear_print_file
    506          			break;
   \   00000068   0xE094             B.N      ??clear_cur_ui_2
    507          
    508          		case PRINTING_UI:
    509          			Clear_printing();
   \                     ??clear_cur_ui_4: (+1)
   \   0000006A   0x.... 0x....      BL       Clear_printing
    510          			break;
   \   0000006E   0xE091             B.N      ??clear_cur_ui_2
    511          
    512          		case MOVE_MOTOR_UI:
    513          			Clear_move_motor();
   \                     ??clear_cur_ui_5: (+1)
   \   00000070   0x.... 0x....      BL       Clear_move_motor
    514          			break;
   \   00000074   0xE08E             B.N      ??clear_cur_ui_2
    515          
    516          		case OPERATE_UI:
    517          			Clear_operate();
   \                     ??clear_cur_ui_6: (+1)
   \   00000076   0x.... 0x....      BL       Clear_operate
    518          			break;
   \   0000007A   0xE08B             B.N      ??clear_cur_ui_2
    519          
    520          		case PAUSE_UI:
    521          			Clear_pause();
   \                     ??clear_cur_ui_7: (+1)
   \   0000007C   0x.... 0x....      BL       Clear_pause
    522          			break;
   \   00000080   0xE088             B.N      ??clear_cur_ui_2
    523          
    524          		case EXTRUSION_UI:
    525          			Clear_extrusion();
   \                     ??clear_cur_ui_8: (+1)
   \   00000082   0x.... 0x....      BL       Clear_extrusion
    526          			break;
   \   00000086   0xE085             B.N      ??clear_cur_ui_2
    527          
    528          		case PRE_HEAT_UI:
    529          			Clear_preHeat();
   \                     ??clear_cur_ui_9: (+1)
   \   00000088   0x.... 0x....      BL       Clear_preHeat
    530          			break;
   \   0000008C   0xE082             B.N      ??clear_cur_ui_2
    531          
    532          		case CHANGE_SPEED_UI:
    533          			Clear_changeSpeed();
   \                     ??clear_cur_ui_10: (+1)
   \   0000008E   0x.... 0x....      BL       Clear_changeSpeed
    534          			break;
   \   00000092   0xE07F             B.N      ??clear_cur_ui_2
    535          
    536          		case FAN_UI:
    537          			Clear_fan();
   \                     ??clear_cur_ui_11: (+1)
   \   00000094   0x.... 0x....      BL       Clear_fan
    538          			break;
   \   00000098   0xE07C             B.N      ??clear_cur_ui_2
    539          
    540          		case SET_UI:
    541          			Clear_Set();
   \                     ??clear_cur_ui_12: (+1)
   \   0000009A   0x.... 0x....      BL       Clear_Set
    542          			break;
   \   0000009E   0xE079             B.N      ??clear_cur_ui_2
    543          
    544          		case ZERO_UI:
    545          			Clear_Zero();
   \                     ??clear_cur_ui_13: (+1)
   \   000000A0   0x.... 0x....      BL       Clear_Zero
    546          			break;
   \   000000A4   0xE076             B.N      ??clear_cur_ui_2
    547          
    548          		case SPRAYER_UI:
    549          			//Clear_Sprayer();
    550          			break;
    551          
    552          		case MACHINE_UI:
    553          			//Clear_Machine();
    554          			break;
    555          
    556          		case LANGUAGE_UI:
    557          			Clear_Language();
   \                     ??clear_cur_ui_14: (+1)
   \   000000A6   0x.... 0x....      BL       Clear_Language
    558          			break;
   \   000000AA   0xE073             B.N      ??clear_cur_ui_2
    559          
    560          		case ABOUT_UI:
    561          			Clear_About();
   \                     ??clear_cur_ui_15: (+1)
   \   000000AC   0x.... 0x....      BL       Clear_About
    562          			break;
   \   000000B0   0xE070             B.N      ??clear_cur_ui_2
    563          
    564          		case LOG_UI:
    565          			//Clear_Connect();
    566          			break;
    567          		case DISK_UI:
    568          			//Clear_Disk();
    569          			break;
    570          		case WIFI_UI:
    571          			Clear_Wifi();
   \                     ??clear_cur_ui_16: (+1)
   \   000000B2   0x.... 0x....      BL       Clear_Wifi
    572          			break;
   \   000000B6   0xE06D             B.N      ??clear_cur_ui_2
    573          			
    574          		case MORE_UI:
    575          			Clear_more();
   \                     ??clear_cur_ui_17: (+1)
   \   000000B8   0x.... 0x....      BL       Clear_more
    576          			break;
   \   000000BC   0xE06A             B.N      ??clear_cur_ui_2
    577          			
    578          		case FILETRANSFER_UI:
    579          			//Clear_fileTransfer();
    580          			break;
    581          		case DIALOG_UI:
    582          			Clear_dialog();
   \                     ??clear_cur_ui_18: (+1)
   \   000000BE   0x.... 0x....      BL       Clear_dialog
    583          			break;			
   \   000000C2   0xE067             B.N      ??clear_cur_ui_2
    584          		case FILETRANSFERSTATE_UI:
    585          		/////	Clear_WifiFileTransferdialog();
    586          			break;
    587          		case PRINT_MORE_UI:
    588          			Clear_Printmore();
   \                     ??clear_cur_ui_19: (+1)
   \   000000C4   0x.... 0x....      BL       Clear_Printmore
    589          			break;
   \   000000C8   0xE064             B.N      ??clear_cur_ui_2
    590          		case LEVELING_UI:
    591          			Clear_Leveling();//**
   \                     ??clear_cur_ui_20: (+1)
   \   000000CA   0x.... 0x....      BL       Clear_Leveling
    592          			break;
   \   000000CE   0xE061             B.N      ??clear_cur_ui_2
    593          		case BIND_UI:
    594          			Clear_Bind();
   \                     ??clear_cur_ui_21: (+1)
   \   000000D0   0x.... 0x....      BL       Clear_Bind
    595          			break;
   \   000000D4   0xE05E             B.N      ??clear_cur_ui_2
    596          		case ZOFFSET_UI:
    597          			//Clear_Zoffset();
    598          			break;
    599          		case TOOL_UI:
    600          			Clear_Tool();
   \                     ??clear_cur_ui_22: (+1)
   \   000000D6   0x.... 0x....      BL       _Z10Clear_Toolv
    601          			break;
   \   000000DA   0xE05B             B.N      ??clear_cur_ui_2
    602                  case MESHLEVELING_UI:
    603                      Clear_MeshLeveling();
   \                     ??clear_cur_ui_23: (+1)
   \   000000DC   0x.... 0x....      BL       Clear_MeshLeveling
    604                      break;
   \   000000E0   0xE058             B.N      ??clear_cur_ui_2
    605                  case HARDWARE_TEST_UI:
    606                      Clear_Hardwaretest();
   \                     ??clear_cur_ui_24: (+1)
   \   000000E2   0x.... 0x....      BL       Clear_Hardwaretest
    607                      break;
   \   000000E6   0xE055             B.N      ??clear_cur_ui_2
    608          	case WIFI_LIST_UI:
    609                      Clear_Wifi_list();
   \                     ??clear_cur_ui_25: (+1)
   \   000000E8   0x.... 0x....      BL       Clear_Wifi_list
    610                      break;
   \   000000EC   0xE052             B.N      ??clear_cur_ui_2
    611          	case KEY_BOARD_UI:
    612                      Clear_Keyboard();
   \                     ??clear_cur_ui_26: (+1)
   \   000000EE   0x.... 0x....      BL       Clear_Keyboard
    613                      break;
   \   000000F2   0xE04F             B.N      ??clear_cur_ui_2
    614          	case TIPS_UI:
    615          		Clear_Tips();
   \                     ??clear_cur_ui_27: (+1)
   \   000000F4   0x.... 0x....      BL       Clear_Tips
    616          		break;
   \   000000F8   0xE04C             B.N      ??clear_cur_ui_2
    617          	case MACHINE_PARA_UI:
    618          		Clear_MachinePara();
   \                     ??clear_cur_ui_28: (+1)
   \   000000FA   0x.... 0x....      BL       Clear_MachinePara
    619          		break;
   \   000000FE   0xE049             B.N      ??clear_cur_ui_2
    620              case MACHINE_SETTINGS_UI:
    621                  Clear_MachineSettings();
   \                     ??clear_cur_ui_29: (+1)
   \   00000100   0x.... 0x....      BL       Clear_MachineSettings
    622                  break;
   \   00000104   0xE046             B.N      ??clear_cur_ui_2
    623              case TEMPERATURE_SETTINGS_UI:
    624                  Clear_TemperatureSettings();
   \                     ??clear_cur_ui_30: (+1)
   \   00000106   0x.... 0x....      BL       Clear_TemperatureSettings
    625                  break;
   \   0000010A   0xE043             B.N      ??clear_cur_ui_2
    626               case MOTOR_SETTINGS_UI:
    627                  Clear_MotorSettings();
   \                     ??clear_cur_ui_31: (+1)
   \   0000010C   0x.... 0x....      BL       Clear_MotorSettings
    628                  break;  
   \   00000110   0xE040             B.N      ??clear_cur_ui_2
    629               case MACHINETYPE_UI:
    630                  Clear_MachineType();
   \                     ??clear_cur_ui_32: (+1)
   \   00000112   0x.... 0x....      BL       Clear_MachineType
    631                  break; 
   \   00000116   0xE03D             B.N      ??clear_cur_ui_2
    632               case STROKE_UI:
    633                  Clear_Stroke();
   \                     ??clear_cur_ui_33: (+1)
   \   00000118   0x.... 0x....      BL       Clear_Stroke
    634                  break;  
   \   0000011C   0xE03A             B.N      ??clear_cur_ui_2
    635               case HOME_DIR_UI:
    636                  Clear_HomeDir();
   \                     ??clear_cur_ui_34: (+1)
   \   0000011E   0x.... 0x....      BL       Clear_HomeDir
    637                  break;
   \   00000122   0xE037             B.N      ??clear_cur_ui_2
    638               case ENDSTOP_TYPE_UI:
    639                  Clear_EndstopType();
   \                     ??clear_cur_ui_35: (+1)
   \   00000124   0x.... 0x....      BL       Clear_EndstopType
    640                  break;
   \   00000128   0xE034             B.N      ??clear_cur_ui_2
    641               case FILAMENT_SETTINGS_UI:
    642                  Clear_FilamentSettings();
   \                     ??clear_cur_ui_36: (+1)
   \   0000012A   0x.... 0x....      BL       Clear_FilamentSettings
    643                  break;
   \   0000012E   0xE031             B.N      ??clear_cur_ui_2
    644               case LEVELING_SETTIGNS_UI:
    645                  Clear_LevelingSettings();
   \                     ??clear_cur_ui_37: (+1)
   \   00000130   0x.... 0x....      BL       Clear_LevelingSettings
    646                  break;  
   \   00000134   0xE02E             B.N      ??clear_cur_ui_2
    647               case LEVELING_PARA_UI:
    648                  Clear_LevelingPara();
   \                     ??clear_cur_ui_38: (+1)
   \   00000136   0x.... 0x....      BL       Clear_LevelingPara
    649                  break;        
   \   0000013A   0xE02B             B.N      ??clear_cur_ui_2
    650               case DELTA_LEVELING_PARA_UI:
    651                  Clear_DeltaLevelPara();
   \                     ??clear_cur_ui_39: (+1)
   \   0000013C   0x.... 0x....      BL       Clear_DeltaLevelPara
    652                  break;
   \   00000140   0xE028             B.N      ??clear_cur_ui_2
    653               case XYZ_LEVELING_PARA_UI:
    654                  Clear_XYZLevelPara();
   \                     ??clear_cur_ui_40: (+1)
   \   00000142   0x.... 0x....      BL       Clear_XYZLevelPara
    655                  break; 
   \   00000146   0xE025             B.N      ??clear_cur_ui_2
    656               case MAXFEEDRATE_UI:
    657                  Clear_MaxFeedRate();
   \                     ??clear_cur_ui_41: (+1)
   \   00000148   0x.... 0x....      BL       Clear_MaxFeedRate
    658                  break;  
   \   0000014C   0xE022             B.N      ??clear_cur_ui_2
    659               case STEPS_UI:
    660                  Clear_Steps();
   \                     ??clear_cur_ui_42: (+1)
   \   0000014E   0x.... 0x....      BL       Clear_Steps
    661                  break;
   \   00000152   0xE01F             B.N      ??clear_cur_ui_2
    662               case ACCELERATION_UI:
    663                  Clear_Acceleration();
   \                     ??clear_cur_ui_43: (+1)
   \   00000154   0x.... 0x....      BL       Clear_Acceleration
    664                  break;
   \   00000158   0xE01C             B.N      ??clear_cur_ui_2
    665               case JERK_UI:
    666                  Clear_Jerk();
   \                     ??clear_cur_ui_44: (+1)
   \   0000015A   0x.... 0x....      BL       Clear_Jerk
    667                  break;
   \   0000015E   0xE019             B.N      ??clear_cur_ui_2
    668               case MOTORDIR_UI:
    669                  Clear_MotorDir();
   \                     ??clear_cur_ui_45: (+1)
   \   00000160   0x.... 0x....      BL       Clear_MotorDir
    670                  break;
   \   00000164   0xE016             B.N      ??clear_cur_ui_2
    671               case HOMESPEED_UI:
    672                  Clear_HomeSpeed();
   \                     ??clear_cur_ui_46: (+1)
   \   00000166   0x.... 0x....      BL       Clear_HomeSpeed
    673                  break;
   \   0000016A   0xE013             B.N      ??clear_cur_ui_2
    674               case NOZZLE_CONFIG_UI:
    675                  Clear_NozzleConfig();
   \                     ??clear_cur_ui_47: (+1)
   \   0000016C   0x.... 0x....      BL       Clear_NozzleConfig
    676                  break;
   \   00000170   0xE010             B.N      ??clear_cur_ui_2
    677               case HOTBED_CONFIG_UI:
    678                  Clear_HotbedConfig();
   \                     ??clear_cur_ui_48: (+1)
   \   00000172   0x.... 0x....      BL       Clear_HotbedConfig
    679          		break; 
   \   00000176   0xE00D             B.N      ??clear_cur_ui_2
    680              case ADVANCED_UI:
    681                  Clear_Advanced();
   \                     ??clear_cur_ui_49: (+1)
   \   00000178   0x.... 0x....      BL       Clear_Advanced
    682                  break;   
   \   0000017C   0xE00A             B.N      ??clear_cur_ui_2
    683              case DOUBLE_Z_UI:
    684                  Clear_DoubleZ();
   \                     ??clear_cur_ui_50: (+1)
   \   0000017E   0x.... 0x....      BL       Clear_DoubleZ
    685                  break;
   \   00000182   0xE007             B.N      ??clear_cur_ui_2
    686              case ENABLE_INVERT_UI:
    687                  Clear_EnableInvert();
   \                     ??clear_cur_ui_51: (+1)
   \   00000184   0x.... 0x....      BL       Clear_EnableInvert
    688                  break;  
   \   00000188   0xE004             B.N      ??clear_cur_ui_2
    689              case NUMBER_KEY_UI:
    690                  Clear_NumberKey();
   \                     ??clear_cur_ui_52: (+1)
   \   0000018A   0x.... 0x....      BL       Clear_NumberKey
    691                  break;
   \   0000018E   0xE001             B.N      ??clear_cur_ui_2
    692          	case BABY_STEP_UI:
    693                      Clear_babyStep();
   \                     ??clear_cur_ui_53: (+1)
   \   00000190   0x.... 0x....      BL       Clear_babyStep
    694                      break;
    695          		default:
    696          			break;
    697          	}
    698          	GUI_Clear();
   \                     ??clear_cur_ui_2: (+1)
   \   00000194   0xE8BD 0x4001      POP      {R0,LR}
   \   00000198   0x.... 0x....      B.W      GUI_Clear
    699          }
    700          

   \                                 In section .text, align 4, keep-with-next
    701          void draw_return_ui()
    702          {
    703          	if(disp_state_stack._disp_index > 0)
   \                     draw_return_ui: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable18
   \   00000004   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   00000008   0x2901             CMP      R1,#+1
   \   0000000A   0xF2C0 0x809F      BLT.W    ??draw_return_ui_1
    704          	{
    705          		disp_state_stack._disp_index--;
   \   0000000E   0x1E49             SUBS     R1,R1,#+1
   \   00000010   0xF880 0x1064      STRB     R1,[R0, #+100]
    706          		
    707          		switch(disp_state_stack._disp_state[disp_state_stack._disp_index])
   \   00000014   0xB249             SXTB     R1,R1
   \   00000016   0x5608             LDRSB    R0,[R1, R0]
   \   00000018   0x1E40             SUBS     R0,R0,#+1
   \   0000001A   0x283D             CMP      R0,#+61
   \   0000001C   0xF200 0x8096      BHI.W    ??draw_return_ui_1
   \   00000020   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??draw_return_ui_0:
   \   00000024   0x1F 0x21          DC8      0x1F,0x21,0x23,0x2D
   \              0x23 0x2D    
   \   00000028   0x2F 0x31          DC8      0x2F,0x31,0x33,0x39
   \              0x33 0x39    
   \   0000002C   0x35 0x37          DC8      0x35,0x37,0x94,0x3B
   \              0x94 0x3B    
   \   00000030   0x3D 0x94          DC8      0x3D,0x94,0x94,0x3F
   \              0x94 0x3F    
   \   00000034   0x41 0x94          DC8      0x41,0x94,0x94,0x94
   \              0x94 0x94    
   \   00000038   0x8D 0x43          DC8      0x8D,0x43,0x45,0x94
   \              0x45 0x94    
   \   0000003C   0x94 0x47          DC8      0x94,0x47,0x49,0x4B
   \              0x49 0x4B    
   \   00000040   0x51 0x4D          DC8      0x51,0x4D,0x94,0x4F
   \              0x94 0x4F    
   \   00000044   0x53 0x55          DC8      0x53,0x55,0x57,0x59
   \              0x57 0x59    
   \   00000048   0x5B 0x5D          DC8      0x5B,0x5D,0x5F,0x61
   \              0x5F 0x61    
   \   0000004C   0x63 0x65          DC8      0x63,0x65,0x67,0x69
   \              0x67 0x69    
   \   00000050   0x6B 0x6D          DC8      0x6B,0x6D,0x6F,0x71
   \              0x6F 0x71    
   \   00000054   0x73 0x75          DC8      0x73,0x75,0x77,0x79
   \              0x77 0x79    
   \   00000058   0x7B 0x7D          DC8      0x7B,0x7D,0x7F,0x81
   \              0x7F 0x81    
   \   0000005C   0x83 0x85          DC8      0x83,0x85,0x87,0x89
   \              0x87 0x89    
   \   00000060   0x8B 0x92          DC8      0x8B,0x92
    708          		{
    709          			case PRINT_READY_UI:
    710          				draw_ready_print();
   \                     ??draw_return_ui_2: (+1)
   \   00000062   0x.... 0x....      B.W      draw_ready_print
    711          				break;
    712          
    713          
    714          			case PRINT_FILE_UI:
    715          				draw_print_file();
   \                     ??draw_return_ui_3: (+1)
   \   00000066   0x.... 0x....      B.W      draw_print_file
    716          				break;
    717          			case PRINTING_UI:
    718          				if(from_flash_pic == 1)
   \                     ??draw_return_ui_4: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000006E   0x7841             LDRB     R1,[R0, #+1]
   \   00000070   0x2901             CMP      R1,#+1
   \   00000072   0xBF0E             ITEE     EQ 
    719          					flash_preview_begin = 1;
   \   00000074   0x7141             STRBEQ   R1,[R0, #+5]
    720          				else
    721          					default_preview_flg = 1; 
   \   00000076   0x2101             MOVNE    R1,#+1
   \   00000078   0x7181             STRBNE   R1,[R0, #+6]
    722          				draw_printing();
   \   0000007A   0x.... 0x....      B.W      draw_printing
    723          				break;
    724          
    725          			case MOVE_MOTOR_UI:
    726          				draw_move_motor();
   \                     ??draw_return_ui_5: (+1)
   \   0000007E   0x.... 0x....      B.W      draw_move_motor
    727          				break;
    728          
    729          
    730          			case OPERATE_UI:
    731          				draw_operate();
   \                     ??draw_return_ui_6: (+1)
   \   00000082   0x.... 0x....      B.W      draw_operate
    732          				break;
    733          #if 1
    734          			case PAUSE_UI:
    735          				draw_pause();
   \                     ??draw_return_ui_7: (+1)
   \   00000086   0x.... 0x....      B.W      draw_pause
    736          				break;
    737          #endif
    738          
    739          			case EXTRUSION_UI:
    740          				draw_extrusion();
   \                     ??draw_return_ui_8: (+1)
   \   0000008A   0x.... 0x....      B.W      draw_extrusion
    741          				break;
    742          
    743          			case PRE_HEAT_UI:
    744          				draw_preHeat();
   \                     ??draw_return_ui_9: (+1)
   \   0000008E   0x.... 0x....      B.W      draw_preHeat
    745          				break;
    746          				
    747          			case CHANGE_SPEED_UI:
    748          				draw_changeSpeed();
   \                     ??draw_return_ui_10: (+1)
   \   00000092   0x.... 0x....      B.W      draw_changeSpeed
    749          				break;
    750          
    751          			case FAN_UI:
    752          				draw_fan();
   \                     ??draw_return_ui_11: (+1)
   \   00000096   0x.... 0x....      B.W      draw_fan
    753          				break;
    754          
    755          			case SET_UI:
    756          				draw_Set();
   \                     ??draw_return_ui_12: (+1)
   \   0000009A   0x.... 0x....      B.W      draw_Set
    757          				break;
    758          
    759          			case ZERO_UI:
    760          				draw_Zero();
   \                     ??draw_return_ui_13: (+1)
   \   0000009E   0x.... 0x....      B.W      draw_Zero
    761          				break;
    762          
    763          			case SPRAYER_UI:
    764          				//draw_Sprayer();
    765          				break;
    766          
    767          			case MACHINE_UI:
    768          				//draw_Machine();
    769          				break;
    770          
    771          			case LANGUAGE_UI:
    772          				draw_Language();
   \                     ??draw_return_ui_14: (+1)
   \   000000A2   0x.... 0x....      B.W      draw_Language
    773          				break;
    774          
    775          			case ABOUT_UI:
    776          				draw_About();
   \                     ??draw_return_ui_15: (+1)
   \   000000A6   0x.... 0x....      B.W      draw_About
    777          				break;
    778          #if tan_mask
    779          
    780          			case LOG_UI:
    781          				draw_Connect();
    782          				break;
    783          #endif
    784          
    785          			case CALIBRATE_UI:
    786          		////		draw_calibrate();
    787          				break;
    788                          
    789          			case DISK_UI:
    790          				//draw_Disk();
    791          				break;  
    792          				
    793          			case WIFI_UI:
    794          				draw_Wifi();
   \                     ??draw_return_ui_16: (+1)
   \   000000AA   0x.... 0x....      B.W      draw_Wifi
    795          				break;
    796          
    797          			case MORE_UI:
    798          				draw_More();
   \                     ??draw_return_ui_17: (+1)
   \   000000AE   0x.... 0x....      B.W      draw_More
    799          				break;
    800          				
    801          			case PRINT_MORE_UI:
    802          				draw_printmore();
   \                     ??draw_return_ui_18: (+1)
   \   000000B2   0x.... 0x....      B.W      draw_printmore
    803          				break;
    804          			
    805          			case FILAMENTCHANGE_UI:
    806          				draw_FilamentChange();
   \                     ??draw_return_ui_19: (+1)
   \   000000B6   0x.... 0x....      B.W      draw_FilamentChange
    807          				break;
    808          			case LEVELING_UI:
    809          				draw_leveling();
   \                     ??draw_return_ui_20: (+1)
   \   000000BA   0x.... 0x....      B.W      draw_leveling
    810          				break;
    811          				
    812          			case BIND_UI:
    813          				draw_bind();
   \                     ??draw_return_ui_21: (+1)
   \   000000BE   0x.... 0x....      B.W      draw_bind
    814          				break;
    815          #if tan_mask
    816          			case ZOFFSET_UI:
    817          				draw_Zoffset();
    818          				break;
    819          #endif
    820          			case TOOL_UI:
    821          				draw_tool();
   \                     ??draw_return_ui_22: (+1)
   \   000000C2   0x.... 0x....      B.W      _Z9draw_toolv
    822          				break;
    823                      case MESHLEVELING_UI:
    824                          draw_meshleveling();
   \                     ??draw_return_ui_23: (+1)
   \   000000C6   0x.... 0x....      B.W      draw_meshleveling
    825                          break;
    826                      case HARDWARE_TEST_UI:
    827                          draw_Hardwaretest();
   \                     ??draw_return_ui_24: (+1)
   \   000000CA   0x.... 0x....      B.W      draw_Hardwaretest
    828                          break;
    829          		case WIFI_LIST_UI:
    830          	            draw_Wifi_list();
   \                     ??draw_return_ui_25: (+1)
   \   000000CE   0x.... 0x....      B.W      draw_Wifi_list
    831          	            break;
    832          		case KEY_BOARD_UI:
    833          	            draw_Keyboard();
   \                     ??draw_return_ui_26: (+1)
   \   000000D2   0x.... 0x....      B.W      draw_Keyboard
    834          	            break;
    835          		case TIPS_UI:
    836          			draw_Tips();
   \                     ??draw_return_ui_27: (+1)
   \   000000D6   0x.... 0x....      B.W      draw_Tips
    837          			break;
    838          		case MACHINE_PARA_UI:
    839          			draw_MachinePara();
   \                     ??draw_return_ui_28: (+1)
   \   000000DA   0x.... 0x....      B.W      draw_MachinePara
    840          			break;	
    841                  case MACHINE_SETTINGS_UI:
    842                      draw_MachineSettings();
   \                     ??draw_return_ui_29: (+1)
   \   000000DE   0x.... 0x....      B.W      draw_MachineSettings
    843                      break;  
    844                  case TEMPERATURE_SETTINGS_UI:
    845                      draw_TemperatureSettings();
   \                     ??draw_return_ui_30: (+1)
   \   000000E2   0x.... 0x....      B.W      draw_TemperatureSettings
    846                      break; 
    847                   case MOTOR_SETTINGS_UI:
    848                      draw_MotorSettings();
   \                     ??draw_return_ui_31: (+1)
   \   000000E6   0x.... 0x....      B.W      draw_MotorSettings
    849                      break;
    850                   case MACHINETYPE_UI:
    851                      draw_MachineType();
   \                     ??draw_return_ui_32: (+1)
   \   000000EA   0x.... 0x....      B.W      draw_MachineType
    852                      break; 
    853                   case STROKE_UI:
    854                      draw_Stroke();
   \                     ??draw_return_ui_33: (+1)
   \   000000EE   0x.... 0x....      B.W      draw_Stroke
    855                      break;  
    856                   case HOME_DIR_UI:
    857                      draw_HomeDir();
   \                     ??draw_return_ui_34: (+1)
   \   000000F2   0x.... 0x....      B.W      draw_HomeDir
    858                      break;
    859                   case ENDSTOP_TYPE_UI:
    860                      draw_EndstopType();
   \                     ??draw_return_ui_35: (+1)
   \   000000F6   0x.... 0x....      B.W      draw_EndstopType
    861                      break;  
    862                   case FILAMENT_SETTINGS_UI:
    863                      draw_FilamentSettings();
   \                     ??draw_return_ui_36: (+1)
   \   000000FA   0x.... 0x....      B.W      draw_FilamentSettings
    864                      break;
    865                   case LEVELING_SETTIGNS_UI:
    866                      draw_LevelingSettings();
   \                     ??draw_return_ui_37: (+1)
   \   000000FE   0x.... 0x....      B.W      draw_LevelingSettings
    867                      break;
    868                   case LEVELING_PARA_UI:
    869                      draw_LevelingPara();
   \                     ??draw_return_ui_38: (+1)
   \   00000102   0x.... 0x....      B.W      draw_LevelingPara
    870                      break;
    871                   case DELTA_LEVELING_PARA_UI:
    872                      draw_DeltaLevelPara();
   \                     ??draw_return_ui_39: (+1)
   \   00000106   0x.... 0x....      B.W      draw_DeltaLevelPara
    873                      break;
    874                   case XYZ_LEVELING_PARA_UI:
    875                      draw_XYZLevelPara();
   \                     ??draw_return_ui_40: (+1)
   \   0000010A   0x.... 0x....      B.W      draw_XYZLevelPara
    876                      break;
    877                   case MAXFEEDRATE_UI:
    878                      draw_MaxFeedRate();
   \                     ??draw_return_ui_41: (+1)
   \   0000010E   0x.... 0x....      B.W      draw_MaxFeedRate
    879                      break;
    880                   case STEPS_UI:
    881                      draw_Steps();
   \                     ??draw_return_ui_42: (+1)
   \   00000112   0x.... 0x....      B.W      draw_Steps
    882                      break;
    883                   case ACCELERATION_UI:
    884                      draw_Acceleration();
   \                     ??draw_return_ui_43: (+1)
   \   00000116   0x.... 0x....      B.W      draw_Acceleration
    885                      break;
    886                   case JERK_UI:
    887                      draw_Jerk();
   \                     ??draw_return_ui_44: (+1)
   \   0000011A   0x.... 0x....      B.W      draw_Jerk
    888                      break;  
    889                   case MOTORDIR_UI:
    890                      draw_MotorDir();
   \                     ??draw_return_ui_45: (+1)
   \   0000011E   0x.... 0x....      B.W      draw_MotorDir
    891                      break;
    892                   case HOMESPEED_UI:
    893                      draw_HomeSpeed();
   \                     ??draw_return_ui_46: (+1)
   \   00000122   0x.... 0x....      B.W      draw_HomeSpeed
    894                      break;
    895                  case NOZZLE_CONFIG_UI:
    896                      draw_NozzleConfig();
   \                     ??draw_return_ui_47: (+1)
   \   00000126   0x.... 0x....      B.W      draw_NozzleConfig
    897                      break;  
    898                  case HOTBED_CONFIG_UI:
    899                      draw_HotbedConfig();
   \                     ??draw_return_ui_48: (+1)
   \   0000012A   0x.... 0x....      B.W      draw_HotbedConfig
    900                      break;
    901                  case ADVANCED_UI:
    902                      draw_Advanced();
   \                     ??draw_return_ui_49: (+1)
   \   0000012E   0x.... 0x....      B.W      draw_Advanced
    903                      break;
    904                  case DOUBLE_Z_UI:
    905                      draw_DoubleZ();
   \                     ??draw_return_ui_50: (+1)
   \   00000132   0x.... 0x....      B.W      draw_DoubleZ
    906                      break;   
    907                  case ENABLE_INVERT_UI:
    908                      draw_EnableInvert();
   \                     ??draw_return_ui_51: (+1)
   \   00000136   0x.... 0x....      B.W      draw_EnableInvert
    909                      break;
    910                  case NUMBER_KEY_UI:
    911                      draw_NumberKey();
   \                     ??draw_return_ui_52: (+1)
   \   0000013A   0x.... 0x....      B.W      draw_NumberKey
    912                      break;  
    913          	case DIALOG_UI:
    914                      draw_dialog(DialogType);
   \                     ??draw_return_ui_53: (+1)
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable22_2
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x.... 0x....      B.W      draw_dialog
    915                      break;
    916          	case BABY_STEP_UI:
    917                      draw_babyStep();
   \                     ??draw_return_ui_54: (+1)
   \   00000148   0x.... 0x....      B.W      draw_babyStep
    918                      break;
    919          	
    920          			default:
    921          				break;
    922          		}
    923          	}
    924          
    925          	
    926          }
   \                     ??draw_return_ui_1: (+1)
   \   0000014C   0x4770             BX       LR               ;; return
    927          extern u16 DeviceCode;

   \                                 In section .text, align 2, keep-with-next
    928          void gui_view_init()
    929          {
   \                     gui_view_init: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    930          /*
    931          	gCfgItems.custom_pic_flag = 1;
    932          	gCfgItems.language = LANG_SIMPLE_CHINESE;
    933          	gCfgItems.background_color = GUI_BK_CLOLOR;
    934          	gCfgItems.title_color = GUI_TITLE_TEXT_COLOR;
    935          	gCfgItems.state_background_color = GUI_STATE_COLOR;
    936          	gCfgItems.state_text_color = GUI_STATE_TEXT_COLOR;
    937          	gCfgItems.filename_color = GUI_FILE_NAME_TEXT_COLOR;
    938          	gCfgItems.filename_background_color = GUI_FILE_NAME_BK_COLOR;
    939          	gCfgItems.printingstate_word_background_color = GUI_PRINTING_STATE_BK_COLOR;
    940          	gCfgItems.printingstate_word_color = GUI_PRINTING_STATE_TEXT_COLOR;
    941          	//gCfgItems.language = 3;
    942          */	
    943          #if 0
    944          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    945          	{
    946          		GUI_SetFont(&GUI_FontHZ16);
    947          	}
    948          	else
    949          	{
    950          		GUI_SetFont(&FONT_TITLE);
    951          	}
    952          
    953          	GUI_SetBkColor(gCfgItems.background_color);
    954          	
    955          	BUTTON_SetDefaultTextAlign(GUI_TA_BOTTOM | GUI_TA_HCENTER);
    956          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    957          	{
    958          		BUTTON_SetDefaultFont(&GUI_FontHZ16);
    959          	}
    960          	else
    961          	{
    962          		BUTTON_SetDefaultFont(&FONT_TITLE);
    963          	}
    964          
    965          	if(gCfgItems.language == LANG_COMPLEX_CHINESE)
    966          	{
    967          		TEXT_SetDefaultFont(&GUI_FontHZ16);
    968          	}
    969          	else
    970          	{
    971          		TEXT_SetDefaultFont(&FONT_TITLE);
    972          	}
    973          	//BUTTON_SetDefaultFont(&FONT_BUTTON);	
    974          /*	
    975          	BUTTON_SetDefaultBkColor(GUI_BUTTON_COLOR, BUTTON_CI_UNPRESSED);
    976          	BUTTON_SetDefaultBkColor(GUI_BUTTON_COLOR, BUTTON_CI_PRESSED);
    977          	BUTTON_SetDefaultTextColor(GUI_WHITE, BUTTON_CI_UNPRESSED);
    978          	BUTTON_SetDefaultTextColor(GUI_WHITE, BUTTON_CI_PRESSED);
    979          */
    980          #endif
    981          	GUI_SetFont(&FONT_TITLE);
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable22_3
   \   00000006   0x4620             MOV      R0,R4
   \   00000008   0x.... 0x....      BL       GUI_SetFont
    982          	BUTTON_SetDefaultFont(&FONT_TITLE);
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x.... 0x....      BL       BUTTON_SetDefaultFont
    983          	TEXT_SetDefaultFont(&FONT_TITLE);
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       TEXT_SetDefaultFont
    984              TEXT_SetDefaultTextColor(gCfgItems.title_color);
   \   00000018   0x.... 0x....      LDR.W    R4,??DataTable22
   \   0000001C   0xF104 0x0514      ADD      R5,R4,#+20
   \   00000020   0x6868             LDR      R0,[R5, #+4]
   \   00000022   0x.... 0x....      BL       TEXT_SetDefaultTextColor
    985              //TEXT_SetDefaultBKColor(gCfgItems.background_color);
    986          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x6960             LDR      R0,[R4, #+20]
   \   00000028   0x.... 0x....      BL       GUI_SetBkColor
    987              GUI_SetColor(gCfgItems.title_color);
   \   0000002C   0x6868             LDR      R0,[R5, #+4]
   \   0000002E   0x.... 0x....      BL       GUI_SetColor
    988          	BUTTON_SetDefaultTextAlign(GUI_TA_BOTTOM | GUI_TA_HCENTER);
   \   00000032   0x2006             MOVS     R0,#+6
   \   00000034   0x.... 0x....      BL       BUTTON_SetDefaultTextAlign
    989          
    990          	BUTTON_SetDefaultBkColor(gCfgItems.btn_color, BUTTON_CI_UNPRESSED);
   \   00000038   0x6A28             LDR      R0,[R5, #+32]
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x.... 0x....      BL       BUTTON_SetDefaultBkColor
    991          	BUTTON_SetDefaultBkColor(gCfgItems.btn_color, BUTTON_CI_PRESSED);
   \   00000040   0x6A28             LDR      R0,[R5, #+32]
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0x.... 0x....      BL       BUTTON_SetDefaultBkColor
    992          	BUTTON_SetDefaultTextColor(gCfgItems.btn_textcolor, BUTTON_CI_UNPRESSED);
   \   00000048   0x6A68             LDR      R0,[R5, #+36]
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x.... 0x....      BL       BUTTON_SetDefaultTextColor
    993          	BUTTON_SetDefaultTextColor(gCfgItems.btn_textcolor, BUTTON_CI_PRESSED);
   \   00000050   0x6A68             LDR      R0,[R5, #+36]
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0x.... 0x....      BL       BUTTON_SetDefaultTextColor
    994          	if(gCfgItems.button_3d_effect_flag != 1)
   \   00000058   0xF104 0x05CC      ADD      R5,R4,#+204
   \   0000005C   0x7C28             LDRB     R0,[R5, #+16]
   \   0000005E   0x2801             CMP      R0,#+1
   \   00000060   0xBF1C             ITT      NE 
    995          	{
    996          		WIDGET_SetDefaultEffect(&WIDGET_Effect_Simple);
   \   00000062   0x.... 0x....      LDRNE.W  R0,??DataTable22_4
   \   00000066   0x.... 0x....      BLNE     WIDGET_SetDefaultEffect
    997          	}
    998          
    999          	init_cb_stack();
   \   0000006A   0x.... 0x....      LDR.W    R6,??DataTable17
   \   0000006E   0x2128             MOVS     R1,#+40
   \   00000070   0x4630             MOV      R0,R6
   \   00000072   0x.... 0x....      BL       __aeabi_memclr4
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x8530             STRH     R0,[R6, #+40]
   \   0000007A   0xF240 0x1185      MOVW     R1,#+389
   1000          
   1001              gCfgItems.touch_adj_xMin = 3518;
   \   0000007E   0xF640 0x50BE      MOVW     R0,#+3518
   \   00000082   0xF8C4 0x00CC      STR      R0,[R4, #+204]
   1002              gCfgItems.touch_adj_xMax = 389;
   \   00000086   0x6069             STR      R1,[R5, #+4]
   1003              gCfgItems.touch_adj_yMin = 284;
   \   00000088   0xF44F 0x728E      MOV      R2,#+284
   \   0000008C   0x60AA             STR      R2,[R5, #+8]
   1004              gCfgItems.touch_adj_yMax = 3770;
   \   0000008E   0xF640 0x63BA      MOVW     R3,#+3770
   1005          
   1006              if(DeviceCode == 0x9341)
   \   00000092   0x.... 0x....      LDR.W    R6,??DataTable22_5
   \   00000096   0x60EB             STR      R3,[R5, #+12]
   \   00000098   0xF249 0x3741      MOVW     R7,#+37697
   \   0000009C   0x8836             LDRH     R6,[R6, #+0]
   \   0000009E   0x42BE             CMP      R6,R7
   \   000000A0   0xD10B             BNE.N    ??gui_view_init_0
   1007          	{
   1008          		//gCfgItems.touch_adj_flag = 0;
   1009          		gCfgItems.touch_adj_xMin = 400;
   \   000000A2   0xF44F 0x70C8      MOV      R0,#+400
   \   000000A6   0xF8C4 0x00CC      STR      R0,[R4, #+204]
   1010          		gCfgItems.touch_adj_xMax = 3836;
   \   000000AA   0xF640 0x60FC      MOVW     R0,#+3836
   \   000000AE   0x6068             STR      R0,[R5, #+4]
   1011          		gCfgItems.touch_adj_yMin = 3805;
   \   000000B0   0xF640 0x60DD      MOVW     R0,#+3805
   \   000000B4   0x60A8             STR      R0,[R5, #+8]
   1012          		gCfgItems.touch_adj_yMax = 212;
   \   000000B6   0x20D4             MOVS     R0,#+212
   \   000000B8   0xE046             B.N      ??gui_view_init_1
   1013          
   1014          	}
   1015          	else if(DeviceCode == 0x8989)
   \                     ??gui_view_init_0: (+1)
   \   000000BA   0xF648 0x1789      MOVW     R7,#+35209
   \   000000BE   0x42BE             CMP      R6,R7
   \   000000C0   0xD105             BNE.N    ??gui_view_init_2
   1016          	{
   1017          		//gCfgItems.touch_adj_flag = 0;
   1018          		gCfgItems.touch_adj_xMin = 389;
   \   000000C2   0xF8C4 0x10CC      STR      R1,[R4, #+204]
   1019          		gCfgItems.touch_adj_xMax = 3518;
   \   000000C6   0x6068             STR      R0,[R5, #+4]
   1020          		gCfgItems.touch_adj_yMin = 284;
   \   000000C8   0x60AA             STR      R2,[R5, #+8]
   1021          		gCfgItems.touch_adj_yMax = 3770;
   \   000000CA   0x60EB             STR      R3,[R5, #+12]
   \   000000CC   0xBDF1             POP      {R0,R4-R7,PC}
   1022          	}
   1023          	else if(DeviceCode == 0x1505)
   \                     ??gui_view_init_2: (+1)
   \   000000CE   0xF241 0x5005      MOVW     R0,#+5381
   \   000000D2   0x4286             CMP      R6,R0
   \   000000D4   0xD109             BNE.N    ??gui_view_init_3
   1024          	{
   1025          		//gCfgItems.touch_adj_flag = 0;
   1026          		gCfgItems.touch_adj_xMin = 304;
   \   000000D6   0xF44F 0x7098      MOV      R0,#+304
   \   000000DA   0xF8C4 0x00CC      STR      R0,[R4, #+204]
   \   000000DE   0xF240 0x1139      MOVW     R1,#+313
   1027          		gCfgItems.touch_adj_xMax = 3875;
   \   000000E2   0xF640 0x7023      MOVW     R0,#+3875
   \   000000E6   0x6068             STR      R0,[R5, #+4]
   1028          		gCfgItems.touch_adj_yMin = 313;
   \   000000E8   0xE02D             B.N      ??gui_view_init_4
   1029          		gCfgItems.touch_adj_yMax = 3875;
   1030          
   1031          	}	
   1032              else if(DeviceCode==0x8552)
   \                     ??gui_view_init_3: (+1)
   \   000000EA   0xF248 0x5052      MOVW     R0,#+34130
   \   000000EE   0x4286             CMP      R6,R0
   \   000000F0   0xD10B             BNE.N    ??gui_view_init_5
   1033              {
   1034          		//gCfgItems.touch_adj_flag = 0;
   1035          		gCfgItems.touch_adj_xMin = 352;
   \   000000F2   0xF44F 0x70B0      MOV      R0,#+352
   \   000000F6   0xF8C4 0x00CC      STR      R0,[R4, #+204]
   1036          		gCfgItems.touch_adj_xMax = 3924;
   \   000000FA   0xF640 0x7054      MOVW     R0,#+3924
   \   000000FE   0x6068             STR      R0,[R5, #+4]
   1037          		gCfgItems.touch_adj_yMin = 3840;
   \   00000100   0xF44F 0x6070      MOV      R0,#+3840
   \   00000104   0x60A8             STR      R0,[R5, #+8]
   1038          		gCfgItems.touch_adj_yMax = 201;       
   \   00000106   0x20C9             MOVS     R0,#+201
   \   00000108   0xE01E             B.N      ??gui_view_init_1
   1039              }
   1040              else if(DeviceCode == 0X9488)
   \                     ??gui_view_init_5: (+1)
   \   0000010A   0xF249 0x4088      MOVW     R0,#+38024
   \   0000010E   0x4286             CMP      R6,R0
   \   00000110   0xD11B             BNE.N    ??gui_view_init_6
   1041              {
   1042              	//gCfgItems.touch_adj_xMin = 201;
   1043          		//gCfgItems.touch_adj_xMax = 3919;
   1044          		//gCfgItems.touch_adj_yMin = 3776;
   1045          		//gCfgItems.touch_adj_yMax = 164;
   1046          		if(gCfgItems.overturn_180 != 0xEE)
   \   00000112   0xF894 0x22B3      LDRB     R2,[R4, #+691]
   \   00000116   0xF44F 0x606C      MOV      R0,#+3776
   \   0000011A   0xF640 0x714F      MOVW     R1,#+3919
   \   0000011E   0x2AEE             CMP      R2,#+238
   \   00000120   0xD009             BEQ.N    ??gui_view_init_7
   1047          	{
   1048          		gCfgItems.touch_adj_flag = 0;
   \   00000122   0x2200             MOVS     R2,#+0
   \   00000124   0xF884 0x20CB      STRB     R2,[R4, #+203]
   1049          		gCfgItems.touch_adj_xMin = 201;
   \   00000128   0x22C9             MOVS     R2,#+201
   \   0000012A   0xF8C4 0x20CC      STR      R2,[R4, #+204]
   1050          		gCfgItems.touch_adj_xMax = 3919;
   \   0000012E   0x6069             STR      R1,[R5, #+4]
   1051          		gCfgItems.touch_adj_yMin = 3776;
   \   00000130   0x60A8             STR      R0,[R5, #+8]
   1052          		gCfgItems.touch_adj_yMax = 164;	
   \   00000132   0x20A4             MOVS     R0,#+164
   \   00000134   0xE008             B.N      ??gui_view_init_1
   1053          	}
   1054          	else
   1055          	{
   1056          		gCfgItems.touch_adj_flag = 0;
   \                     ??gui_view_init_7: (+1)
   \   00000136   0x2200             MOVS     R2,#+0
   \   00000138   0xF884 0x20CB      STRB     R2,[R4, #+203]
   1057          		gCfgItems.touch_adj_xMin = 3919;
   \   0000013C   0xF8C4 0x10CC      STR      R1,[R4, #+204]
   1058          		gCfgItems.touch_adj_xMax = 201;
   \   00000140   0x21C9             MOVS     R1,#+201
   \   00000142   0x6069             STR      R1,[R5, #+4]
   1059          		gCfgItems.touch_adj_yMin = 164;
   \   00000144   0x21A4             MOVS     R1,#+164
   \                     ??gui_view_init_4: (+1)
   \   00000146   0x60A9             STR      R1,[R5, #+8]
   1060          		gCfgItems.touch_adj_yMax = 3776;			
   \                     ??gui_view_init_1: (+1)
   \   00000148   0x60E8             STR      R0,[R5, #+12]
   1061          	}
   1062              }
   1063          }
   \                     ??gui_view_init_6: (+1)
   \   0000014A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1064          
   1065          //**

   \                                 In section .text, align 2, keep-with-next
   1066          int8_t get_printing_rate(FIL *fileHandle)
   1067          {
   \                     get_printing_rate: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1068          	int8_t rate;
   1069          	
   1070          	if(fileHandle == 0)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xBF1C             ITT      NE 
   1071          		return -1;
   1072          
   1073          	if(fileHandle->fptr == 0)
   \   00000006   0xF8D0 0x1208      LDRNE    R1,[R0, #+520]
   \   0000000A   0x2900             CMPNE    R1,#+0
   \   0000000C   0xD005             BEQ.N    ??get_printing_rate_0
   \   0000000E   0xF500 0x7002      ADD      R0,R0,#+520
   \   00000012   0x6844             LDR      R4,[R0, #+4]
   \   00000014   0xB10C             CBZ.N    R4,??get_printing_rate_0
   1074          		return -1;
   1075          
   1076          	if(fileHandle->fsize == 0)
   1077          		return -1;
   1078          
   1079          	if(fileHandle->fptr > fileHandle->fsize)
   \   00000016   0x428C             CMP      R4,R1
   \   00000018   0xD202             BCS.N    ??get_printing_rate_1
   1080          		return -1;
   \                     ??get_printing_rate_0: (+1)
   \   0000001A   0xF04F 0x30FF      MOV      R0,#-1
   \   0000001E   0xBD32             POP      {R1,R4,R5,PC}
   1081          	
   1082          	//if(from_flash_pic != 1)
   1083          	{
   1084          		rate = (unsigned char)((float)f_tell(fileHandle)  * 100 / f_size(fileHandle));
   \                     ??get_printing_rate_1: (+1)
   \   00000020   0x4608             MOV      R0,R1
   \   00000022   0x.... 0x....      BL       __aeabi_ui2f
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable22_6  ;; 0x42c80000
   \   0000002A   0x.... 0x....      BL       __aeabi_fmul
   \   0000002E   0x4605             MOV      R5,R0
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       __aeabi_ui2f
   \   00000036   0x4601             MOV      R1,R0
   \   00000038   0x4628             MOV      R0,R5
   \   0000003A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000003E   0x.... 0x....      BL       __aeabi_f2iz
   1085          	}
   1086              #if 0
   1087          	else
   1088          	{
   1089          		rate = (unsigned char)(((float)f_tell(fileHandle)-(PREVIEW_SIZE+To_pre_view))  * 100 / (f_size(fileHandle)-(PREVIEW_SIZE+To_pre_view)));
   1090          	}
   1091          #endif
   1092          
   1093          
   1094          	if((rate == 100) && (mksReprint.mks_printer_state != MKS_IDLE))	
   \   00000042   0xB240             SXTB     R0,R0
   \   00000044   0x2864             CMP      R0,#+100
   \   00000046   0xD107             BNE.N    ??get_printing_rate_2
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable22_7
   \   0000004C   0xF891 0x10AC      LDRB     R1,[R1, #+172]
   \   00000050   0x29A6             CMP      R1,#+166
   \   00000052   0xD009             BEQ.N    ??get_printing_rate_3
   1095          	{
   1096          		rate = 99;
   \   00000054   0x2063             MOVS     R0,#+99
   \   00000056   0xE007             B.N      ??get_printing_rate_3
   1097          	}
   1098          
   1099          	if((rate == 99) && (mksReprint.mks_printer_state == MKS_IDLE))	
   \                     ??get_printing_rate_2: (+1)
   \   00000058   0x2863             CMP      R0,#+99
   \   0000005A   0xBF01             ITTTT    EQ 
   \   0000005C   0x.... 0x....      LDREQ.W  R1,??DataTable22_7
   \   00000060   0xF891 0x10AC      LDRBEQ   R1,[R1, #+172]
   \   00000064   0x29A6             CMPEQ    R1,#+166
   1100          	{
   1101          		rate = 100;
   \   00000066   0x2064             MOVEQ    R0,#+100
   1102          	}
   1103          	
   1104          
   1105          	gCurFileState.totalSend = rate;
   \                     ??get_printing_rate_3: (+1)
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   0000006C   0xF8C1 0x0238      STR      R0,[R1, #+568]
   1106          
   1107          	return  rate;
   \   00000070   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1108          
   1109          }
   1110          
   1111          #if 1
   1112          extern uint16_t z_high_count;
   1113          extern uint8_t move_speed_flg;
   1114          extern volatile WIFI_STATE wifi_link_state;
   1115          

   \                                 In section .text, align 2, keep-with-next
   1116          void GUI_RefreshPage()
   1117          {
   \                     GUI_RefreshPage: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1118          
   1119            		__IO uint32_t i =0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   1120          		switch(disp_state)
   \   00000006   0x.... 0x....      LDR.W    R4,??DataTable22_1
   \   0000000A   0xF994 0x0007      LDRSB    R0,[R4, #+7]
   \   0000000E   0xB368             CBZ.N    R0,??GUI_RefreshPage_0
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD040             BEQ.N    ??GUI_RefreshPage_1
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD04E             BEQ.N    ??GUI_RefreshPage_2
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xF000 0x8091      BEQ.W    ??GUI_RefreshPage_3
   \   0000001E   0x2805             CMP      R0,#+5
   \   00000020   0xD072             BEQ.N    ??GUI_RefreshPage_4
   \   00000022   0x2806             CMP      R0,#+6
   \   00000024   0xD07A             BEQ.N    ??GUI_RefreshPage_5
   \   00000026   0x2807             CMP      R0,#+7
   \   00000028   0xD023             BEQ.N    ??GUI_RefreshPage_6
   \   0000002A   0x2808             CMP      R0,#+8
   \   0000002C   0xF000 0x807F      BEQ.W    ??GUI_RefreshPage_7
   \   00000030   0x2809             CMP      R0,#+9
   \   00000032   0xD027             BEQ.N    ??GUI_RefreshPage_8
   \   00000034   0x2815             CMP      R0,#+21
   \   00000036   0xF000 0x80CB      BEQ.W    ??GUI_RefreshPage_9
   \   0000003A   0x2816             CMP      R0,#+22
   \   0000003C   0xF000 0x80B4      BEQ.W    ??GUI_RefreshPage_10
   \   00000040   0x281B             CMP      R0,#+27
   \   00000042   0xF000 0x80BD      BEQ.W    ??GUI_RefreshPage_11
   \   00000046   0x281D             CMP      R0,#+29
   \   00000048   0xF000 0x80C7      BEQ.W    ??GUI_RefreshPage_12
   \   0000004C   0x281E             CMP      R0,#+30
   \   0000004E   0xF000 0x80B4      BEQ.W    ??GUI_RefreshPage_13
   \   00000052   0x2822             CMP      R0,#+34
   \   00000054   0xF000 0x80C4      BEQ.W    ??GUI_RefreshPage_14
   \   00000058   0x2823             CMP      R0,#+35
   \   0000005A   0xF000 0x80CB      BEQ.W    ??GUI_RefreshPage_15
   \   0000005E   0x2824             CMP      R0,#+36
   \   00000060   0xF000 0x80CD      BEQ.W    ??GUI_RefreshPage_16
   \   00000064   0x283E             CMP      R0,#+62
   \   00000066   0xF000 0x811E      BEQ.W    ??GUI_RefreshPage_17
   \   0000006A   0xE123             B.N      ??GUI_RefreshPage_18
   1121          		{
   1122          		      case MAIN_UI:                                                    //**
   1123          				
   1124          				//if(logo_time * TICK_CYCLE >= 3000 )
   1125          				//{
   1126          					
   1127          				//	clear_main_ui();
   1128          				//	last_disp_state = MAIN_UI;
   1129          					draw_ready_print();
   \                     ??GUI_RefreshPage_0: (+1)
   \   0000006C   0x.... 0x....      BL       draw_ready_print
   1130          					
   1131          				//}
   1132          				break;
   \   00000070   0xE120             B.N      ??GUI_RefreshPage_18
   1133          			case EXTRUSION_UI:  
   1134          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_6: (+1)
   \   00000072   0x7820             LDRB     R0,[R4, #+0]
   \   00000074   0x2801             CMP      R0,#+1
   \   00000076   0xF040 0x811D      BNE.W    ??GUI_RefreshPage_18
   1135          				{
   1136          					temperature_change_frequency = 0;
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x7020             STRB     R0,[R4, #+0]
   1137          					disp_sprayer_temp();
   \   0000007E   0x.... 0x....      BL       disp_sprayer_temp
   \   00000082   0xE117             B.N      ??GUI_RefreshPage_18
   1138          				}
   1139          				break;
   1140          			case PRE_HEAT_UI:
   1141          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_8: (+1)
   \   00000084   0x7820             LDRB     R0,[R4, #+0]
   \   00000086   0x2801             CMP      R0,#+1
   \   00000088   0xF040 0x8114      BNE.W    ??GUI_RefreshPage_18
   1142          				{
   1143          					temperature_change_frequency = 0;
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x7020             STRB     R0,[R4, #+0]
   1144          					disp_desire_temp();
   \   00000090   0x.... 0x....      BL       disp_desire_temp
   \   00000094   0xE10E             B.N      ??GUI_RefreshPage_18
   1145          				}
   1146          				break;
   1147          
   1148          			case PRINT_READY_UI:
   1149          			/*	if(fan_move_flag)
   1150          				{
   1151          					fan_move_flag = 0;
   1152          					disp_fan_move();
   1153          				}*/
   1154          				if(gCfgItems.display_style == 2)
   \                     ??GUI_RefreshPage_1: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable22
   \   0000009A   0xF890 0x02A5      LDRB     R0,[R0, #+677]
   \   0000009E   0x2802             CMP      R0,#+2
   \   000000A0   0xF040 0x8108      BNE.W    ??GUI_RefreshPage_18
   1155          				{
   1156          					if(temperature_change_frequency){
   \   000000A4   0x7820             LDRB     R0,[R4, #+0]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xF000 0x8104      BEQ.W    ??GUI_RefreshPage_18
   1157          						temperature_change_frequency=0;
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x7020             STRB     R0,[R4, #+0]
   1158          						disp_restro_state();
   \   000000B0   0x.... 0x....      BL       disp_restro_state
   \   000000B4   0xE0FE             B.N      ??GUI_RefreshPage_18
   1159          					}
   1160          				}
   1161          				
   1162          				break;
   1163          
   1164          			case PRINT_FILE_UI:
   1165          				break;
   1166          
   1167          			case PRINTING_UI:
   1168          				/*if(temperature_change_frequency == 1)
   1169          				{
   1170          					temperature_change_frequency = 0;
   1171          					disp_sprayer_tem_printing();
   1172          					disp_bed_temp_printing();
   1173          				}
   1174          				setProBarRate();
   1175          				#if VERSION_WITH_PIC
   1176          				disp_fan_move_printing();
   1177          				#endif
   1178          				break;*/
   1179          				if(temperature_change_frequency)
   \                     ??GUI_RefreshPage_2: (+1)
   \   000000B6   0x7820             LDRB     R0,[R4, #+0]
   \   000000B8   0xB138             CBZ.N    R0,??GUI_RefreshPage_19
   1180          					{
   1181          						temperature_change_frequency = 0;
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x7020             STRB     R0,[R4, #+0]
   1182          						disp_sprayer_tem_printing();
   \   000000BE   0x.... 0x....      BL       disp_sprayer_tem_printing
   1183          						disp_bed_temp_printing();
   \   000000C2   0x.... 0x....      BL       disp_bed_temp_printing
   1184          						disp_print_time();
   \   000000C6   0x.... 0x....      BL       disp_print_time
   1185          					}
   1186          					if(printing_rate_update_flag)
   \                     ??GUI_RefreshPage_19: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable22_9
   \   000000CE   0x7801             LDRB     R1,[R0, #+0]
   \   000000D0   0xB129             CBZ.N    R1,??GUI_RefreshPage_20
   1187          					{
   1188          						printing_rate_update_flag = 0;
   \   000000D2   0x2100             MOVS     R1,#+0
   \   000000D4   0x7001             STRB     R1,[R0, #+0]
   1189          						if(gcode_preview_over == 0)
   \   000000D6   0x7920             LDRB     R0,[R4, #+4]
   \   000000D8   0xB908             CBNZ.N   R0,??GUI_RefreshPage_20
   1190          						{
   1191          							setProBarRate(/*get_printing_rate(srcfp)*/);
   \   000000DA   0x.... 0x....      BL       setProBarRate
   1192          						}
   1193          					}
   1194          					if(!(TimeIncrease * TICK_CYCLE % 100))	// 0.1s
   \                     ??GUI_RefreshPage_20: (+1)
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable22_10
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x2164             MOVS     R1,#+100
   \   000000E6   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000EA   0x2264             MOVS     R2,#+100
   \   000000EC   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   000000F0   0xB908             CBNZ.N   R0,??GUI_RefreshPage_21
   1195          					{		
   1196          						fan_move_flag = 1;
   \   000000F2   0x2001             MOVS     R0,#+1
   \   000000F4   0x70E0             STRB     R0,[R4, #+3]
   1197          					}
   1198          					#if VERSION_WITH_PIC
   1199          					if(fan_move_flag)
   \                     ??GUI_RefreshPage_21: (+1)
   \   000000F6   0x78E0             LDRB     R0,[R4, #+3]
   \   000000F8   0x2800             CMP      R0,#+0
   \   000000FA   0xF000 0x80DB      BEQ.W    ??GUI_RefreshPage_18
   1200          					{
   1201          						fan_move_flag = 0;
   \   000000FE   0x2000             MOVS     R0,#+0
   \   00000100   0x70E0             STRB     R0,[R4, #+3]
   1202          						disp_fan_move_printing();
   \   00000102   0x.... 0x....      BL       disp_fan_move_printing
   \   00000106   0xE0D5             B.N      ??GUI_RefreshPage_18
   1203          					}
   1204          					#endif
   1205          					
   1206          					#if tan_mask
   1207          					if(move_speed_flg == 1)
   1208          					{
   1209          						move_speed_flg =0;
   1210          						disp_printing_speed();
   1211          					}
   1212          					#endif
   1213          					
   1214          					break;
   1215          #if 1
   1216          
   1217          			case OPERATE_UI:
   1218          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_4: (+1)
   \   00000108   0x7820             LDRB     R0,[R4, #+0]
   \   0000010A   0x2801             CMP      R0,#+1
   \   0000010C   0xD103             BNE.N    ??GUI_RefreshPage_22
   1219          				{
   1220          					temperature_change_frequency = 0;
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x7020             STRB     R0,[R4, #+0]
   1221          					disp_temp_operate();
   \   00000112   0x.... 0x....      BL       disp_temp_operate
   1222          				}
   1223          				
   1224          				setProBarRateOpera();
   \                     ??GUI_RefreshPage_22: (+1)
   \   00000116   0x.... 0x....      BL       setProBarRateOpera
   1225          
   1226          					break;
   \   0000011A   0xE0CB             B.N      ??GUI_RefreshPage_18
   1227          
   1228          			case PAUSE_UI:
   1229          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_5: (+1)
   \   0000011C   0x7820             LDRB     R0,[R4, #+0]
   \   0000011E   0x2801             CMP      R0,#+1
   \   00000120   0xF040 0x80C8      BNE.W    ??GUI_RefreshPage_18
   1230          				{
   1231          					temperature_change_frequency = 0;
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x7020             STRB     R0,[R4, #+0]
   1232          					disp_temp_pause();
   \   00000128   0x.... 0x....      BL       disp_temp_pause
   \   0000012C   0xE0C2             B.N      ??GUI_RefreshPage_18
   1233          				}
   1234          				
   1235          				break;
   1236          #endif			
   1237          			case FAN_UI:
   1238          				if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_7: (+1)
   \   0000012E   0x7820             LDRB     R0,[R4, #+0]
   \   00000130   0x2801             CMP      R0,#+1
   \   00000132   0xF040 0x80BF      BNE.W    ??GUI_RefreshPage_18
   1239          				{
   1240          					temperature_change_frequency = 0;
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0x7020             STRB     R0,[R4, #+0]
   1241          					disp_fan_speed();
   \   0000013A   0x.... 0x....      BL       disp_fan_speed
   \   0000013E   0xE0B9             B.N      ??GUI_RefreshPage_18
   1242          				}
   1243          				break;
   1244          					
   1245          			case MOVE_MOTOR_UI:
   1246          				#if 1
   1247          				//œ‘ æZ÷·◊¯±Í
   1248          				if(mksReprint.mks_printer_state == MKS_IDLE)
   \                     ??GUI_RefreshPage_3: (+1)
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000144   0xF890 0x00AC      LDRB     R0,[R0, #+172]
   \   00000148   0x28A6             CMP      R0,#+166
   \   0000014A   0xBF02             ITTT     EQ 
   1249          				{
   1250          					if((z_high_count==1)&&(temper_error_flg != 1)) //√ø∏Ù500msœ‘ æ“ª¥Œ
   \   0000014C   0x.... 0x....      LDREQ.W  R0,??DataTable22_11
   \   00000150   0x8801             LDRHEQ   R1,[R0, #+0]
   \   00000152   0x2901             CMPEQ    R1,#+1
   \   00000154   0xF040 0x80AE      BNE.W    ??GUI_RefreshPage_18
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable22_12
   \   0000015C   0x7809             LDRB     R1,[R1, #+0]
   \   0000015E   0x2901             CMP      R1,#+1
   \   00000160   0xF000 0x80A8      BEQ.W    ??GUI_RefreshPage_18
   1251          					{
   1252          						z_high_count = 0;
   \   00000164   0x2100             MOVS     R1,#+0
   \   00000166   0x8001             STRH     R1,[R0, #+0]
   \   00000168   0x2220             MOVS     R2,#+32
   \   0000016A   0x.... 0x....      LDR.W    R4,??DataTable22_13
   \   0000016E   0x2114             MOVS     R1,#+20
   \   00000170   0x4620             MOV      R0,R4
   \   00000172   0x.... 0x....      BL       __aeabi_memset4
   1253          						//if((current_position[Z_AXIS] != zpos_bak)||current_position[Z_AXIS]=0)
   1254          						{
   1255          							//zpos_bak = current_position[Z_AXIS];
   1256          							memset((char *)gCfgItems.move_z_coordinate,' ',sizeof(gCfgItems.move_z_coordinate));
   1257          							GUI_DispStringAt((const char *)gCfgItems.move_z_coordinate,380, TITLE_YPOS);
   \   00000176   0x2205             MOVS     R2,#+5
   \   00000178   0xF44F 0x71BE      MOV      R1,#+380
   \   0000017C   0x4620             MOV      R0,R4
   \   0000017E   0x.... 0x....      BL       GUI_DispStringAt
   1258          							sprintf((char *)gCfgItems.move_z_coordinate,"Z: %.3f",current_position[Z_AXIS]);
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable22_14
   \   00000186   0x6880             LDR      R0,[R0, #+8]
   \   00000188   0x.... 0x....      BL       __aeabi_f2d
   \   0000018C   0x4602             MOV      R2,R0
   \   0000018E   0x460B             MOV      R3,R1
   \   00000190   0x.... 0x....      ADR.W    R1,`?<Constant "Z: %.3f">`
   \   00000194   0x4620             MOV      R0,R4
   \   00000196   0x.... 0x....      BL       sprintf
   1259          							GUI_DispStringAt((const char *)gCfgItems.move_z_coordinate,380, TITLE_YPOS);
   \   0000019A   0x2205             MOVS     R2,#+5
   \   0000019C   0xF44F 0x71BE      MOV      R1,#+380
   \   000001A0   0x4620             MOV      R0,R4
   \   000001A2   0x.... 0x....      BL       GUI_DispStringAt
   \   000001A6   0xE085             B.N      ??GUI_RefreshPage_18
   1260          						}
   1261          					}
   1262          				}
   1263          				#endif
   1264          				break;
   1265          
   1266          		case WIFI_UI:
   1267          			if(wifi_refresh_flg == 1)
   \                     ??GUI_RefreshPage_10: (+1)
   \   000001A8   0x.... 0x....      LDR.W    R4,??DataTable22_15
   \   000001AC   0x7820             LDRB     R0,[R4, #+0]
   \   000001AE   0x2801             CMP      R0,#+1
   \   000001B0   0xF040 0x8080      BNE.W    ??GUI_RefreshPage_18
   1268          			{					
   1269          				disp_wifi_state();
   \   000001B4   0x.... 0x....      BL       disp_wifi_state
   1270          				wifi_refresh_flg = 0;
   \   000001B8   0xE019             B.N      ??GUI_RefreshPage_23
   1271          			}
   1272          			break;
   1273                  case BIND_UI:
   1274                      refresh_bind_ui();
   \                     ??GUI_RefreshPage_13: (+1)
   \   000001BA   0x.... 0x....      BL       refresh_bind_ui
   1275                      break;
   \   000001BE   0xE079             B.N      ??GUI_RefreshPage_18
   1276          
   1277          		case FILAMENTCHANGE_UI:
   1278          			if(temperature_change_frequency)
   \                     ??GUI_RefreshPage_11: (+1)
   \   000001C0   0x7820             LDRB     R0,[R4, #+0]
   \   000001C2   0x2800             CMP      R0,#+0
   \   000001C4   0xD076             BEQ.N    ??GUI_RefreshPage_18
   1279          			{
   1280          				temperature_change_frequency = 0;
   \   000001C6   0x2000             MOVS     R0,#+0
   \   000001C8   0x7020             STRB     R0,[R4, #+0]
   1281          				disp_filament_sprayer_temp();
   \   000001CA   0x.... 0x....      BL       disp_filament_sprayer_temp
   \   000001CE   0xE071             B.N      ??GUI_RefreshPage_18
   1282          			}
   1283          			//FilamentChange_handle();
   1284          			break;
   1285          		case DIALOG_UI:
   1286          			filament_dialog_handle();
   \                     ??GUI_RefreshPage_9: (+1)
   \   000001D0   0x.... 0x....      BL       _Z22filament_dialog_handlev
   1287          			wifi_scan_handle();
   \   000001D4   0x.... 0x....      BL       wifi_scan_handle
   1288          			break;		
   \   000001D8   0xE06C             B.N      ??GUI_RefreshPage_18
   1289          		case MESHLEVELING_UI:
   1290                      disp_zpos();
   \                     ??GUI_RefreshPage_12: (+1)
   \   000001DA   0x.... 0x....      BL       disp_zpos
   1291                      break;
   \   000001DE   0xE069             B.N      ??GUI_RefreshPage_18
   1292          		case HARDWARE_TEST_UI:
   1293          			//disp_temp_test();
   1294          			break;      
   1295          		case WIFI_LIST_UI:
   1296          			if(wifi_refresh_flg == 1)
   \                     ??GUI_RefreshPage_14: (+1)
   \   000001E0   0x.... 0x....      LDR.W    R4,??DataTable22_15
   \   000001E4   0x7820             LDRB     R0,[R4, #+0]
   \   000001E6   0x2801             CMP      R0,#+1
   \   000001E8   0xD164             BNE.N    ??GUI_RefreshPage_18
   1297          			{					
   1298          				//disp_wifi_state();
   1299          				disp_wifi_list();
   \   000001EA   0x.... 0x....      BL       disp_wifi_list
   1300          				wifi_refresh_flg = 0;
   \                     ??GUI_RefreshPage_23: (+1)
   \   000001EE   0x2000             MOVS     R0,#+0
   \   000001F0   0x7020             STRB     R0,[R4, #+0]
   \   000001F2   0xE05F             B.N      ??GUI_RefreshPage_18
   1301          			}
   1302          			break;
   1303          		case KEY_BOARD_UI:
   1304          	            update_password_disp();
   \                     ??GUI_RefreshPage_15: (+1)
   \   000001F4   0x.... 0x....      BL       update_password_disp
   1305          		     update_join_state_disp();
   \   000001F8   0x.... 0x....      BL       update_join_state_disp
   1306          	            break;
   \   000001FC   0xE05A             B.N      ??GUI_RefreshPage_18
   1307          		case TIPS_UI:
   1308          	            switch(tips_type)
   \                     ??GUI_RefreshPage_16: (+1)
   \   000001FE   0x.... 0x....      LDR.W    R5,??DataTable22_16
   \   00000202   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   00000206   0xB118             CBZ.N    R0,??GUI_RefreshPage_24
   \   00000208   0x2802             CMP      R0,#+2
   \   0000020A   0xD03D             BEQ.N    ??GUI_RefreshPage_25
   \   0000020C   0xD32D             BCC.N    ??GUI_RefreshPage_26
   \   0000020E   0xE051             B.N      ??GUI_RefreshPage_18
   1309          	            {
   1310          	                 case TIPS_TYPE_JOINING:
   1311          				if(wifi_link_state == WIFI_CONNECTED && strcmp((const char *)wifi_list.wifiConnectedName,(const char *)wifi_list.wifiName[wifi_list.nameIndex]) == 0)
   \                     ??GUI_RefreshPage_24: (+1)
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable22_17
   \   00000214   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000218   0x280E             CMP      R0,#+14
   \   0000021A   0xD117             BNE.N    ??GUI_RefreshPage_27
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable22_18
   \   00000220   0xF990 0x1001      LDRSB    R1,[R0, #+1]
   \   00000224   0xEB01 0x1141      ADD      R1,R1,R1, LSL #+5
   \   00000228   0x1809             ADDS     R1,R1,R0
   \   0000022A   0x3118             ADDS     R1,R1,#+24
   \   0000022C   0xF500 0x702B      ADD      R0,R0,#+684
   \   00000230   0x.... 0x....      BL       strcmp
   \   00000234   0xB950             CBNZ.N   R0,??GUI_RefreshPage_27
   1312          				{
   1313          					tips_disp.timer = TIPS_TIMER_STOP;
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   0000023A   0x2100             MOVS     R1,#+0
   \   0000023C   0x7001             STRB     R1,[R0, #+0]
   1314          					tips_disp.timer_count = 0;
   \   0000023E   0x7041             STRB     R1,[R0, #+1]
   1315          					
   1316          					Clear_Tips();
   \   00000240   0x.... 0x....      BL       Clear_Tips
   1317          					tips_type = TIPS_TYPE_WIFI_CONECTED;
   \   00000244   0x2002             MOVS     R0,#+2
   \   00000246   0x7028             STRB     R0,[R5, #+0]
   1318          					draw_Tips();
   \   00000248   0x.... 0x....      BL       draw_Tips
   1319          
   1320          					//memset(&wifi_list.wifiConnectedName,0,sizeof(wifi_list.wifiConnectedName));
   1321          					//memcpy(&wifi_list.wifiConnectedName,wifi_list.wifiName[wifi_list.nameIndex],WIFI_NAME_BUFFER_SIZE);
   1322          				}
   1323          				if(tips_disp.timer_count >= 30)
   \                     ??GUI_RefreshPage_27: (+1)
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   00000250   0x7841             LDRB     R1,[R0, #+1]
   \   00000252   0x291E             CMP      R1,#+30
   \   00000254   0xDB2E             BLT.N    ??GUI_RefreshPage_18
   1324          				{
   1325          					tips_disp.timer = TIPS_TIMER_STOP;
   \   00000256   0x2100             MOVS     R1,#+0
   \   00000258   0x7001             STRB     R1,[R0, #+0]
   1326          					tips_disp.timer_count = 0;
   \   0000025A   0x7041             STRB     R1,[R0, #+1]
   1327          					
   1328          					Clear_Tips();
   \   0000025C   0x.... 0x....      BL       Clear_Tips
   1329          					tips_type = TIPS_TYPE_TAILED_JOIN;
   \   00000260   0x2001             MOVS     R0,#+1
   \   00000262   0x7028             STRB     R0,[R5, #+0]
   1330          					draw_Tips();
   \   00000264   0x.... 0x....      BL       draw_Tips
   \   00000268   0xE024             B.N      ??GUI_RefreshPage_18
   1331          				}
   1332          				break;
   1333          			   case TIPS_TYPE_TAILED_JOIN:
   1334          				if(tips_disp.timer_count >= 3)
   \                     ??GUI_RefreshPage_26: (+1)
   \   0000026A   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   0000026E   0x7841             LDRB     R1,[R0, #+1]
   \   00000270   0x2903             CMP      R1,#+3
   \   00000272   0xDB1F             BLT.N    ??GUI_RefreshPage_18
   1335          				{
   1336          					tips_disp.timer = TIPS_TIMER_STOP;
   \   00000274   0x2100             MOVS     R1,#+0
   \   00000276   0x7001             STRB     R1,[R0, #+0]
   1337          					tips_disp.timer_count = 0;
   \   00000278   0x7041             STRB     R1,[R0, #+1]
   1338          
   1339          					last_disp_state = TIPS_UI;
   \   0000027A   0x2024             MOVS     R0,#+36
   \   0000027C   0x70A0             STRB     R0,[R4, #+2]
   1340          					Clear_Tips();
   \   0000027E   0x.... 0x....      BL       Clear_Tips
   1341          					draw_Wifi_list();
   \   00000282   0x.... 0x....      BL       draw_Wifi_list
   \   00000286   0xE015             B.N      ??GUI_RefreshPage_18
   1342          				}
   1343          				break;
   1344          			   case TIPS_TYPE_WIFI_CONECTED:
   1345          				if(tips_disp.timer_count >= 3)
   \                     ??GUI_RefreshPage_25: (+1)
   \   00000288   0x.... 0x....      LDR.W    R0,??DataTable22_19
   \   0000028C   0x7841             LDRB     R1,[R0, #+1]
   \   0000028E   0x2903             CMP      R1,#+3
   \   00000290   0xDB10             BLT.N    ??GUI_RefreshPage_18
   1346          				{
   1347          					tips_disp.timer = TIPS_TIMER_STOP;
   \   00000292   0x2100             MOVS     R1,#+0
   \   00000294   0x7001             STRB     R1,[R0, #+0]
   1348          					tips_disp.timer_count = 0;
   \   00000296   0x7041             STRB     R1,[R0, #+1]
   1349          
   1350          					last_disp_state = TIPS_UI;
   \   00000298   0x2024             MOVS     R0,#+36
   \   0000029A   0x70A0             STRB     R0,[R4, #+2]
   1351          					Clear_Tips();
   \   0000029C   0x.... 0x....      BL       Clear_Tips
   1352          					draw_Wifi();
   \   000002A0   0x.... 0x....      BL       draw_Wifi
   \   000002A4   0xE006             B.N      ??GUI_RefreshPage_18
   1353          				}
   1354          				break;
   1355          			   default:
   1356          			   	break;
   1357          	            }
   1358                      break;
   1359          		case BABY_STEP_UI:
   1360          			if(temperature_change_frequency == 1)
   \                     ??GUI_RefreshPage_17: (+1)
   \   000002A6   0x7820             LDRB     R0,[R4, #+0]
   \   000002A8   0x2801             CMP      R0,#+1
   \   000002AA   0xD103             BNE.N    ??GUI_RefreshPage_18
   1361          			{
   1362          				temperature_change_frequency = 0;
   \   000002AC   0x2000             MOVS     R0,#+0
   \   000002AE   0x7020             STRB     R0,[R4, #+0]
   1363          				disp_z_offset_value();
   \   000002B0   0x.... 0x....      BL       disp_z_offset_value
   1364          			}
   1365          			break;
   1366          	    default:
   1367          				break;
   1368          				
   1369          	    }
   1370          		
   1371          		print_time_run();
   \                     ??GUI_RefreshPage_18: (+1)
   \   000002B4   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   000002B8   0x.... 0x....      B.W      print_time_run
   1372          
   1373          	
   1374          }
   1375          	#endif
   1376          //tan 20160830
   1377          /*
   1378          void BUTTON_SetBmpFileName(BUTTON_STRUCT *btnStruct, const uint8_t *picName)
   1379          {
   1380          
   1381          	btnStruct->btnPic.XSize = 78;
   1382          	btnStruct->btnPic.YSize = 104;
   1383          	btnStruct->btnPic.BytesPerLine = 160;
   1384          	btnStruct->btnPic.BitsPerPixel = 16;
   1385          	btnStruct->btnPic.pPal = NULL;
   1386          	btnStruct->btnPic.pMethods = GUI_DRAW_BMPM565;
   1387          	btnStruct->btnPic.pData = bmp_public_buf;
   1388          	bindBmpFileData(&btnStruct->btnPic.pData, (uint8_t *)picName);
   1389          	
   1390          	BUTTON_SetBitmapEx(btnStruct->btnHandle, 0, &btnStruct->btnPic, BMP_PIC_X, BMP_PIC_Y);
   1391          
   1392          	BUTTON_SetFocussable(btnStruct->btnHandle, 0);
   1393          }
   1394          */
   1395          //unsigned char bmp_public_buf[1280] = {0};
   1396          #if 0
   1397          FATFS SDFatFs_logo;  /* File system object for SD card logical drive */
   1398          FIL MyFile_logo;     /* File object */
   1399          static unsigned long lseek_length;
   1400          void DRAW_LOGO()
   1401          {
   1402          	int index; 
   1403          	int x_off = 0, y_off = 0;
   1404          	int _x, _y;
   1405          	uint16_t *p_index;
   1406          	volatile int i;
   1407          
   1408          
   1409          	bool testStatus = false;
   1410          
   1411          	FRESULT res;																					/* FatFs function common result code */
   1412          	uint32_t byteswritten, bytesread; 										/* File write/read counts */
   1413          
   1414          	/*##-1- Link the micro SD disk I/O driver ##################################*/
   1415          	//¡¥Ω” SD µ◊≤„«˝∂Ø∫Ø ˝µΩ FATFS Œƒº˛œµÕ≥£¨’‚∏ˆ‘⁄ MX_FATFS_Init()∫Ø ˝÷–“—æ≠ÕÍ≥…
   1416          	//if(FATFS_LinkDriver(&SD_Driver, SD_Path) == 0)
   1417          	{
   1418          		/*##-2- Register the file system object to the FatFs module ##############*/
   1419          		if(f_mount(&SDFatFs_logo, (TCHAR const*)SD_Path, 0) != FR_OK)
   1420          		{
   1421          			/* FatFs Initialization Error */
   1422          			Error_Handler();
   1423          		}
   1424          		else
   1425          		{
   1426          			/*##-3- Create a FAT file system (format) on the logical drive #########*/
   1427          			/* WARNING: Formatting the uSD card will delete all content on the device */
   1428          			//∂‘ SD ø®Ω¯––∏Ò ΩªØ
   1429          #if 0
   1430          			if(f_mkfs((TCHAR const*)SD_Path, 0, 0) != FR_OK)
   1431          			{
   1432          				/* FatFs Format Error */
   1433          				Error_Handler();
   1434          			}
   1435          			else
   1436          #endif        
   1437          			{ 			
   1438          				/*##-4- Create and Open a new text file object with write access #####*/
   1439          				if(f_open(&MyFile_logo, "1:\STM321.TXT", FA_CREATE_ALWAYS | FA_WRITE) != FR_OK)
   1440          				{
   1441          					/* 'STM32.TXT' file Open for write Error */
   1442          					Error_Handler();
   1443          				}
   1444          				else
   1445          				{
   1446          					/*##-5- Write data to the text file ################################*/
   1447          						for(index = 0; index < 20; index ++)
   1448          						{
   1449          							memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1450          							Pic_Logo_Read((uint8_t *)"bmp_logo.bin", bmp_public_buf, 15360);
   1451          							f_lseek(&MyFile_logo, lseek_length);
   1452          							res = f_write(&MyFile_logo, bmp_public_buf, 15360, (uint32_t *)&byteswritten);
   1453          							lseek_length += byteswritten;
   1454          
   1455          							i = 0;
   1456                                      ili9320_SetCursor(0, y_off * 16);
   1457          							LCD_setWindowArea(0, y_off * 16, 480,16);     //480*16
   1458          							//LCD_setWindowArea(0, y_off * 16+120, 800,48);      //800*240  
   1459          							LCD_WriteRAM_Prepare(); 
   1460          							for(_y = y_off * 16; _y < (y_off + 1) * 16; _y++)
   1461          							{
   1462          								for (x_off = 0; x_off < 480; x_off++) 
   1463          								{
   1464          									p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1465          									LCD_WriteRAM(*p_index);
   1466          									i += 2;
   1467          									
   1468          								}
   1469          								if(i >= 15360)
   1470          									break;
   1471          							}
   1472          							y_off++;								
   1473          						}
   1474          					if((byteswritten == 0) || (res != FR_OK))
   1475          					{
   1476          						/* 'STM32.TXT' file Write or EOF Error */
   1477          						Error_Handler();
   1478          					}
   1479          					else
   1480          					{
   1481          						/*##-6- Close the open text file #################################*/
   1482          						f_close(&MyFile_logo);
   1483          					}
   1484          				}
   1485          			}
   1486          		}
   1487          	}
   1488          
   1489          }
   1490          
   1491          #else
   1492          uint8_t logo_n[13] = "bmp_logo.bin";
   1493          

   \                                 In section .text, align 2, keep-with-next
   1494          void DRAW_LOGO()
   1495          {
   \                     DRAW_LOGO: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   1496          #if 0
   1497          	int index; 
   1498          	int x_off = 0, y_off = 0;
   1499          	int _x, _y;
   1500          	uint16_t *p_index;
   1501          	volatile int i=0,j=0;
   1502          #if 1
   1503          	for(index = 0; index < 10; index ++)//480*320
   1504          	{
   1505          		Pic_Logo_Read(logo_n, bmp_public_buf, 30720);//15k
   1506          		i = 0;
   1507          		//ili9320_SetCursor(0, y_off * 16);
   1508          		LCD_setWindowArea(0, (uint16_t)y_off * 32, 480,32);	  //480*16
   1509          		
   1510          		LCD_WriteRAM_Prepare(); 
   1511          		for(_y = y_off * 32; _y < (y_off + 1) * 32; _y++)
   1512          		{
   1513          			for (x_off = 0; x_off < 480; x_off++) 
   1514          			{
   1515          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1516          				LCD_WriteRAM(*p_index);
   1517          				i += 2;
   1518          				
   1519          			}
   1520          			if(i >= 30720)
   1521          					break;
   1522          		}
   1523          		y_off++;		
   1524          
   1525          		
   1526          	}
   1527          LCD_setWindowArea(0, 0, 480, 320);	
   1528          
   1529          #else
   1530          
   1531          	for(index = 0; index < 320; index ++)//480*320
   1532          	{
   1533          		Pic_Logo_Read(logo_n, bmp_public_buf, 960);//15k
   1534          		i = 0;
   1535                  //ili9320_SetCursor(0, y_off * 16);
   1536          		LCD_setWindowArea(0, (uint16_t)y_off * 1, 480,1);     //480*16
   1537          		//LCD_setWindowArea(0, y_off * 16+120, 800,48);      //800*240  
   1538          		
   1539          		LCD_WriteRAM_Prepare(); 
   1540          		for(_y = y_off * 1; _y < (y_off + 1) * 1; _y++)
   1541          		{
   1542          			for (x_off = 0; x_off < 480; x_off++) 
   1543          			{
   1544          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1545          				LCD_WriteRAM(*p_index);
   1546          				i += 2;
   1547          				
   1548          			}
   1549          			if(i >= 15360)
   1550          					break;
   1551          		}
   1552          		y_off++;		
   1553          
   1554          		
   1555          	}
   1556          	LCD_setWindowArea(0, 0, 480, 320);	
   1557          #endif
   1558          #endif
   1559          #if VERSION_WITH_PIC    
   1560          int index; 
   1561          int x_off = 0, y_off = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   1562          int _x, _y;
                     ^
Warning[Pe177]: variable "_x" was declared but never referenced
   1563          uint16_t *p_index;
   1564          int i;
   1565          #if 0
   1566          for(index = 0; index < 10; index ++)
   1567          {
   1568              Pic_Logo_Read(logo_n, bmp_public_buf, 15360);
   1569            
   1570              i = 0;
   1571              //GUI_DrawBitmap(&bmp_struct, x_off, y_off);
   1572              
   1573              LCD_setWindowArea(0, y_off * 24, 320, 24);
   1574              ili9320_SetCursor(0, y_off * 24);
   1575              LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */ 
   1576              for(_y = y_off * 24; _y < (y_off + 1) * 24; _y++)
   1577              {
   1578                  for (x_off = 0; x_off < 320; x_off++) 
   1579                  {
   1580                      p_index = (uint16_t *)(&bmp_public_buf[i]);                     
   1581                      LCD_WriteRAM(*p_index);
   1582                      i += 2;
   1583                      
   1584                  }
   1585                  if(i >= 15360)
   1586                          break;
   1587              }
   1588              y_off++;        
   1589          
   1590              
   1591          }
   1592          LCD_setWindowArea(0, 0, 319, 239);
   1593          #else
   1594          for(index = 0; index < 40; index ++)
   \   00000006   0x2508             MOVS     R5,#+8
   \   00000008   0x2628             MOVS     R6,#+40
   \   0000000A   0x.... 0x....      LDR.W    R8,??DataTable22_20
   1595          	{
   1596          		Pic_Logo_Read(logo_n, bmp_public_buf, 7680);
   \                     ??DRAW_LOGO_0: (+1)
   \   0000000E   0xF44F 0x52F0      MOV      R2,#+7680
   \   00000012   0x4641             MOV      R1,R8
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable22_21
   \   00000018   0x.... 0x....      BL       Pic_Logo_Read
   1597          
   1598          		
   1599          		i = 0;
   1600          		//GUI_DrawBitmap(&bmp_struct, x_off, y_off);
   1601          		
   1602          		LCD_setWindowArea(0, y_off * 8, 480, 8);
   \   0000001C   0x00E1             LSLS     R1,R4,#+3
   \   0000001E   0x2700             MOVS     R7,#+0
   \   00000020   0x2308             MOVS     R3,#+8
   \   00000022   0xF44F 0x72F0      MOV      R2,#+480
   \   00000026   0xB289             UXTH     R1,R1
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       LCD_setWindowArea
   1603          		//ili9320_SetCursor(0, y_off * 8);
   1604          		LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */ 
   \   0000002E   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   1605          		for(_y = y_off * 8; _y < (y_off + 1) * 8; _y++)
   \   00000032   0xEA4F 0x09C4      LSL      R9,R4,#+3
   \   00000036   0xE001             B.N      ??DRAW_LOGO_1
   \                     ??DRAW_LOGO_2: (+1)
   \   00000038   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??DRAW_LOGO_1: (+1)
   \   0000003C   0x45A9             CMP      R9,R5
   \   0000003E   0xDA0E             BGE.N    ??DRAW_LOGO_3
   1606          		{
   1607          			for (x_off = 0; x_off < 480; x_off++) 
   \   00000040   0xEB07 0x0A08      ADD      R10,R7,R8
   \   00000044   0xF44F 0x7BF0      MOV      R11,#+480
   1608          			{
   1609          				p_index = (uint16_t *)(&bmp_public_buf[i]); 					
   1610          				LCD_WriteRAM(*p_index);
   \                     ??DRAW_LOGO_4: (+1)
   \   00000048   0xF83A 0x0B02      LDRH     R0,[R10], #+2
   \   0000004C   0x.... 0x....      BL       LCD_WriteRAM
   1611          				i += 2;
   \   00000050   0x1CBF             ADDS     R7,R7,#+2
   1612          				
   1613          			}
   \   00000052   0xF1BB 0x0B01      SUBS     R11,R11,#+1
   \   00000056   0xD1F7             BNE.N    ??DRAW_LOGO_4
   1614          			if(i >= 7680)
   \   00000058   0xF5B7 0x5FF0      CMP      R7,#+7680
   \   0000005C   0xDBEC             BLT.N    ??DRAW_LOGO_2
   1615          					break;
   1616          		}
   1617          		y_off++;		
   \                     ??DRAW_LOGO_3: (+1)
   \   0000005E   0x1C64             ADDS     R4,R4,#+1
   1618          
   1619          		
   1620          	}
   \   00000060   0x3508             ADDS     R5,R5,#+8
   \   00000062   0x1E76             SUBS     R6,R6,#+1
   \   00000064   0xD1D3             BNE.N    ??DRAW_LOGO_0
   1621          	LCD_setWindowArea(0, 0, 479, 319);
   \   00000066   0xB001             ADD      SP,SP,#+4
   \   00000068   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   0000006C   0xF240 0x133F      MOVW     R3,#+319
   \   00000070   0xF240 0x12DF      MOVW     R2,#+479
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      B.W      LCD_setWindowArea
   1622          
   1623          #endif
   1624          #endif  
   1625          
   1626          }
   1627          #endif
   1628          
   1629          #if 1

   \                                 In section .text, align 2, keep-with-next
   1630          void Draw_default_preview(int xpos_pixel,int ypos_pixel,uint8_t sel)
   1631          {
   \                     _Z20Draw_default_previewiih: (+1)
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   1632          	int index; 
   1633          	int x_off = 0, y_off = 0;
   \   00000006   0x2400             MOVS     R4,#+0
   1634          	int _x, _y;
                 	    ^
Warning[Pe177]: variable "_x" was declared but never referenced
   1635          	uint16_t *p_index;
   1636          	int i;
   1637          	uint16_t temp_p;
   1638          	
   1639          	for(index = 0; index < 10; index ++)//200*200
   \   00000008   0x2514             MOVS     R5,#+20
   \   0000000A   0x9100             STR      R1,[SP, #+0]
   \   0000000C   0x260A             MOVS     R6,#+10
   \   0000000E   0x.... 0x....      LDR.W    R10,??DataTable22_20
   1640          	{
   1641          		if(sel == 1)
   \                     ??Draw_default_preview_0: (+1)
   \   00000012   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xF44F 0x51FA      MOV      R1,#+8000
   \   0000001C   0x4650             MOV      R0,R10
   \   0000001E   0xD102             BNE.N    ??Draw_default_preview_1
   1642          		{
   1643          			flash_view_Read(bmp_public_buf, 8000);//20k
   \   00000020   0x.... 0x....      BL       flash_view_Read
   \   00000024   0xE001             B.N      ??Draw_default_preview_2
   1644          		}
   1645          		else
   1646          		{
   1647          			default_view_Read(bmp_public_buf, 8000);//20k
   \                     ??Draw_default_preview_1: (+1)
   \   00000026   0x.... 0x....      BL       default_view_Read
   1648          		}
   1649          
   1650          		i = 0;
   1651          		
   1652          		LCD_setWindowArea(xpos_pixel, y_off * 20+ypos_pixel, 200,20);     //200*200
   \                     ??Draw_default_preview_2: (+1)
   \   0000002A   0x9900             LDR      R1,[SP, #+0]
   \   0000002C   0x9803             LDR      R0,[SP, #+12]
   \   0000002E   0xF04F 0x0800      MOV      R8,#+0
   \   00000032   0x2314             MOVS     R3,#+20
   \   00000034   0x22C8             MOVS     R2,#+200
   \   00000036   0xB289             UXTH     R1,R1
   \   00000038   0xB280             UXTH     R0,R0
   \   0000003A   0x.... 0x....      BL       LCD_setWindowArea
   1653          
   1654          		LCD_WriteRAM_Prepare(); 
   \   0000003E   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   1655          		for(_y = y_off * 20; _y < (y_off + 1) * 20; _y++)
   \   00000042   0xEB04 0x0084      ADD      R0,R4,R4, LSL #+2
   \   00000046   0xEA4F 0x0980      LSL      R9,R0,#+2
   \   0000004A   0xE001             B.N      ??Draw_default_preview_3
   \                     ??Draw_default_preview_4: (+1)
   \   0000004C   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??Draw_default_preview_3: (+1)
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xDA1D             BGE.N    ??Draw_default_preview_5
   1656          		{
   1657          			for (x_off = 0; x_off < 200; x_off++) 
   \   00000054   0xEB08 0x070A      ADD      R7,R8,R10
   \   00000058   0xF04F 0x0BC8      MOV      R11,#+200
   1658          			{
   1659          				if(sel==1)
   \                     ??Draw_default_preview_6: (+1)
   \   0000005C   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000060   0x2801             CMP      R0,#+1
   \   00000062   0xD107             BNE.N    ??Draw_default_preview_7
   1660          				{
   1661          					temp_p = (uint16_t)(bmp_public_buf[i]|bmp_public_buf[i+1]<<8);
   \   00000064   0x7838             LDRB     R0,[R7, #+0]
   \   00000066   0x7879             LDRB     R1,[R7, #+1]
   \   00000068   0xEA40 0x2001      ORR      R0,R0,R1, LSL #+8
   \   0000006C   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1662          					p_index = &temp_p;
   \   00000070   0xA801             ADD      R0,SP,#+4
   \   00000072   0xE001             B.N      ??Draw_default_preview_8
   1663          				}
   1664          				else
   1665          				{
   1666          					p_index = (uint16_t *)(&bmp_public_buf[i]); 	
   \                     ??Draw_default_preview_7: (+1)
   \   00000074   0xEB08 0x000A      ADD      R0,R8,R10
   1667          				}
   1668          				LCD_WriteRAM(*p_index);
   \                     ??Draw_default_preview_8: (+1)
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x.... 0x....      BL       LCD_WriteRAM
   1669          				i += 2;
   1670          				
   1671          			}
   \   0000007E   0x1CBF             ADDS     R7,R7,#+2
   \   00000080   0xF108 0x0802      ADD      R8,R8,#+2
   \   00000084   0xF1BB 0x0B01      SUBS     R11,R11,#+1
   \   00000088   0xD1E8             BNE.N    ??Draw_default_preview_6
   1672          			if(i >= 8000)
   \   0000008A   0xF5B8 0x5FFA      CMP      R8,#+8000
   \   0000008E   0xDBDD             BLT.N    ??Draw_default_preview_4
   1673          				break;
   1674          		}
   1675          		y_off++;		
   1676          	}
   \                     ??Draw_default_preview_5: (+1)
   \   00000090   0x9800             LDR      R0,[SP, #+0]
   \   00000092   0x1C64             ADDS     R4,R4,#+1
   \   00000094   0x3014             ADDS     R0,R0,#+20
   \   00000096   0x3514             ADDS     R5,R5,#+20
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0x1E76             SUBS     R6,R6,#+1
   \   0000009C   0xD1B9             BNE.N    ??Draw_default_preview_0
   1677          
   1678          }
   \   0000009E   0xB005             ADD      SP,SP,#+20
   \   000000A0   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1679          

   \                                 In section .text, align 2, keep-with-next
   1680          int ascii2dec_test1(char *ascii)
   1681          {
   1682          	int result = 0;
   1683          
   1684          	if(ascii == 0)
   \                     _Z15ascii2dec_test1Pc: (+1)
   \   00000000   0xB198             CBZ.N    R0,??ascii2dec_test1_0
   1685          		return 0;
   1686          
   1687          	if(*(ascii) >= '0' && *(ascii) <= '9')
   \   00000002   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000006   0xF1A0 0x0230      SUB      R2,R0,#+48
   \   0000000A   0x2A0A             CMP      R2,#+10
   \   0000000C   0xD201             BCS.N    ??ascii2dec_test1_1
   1688          		result = *(ascii) - '0';
   \   0000000E   0x3830             SUBS     R0,R0,#+48
   1689          	else if(*(ascii) >= 'a' && *(ascii) <= 'f')
   1690          		result = *(ascii) - 'a' + 0x0a;
   1691          	else if(*(ascii) >= 'A' && *(ascii) <= 'F')
   1692          		result = *(ascii) - 'A' + 0x0a;
   1693          	else
   1694          		return 0;
   1695          		
   1696          
   1697          	return result;
   \   00000010   0x4770             BX       LR               ;; return
   \                     ??ascii2dec_test1_1: (+1)
   \   00000012   0xF1A0 0x0261      SUB      R2,R0,#+97
   \   00000016   0x2A06             CMP      R2,#+6
   \   00000018   0xD201             BCS.N    ??ascii2dec_test1_2
   \   0000001A   0x3857             SUBS     R0,R0,#+87
   \   0000001C   0x4770             BX       LR
   \                     ??ascii2dec_test1_2: (+1)
   \   0000001E   0xF1A0 0x0141      SUB      R1,R0,#+65
   \   00000022   0x2906             CMP      R1,#+6
   \   00000024   0xD201             BCS.N    ??ascii2dec_test1_0
   \   00000026   0x3837             SUBS     R0,R0,#+55
   \   00000028   0x4770             BX       LR
   \                     ??ascii2dec_test1_0: (+1)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x4770             BX       LR
   1698          }
   1699          

   \                                 In section .bss, align 1
   1700          uint8_t preview_pic=0;
   \                     preview_pic:
   \   00000000                      DS8 1
   1701          
   1702          

   \                                 In section .bss, align 4
   1703          FIL curFile_1;
   \                     curFile_1:
   \   00000000                      DS8 556

   \                                 In section .data, align 4
   \                     temperature_change_frequency:
   \   00000000   0x01               DC8 1
   \                     from_flash_pic:
   \   00000001   0x00               DC8 0
   \                     last_disp_state:
   \   00000002   0x00               DC8 0
   \   00000003   0x00               DC8 0
   1704          
   1705          uint8_t buff_pic[512];
   1706          uint32_t row;
   1707          uint32_t size = 809;
   1708          uint8_t gcode_preview_over;
   \                     gcode_preview_over:
   \   00000004   0x00               DC8 0
   1709          uint8_t flash_preview_begin;
   \                     flash_preview_begin:
   \   00000005   0x00               DC8 0
   1710          uint8_t default_preview_flg;
   \                     default_preview_flg:
   \   00000006   0x00               DC8 0
   \                     disp_state:
   \   00000007   0x00               DC8 0
   \                     To_pre_view:
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     row:
   \   0000000C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \                     size:
   \   00000010   0x00000329         DC32 809
   \                     TEST_FIL1:
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000154   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000184   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000194   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000204   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000214   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000224   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000234   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     buff_pic:
   \   00000240   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000250   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000260   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000270   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000280   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000290   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000300   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000310   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000320   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000330   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000340   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000350   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000360   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000370   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000380   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000390   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000400   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000410   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000420   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000430   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
   \                     logo_n:
   \   00000000   0x62 0x6D          DC8 "bmp_logo.bin"
   \              0x70 0x5F    
   \              0x6C 0x6F    
   \              0x67 0x6F    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1711          //uint8_t from_flash_pic;
   1712          extern int once_flag;
   1713          extern "C" void SPI_FLASH_BufferWrite(u8* pBuffer, u32 WriteAddr, u16 NumByteToWrite);
   1714          extern "C" void SPI_FLASH_SectorErase(u32 SectorAddr);
   1715          

   \                                 In section .text, align 2, keep-with-next
   1716          void gcode_preview(FIL *file,int xpos_pixel,int ypos_pixel)
   1717          {
   \                     _Z13gcode_previewP3FILii: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x460F             MOV      R7,R1
   \   00000006   0x4615             MOV      R5,R2
   1718          #if defined(TFT35)
   1719          	uint8_t ress;
                 	        ^
Warning[Pe177]: variable "ress" was declared but never referenced
   1720          	UINT read,write;
                 	          ^
Warning[Pe177]: variable "write" was declared but never referenced
   1721          	volatile uint32_t i,j;
   1722          	volatile uint16_t *p_index;
   1723          	int res;
   1724          	
   1725          	//memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1726          	res = f_open(file, curFileName, FA_OPEN_EXISTING | FA_READ);//	
   1727          	if(res == FR_OK)
   \   00000008   0x.... 0x....      LDR.W    R8,??DataTable22_22
   \   0000000C   0xB084             SUB      SP,SP,#+16
   \   0000000E   0x4604             MOV      R4,R0
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x4641             MOV      R1,R8
   \   00000014   0x.... 0x....      BL       f_open
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xF040 0x80C0      BNE.W    ??gcode_preview_0
   1728          	{
   1729          		f_lseek(file, (PREVIEW_LITTLE_PIC_SIZE+To_pre_view)+size*row+8);
   \   0000001E   0x....             LDR.N    R6,??DataTable22_1
   \   00000020   0x68B0             LDR      R0,[R6, #+8]
   \   00000022   0x6931             LDR      R1,[R6, #+16]
   \   00000024   0x68F2             LDR      R2,[R6, #+12]
   \   00000026   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000002A   0xF500 0x411F      ADD      R1,R0,#+40704
   \   0000002E   0x31D6             ADDS     R1,R1,#+214
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       f_lseek
   1730          		//ress = f_read(file, buff_pic, size, &read);
   1731          		//if(ress == FR_OK)
   1732          		{
   1733          	      	LCD_setWindowArea(xpos_pixel, ypos_pixel+row, 200,1);
   \   00000036   0x68F0             LDR      R0,[R6, #+12]
   \   00000038   0x1941             ADDS     R1,R0,R5
   \   0000003A   0x2301             MOVS     R3,#+1
   \   0000003C   0x22C8             MOVS     R2,#+200
   \   0000003E   0xB289             UXTH     R1,R1
   \   00000040   0xB2B8             UXTH     R0,R7
   \   00000042   0x.... 0x....      BL       LCD_setWindowArea
   1734          			LCD_WriteRAM_Prepare(); 
   \   00000046   0x.... 0x....      BL       LCD_WriteRAM_Prepare
   1735          			j=0;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x9001             STR      R0,[SP, #+4]
   1736          			i=0;
   \   0000004E   0x9000             STR      R0,[SP, #+0]
   \   00000050   0x....             LDR.N    R7,??DataTable22_20
   1737          			
   1738          			while(1)
   1739          			{
   1740          				f_read(file, buff_pic, 400, &read);
   \                     ??gcode_preview_1: (+1)
   \   00000052   0xAB02             ADD      R3,SP,#+8
   \   00000054   0xF44F 0x72C8      MOV      R2,#+400
   \   00000058   0xF506 0x7110      ADD      R1,R6,#+576
   \   0000005C   0x4620             MOV      R0,R4
   \   0000005E   0x.... 0x....      BL       f_read
   1741          				for(i=0;i<400;)
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x9000             STR      R0,[SP, #+0]
   \   00000066   0xE008             B.N      ??gcode_preview_2
   1742          				{
   1743          					bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[i])<<4|ascii2dec_test1((char*)&buff_pic[i+1]);
   \                     ??gcode_preview_3: (+1)
   \   00000068   0xEA42 0x1101      ORR      R1,R2,R1, LSL #+4
   \   0000006C   0x55C1             STRB     R1,[R0, R7]
   1744          					//bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[8+i])<<4|ascii2dec_test1((char*)&buff_pic[8+i+1]);
   1745          					i+=2;
   \   0000006E   0x9800             LDR      R0,[SP, #+0]
   \   00000070   0x1C80             ADDS     R0,R0,#+2
   \   00000072   0x9000             STR      R0,[SP, #+0]
   1746          					j++;
   \   00000074   0x9801             LDR      R0,[SP, #+4]
   \   00000076   0x1C40             ADDS     R0,R0,#+1
   \   00000078   0x9001             STR      R0,[SP, #+4]
   \                     ??gcode_preview_2: (+1)
   \   0000007A   0x9800             LDR      R0,[SP, #+0]
   \   0000007C   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000080   0x9801             LDR      R0,[SP, #+4]
   \   00000082   0xD230             BCS.N    ??gcode_preview_4
   \   00000084   0x9900             LDR      R1,[SP, #+0]
   \   00000086   0x1989             ADDS     R1,R1,R6
   \   00000088   0xF501 0x7110      ADD      R1,R1,#+576
   \   0000008C   0xF991 0x1000      LDRSB    R1,[R1, #+0]
   \   00000090   0xF1A1 0x0330      SUB      R3,R1,#+48
   \   00000094   0x2B0A             CMP      R3,#+10
   \   00000096   0xBF38             IT       CC 
   \   00000098   0x3930             SUBCC    R1,R1,#+48
   \   0000009A   0xD30B             BCC.N    ??gcode_preview_5
   \   0000009C   0xF1A1 0x0361      SUB      R3,R1,#+97
   \   000000A0   0x2B06             CMP      R3,#+6
   \   000000A2   0xBF38             IT       CC 
   \   000000A4   0x3957             SUBCC    R1,R1,#+87
   \   000000A6   0xD305             BCC.N    ??gcode_preview_5
   \   000000A8   0xF1A1 0x0241      SUB      R2,R1,#+65
   \   000000AC   0x2A06             CMP      R2,#+6
   \   000000AE   0xBF34             ITE      CC 
   \   000000B0   0x3937             SUBCC    R1,R1,#+55
   \   000000B2   0x2100             MOVCS    R1,#+0
   \                     ??gcode_preview_5: (+1)
   \   000000B4   0x9A00             LDR      R2,[SP, #+0]
   \   000000B6   0x1992             ADDS     R2,R2,R6
   \   000000B8   0xF202 0x2241      ADDW     R2,R2,#+577
   \   000000BC   0xF992 0x2000      LDRSB    R2,[R2, #+0]
   \   000000C0   0xF1A2 0x0330      SUB      R3,R2,#+48
   \   000000C4   0x2B0A             CMP      R3,#+10
   \   000000C6   0xBF38             IT       CC 
   \   000000C8   0x3A30             SUBCC    R2,R2,#+48
   \   000000CA   0xD3CD             BCC.N    ??gcode_preview_3
   \   000000CC   0xF1A2 0x0361      SUB      R3,R2,#+97
   \   000000D0   0x2B06             CMP      R3,#+6
   \   000000D2   0xBF38             IT       CC 
   \   000000D4   0x3A57             SUBCC    R2,R2,#+87
   \   000000D6   0xD3C7             BCC.N    ??gcode_preview_3
   \   000000D8   0xF1A2 0x0341      SUB      R3,R2,#+65
   \   000000DC   0x2B06             CMP      R3,#+6
   \   000000DE   0xBF34             ITE      CC 
   \   000000E0   0x3A37             SUBCC    R2,R2,#+55
   \   000000E2   0x2200             MOVCS    R2,#+0
   \   000000E4   0xE7C0             B.N      ??gcode_preview_3
   1747          				}
   1748          				
   1749          				//if(i>800)break;
   1750          				//#if defined(TFT70)
   1751          				//if(j>400)
   1752          				//{
   1753          				//	f_read(file, buff_pic, 1, &read);
   1754          				//	break;
   1755          				//}				
   1756          				//#elif defined(TFT35)
   1757          				if(j>=400)
   \                     ??gcode_preview_4: (+1)
   \   000000E6   0xF5B0 0x7FC8      CMP      R0,#+400
   \   000000EA   0xD3B2             BCC.N    ??gcode_preview_1
   1758          				{
   1759          					//f_read(file, buff_pic, 1, &read);
   1760          					break;
   1761          				}				
   1762          				//#endif
   1763          
   1764          			}
   1765          			for(i=0;i<400;)
   \   000000EC   0x....             LDR.N    R5,??DataTable22
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x9000             STR      R0,[SP, #+0]
   \   000000F2   0xE00C             B.N      ??gcode_preview_6
   1766          			{
   1767          				p_index = (uint16_t *)(&bmp_public_buf[i]); 
   \                     ??gcode_preview_7: (+1)
   \   000000F4   0x9800             LDR      R0,[SP, #+0]
   \   000000F6   0x19C0             ADDS     R0,R0,R7
   1768          				if(*p_index == 0x0000)*p_index=gCfgItems.preview_bk_color;
   \   000000F8   0x8801             LDRH     R1,[R0, #+0]
   \   000000FA   0xB911             CBNZ.N   R1,??gcode_preview_8
   \   000000FC   0xF8B5 0x12C0      LDRH     R1,[R5, #+704]
   \   00000100   0x8001             STRH     R1,[R0, #+0]
   1769          		    	LCD_WriteRAM(*p_index);
   \                     ??gcode_preview_8: (+1)
   \   00000102   0x8800             LDRH     R0,[R0, #+0]
   \   00000104   0x.... 0x....      BL       LCD_WriteRAM
   1770          				i=i+2;
   \   00000108   0x9800             LDR      R0,[SP, #+0]
   \   0000010A   0x1C80             ADDS     R0,R0,#+2
   \   0000010C   0x9000             STR      R0,[SP, #+0]
   1771          			}
   \                     ??gcode_preview_6: (+1)
   \   0000010E   0x9800             LDR      R0,[SP, #+0]
   \   00000110   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000114   0xD3EE             BCC.N    ??gcode_preview_7
   1772          			if(row<20)
   \   00000116   0x68F0             LDR      R0,[R6, #+12]
   \   00000118   0x2814             CMP      R0,#+20
   \   0000011A   0xD204             BCS.N    ??gcode_preview_9
   1773          			{
   1774          				SPI_FLASH_SectorErase(BAK_VIEW_ADDR+row*4096);
   \   0000011C   0x0300             LSLS     R0,R0,#+12
   \   0000011E   0xF500 0x205C      ADD      R0,R0,#+901120
   \   00000122   0x.... 0x....      BL       SPI_FLASH_SectorErase
   1775          			}
   1776          			SPI_FLASH_BufferWrite(bmp_public_buf, BAK_VIEW_ADDR+row*400, 400);
   \                     ??gcode_preview_9: (+1)
   \   00000126   0x68F0             LDR      R0,[R6, #+12]
   \   00000128   0xF44F 0x72C8      MOV      R2,#+400
   \   0000012C   0x4350             MULS     R0,R0,R2
   \   0000012E   0xF500 0x215C      ADD      R1,R0,#+901120
   \   00000132   0x4638             MOV      R0,R7
   \   00000134   0x.... 0x....      BL       SPI_FLASH_BufferWrite
   1777          			row++;
   \   00000138   0x68F0             LDR      R0,[R6, #+12]
   \   0000013A   0x1C40             ADDS     R0,R0,#+1
   \   0000013C   0x60F0             STR      R0,[R6, #+12]
   1778          			if(row >= 200)
   \   0000013E   0x28C8             CMP      R0,#+200
   \   00000140   0xD32A             BCC.N    ??gcode_preview_10
   1779          			{
   1780          				size = 809;
   \   00000142   0xF240 0x3029      MOVW     R0,#+809
   \   00000146   0x6130             STR      R0,[R6, #+16]
   1781          				row = 0;
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x60F0             STR      R0,[R6, #+12]
   1782          				
   1783          				gcode_preview_over = 0;
   \   0000014C   0x7130             STRB     R0,[R6, #+4]
   1784          				//flash_preview_begin = 1;
   1785          
   1786          				f_close(file);
   \   0000014E   0x4620             MOV      R0,R4
   \   00000150   0x.... 0x....      BL       f_close
   1787          
   1788          				/*if(gCurFileState.file_open_flag != 0xaa)
   1789          				{
   1790          					
   1791          				
   1792          					reset_file_info();
   1793          					
   1794          					res = f_open(file, curFileName, FA_OPEN_EXISTING | FA_READ);
   1795          
   1796          					if(res == FR_OK)
   1797          					{
   1798          						f_lseek(file,PREVIEW_SIZE+To_pre_view);
   1799          						gCurFileState.file_open_flag = 0xaa;
   1800          
   1801          						//bakup_file_path((uint8_t *)curFileName, strlen(curFileName));
   1802          
   1803          						srcfp = file;
   1804          
   1805          						mksReprint.mks_printer_state = MKS_WORKING;
   1806          
   1807          						once_flag = 0;
   1808          					}
   1809          					
   1810          				}	*/	
   1811          				if(card.openFile(curFileName, true))
   \   00000154   0x....             LDR.N    R6,??DataTable22_23
   \   00000156   0x2301             MOVS     R3,#+1
   \   00000158   0x2201             MOVS     R2,#+1
   \   0000015A   0x4641             MOV      R1,R8
   \   0000015C   0x4630             MOV      R0,R6
   \   0000015E   0x.... 0x....      BL       _ZN10CardReader8openFileEPcbb
   \   00000162   0xB1C8             CBZ.N    R0,??gcode_preview_10
   1812          				{
   1813          				    feedrate_percentage = 100;
   \   00000164   0x....             LDR.N    R1,??DataTable22_24
   1814          	                            saved_feedrate_percentage = feedrate_percentage;
   1815          	                            planner.flow_percentage[0] = 100;
   1816          	                            planner.e_factor[0]= planner.flow_percentage[0]*0.01;
   1817          	                            if(mksCfg.extruders==2)
   \   00000166   0x....             LDR.N    R3,??DataTable22_25
   \   00000168   0xF893 0x30F7      LDRB     R3,[R3, #+247]
   \   0000016C   0x2064             MOVS     R0,#+100
   \   0000016E   0x8008             STRH     R0,[R1, #+0]
   \   00000170   0xF04F 0x527E      MOV      R2,#+1065353216
   \   00000174   0x....             LDR.N    R1,??DataTable22_26
   \   00000176   0x8008             STRH     R0,[R1, #+0]
   \   00000178   0x2164             MOVS     R1,#+100
   \   0000017A   0x....             LDR.N    R0,??DataTable22_27
   \   0000017C   0x8001             STRH     R1,[R0, #+0]
   \   0000017E   0x2B02             CMP      R3,#+2
   \   00000180   0x....             LDR.N    R1,??DataTable22_28
   \   00000182   0x600A             STR      R2,[R1, #+0]
   \   00000184   0xD102             BNE.N    ??gcode_preview_11
   1818          	                            {
   1819          	                                planner.flow_percentage[1] = 100;
   \   00000186   0x2364             MOVS     R3,#+100
   \   00000188   0x8043             STRH     R3,[R0, #+2]
   1820          	                                planner.e_factor[1]= planner.flow_percentage[1]*0.01;  
   \   0000018A   0x604A             STR      R2,[R1, #+4]
   1821          	                            }                            
   1822          					card.startFileprint();
   \                     ??gcode_preview_11: (+1)
   \   0000018C   0x4630             MOV      R0,R6
   \   0000018E   0x.... 0x....      BL       _ZN10CardReader14startFileprintEv
   1823          					once_flag = 0;
   \   00000192   0x2000             MOVS     R0,#+0
   \   00000194   0x....             LDR.N    R1,??DataTable22_29
   \   00000196   0x6008             STR      R0,[R1, #+0]
   1824          				}
   1825          			}
   1826          		}
   1827          		f_close(file);
   \                     ??gcode_preview_10: (+1)
   \   00000198   0x4620             MOV      R0,R4
   \   0000019A   0x.... 0x....      BL       f_close
   1828          	}
   1829          #endif
   1830          }
   \                     ??gcode_preview_0: (+1)
   \   0000019E   0xB004             ADD      SP,SP,#+16
   \   000001A0   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1831          

   \                                 In section .text, align 2, keep-with-next
   1832          void disp_pre_gcode(int xpos_pixel,int ypos_pixel)
   1833          {
   \                     disp_pre_gcode: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1834          	if(gcode_preview_over==1)
   \   00000002   0x....             LDR.N    R6,??DataTable22_1
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x7930             LDRB     R0,[R6, #+4]
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD105             BNE.N    ??disp_pre_gcode_0
   1835          	{
   1836          		gcode_preview(&TEST_FIL1,xpos_pixel,ypos_pixel);
   \   0000000E   0x462A             MOV      R2,R5
   \   00000010   0x4621             MOV      R1,R4
   \   00000012   0xF106 0x0014      ADD      R0,R6,#+20
   \   00000016   0x.... 0x....      BL       _Z13gcode_previewP3FILii
   1837          	}
   1838          	if(flash_preview_begin == 1)
   \                     ??disp_pre_gcode_0: (+1)
   \   0000001A   0x7970             LDRB     R0,[R6, #+5]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD106             BNE.N    ??disp_pre_gcode_1
   1839          	{
   1840          		flash_preview_begin = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x7170             STRB     R0,[R6, #+5]
   1841          		Draw_default_preview(xpos_pixel,ypos_pixel,1);	
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x4629             MOV      R1,R5
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       _Z20Draw_default_previewiih
   1842          	}
   1843          	if(default_preview_flg == 1)
   \                     ??disp_pre_gcode_1: (+1)
   \   0000002E   0x79B0             LDRB     R0,[R6, #+6]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD106             BNE.N    ??disp_pre_gcode_2
   1844          	{
   1845          		Draw_default_preview(xpos_pixel,ypos_pixel,0);
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x4629             MOV      R1,R5
   \   00000038   0x4620             MOV      R0,R4
   \   0000003A   0x.... 0x....      BL       _Z20Draw_default_previewiih
   1846          		default_preview_flg = 0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x71B0             STRB     R0,[R6, #+6]
   1847          	}
   1848          
   1849          }
   \                     ??disp_pre_gcode_2: (+1)
   \   00000042   0xBD70             POP      {R4-R6,PC}       ;; return
   1850          

   \                                 In section .text, align 2, keep-with-next
   1851          void preview_gcode_prehandle(char *path)
   1852          {
   \                     preview_gcode_prehandle: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1853          	uint8_t re;
   1854          	UINT read;
   1855          	uint32_t pre_read_cnt = 0;
   1856          	uint32_t *p1,*p2;
                 	          ^
Warning[Pe177]: variable "p1" was declared but never referenced
   1857          	
   1858          	re = f_open(&TEST_FIL1, path, FA_OPEN_EXISTING | FA_READ);//	
   1859          	#if 0
   1860          	if(re == FR_OK)
   1861          	{
   1862          		f_lseek(&TEST_FIL1,PREVIEW_LITTLE_PIC_SIZE);//
   1863          		f_read(&TEST_FIL1,&bmp_public_buf,8,&read);
   1864          		if((bmp_public_buf[0] ==';')&&(bmp_public_buf[1] =='g')
   1865          			&&(bmp_public_buf[2] =='i')&&(bmp_public_buf[3] =='m')
   1866          			&&(bmp_public_buf[4] =='a')&&(bmp_public_buf[5] =='g')
   1867          			&&(bmp_public_buf[6] =='e')&&(bmp_public_buf[7] ==':'))	
   1868          		{
   1869          			gcode_preview_over = 1;
   1870          			from_flash_pic = 1;
   1871          			HAL::AT24CXX_Write(BAK_PREVIEW_FROM_FLASH_ADDR, &from_flash_pic,1);
   1872          		}
   1873          		else
   1874          		{
   1875          			gcode_preview_over = 0;
   1876          			default_preview_flg = 1;
   1877          			from_flash_pic = 0; 
   1878          			HAL::AT24CXX_Write(BAK_PREVIEW_FROM_FLASH_ADDR, &from_flash_pic,1);
   1879          		}
   1880          	}
   1881          	#else
   1882          	if(re==FR_OK)
   \   00000002   0x....             LDR.N    R4,??DataTable22_1
   \   00000004   0x4601             MOV      R1,R0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xF104 0x0014      ADD      R0,R4,#+20
   \   0000000C   0x.... 0x....      BL       f_open
   \   00000010   0xBB00             CBNZ.N   R0,??preview_gcode_prehandle_0
   1883          	{
   1884          		//p1 = (int32_t *)&bmp_public_buf[0];
   1885          		
   1886          		f_read(&TEST_FIL1,&bmp_public_buf[0],1024,&read);
   \   00000012   0x....             LDR.N    R5,??DataTable22_20
   \   00000014   0xAB00             ADD      R3,SP,#+0
   \   00000016   0xF44F 0x6280      MOV      R2,#+1024
   \   0000001A   0x4629             MOV      R1,R5
   \   0000001C   0xF104 0x0014      ADD      R0,R4,#+20
   \   00000020   0x.... 0x....      BL       f_read
   1887          		
   1888          		p2 = (uint32_t *)strstr((const char *)&bmp_public_buf[0],(const char *)";simage:");
   \   00000024   0x.... 0x....      ADR.W    R1,`?<Constant ";simage:">`
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       __iar_Strstr
   1889          		if(p2)
   \   0000002E   0xB130             CBZ.N    R0,??preview_gcode_prehandle_1
   1890          		{
   1891          			pre_read_cnt = (uint32_t)p2-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1892          			//pre_sread_cnt = (uint32_t)ps4-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1893          
   1894          			To_pre_view = pre_read_cnt;
   \   00000030   0x1B40             SUBS     R0,R0,R5
   \   00000032   0x60A0             STR      R0,[R4, #+8]
   1895          			//f_lseek(&TEST_FIL1,PREVIEW_LITTLE_PIC_SIZE+pre_read_cnt);
   1896          			gcode_preview_over = 1;
   1897          			from_flash_pic = 1;
   1898          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);			
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x7120             STRB     R0,[R4, #+4]
   \   0000003A   0x7060             STRB     R0,[R4, #+1]
   \   0000003C   0xE005             B.N      ??preview_gcode_prehandle_2
   1899          		}
   1900          		else
   1901          		{
   1902          			gcode_preview_over = 0;
   \                     ??preview_gcode_prehandle_1: (+1)
   \   0000003E   0x7120             STRB     R0,[R4, #+4]
   1903          			default_preview_flg = 1;
   1904          			from_flash_pic = 0; 
   1905          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);		
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x71A0             STRB     R0,[R4, #+6]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x7060             STRB     R0,[R4, #+1]
   \                     ??preview_gcode_prehandle_2: (+1)
   \   0000004A   0x1C61             ADDS     R1,R4,#+1
   \   0000004C   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000050   0x.... 0x....      BL       epr_write_data
   1906          		}
   1907          	}
   1908          	#endif
   1909          }
   \                     ??preview_gcode_prehandle_0: (+1)
   \   00000054   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1910          #endif
   1911          

   \                                 In section .text, align 2, keep-with-next
   1912          void gcode_has_preview(char *path)
   1913          {
   \                     gcode_has_preview: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1914          #if 1
   1915          	uint8_t re;
   1916          	UINT read;
   1917          	uint32_t pre_read_cnt = 0;
   1918          	uint32_t *p1,*p2;
                 	          ^
Warning[Pe177]: variable "p1" was declared but never referenced

  static float zpos_bak = -1;
               ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp",69  Warning[Pe177]: 
          variable "zpos_bak" was declared but never referenced

  static   GUI_HWIN hMainWnd;
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp",117  Warning[Pe177]: 
          variable "hMainWnd" was declared but never referenced

  					bmp_public_buf[j]= ascii2dec_test1((char*)&buff_pic[i])<<4|ascii2dec_test1((char*)&buff_pic[i+1]);
  					^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.cpp",1743  Warning[Pa082]: 
          undefined behavior: the order of volatile accesses is undefined in
          this statement
   1919          	
   1920          	re = f_open(&TEST_FIL1, path, FA_OPEN_EXISTING | FA_READ);//	
   1921          	#if 1
   1922          	if(re==FR_OK)
   \   00000002   0x....             LDR.N    R4,??DataTable22_1
   \   00000004   0x4601             MOV      R1,R0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xF104 0x0014      ADD      R0,R4,#+20
   \   0000000C   0x.... 0x....      BL       f_open
   \   00000010   0xB9D8             CBNZ.N   R0,??gcode_has_preview_0
   1923          	{
   1924          		f_read(&TEST_FIL1,&bmp_public_buf[0],1024,&read);
   \   00000012   0x....             LDR.N    R5,??DataTable22_20
   \   00000014   0xAB00             ADD      R3,SP,#+0
   \   00000016   0xF44F 0x6280      MOV      R2,#+1024
   \   0000001A   0x4629             MOV      R1,R5
   \   0000001C   0xF104 0x0014      ADD      R0,R4,#+20
   \   00000020   0x.... 0x....      BL       f_read
   1925          		
   1926          		p2 = (uint32_t *)strstr((const char *)&bmp_public_buf[0],(const char *)";simage:");
   \   00000024   0x.... 0x....      ADR.W    R1,`?<Constant ";simage:">`
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       __iar_Strstr
   1927          		if(p2)
   \   0000002E   0xB128             CBZ.N    R0,??gcode_has_preview_1
   1928          		{
   1929          			pre_read_cnt = (uint32_t)p2-(uint32_t)((uint32_t *)(&bmp_public_buf[0]));
   1930          			To_pre_view = pre_read_cnt;
   \   00000030   0x1B40             SUBS     R0,R0,R5
   \   00000032   0x60A0             STR      R0,[R4, #+8]
   1931                      
   1932          			from_flash_pic = 1;
   1933          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);			
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x7060             STRB     R0,[R4, #+1]
   \   0000003A   0xE001             B.N      ??gcode_has_preview_2
   1934          		}
   1935          		else
   1936          		{
   1937          			from_flash_pic = 0; 
   \                     ??gcode_has_preview_1: (+1)
   \   0000003C   0x7060             STRB     R0,[R4, #+1]
   1938          			epr_write_data(EPR_PREVIEW_FROM_FLASH, &from_flash_pic,1);		
   \   0000003E   0x2201             MOVS     R2,#+1
   \                     ??gcode_has_preview_2: (+1)
   \   00000040   0x1C61             ADDS     R1,R4,#+1
   \   00000042   0xF44F 0x60E0      MOV      R0,#+1792
   \   00000046   0x.... 0x....      BL       epr_write_data
   1939          		}
   1940          	}
   1941          	#endif
   1942              f_close(&TEST_FIL1);
   \                     ??gcode_has_preview_0: (+1)
   \   0000004A   0xF104 0x0014      ADD      R0,R4,#+20
   \   0000004E   0x.... 0x....      BL       f_close
   1943          #endif
   1944          }
   \   00000052   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x3E 0x00          DC8      ">",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x3A 0x00          DC8      ":",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     gCbEventStack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x........         DC32     main_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     file_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x........         DC32     printing_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x........         DC32     move_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x........         DC32     operation_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     pause_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x........         DC32     extrude_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   0x........         DC32     speed_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   0x........         DC32     fan_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   0x........         DC32     preheat_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_12:
   \   00000000   0x........         DC32     set_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_13:
   \   00000000   0x........         DC32     home_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_14:
   \   00000000   0x........         DC32     language_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_15:
   \   00000000   0x........         DC32     about_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_16:
   \   00000000   0x........         DC32     filesys_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_17:
   \   00000000   0x........         DC32     wifi_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_18:
   \   00000000   0x........         DC32     more_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_19:
   \   00000000   0x........         DC32     filament_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_20:
   \   00000000   0x........         DC32     leveling_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_21:
   \   00000000   0x........         DC32     cloud_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_22:
   \   00000000   0x........         DC32     zoffset_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_23:
   \   00000000   0x........         DC32     tool_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_24:
   \   00000000   0x........         DC32     list_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_25:
   \   00000000   0x........         DC32     MachinePara_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_26:
   \   00000000   0x........         DC32     curFileName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     temperature_change_frequency

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     DialogType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     WIDGET_Effect_Simple

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \   00000000   0x........         DC32     DeviceCode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_7:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_8:
   \   00000000   0x........         DC32     gCurFileState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_9:
   \   00000000   0x........         DC32     printing_rate_update_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_10:
   \   00000000   0x........         DC32     TimeIncrease

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_11:
   \   00000000   0x........         DC32     z_high_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_12:
   \   00000000   0x........         DC32     temper_error_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_13:
   \   00000000   0x........         DC32     gCfgItems+0x1B8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_14:
   \   00000000   0x........         DC32     current_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_15:
   \   00000000   0x........         DC32     wifi_refresh_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_16:
   \   00000000   0x........         DC32     tips_type

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_17:
   \   00000000   0x........         DC32     wifi_link_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_18:
   \   00000000   0x........         DC32     wifi_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_19:
   \   00000000   0x........         DC32     tips_disp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_20:
   \   00000000   0x........         DC32     bmp_public_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_21:
   \   00000000   0x........         DC32     logo_n

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_22:
   \   00000000   0x........         DC32     curFileName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_23:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_24:
   \   00000000   0x........         DC32     feedrate_percentage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_25:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_26:
   \   00000000   0x........         DC32     saved_feedrate_percentage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_27:
   \   00000000   0x........         DC32     _ZN7Planner15flow_percentageE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_28:
   \   00000000   0x........         DC32     _ZN7Planner8e_factorE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_29:
   \   00000000   0x........         DC32     once_flag

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ">...>">`:
   \   00000000   0x3E 0x2E          DC8 ">...>"
   \              0x2E 0x2E    
   \              0x3E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Z: %.3f">`:
   \   00000000   0x5A 0x3A          DC8 "Z: %.3f"
   \              0x20 0x25    
   \              0x2E 0x33    
   \              0x66 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ";simage:">`:
   \   00000000   0x3B 0x73          DC8 ";simage:"
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ">">`:
   \   00000000   0x3E 0x00          DC8 ">"

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ":">`:
   \   00000000   0x3A 0x00          DC8 ":"
   1945          
   1946          #if 0
   1947          
   1948          /*****************************************************/
   1949          //path:Œƒº˛¬∑æ∂
   1950          //xsize,ysize:œ‘ æ‘§¿¿Õº∆¨¥Û–°;
   1951          //sel:
   1952          //		0:Œƒº˛ƒø¬º‘§¿¿£ª
   1953          //		1:¥Ú”°Œƒº˛‘§¿¿
   1954          //
   1955          uint8_t drawicon_preview(char *path,int xsize_small,int ysize_small,int xsize_big,int ysize_big,char sel)
   1956          {
   1957          
   1958          	uint16_t *p_index;
   1959          	int i=0;
   1960          	char re;
   1961          	UINT read;
   1962          	char temp_test[8];
   1963          	int row_1=0;
   1964              
   1965          	re = f_open(&TEST_FIL,path, FA_OPEN_EXISTING | FA_READ);//huaping.gcode
   1966          	if(re == FR_OK)
   1967          	{
   1968                  memset(bmp_public_buf,0,sizeof(bmp_public_buf));
   1969          		if(sel == 1)//big pic
   1970          		{
   1971          			f_lseek(&TEST_FIL,xsize_small*ysize_small+8*(ysize_small+1));
   1972          		}
   1973          		f_read(&TEST_FIL,&bmp_public_buf,8,&read);
   1974          		if((bmp_public_buf[0] ==';')&&(bmp_public_buf[1] =='s')
   1975          			&&(bmp_public_buf[2] =='i')&&(bmp_public_buf[3] =='m')
   1976          			&&(bmp_public_buf[4] =='a')&&(bmp_public_buf[5] =='g')
   1977          			&&(bmp_public_buf[6] =='e')&&(bmp_public_buf[7] ==':'))
   1978          		{
   1979          			while(1)
   1980          			{
   1981          				f_read(&TEST_FIL,&temp_test,2,&read);
   1982          				if(sel == 1)//big pic
   1983          				{
   1984          						bmp_public_buf[row_1*(xsize_big*4)+i/2] = (char)(ascii2dec_test(&temp_test[0])<<4|ascii2dec_test(&temp_test[1]));				
   1985          				}
   1986          				else
   1987          	            {
   1988          	              		bmp_public_buf[row_1*(xsize_small*2)+i/2] = (char)(ascii2dec_test(&temp_test[0])<<4|ascii2dec_test(&temp_test[1]));
   1989          	            }
   1990          				i=i+2;
   1991          				if(sel == 1)//big pic
   1992          				{
   1993          					if(i>=(xsize_big*4))
   1994          					{
   1995          		                i=0;
   1996          		                row_1++;
   1997          		                f_read(&TEST_FIL,&temp_test,9,&read);					
   1998          					}
   1999          					if(row_1>ysize_big)
   2000          						break;					
   2001          				}
   2002          				else
   2003          				{
   2004          					if(i>=(xsize_small*4))
   2005          					{
   2006          		                i=0;
   2007          		                row_1++;
   2008          		                f_read(&TEST_FIL,&temp_test,9,&read);					
   2009          					}
   2010          					if(row_1>ysize_small)
   2011          						break;
   2012          				}
   2013          
   2014          			}
   2015          			f_close(&TEST_FIL);
   2016          			return 1;
   2017          		}
   2018          	}
   2019          	f_close(&TEST_FIL);
   2020          	return 0;
   2021          
   2022          }
   2023          #endif
   2024          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   DRAW_LOGO
        40   -> LCD_WriteRAM
        40   -> LCD_WriteRAM_Prepare
         0   -> LCD_setWindowArea
        40   -> LCD_setWindowArea
        40   -> Pic_Logo_Read
      56   Draw_default_preview(int, int, uint8_t)
        56   -> LCD_WriteRAM
        56   -> LCD_WriteRAM_Prepare
        56   -> LCD_setWindowArea
        56   -> default_view_Read
        56   -> flash_view_Read
      16   GUI_RefreshPage
        16   -> Clear_Tips
        16   -> GUI_DispStringAt
        16   -> __aeabi_f2d
        16   -> __aeabi_memset4
        16   -> disp_bed_temp_printing
        16   -> disp_desire_temp
        16   -> disp_fan_move_printing
        16   -> disp_fan_speed
        16   -> disp_filament_sprayer_temp
        16   -> disp_print_time
        16   -> disp_restro_state
        16   -> disp_sprayer_tem_printing
        16   -> disp_sprayer_temp
        16   -> disp_temp_operate
        16   -> disp_temp_pause
        16   -> disp_wifi_list
        16   -> disp_wifi_state
        16   -> disp_z_offset_value
        16   -> disp_zpos
        16   -> draw_Tips
        16   -> draw_Wifi
        16   -> draw_Wifi_list
        16   -> draw_ready_print
        16   -> filament_dialog_handle()
         0   -> print_time_run
        16   -> refresh_bind_ui
        16   -> setProBarRate
        16   -> setProBarRateOpera
        16   -> sprintf
        16   -> strcmp
        16   -> update_join_state_disp
        16   -> update_password_disp
        16   -> wifi_scan_handle
       0   GUI_callback
       0   ascii2dec_test1(char *)
       8   clear_cur_ui
         8   -> Clear_About
         8   -> Clear_Acceleration
         8   -> Clear_Advanced
         8   -> Clear_Bind
         8   -> Clear_DeltaLevelPara
         8   -> Clear_DoubleZ
         8   -> Clear_EnableInvert
         8   -> Clear_EndstopType
         8   -> Clear_FilamentSettings
         8   -> Clear_Hardwaretest
         8   -> Clear_HomeDir
         8   -> Clear_HomeSpeed
         8   -> Clear_HotbedConfig
         8   -> Clear_Jerk
         8   -> Clear_Keyboard
         8   -> Clear_Language
         8   -> Clear_Leveling
         8   -> Clear_LevelingPara
         8   -> Clear_LevelingSettings
         8   -> Clear_MachinePara
         8   -> Clear_MachineSettings
         8   -> Clear_MachineType
         8   -> Clear_MaxFeedRate
         8   -> Clear_MeshLeveling
         8   -> Clear_MotorDir
         8   -> Clear_MotorSettings
         8   -> Clear_NozzleConfig
         8   -> Clear_NumberKey
         8   -> Clear_Printmore
         8   -> Clear_Set
         8   -> Clear_Steps
         8   -> Clear_Stroke
         8   -> Clear_TemperatureSettings
         8   -> Clear_Tips
         8   -> Clear_Tool()
         8   -> Clear_Wifi
         8   -> Clear_Wifi_list
         8   -> Clear_XYZLevelPara
         8   -> Clear_Zero
         8   -> Clear_babyStep
         8   -> Clear_changeSpeed
         8   -> Clear_dialog
         8   -> Clear_extrusion
         8   -> Clear_fan
         8   -> Clear_more
         8   -> Clear_move_motor
         8   -> Clear_operate
         8   -> Clear_pause
         8   -> Clear_preHeat
         8   -> Clear_print_file
         8   -> Clear_printing
         8   -> Clear_ready_print
         0   -> GUI_Clear
      56   creat_title_text
        56   -> __aeabi_memset4
        56   -> cutFileName
        56   -> getDispText(int)
        56   -> strcat
        56   -> strlen
      16   disp_pre_gcode
        16   -> Draw_default_preview(int, int, uint8_t)
        16   -> gcode_preview(FIL *, int, int)
       8   disp_sel_lang
         8   -> BUTTON_SetBkColor
       0   draw_return_ui
         0   -> draw_About
         0   -> draw_Acceleration
         0   -> draw_Advanced
         0   -> draw_DeltaLevelPara
         0   -> draw_DoubleZ
         0   -> draw_EnableInvert
         0   -> draw_EndstopType
         0   -> draw_FilamentChange
         0   -> draw_FilamentSettings
         0   -> draw_Hardwaretest
         0   -> draw_HomeDir
         0   -> draw_HomeSpeed
         0   -> draw_HotbedConfig
         0   -> draw_Jerk
         0   -> draw_Keyboard
         0   -> draw_Language
         0   -> draw_LevelingPara
         0   -> draw_LevelingSettings
         0   -> draw_MachinePara
         0   -> draw_MachineSettings
         0   -> draw_MachineType
         0   -> draw_MaxFeedRate
         0   -> draw_More
         0   -> draw_MotorDir
         0   -> draw_MotorSettings
         0   -> draw_NozzleConfig
         0   -> draw_NumberKey
         0   -> draw_Set
         0   -> draw_Steps
         0   -> draw_Stroke
         0   -> draw_TemperatureSettings
         0   -> draw_Tips
         0   -> draw_Wifi
         0   -> draw_Wifi_list
         0   -> draw_XYZLevelPara
         0   -> draw_Zero
         0   -> draw_babyStep
         0   -> draw_bind
         0   -> draw_changeSpeed
         0   -> draw_dialog
         0   -> draw_extrusion
         0   -> draw_fan
         0   -> draw_leveling
         0   -> draw_meshleveling
         0   -> draw_move_motor
         0   -> draw_operate
         0   -> draw_pause
         0   -> draw_preHeat
         0   -> draw_print_file
         0   -> draw_printing
         0   -> draw_printmore
         0   -> draw_ready_print
         0   -> draw_tool()
      16   gcode_has_preview
        16   -> __iar_Strstr
        16   -> epr_write_data
        16   -> f_close
        16   -> f_open
        16   -> f_read
      40   gcode_preview(FIL *, int, int)
        40   -> CardReader::openFile(char *, bool, bool)
        40   -> CardReader::startFileprint()
        40   -> LCD_WriteRAM
        40   -> LCD_WriteRAM_Prepare
        40   -> LCD_setWindowArea
        40   -> SPI_FLASH_BufferWrite
        40   -> SPI_FLASH_SectorErase
        40   -> f_close
        40   -> f_lseek
        40   -> f_open
        40   -> f_read
      16   getDispText(int)
        16   -> __aeabi_memclr4
        16   -> strcpy
      16   get_printing_rate
        16   -> __aeabi_f2iz
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_ui2f
      24   gui_view_init
        24   -> BUTTON_SetDefaultBkColor
        24   -> BUTTON_SetDefaultFont
        24   -> BUTTON_SetDefaultTextAlign
        24   -> BUTTON_SetDefaultTextColor
        24   -> GUI_SetBkColor
        24   -> GUI_SetColor
        24   -> GUI_SetFont
        24   -> TEXT_SetDefaultFont
        24   -> TEXT_SetDefaultTextColor
        24   -> WIDGET_SetDefaultEffect
        24   -> __aeabi_memclr4
       8   init_cb_stack()
         8   -> __aeabi_memclr4
       0   pop_cb_stack()
      16   preview_gcode_prehandle
        16   -> __iar_Strstr
        16   -> epr_write_data
        16   -> f_open
        16   -> f_read
       8   push_cb_stack
      24   titleText_cat(char *, int, char *)
         0   -> strcat
        24   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant ":">
      12  ?<Constant ";simage:">
       2  ?<Constant ">">
       8  ?<Constant ">...>">
       8  ?<Constant "Z: %.3f">
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable17
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_11
       4  ??DataTable18_12
       4  ??DataTable18_13
       4  ??DataTable18_14
       4  ??DataTable18_15
       4  ??DataTable18_16
       4  ??DataTable18_17
       4  ??DataTable18_18
       4  ??DataTable18_19
       4  ??DataTable18_2
       4  ??DataTable18_20
       4  ??DataTable18_21
       4  ??DataTable18_22
       4  ??DataTable18_23
       4  ??DataTable18_24
       4  ??DataTable18_25
       4  ??DataTable18_26
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_10
       4  ??DataTable22_11
       4  ??DataTable22_12
       4  ??DataTable22_13
       4  ??DataTable22_14
       4  ??DataTable22_15
       4  ??DataTable22_16
       4  ??DataTable22_17
       4  ??DataTable22_18
       4  ??DataTable22_19
       4  ??DataTable22_2
       4  ??DataTable22_20
       4  ??DataTable22_21
       4  ??DataTable22_22
       4  ??DataTable22_23
       4  ??DataTable22_24
       4  ??DataTable22_25
       4  ??DataTable22_26
       4  ??DataTable22_27
       4  ??DataTable22_28
       4  ??DataTable22_29
       4  ??DataTable22_3
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       4  ??DataTable22_7
       4  ??DataTable22_8
       4  ??DataTable22_9
       1  BMP_PIC_X
       1  BMP_PIC_Y
     124  DRAW_LOGO
     164  Draw_default_preview(int, int, uint8_t)
     700  GUI_RefreshPage
      32  GUI_callback
      46  ascii2dec_test1(char *)
      24  button4
     412  clear_cur_ui
     364  creat_title_text
     556  curFile_1
      68  disp_pre_gcode
      22  disp_sel_lang
     236  disp_state_stack
          TitleText
          titleText
     334  draw_return_ui
      44  gCbEventStack
      84  gcode_has_preview
     420  gcode_preview(FIL *, int, int)
     386  getDispText(int)
     114  get_printing_rate
     332  gui_view_init
      20  init_cb_stack()
      16  logo_n
      42  pop_cb_stack()
      86  preview_gcode_prehandle
       1  preview_pic
      54  push_cb_stack
       4  srcfp
    1088  temperature_change_frequency
          from_flash_pic
          last_disp_state
          fan_move_flag
          gcode_preview_over
          flash_preview_begin
          default_preview_flg
          disp_state
          To_pre_view
          row
          size
          TEST_FIL1
          buff_pic
      46  titleText_cat(char *, int, char *)
       1  value
       1  -- Other

 
   868 bytes in section .bss
 1 104 bytes in section .data
     5 bytes in section .rodata
 4 118 bytes in section .text
 
 4 118 bytes of CODE  memory
     4 bytes of CONST memory (+ 1 byte shared)
 1 972 bytes of DATA  memory

Errors: none
Warnings: 53
