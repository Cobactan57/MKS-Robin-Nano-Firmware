###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  10:56:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_motor_dir.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_motor_dir.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_motor_dir.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_motor_dir.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_motor_dir.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      4          #include "stepper.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless
      5          
      6          #ifndef GUI_FLASH
      7          #define GUI_FLASH
      8          #endif
      9          

   \                                 In section .bss, align 4
     10          static GUI_HWIN hMotorDirWnd;
     11          static BUTTON_STRUCT XMotorDir_text,YMotorDir_text,ZMotorDir_text,E0MotorDir_text,E1MotorDir_text;
     12          static BUTTON_STRUCT XMotorDir,YMotorDir,ZMotorDir,E0MotorDir,E1MotorDir;
     13          
     14          static BUTTON_STRUCT button_next,button_previous,button_back;
     15          
     16          static uint8_t current_page;//0:…œ“ª“≥£¨1:œ¬“ª“≥
   \                     current_page:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 4
   \                     XMotorDir_text:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
   \   00000030                      DS8 24
   \   00000048                      DS8 24
   \   00000060                      DS8 24

   \                                 In section .bss, align 4
   \                     ZMotorDir:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     E1MotorDir:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     button_previous:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     17          
     18          static void btnHandle_rest()
     19          {
     20              XMotorDir_text.btnHandle = 0;
     21              XMotorDir.btnHandle = 0;
     22              YMotorDir_text.btnHandle = 0;
     23              YMotorDir.btnHandle = 0;
     24              ZMotorDir_text.btnHandle = 0;
     25              ZMotorDir.btnHandle = 0;
     26              E0MotorDir_text.btnHandle = 0;   
     27              E0MotorDir.btnHandle = 0;
     28              E1MotorDir_text.btnHandle = 0;   
     29              E1MotorDir.btnHandle = 0;
     30              button_previous.btnHandle = 0;
     31              button_next.btnHandle = 0;
     32              button_back.btnHandle = 0;
     33          }
     34          

   \                                 In section .text, align 2, keep-with-next
     35          static void cbMotorDirWin(WM_MESSAGE * pMsg) {
     36          
     37              struct PressEvt *press_event;
                                      ^
Warning[Pe550]: variable "press_event" was set but never used
     38              switch (pMsg->MsgId)
   \                     _Z13cbMotorDirWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbMotorDirWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbMotorDirWin_0: (+1)
   \   00000008   0xB5F8             PUSH     {R3-R7,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xF000 0x81A2      BEQ.W    ??cbMotorDirWin_1
   \   00000010   0x290F             CMP      R1,#+15
   \   00000012   0xD002             BEQ.N    ??cbMotorDirWin_2
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xD029             BEQ.N    ??cbMotorDirWin_3
   \   00000018   0xE198             B.N      ??cbMotorDirWin_4
     39              {
     40              	case WM_PAINT:
     41          			GUI_SetColor(0xff5449);
   \                     ??cbMotorDirWin_2: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0xff5449
   \   0000001E   0x.... 0x....      BL       GUI_SetColor
     42          
     43          			GUI_FillRect(10, 90, 470,90);
   \   00000022   0x235A             MOVS     R3,#+90
   \   00000024   0xF44F 0x72EB      MOV      R2,#+470
   \   00000028   0x215A             MOVS     R1,#+90
   \   0000002A   0x200A             MOVS     R0,#+10
   \   0000002C   0x.... 0x....      BL       GUI_FillRect
     44                      if(current_page != 1)
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0x2801             CMP      R0,#+1
   \   00000038   0xF000 0x818C      BEQ.W    ??cbMotorDirWin_1
     45                      {            
     46                          GUI_FillRect(10, 140, 470,140);
   \   0000003C   0x238C             MOVS     R3,#+140
   \   0000003E   0xF44F 0x72EB      MOV      R2,#+470
   \   00000042   0x218C             MOVS     R1,#+140
   \   00000044   0x200A             MOVS     R0,#+10
   \   00000046   0x.... 0x....      BL       GUI_FillRect
     47                          GUI_FillRect(10, 190, 470,190);
   \   0000004A   0x23BE             MOVS     R3,#+190
   \   0000004C   0xF44F 0x72EB      MOV      R2,#+470
   \   00000050   0x4619             MOV      R1,R3
   \   00000052   0x200A             MOVS     R0,#+10
   \   00000054   0x.... 0x....      BL       GUI_FillRect
     48                          GUI_FillRect(10, 240, 470,240);
   \   00000058   0xB001             ADD      SP,SP,#+4
   \   0000005A   0xE8BD 0x40F0      POP      {R4-R7,LR}
   \   0000005E   0x23F0             MOVS     R3,#+240
   \   00000060   0xF44F 0x72EB      MOV      R2,#+470
   \   00000064   0x4619             MOV      R1,R3
   \   00000066   0x200A             MOVS     R0,#+10
   \   00000068   0x.... 0x....      B.W      GUI_FillRect
     49                      }
     50          
     51              		break;
     52              	case WM_TOUCH:
     53              	 	press_event = (struct PressEvt *)pMsg->Data.p;
     54              		
     55              		break;
     56              	case WM_TOUCH_CHILD:
     57              		press_event = (struct PressEvt *)pMsg->Data.p;
     58          
     59              		break;
     60              		
     61              	case WM_NOTIFY_PARENT:
     62              		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \                     ??cbMotorDirWin_3: (+1)
   \   0000006C   0x6881             LDR      R1,[R0, #+8]
   \   0000006E   0x2902             CMP      R1,#+2
   \   00000070   0xF040 0x8170      BNE.W    ??cbMotorDirWin_1
     63              		{
     64              			if(pMsg->hWinSrc == button_back.btnHandle)
   \   00000074   0xF9B0 0x1006      LDRSH    R1,[R0, #+6]
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000007C   0x.... 0x....      LDR.W    R7,??DataTable7_1
   \   00000080   0xF9B0 0x2018      LDRSH    R2,[R0, #+24]
   \   00000084   0x4291             CMP      R1,R2
   \   00000086   0xD117             BNE.N    ??cbMotorDirWin_5
     65              			{
     66              			    current_page = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x7038             STRB     R0,[R7, #+0]
     67              				last_disp_state = MOTORDIR_UI;
   \   0000008C   0x2036             MOVS     R0,#+54
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000092   0x7008             STRB     R0,[R1, #+0]
     68              				Clear_MotorDir();
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000098   0x6940             LDR      R0,[R0, #+20]
   \   0000009A   0x.... 0x....      BL       GUI_SetBkColor
   \   0000009E   0xF9B7 0x0002      LDRSH    R0,[R7, #+2]
   \   000000A2   0x.... 0x....      BL       WM_IsWindow
   \   000000A6   0xB118             CBZ.N    R0,??cbMotorDirWin_6
   \   000000A8   0xF9B7 0x0002      LDRSH    R0,[R7, #+2]
   \   000000AC   0x.... 0x....      BL       WM_DeleteWindow
     69              				draw_return_ui();
   \                     ??cbMotorDirWin_6: (+1)
   \   000000B0   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000B4   0x.... 0x....      B.W      draw_return_ui
     70              			}	
     71                          else if(pMsg->hWinSrc == button_next.btnHandle)
   \                     ??cbMotorDirWin_5: (+1)
   \   000000B8   0x.... 0x....      LDR.W    R4,??DataTable7_5
   \   000000BC   0xF9B4 0x2018      LDRSH    R2,[R4, #+24]
   \   000000C0   0x4291             CMP      R1,R2
   \   000000C2   0xBF08             IT       EQ 
     72                          {
     73                              current_page = 1;
   \   000000C4   0x2001             MOVEQ    R0,#+1
   \   000000C6   0xD004             BEQ.N    ??cbMotorDirWin_7
     74                              last_disp_state = MOTORDIR_UI;
     75                              Clear_MotorDir();
     76                              draw_MotorDir();
     77                          }
     78                          else if(pMsg->hWinSrc == button_previous.btnHandle)
   \   000000C8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000CC   0x4281             CMP      R1,R0
   \   000000CE   0xD116             BNE.N    ??cbMotorDirWin_8
     79                          {
     80                              current_page = 0;
   \   000000D0   0x2000             MOVS     R0,#+0
   \                     ??cbMotorDirWin_7: (+1)
   \   000000D2   0x7038             STRB     R0,[R7, #+0]
     81                              last_disp_state = MOTORDIR_UI;
   \   000000D4   0x2036             MOVS     R0,#+54
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   000000DA   0x7008             STRB     R0,[R1, #+0]
     82                              Clear_MotorDir();
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   000000E0   0x6940             LDR      R0,[R0, #+20]
   \   000000E2   0x.... 0x....      BL       GUI_SetBkColor
   \   000000E6   0xF9B7 0x0002      LDRSH    R0,[R7, #+2]
   \   000000EA   0x.... 0x....      BL       WM_IsWindow
   \   000000EE   0xB118             CBZ.N    R0,??cbMotorDirWin_9
   \   000000F0   0xF9B7 0x0002      LDRSH    R0,[R7, #+2]
   \   000000F4   0x.... 0x....      BL       WM_DeleteWindow
     83                              draw_MotorDir();
   \                     ??cbMotorDirWin_9: (+1)
   \   000000F8   0xE8BD 0x40F1      POP      {R0,R4-R7,LR}
   \   000000FC   0x....             B.N      draw_MotorDir
     84                          }                
     85              			else if(pMsg->hWinSrc == XMotorDir.btnHandle)
   \                     ??cbMotorDirWin_8: (+1)
   \   000000FE   0xF9B7 0x0004      LDRSH    R0,[R7, #+4]
   \   00000102   0x4281             CMP      R1,R0
   \   00000104   0xD135             BNE.N    ??cbMotorDirWin_10
     86              			{
     87          					if(mksCfg.invert_x_dir==1)
   \   00000106   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000010A   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   0000010E   0x7829             LDRB     R1,[R5, #+0]
   \   00000110   0x2901             CMP      R1,#+1
   \   00000112   0xD10D             BNE.N    ??cbMotorDirWin_11
     88          					{
     89          						mksCfg.invert_x_dir=0;
   \   00000114   0x2100             MOVS     R1,#+0
   \   00000116   0x7029             STRB     R1,[R5, #+0]
     90          						BUTTON_SetBmpFileName(XMotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   00000118   0x2201             MOVS     R2,#+1
   \   0000011A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   0000011E   0x.... 0x....      BL       BUTTON_SetBmpFileName
     91          						if(gCfgItems.multiple_language != 0)
   \   00000122   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   00000126   0xB1A8             CBZ.N    R0,??cbMotorDirWin_12
     92          							BUTTON_SetText(XMotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   0000012C   0x6841             LDR      R1,[R0, #+4]
   \   0000012E   0xE00D             B.N      ??cbMotorDirWin_13
     93          					}
     94          					else
     95          					{
     96          						mksCfg.invert_x_dir=1;
   \                     ??cbMotorDirWin_11: (+1)
   \   00000130   0x2101             MOVS     R1,#+1
   \   00000132   0x7029             STRB     R1,[R5, #+0]
     97          						BUTTON_SetBmpFileName(XMotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   00000134   0x2201             MOVS     R2,#+1
   \   00000136   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   0000013A   0x.... 0x....      BL       BUTTON_SetBmpFileName
     98          						if(gCfgItems.multiple_language != 0)
   \   0000013E   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   00000142   0xB138             CBZ.N    R0,??cbMotorDirWin_12
     99          							BUTTON_SetText(XMotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000148   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \                     ??cbMotorDirWin_13: (+1)
   \   0000014C   0xF9B7 0x0004      LDRSH    R0,[R7, #+4]
   \   00000150   0x.... 0x....      BL       BUTTON_SetText
    100          					}
    101          					if((stepper.last_direction_bits & (1<<X_AXIS)) == 0)
   \                     ??cbMotorDirWin_12: (+1)
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   00000158   0x7801             LDRB     R1,[R0, #+0]
   \   0000015A   0x07CA             LSLS     R2,R1,#+31
   \   0000015C   0xBF54             ITE      PL 
    102          						stepper.last_direction_bits = stepper.last_direction_bits |(1<<X_AXIS);
   \   0000015E   0xF041 0x0101      ORRPL    R1,R1,#0x1
    103          					else
    104          						stepper.last_direction_bits = stepper.last_direction_bits & (~(1<<X_AXIS));
   \   00000162   0xF001 0x01FE      ANDMI    R1,R1,#0xFE
   \   00000166   0x7001             STRB     R1,[R0, #+0]
    105              				epr_write_data(EPR_INVERT_X_DIR, &mksCfg.invert_x_dir,1);
   \   00000168   0x2201             MOVS     R2,#+1
   \   0000016A   0x4629             MOV      R1,R5
   \   0000016C   0xF240 0x50AE      MOVW     R0,#+1454
   \   00000170   0xE0E8             B.N      ??cbMotorDirWin_14
    106              			}
    107              			else if(pMsg->hWinSrc == YMotorDir.btnHandle)
   \                     ??cbMotorDirWin_10: (+1)
   \   00000172   0xF9B7 0x001C      LDRSH    R0,[R7, #+28]
   \   00000176   0x4281             CMP      R1,R0
   \   00000178   0xD135             BNE.N    ??cbMotorDirWin_15
    108              			{
    109          					if(mksCfg.invert_y_dir==1)
   \   0000017A   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000017E   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   00000182   0x7869             LDRB     R1,[R5, #+1]
   \   00000184   0x2901             CMP      R1,#+1
   \   00000186   0xD10D             BNE.N    ??cbMotorDirWin_16
    110          					{
    111          						mksCfg.invert_y_dir=0;
   \   00000188   0x2100             MOVS     R1,#+0
   \   0000018A   0x7069             STRB     R1,[R5, #+1]
    112          						BUTTON_SetBmpFileName(YMotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   0000018C   0x2201             MOVS     R2,#+1
   \   0000018E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   00000192   0x.... 0x....      BL       BUTTON_SetBmpFileName
    113          						if(gCfgItems.multiple_language != 0)
   \   00000196   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   0000019A   0xB1A8             CBZ.N    R0,??cbMotorDirWin_17
    114          							BUTTON_SetText(YMotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   000001A0   0x6841             LDR      R1,[R0, #+4]
   \   000001A2   0xE00D             B.N      ??cbMotorDirWin_18
    115          					}
    116          					else
    117          					{
    118          						mksCfg.invert_y_dir=1;
   \                     ??cbMotorDirWin_16: (+1)
   \   000001A4   0x2101             MOVS     R1,#+1
   \   000001A6   0x7069             STRB     R1,[R5, #+1]
    119          						BUTTON_SetBmpFileName(YMotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   000001A8   0x2201             MOVS     R2,#+1
   \   000001AA   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   000001AE   0x.... 0x....      BL       BUTTON_SetBmpFileName
    120          						if(gCfgItems.multiple_language != 0)
   \   000001B2   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   000001B6   0xB138             CBZ.N    R0,??cbMotorDirWin_17
    121          							BUTTON_SetText(YMotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   000001BC   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \                     ??cbMotorDirWin_18: (+1)
   \   000001C0   0xF9B7 0x001C      LDRSH    R0,[R7, #+28]
   \   000001C4   0x.... 0x....      BL       BUTTON_SetText
    122          					}
    123          					if((stepper.last_direction_bits & (1<<Y_AXIS)) == 0)
   \                     ??cbMotorDirWin_17: (+1)
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   000001CC   0x7801             LDRB     R1,[R0, #+0]
   \   000001CE   0x078A             LSLS     R2,R1,#+30
   \   000001D0   0xBF54             ITE      PL 
    124          						stepper.last_direction_bits = stepper.last_direction_bits |(1<<Y_AXIS);
   \   000001D2   0xF041 0x0102      ORRPL    R1,R1,#0x2
    125          					else
    126          						stepper.last_direction_bits = stepper.last_direction_bits & (~(1<<Y_AXIS));
   \   000001D6   0xF001 0x01FD      ANDMI    R1,R1,#0xFD
   \   000001DA   0x7001             STRB     R1,[R0, #+0]
    127              				epr_write_data(EPR_INVERT_Y_DIR, &mksCfg.invert_y_dir,1);
   \   000001DC   0x2201             MOVS     R2,#+1
   \   000001DE   0x1C69             ADDS     R1,R5,#+1
   \   000001E0   0xF240 0x50AF      MOVW     R0,#+1455
   \   000001E4   0xE0AE             B.N      ??cbMotorDirWin_14
    128          
    129              				
    130              			}
    131              			else if(pMsg->hWinSrc == ZMotorDir.btnHandle)
   \                     ??cbMotorDirWin_15: (+1)
   \   000001E6   0x.... 0x....      LDR.W    R7,??DataTable7_10
   \   000001EA   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000001EE   0x4281             CMP      R1,R0
   \   000001F0   0xD135             BNE.N    ??cbMotorDirWin_19
    132              			{
    133          					if(mksCfg.invert_z_dir==1)
   \   000001F2   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000001F6   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   000001FA   0x78A9             LDRB     R1,[R5, #+2]
   \   000001FC   0x2901             CMP      R1,#+1
   \   000001FE   0xD10D             BNE.N    ??cbMotorDirWin_20
    134          					{
    135          						mksCfg.invert_z_dir=0;
   \   00000200   0x2100             MOVS     R1,#+0
   \   00000202   0x70A9             STRB     R1,[R5, #+2]
    136          						BUTTON_SetBmpFileName(ZMotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   00000204   0x2201             MOVS     R2,#+1
   \   00000206   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   0000020A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    137          						if(gCfgItems.multiple_language != 0)
   \   0000020E   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   00000212   0xB1A8             CBZ.N    R0,??cbMotorDirWin_21
    138          							BUTTON_SetText(ZMotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000218   0x6841             LDR      R1,[R0, #+4]
   \   0000021A   0xE00D             B.N      ??cbMotorDirWin_22
    139          					}
    140          					else
    141          					{
    142          						mksCfg.invert_z_dir=1;
   \                     ??cbMotorDirWin_20: (+1)
   \   0000021C   0x2101             MOVS     R1,#+1
   \   0000021E   0x70A9             STRB     R1,[R5, #+2]
    143          						BUTTON_SetBmpFileName(ZMotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   00000220   0x2201             MOVS     R2,#+1
   \   00000222   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   00000226   0x.... 0x....      BL       BUTTON_SetBmpFileName
    144          						if(gCfgItems.multiple_language != 0)
   \   0000022A   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   0000022E   0xB138             CBZ.N    R0,??cbMotorDirWin_21
    145          							BUTTON_SetText(ZMotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000234   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \                     ??cbMotorDirWin_22: (+1)
   \   00000238   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000023C   0x.... 0x....      BL       BUTTON_SetText
    146          					}
    147          					if((stepper.last_direction_bits & (1<<Z_AXIS)) == 0)
   \                     ??cbMotorDirWin_21: (+1)
   \   00000240   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   00000244   0x7801             LDRB     R1,[R0, #+0]
   \   00000246   0x074A             LSLS     R2,R1,#+29
   \   00000248   0xBF54             ITE      PL 
    148          						stepper.last_direction_bits = stepper.last_direction_bits |(1<<Z_AXIS);
   \   0000024A   0xF041 0x0104      ORRPL    R1,R1,#0x4
    149          					else
    150          						stepper.last_direction_bits = stepper.last_direction_bits & (~(1<<Z_AXIS));
   \   0000024E   0xF001 0x01FB      ANDMI    R1,R1,#0xFB
   \   00000252   0x7001             STRB     R1,[R0, #+0]
    151              				epr_write_data(EPR_INVERT_Z_DIR, &mksCfg.invert_z_dir,1);
   \   00000254   0x2201             MOVS     R2,#+1
   \   00000256   0x1CA9             ADDS     R1,R5,#+2
   \   00000258   0xF44F 0x60B6      MOV      R0,#+1456
   \   0000025C   0xE072             B.N      ??cbMotorDirWin_14
    152          
    153              		
    154              			}       
    155              			else if(pMsg->hWinSrc == E0MotorDir.btnHandle)
   \                     ??cbMotorDirWin_19: (+1)
   \   0000025E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000262   0x4281             CMP      R1,R0
   \   00000264   0xD135             BNE.N    ??cbMotorDirWin_23
    156              			{
    157          					if(mksCfg.invert_e0_dir==1)
   \   00000266   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000026A   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   0000026E   0x78E9             LDRB     R1,[R5, #+3]
   \   00000270   0x2901             CMP      R1,#+1
   \   00000272   0xD10D             BNE.N    ??cbMotorDirWin_24
    158          					{
    159          						mksCfg.invert_e0_dir=0;
   \   00000274   0x2100             MOVS     R1,#+0
   \   00000276   0x70E9             STRB     R1,[R5, #+3]
    160          						BUTTON_SetBmpFileName(E0MotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   00000278   0x2201             MOVS     R2,#+1
   \   0000027A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   0000027E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    161          						if(gCfgItems.multiple_language != 0)
   \   00000282   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   00000286   0xB1A8             CBZ.N    R0,??cbMotorDirWin_25
    162          							BUTTON_SetText(E0MotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   00000288   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   0000028C   0x6841             LDR      R1,[R0, #+4]
   \   0000028E   0xE00D             B.N      ??cbMotorDirWin_26
    163          					}
    164          					else
    165          					{
    166          						mksCfg.invert_e0_dir=1;
   \                     ??cbMotorDirWin_24: (+1)
   \   00000290   0x2101             MOVS     R1,#+1
   \   00000292   0x70E9             STRB     R1,[R5, #+3]
    167          						BUTTON_SetBmpFileName(E0MotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   00000294   0x2201             MOVS     R2,#+1
   \   00000296   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   0000029A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    168          						if(gCfgItems.multiple_language != 0)
   \   0000029E   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   000002A2   0xB138             CBZ.N    R0,??cbMotorDirWin_25
    169          							BUTTON_SetText(E0MotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   000002A8   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \                     ??cbMotorDirWin_26: (+1)
   \   000002AC   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   000002B0   0x.... 0x....      BL       BUTTON_SetText
    170          					}
    171          					if((stepper.last_direction_bits & (1<<E_AXIS)) == 0)
   \                     ??cbMotorDirWin_25: (+1)
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   000002B8   0x7801             LDRB     R1,[R0, #+0]
   \   000002BA   0x070A             LSLS     R2,R1,#+28
   \   000002BC   0xBF54             ITE      PL 
    172          						stepper.last_direction_bits = stepper.last_direction_bits |(1<<E_AXIS);
   \   000002BE   0xF041 0x0108      ORRPL    R1,R1,#0x8
    173          					else
    174          						stepper.last_direction_bits = stepper.last_direction_bits & (~(1<<E_AXIS));
   \   000002C2   0xF001 0x01F7      ANDMI    R1,R1,#0xF7
   \   000002C6   0x7001             STRB     R1,[R0, #+0]
    175              				epr_write_data(EPR_INVERT_E0_DIR, &mksCfg.invert_e0_dir,1);
   \   000002C8   0x2201             MOVS     R2,#+1
   \   000002CA   0x1CE9             ADDS     R1,R5,#+3
   \   000002CC   0xF240 0x50B1      MOVW     R0,#+1457
   \   000002D0   0xE038             B.N      ??cbMotorDirWin_14
    176          
    177          
    178              			}
    179              			else if(pMsg->hWinSrc == E1MotorDir.btnHandle)
   \                     ??cbMotorDirWin_23: (+1)
   \   000002D2   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000002D6   0x4281             CMP      R1,R0
   \   000002D8   0xD13C             BNE.N    ??cbMotorDirWin_1
    180          
    181              			{
    182          					if(mksCfg.invert_e1_dir==1)
   \   000002DA   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000002DE   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   000002E2   0x7929             LDRB     R1,[R5, #+4]
   \   000002E4   0x2901             CMP      R1,#+1
   \   000002E6   0xD10D             BNE.N    ??cbMotorDirWin_27
    183          					{
    184          						mksCfg.invert_e1_dir=0;
   \   000002E8   0x2100             MOVS     R1,#+0
   \   000002EA   0x7129             STRB     R1,[R5, #+4]
    185          						BUTTON_SetBmpFileName(E1MotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   000002EC   0x2201             MOVS     R2,#+1
   \   000002EE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_disable.bin">`
   \   000002F2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    186          						if(gCfgItems.multiple_language != 0)
   \   000002F6   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   000002FA   0xB1A8             CBZ.N    R0,??cbMotorDirWin_28
    187          							BUTTON_SetText(E1MotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   000002FC   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000300   0x6841             LDR      R1,[R0, #+4]
   \   00000302   0xE00D             B.N      ??cbMotorDirWin_29
    188          					}
    189          					else
    190          					{
    191          						mksCfg.invert_e1_dir=1;
   \                     ??cbMotorDirWin_27: (+1)
   \   00000304   0x2101             MOVS     R1,#+1
   \   00000306   0x7129             STRB     R1,[R5, #+4]
    192          						BUTTON_SetBmpFileName(E1MotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   00000308   0x2201             MOVS     R2,#+1
   \   0000030A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_enable.bin">`
   \   0000030E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    193          						if(gCfgItems.multiple_language != 0)
   \   00000312   0xF896 0x01CF      LDRB     R0,[R6, #+463]
   \   00000316   0xB138             CBZ.N    R0,??cbMotorDirWin_28
    194          							BUTTON_SetText(E1MotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   00000318   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   0000031C   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \                     ??cbMotorDirWin_29: (+1)
   \   00000320   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000324   0x.... 0x....      BL       BUTTON_SetText
    195          					}
    196          					if((stepper.last_direction_bits & (1<<E_AXIS)) == 0)
   \                     ??cbMotorDirWin_28: (+1)
   \   00000328   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   0000032C   0x7801             LDRB     R1,[R0, #+0]
   \   0000032E   0x070A             LSLS     R2,R1,#+28
   \   00000330   0xBF54             ITE      PL 
    197          						stepper.last_direction_bits = stepper.last_direction_bits |(1<<E_AXIS);
   \   00000332   0xF041 0x0108      ORRPL    R1,R1,#0x8
    198          					else
    199          						stepper.last_direction_bits = stepper.last_direction_bits & (~(1<<E_AXIS));
   \   00000336   0xF001 0x01F7      ANDMI    R1,R1,#0xF7
   \   0000033A   0x7001             STRB     R1,[R0, #+0]
    200              				epr_write_data(EPR_INVERT_E1_DIR, &mksCfg.invert_e1_dir,1);
   \   0000033C   0x2201             MOVS     R2,#+1
   \   0000033E   0x1D29             ADDS     R1,R5,#+4
   \   00000340   0xF240 0x50B2      MOVW     R0,#+1458
   \                     ??cbMotorDirWin_14: (+1)
   \   00000344   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   00000348   0x.... 0x....      B.W      epr_write_data
    201          
    202          
    203              			}  
    204              			
    205                           
    206              		}
    207              		break;
    208              		
    209              	default:
    210              		WM_DefaultProc(pMsg);
   \                     ??cbMotorDirWin_4: (+1)
   \   0000034C   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   00000350   0x.... 0x....      B.W      WM_DefaultProc
    211              	}
    212          }
   \                     ??cbMotorDirWin_1: (+1)
   \   00000354   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    213          
    214          

   \                                 In section .text, align 2, keep-with-next
    215          void draw_MotorDir()
    216          {   
   \                     draw_MotorDir: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    217              int i;
                         ^
Warning[Pe177]: variable "i" was declared but never referenced
    218          
    219          
    220              btnHandle_rest();
   \   00000004   0x.... 0x....      LDR.W    R4,??DataTable7_11
   \   00000008   0x.... 0x....      LDR.W    R5,??DataTable7_1
   \   0000000C   0x.... 0x....      LDR.W    R9,??DataTable7_10
   \   00000010   0x.... 0x....      LDR.W    R11,??DataTable7_5
   \   00000014   0x.... 0x....      LDR.W    R8,??DataTable7_2
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x8020             STRH     R0,[R4, #+0]
   \   0000001C   0x80A8             STRH     R0,[R5, #+4]
   \   0000001E   0x8320             STRH     R0,[R4, #+24]
   \   00000020   0x83A8             STRH     R0,[R5, #+28]
   \   00000022   0x8620             STRH     R0,[R4, #+48]
   \   00000024   0xF8A9 0x0000      STRH     R0,[R9, #+0]
   \   00000028   0xF8A4 0x0048      STRH     R0,[R4, #+72]
   \   0000002C   0xF8A9 0x0018      STRH     R0,[R9, #+24]
   \   00000030   0xF8A4 0x0060      STRH     R0,[R4, #+96]
   \   00000034   0xF8AB 0x0000      STRH     R0,[R11, #+0]
   \   00000038   0xF8A8 0x0000      STRH     R0,[R8, #+0]
   \   0000003C   0xF8AB 0x0018      STRH     R0,[R11, #+24]
   \   00000040   0xF8A8 0x0018      STRH     R0,[R8, #+24]
   \   00000044   0xB085             SUB      SP,SP,#+20
    221              
    222              if(disp_state_stack._disp_state[disp_state_stack._disp_index] != MOTORDIR_UI)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable7_12
   \   0000004A   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000004E   0x560A             LDRSB    R2,[R1, R0]
   \   00000050   0x2A36             CMP      R2,#+54
   \   00000052   0xD005             BEQ.N    ??draw_MotorDir_0
    223              {
    224                  disp_state_stack._disp_index++;
   \   00000054   0x1C49             ADDS     R1,R1,#+1
   \   00000056   0xF880 0x1064      STRB     R1,[R0, #+100]
    225                  disp_state_stack._disp_state[disp_state_stack._disp_index] = MOTORDIR_UI;
   \   0000005A   0x2236             MOVS     R2,#+54
   \   0000005C   0xB249             SXTB     R1,R1
   \   0000005E   0x540A             STRB     R2,[R1, R0]
    226              }
    227              disp_state = MOTORDIR_UI;
   \                     ??draw_MotorDir_0: (+1)
   \   00000060   0x2036             MOVS     R0,#+54
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable7_13
   \   00000066   0x7008             STRB     R0,[R1, #+0]
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   0000006C   0x6940             LDR      R0,[R0, #+20]
    228              
    229              GUI_SetBkColor(gCfgItems.background_color);
   \   0000006E   0x.... 0x....      BL       GUI_SetBkColor
    230              GUI_SetColor(gCfgItems.title_color);
   \   00000072   0x.... 0x....      LDR.W    R6,??DataTable7_14
   \   00000076   0x6870             LDR      R0,[R6, #+4]
   \   00000078   0x.... 0x....      BL       GUI_SetColor
    231              GUI_Clear();
   \   0000007C   0x.... 0x....      BL       GUI_Clear
    232              
    233              GUI_DispStringAt(machine_menu.MotorDirConfTitle, TITLE_XPOS, TITLE_YPOS);
   \   00000080   0x.... 0x....      LDR.W    R10,??DataTable7_8
   \   00000084   0xF8DA 0x01E0      LDR      R0,[R10, #+480]
   \   00000088   0x2205             MOVS     R2,#+5
   \   0000008A   0x2103             MOVS     R1,#+3
   \   0000008C   0x.... 0x....      BL       GUI_DispStringAt
    234          
    235              hMotorDirWnd = WM_CreateWindow(0, 0, LCD_WIDTH, LCD_HEIGHT, WM_CF_SHOW, cbMotorDirWin, 0);
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x9002             STR      R0,[SP, #+8]
   \   00000094   0xF44F 0x73A0      MOV      R3,#+320
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable7_15
   \   0000009C   0x9001             STR      R0,[SP, #+4]
   \   0000009E   0xF44F 0x72F0      MOV      R2,#+480
   \   000000A2   0x2002             MOVS     R0,#+2
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x.... 0x....      BL       WM_CreateWindow
   \   000000AE   0x8068             STRH     R0,[R5, #+2]
    236          
    237              if(current_page != 1)
   \   000000B0   0x.... 0x....      LDR.W    R7,??DataTable7_6
   \   000000B4   0x7828             LDRB     R0,[R5, #+0]
   \   000000B6   0x2801             CMP      R0,#+1
   \   000000B8   0xF000 0x813E      BEQ.W    ??draw_MotorDir_1
    238              {
    239                  XMotorDir_text.btnHandle = BUTTON_CreateEx(10,50,240,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000BC   0x.... 0x....      BL       alloc_win_id
   \   000000C0   0x9003             STR      R0,[SP, #+12]
   \   000000C2   0x2328             MOVS     R3,#+40
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x9002             STR      R0,[SP, #+8]
   \   000000C8   0x22F0             MOVS     R2,#+240
   \   000000CA   0x2002             MOVS     R0,#+2
   \   000000CC   0x9001             STR      R0,[SP, #+4]
   \   000000CE   0x2132             MOVS     R1,#+50
   \   000000D0   0x5E28             LDRSH    R0,[R5, R0]
   \   000000D2   0x9000             STR      R0,[SP, #+0]
   \   000000D4   0x200A             MOVS     R0,#+10
   \   000000D6   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000DA   0x8020             STRH     R0,[R4, #+0]
    240                  XMotorDir.btnHandle = BUTTON_CreateEx(370,50,90,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000DC   0x.... 0x....      BL       alloc_win_id
   \   000000E0   0x9003             STR      R0,[SP, #+12]
   \   000000E2   0x2328             MOVS     R3,#+40
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x9002             STR      R0,[SP, #+8]
   \   000000E8   0x225A             MOVS     R2,#+90
   \   000000EA   0x2002             MOVS     R0,#+2
   \   000000EC   0x9001             STR      R0,[SP, #+4]
   \   000000EE   0x2132             MOVS     R1,#+50
   \   000000F0   0x5E28             LDRSH    R0,[R5, R0]
   \   000000F2   0x9000             STR      R0,[SP, #+0]
   \   000000F4   0xF44F 0x70B9      MOV      R0,#+370
   \   000000F8   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000FC   0x80A8             STRH     R0,[R5, #+4]
    241          
    242                  YMotorDir_text.btnHandle = BUTTON_CreateEx(10,100,240,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000FE   0x.... 0x....      BL       alloc_win_id
   \   00000102   0x9003             STR      R0,[SP, #+12]
   \   00000104   0x2328             MOVS     R3,#+40
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x22F0             MOVS     R2,#+240
   \   0000010C   0x2002             MOVS     R0,#+2
   \   0000010E   0x9001             STR      R0,[SP, #+4]
   \   00000110   0x2164             MOVS     R1,#+100
   \   00000112   0x5E28             LDRSH    R0,[R5, R0]
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x200A             MOVS     R0,#+10
   \   00000118   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000011C   0x8320             STRH     R0,[R4, #+24]
    243                  YMotorDir.btnHandle = BUTTON_CreateEx(370,100,90,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000011E   0x.... 0x....      BL       alloc_win_id
   \   00000122   0x9003             STR      R0,[SP, #+12]
   \   00000124   0x2328             MOVS     R3,#+40
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0x9002             STR      R0,[SP, #+8]
   \   0000012A   0x225A             MOVS     R2,#+90
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x9001             STR      R0,[SP, #+4]
   \   00000130   0x2164             MOVS     R1,#+100
   \   00000132   0x5E28             LDRSH    R0,[R5, R0]
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0xF44F 0x70B9      MOV      R0,#+370
   \   0000013A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000013E   0x83A8             STRH     R0,[R5, #+28]
    244          
    245                  ZMotorDir_text.btnHandle = BUTTON_CreateEx(10,150,240,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000140   0x.... 0x....      BL       alloc_win_id
   \   00000144   0x9003             STR      R0,[SP, #+12]
   \   00000146   0x2328             MOVS     R3,#+40
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x9002             STR      R0,[SP, #+8]
   \   0000014C   0x22F0             MOVS     R2,#+240
   \   0000014E   0x2002             MOVS     R0,#+2
   \   00000150   0x9001             STR      R0,[SP, #+4]
   \   00000152   0x2196             MOVS     R1,#+150
   \   00000154   0x5E28             LDRSH    R0,[R5, R0]
   \   00000156   0x9000             STR      R0,[SP, #+0]
   \   00000158   0x200A             MOVS     R0,#+10
   \   0000015A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000015E   0x8620             STRH     R0,[R4, #+48]
    246                  ZMotorDir.btnHandle = BUTTON_CreateEx(370,150,90,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000160   0x.... 0x....      BL       alloc_win_id
   \   00000164   0x9003             STR      R0,[SP, #+12]
   \   00000166   0x2328             MOVS     R3,#+40
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x9002             STR      R0,[SP, #+8]
   \   0000016C   0x225A             MOVS     R2,#+90
   \   0000016E   0x2002             MOVS     R0,#+2
   \   00000170   0x9001             STR      R0,[SP, #+4]
   \   00000172   0x2196             MOVS     R1,#+150
   \   00000174   0x5E28             LDRSH    R0,[R5, R0]
   \   00000176   0x9000             STR      R0,[SP, #+0]
   \   00000178   0xF44F 0x70B9      MOV      R0,#+370
   \   0000017C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000180   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    247          
    248                  E0MotorDir_text.btnHandle = BUTTON_CreateEx(10,200,240,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000184   0x.... 0x....      BL       alloc_win_id
   \   00000188   0x9003             STR      R0,[SP, #+12]
   \   0000018A   0x2328             MOVS     R3,#+40
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x9002             STR      R0,[SP, #+8]
   \   00000190   0x22F0             MOVS     R2,#+240
   \   00000192   0x2002             MOVS     R0,#+2
   \   00000194   0x9001             STR      R0,[SP, #+4]
   \   00000196   0x21C8             MOVS     R1,#+200
   \   00000198   0x5E28             LDRSH    R0,[R5, R0]
   \   0000019A   0x9000             STR      R0,[SP, #+0]
   \   0000019C   0x200A             MOVS     R0,#+10
   \   0000019E   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001A2   0xF8A4 0x0048      STRH     R0,[R4, #+72]
    249                  E0MotorDir.btnHandle = BUTTON_CreateEx(370,200,90,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000001A6   0x.... 0x....      BL       alloc_win_id
   \   000001AA   0x9003             STR      R0,[SP, #+12]
   \   000001AC   0x2328             MOVS     R3,#+40
   \   000001AE   0x2000             MOVS     R0,#+0
   \   000001B0   0x9002             STR      R0,[SP, #+8]
   \   000001B2   0x225A             MOVS     R2,#+90
   \   000001B4   0x2002             MOVS     R0,#+2
   \   000001B6   0x9001             STR      R0,[SP, #+4]
   \   000001B8   0x21C8             MOVS     R1,#+200
   \   000001BA   0x5E28             LDRSH    R0,[R5, R0]
   \   000001BC   0x9000             STR      R0,[SP, #+0]
   \   000001BE   0xF44F 0x70B9      MOV      R0,#+370
   \   000001C2   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001C6   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    250          
    251                  if(mksCfg.invert_x_dir==1)
   \   000001CA   0x7839             LDRB     R1,[R7, #+0]
   \   000001CC   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000001D0   0x2901             CMP      R1,#+1
   \   000001D2   0xBF07             ITTEE    EQ 
    252                      BUTTON_SetBmpFileName(XMotorDir.btnHandle, "bmp_enable.bin",1);//∑¥œÚ
   \   000001D4   0x2201             MOVEQ    R2,#+1
   \   000001D6   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    253                  else
    254                      BUTTON_SetBmpFileName(XMotorDir.btnHandle, "bmp_disable.bin",1);//’˝œÚ
   \   000001DA   0x2201             MOVNE    R2,#+1
   \   000001DC   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   000001E0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    255                  if(mksCfg.invert_y_dir==1)
   \   000001E4   0x7879             LDRB     R1,[R7, #+1]
   \   000001E6   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000001EA   0x2901             CMP      R1,#+1
   \   000001EC   0xBF07             ITTEE    EQ 
    256                      BUTTON_SetBmpFileName(YMotorDir.btnHandle, "bmp_enable.bin",1);
   \   000001EE   0x2201             MOVEQ    R2,#+1
   \   000001F0   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    257                  else
    258                      BUTTON_SetBmpFileName(YMotorDir.btnHandle, "bmp_disable.bin",1);
   \   000001F4   0x2201             MOVNE    R2,#+1
   \   000001F6   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   000001FA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    259                  if(mksCfg.invert_z_dir==1)
   \   000001FE   0x78B9             LDRB     R1,[R7, #+2]
   \   00000200   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000204   0x2901             CMP      R1,#+1
   \   00000206   0xBF07             ITTEE    EQ 
    260                      BUTTON_SetBmpFileName(ZMotorDir.btnHandle, "bmp_enable.bin",1);
   \   00000208   0x2201             MOVEQ    R2,#+1
   \   0000020A   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    261                  else
    262                      BUTTON_SetBmpFileName(ZMotorDir.btnHandle, "bmp_disable.bin",1);
   \   0000020E   0x2201             MOVNE    R2,#+1
   \   00000210   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   00000214   0x.... 0x....      BL       BUTTON_SetBmpFileName
    263                  if(mksCfg.invert_e0_dir==1)
   \   00000218   0x78F9             LDRB     R1,[R7, #+3]
   \   0000021A   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000021E   0x2901             CMP      R1,#+1
   \   00000220   0xBF07             ITTEE    EQ 
    264                      BUTTON_SetBmpFileName(E0MotorDir.btnHandle, "bmp_enable.bin",1); 
   \   00000222   0x2201             MOVEQ    R2,#+1
   \   00000224   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    265                  else
    266                      BUTTON_SetBmpFileName(E0MotorDir.btnHandle, "bmp_disable.bin",1);
   \   00000228   0x2201             MOVNE    R2,#+1
   \   0000022A   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   0000022E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    267                  
    268                  BUTTON_SetBmpFileName(XMotorDir_text.btnHandle,NULL,1);        
   \   00000232   0x2100             MOVS     R1,#+0
   \   00000234   0x2201             MOVS     R2,#+1
   \   00000236   0x5E60             LDRSH    R0,[R4, R1]
   \   00000238   0x.... 0x....      BL       BUTTON_SetBmpFileName
    269                  BUTTON_SetBmpFileName(YMotorDir_text.btnHandle,NULL,1);
   \   0000023C   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   00000240   0x2201             MOVS     R2,#+1
   \   00000242   0x2100             MOVS     R1,#+0
   \   00000244   0x.... 0x....      BL       BUTTON_SetBmpFileName
    270                  BUTTON_SetBmpFileName(ZMotorDir_text.btnHandle,NULL,1);
   \   00000248   0xF9B4 0x0030      LDRSH    R0,[R4, #+48]
   \   0000024C   0x2201             MOVS     R2,#+1
   \   0000024E   0x2100             MOVS     R1,#+0
   \   00000250   0x.... 0x....      BL       BUTTON_SetBmpFileName
    271                  BUTTON_SetBmpFileName(E0MotorDir_text.btnHandle,NULL,1);
   \   00000254   0xF9B4 0x0048      LDRSH    R0,[R4, #+72]
   \   00000258   0x2201             MOVS     R2,#+1
   \   0000025A   0x2100             MOVS     R1,#+0
   \   0000025C   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   00000260   0x2005             MOVS     R0,#+5
   \   00000262   0x9000             STR      R0,[SP, #+0]
   \   00000264   0x2300             MOVS     R3,#+0
   \   00000266   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000026A   0x....             LDR.N    R2,??DataTable7_16
   \   0000026C   0x2100             MOVS     R1,#+0
    272                  
    273                  BUTTON_SetBitmapEx(XMotorDir.btnHandle,0,&bmp_struct90X30,0,5);
   \   0000026E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    274                  BUTTON_SetBitmapEx(YMotorDir.btnHandle,0,&bmp_struct90X30,0,5);
   \   00000272   0x2005             MOVS     R0,#+5
   \   00000274   0x9000             STR      R0,[SP, #+0]
   \   00000276   0x2300             MOVS     R3,#+0
   \   00000278   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000027C   0x....             LDR.N    R2,??DataTable7_16
   \   0000027E   0x4619             MOV      R1,R3
   \   00000280   0x.... 0x....      BL       BUTTON_SetBitmapEx
    275                  BUTTON_SetBitmapEx(ZMotorDir.btnHandle,0,&bmp_struct90X30,0,5);
   \   00000284   0x2005             MOVS     R0,#+5
   \   00000286   0x2300             MOVS     R3,#+0
   \   00000288   0x9000             STR      R0,[SP, #+0]
   \   0000028A   0x4619             MOV      R1,R3
   \   0000028C   0x....             LDR.N    R2,??DataTable7_16
   \   0000028E   0xF939 0x0001      LDRSH    R0,[R9, R1]
   \   00000292   0x.... 0x....      BL       BUTTON_SetBitmapEx
    276                  BUTTON_SetBitmapEx(E0MotorDir.btnHandle,0,&bmp_struct90X30,0,5); 
   \   00000296   0x....             LDR.N    R2,??DataTable7_16
   \   00000298   0x2005             MOVS     R0,#+5
   \   0000029A   0x9000             STR      R0,[SP, #+0]
   \   0000029C   0x2300             MOVS     R3,#+0
   \   0000029E   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002A2   0x4619             MOV      R1,R3
   \   000002A4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    277                  
    278                  BUTTON_SetTextAlign(XMotorDir_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   000002A8   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000002AC   0x210C             MOVS     R1,#+12
   \   000002AE   0x.... 0x....      BL       BUTTON_SetTextAlign
    279                  BUTTON_SetTextAlign(YMotorDir_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   000002B2   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   000002B6   0x210C             MOVS     R1,#+12
   \   000002B8   0x.... 0x....      BL       BUTTON_SetTextAlign
    280                  BUTTON_SetTextAlign(ZMotorDir_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   000002BC   0xF9B4 0x0030      LDRSH    R0,[R4, #+48]
   \   000002C0   0x210C             MOVS     R1,#+12
   \   000002C2   0x.... 0x....      BL       BUTTON_SetTextAlign
    281                  BUTTON_SetTextAlign(E0MotorDir_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );   
   \   000002C6   0xF9B4 0x0048      LDRSH    R0,[R4, #+72]
   \   000002CA   0x210C             MOVS     R1,#+12
   \   000002CC   0x.... 0x....      BL       BUTTON_SetTextAlign
    282          
    283                  BUTTON_SetTextAlign(XMotorDir.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002D0   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000002D4   0x210E             MOVS     R1,#+14
   \   000002D6   0x.... 0x....      BL       BUTTON_SetTextAlign
    284                  BUTTON_SetTextAlign(YMotorDir.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002DA   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002DE   0x210E             MOVS     R1,#+14
   \   000002E0   0x.... 0x....      BL       BUTTON_SetTextAlign
    285                  BUTTON_SetTextAlign(ZMotorDir.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002E4   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000002E8   0x210E             MOVS     R1,#+14
   \   000002EA   0x.... 0x....      BL       BUTTON_SetTextAlign
    286                  BUTTON_SetTextAlign(E0MotorDir.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000002EE   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002F2   0x210E             MOVS     R1,#+14
   \   000002F4   0x.... 0x....      BL       BUTTON_SetTextAlign
    287          
    288                  button_next.btnHandle = BUTTON_CreateEx(320,270,70,40,hMotorDirWnd,BUTTON_CF_SHOW,0,alloc_win_id());
   \   000002F8   0x.... 0x....      BL       alloc_win_id
   \   000002FC   0x9003             STR      R0,[SP, #+12]
   \   000002FE   0x2328             MOVS     R3,#+40
   \   00000300   0x2000             MOVS     R0,#+0
   \   00000302   0x9002             STR      R0,[SP, #+8]
   \   00000304   0x2246             MOVS     R2,#+70
   \   00000306   0x2002             MOVS     R0,#+2
   \   00000308   0x9001             STR      R0,[SP, #+4]
   \   0000030A   0xF44F 0x7187      MOV      R1,#+270
   \   0000030E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000310   0x9000             STR      R0,[SP, #+0]
   \   00000312   0xF44F 0x70A0      MOV      R0,#+320
   \   00000316   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000031A   0xF8AB 0x0018      STRH     R0,[R11, #+24]
    289                  BUTTON_SetBmpFileName(button_next.btnHandle, "bmp_next.bin",1); 
   \   0000031E   0x2201             MOVS     R2,#+1
   \   00000320   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_next.bin">`
   \   00000324   0x.... 0x....      BL       BUTTON_SetBmpFileName
    290              
    291                  BUTTON_SetBitmapEx(button_next.btnHandle, 0, &bmp_struct70X40,0, 0);
   \   00000328   0x....             LDR.N    R2,??DataTable7_17
   \   0000032A   0x2000             MOVS     R0,#+0
   \   0000032C   0x9000             STR      R0,[SP, #+0]
   \   0000032E   0x4603             MOV      R3,R0
   \   00000330   0x4601             MOV      R1,R0
   \   00000332   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   00000336   0xE065             B.N      ??draw_MotorDir_2
    292                  
    293          
    294              }
    295              else
    296              {
    297                  E1MotorDir_text.btnHandle = BUTTON_CreateEx(10,50,240,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \                     ??draw_MotorDir_1: (+1)
   \   00000338   0x.... 0x....      BL       alloc_win_id
   \   0000033C   0x9003             STR      R0,[SP, #+12]
   \   0000033E   0x2328             MOVS     R3,#+40
   \   00000340   0x2000             MOVS     R0,#+0
   \   00000342   0x9002             STR      R0,[SP, #+8]
   \   00000344   0x22F0             MOVS     R2,#+240
   \   00000346   0x2002             MOVS     R0,#+2
   \   00000348   0x9001             STR      R0,[SP, #+4]
   \   0000034A   0x2132             MOVS     R1,#+50
   \   0000034C   0x5E28             LDRSH    R0,[R5, R0]
   \   0000034E   0x9000             STR      R0,[SP, #+0]
   \   00000350   0x200A             MOVS     R0,#+10
   \   00000352   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000356   0xF8A4 0x0060      STRH     R0,[R4, #+96]
    298                  E1MotorDir.btnHandle = BUTTON_CreateEx(370,50,90,40,hMotorDirWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000035A   0x.... 0x....      BL       alloc_win_id
   \   0000035E   0x9003             STR      R0,[SP, #+12]
   \   00000360   0x2328             MOVS     R3,#+40
   \   00000362   0x2000             MOVS     R0,#+0
   \   00000364   0x9002             STR      R0,[SP, #+8]
   \   00000366   0x225A             MOVS     R2,#+90
   \   00000368   0x2002             MOVS     R0,#+2
   \   0000036A   0x9001             STR      R0,[SP, #+4]
   \   0000036C   0x2132             MOVS     R1,#+50
   \   0000036E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000370   0x9000             STR      R0,[SP, #+0]
   \   00000372   0xF44F 0x70B9      MOV      R0,#+370
   \   00000376   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000037A   0xF8AB 0x0000      STRH     R0,[R11, #+0]
    299          
    300                  if(mksCfg.invert_e1_dir==1)
   \   0000037E   0x7939             LDRB     R1,[R7, #+4]
   \   00000380   0x2901             CMP      R1,#+1
   \   00000382   0xBF07             ITTEE    EQ 
    301                      BUTTON_SetBmpFileName(E1MotorDir.btnHandle, "bmp_enable.bin",1);
   \   00000384   0x2201             MOVEQ    R2,#+1
   \   00000386   0x.... 0x....      ADREQ.W  R1,`?<Constant "bmp_enable.bin">`
    302                  else
    303                      BUTTON_SetBmpFileName(E1MotorDir.btnHandle, "bmp_disable.bin",1);
   \   0000038A   0x2201             MOVNE    R2,#+1
   \   0000038C   0x.... 0x....      ADRNE.W  R1,`?<Constant "bmp_disable.bin">`
   \   00000390   0x.... 0x....      BL       BUTTON_SetBmpFileName
    304                
    305                  BUTTON_SetBmpFileName(E1MotorDir_text.btnHandle,NULL,1); 
   \   00000394   0xF9B4 0x0060      LDRSH    R0,[R4, #+96]
   \   00000398   0x2201             MOVS     R2,#+1
   \   0000039A   0x2100             MOVS     R1,#+0
   \   0000039C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    306                  
    307                  BUTTON_SetBitmapEx(E1MotorDir.btnHandle,0,&bmp_struct90X30,0,5);
   \   000003A0   0x2005             MOVS     R0,#+5
   \   000003A2   0x9000             STR      R0,[SP, #+0]
   \   000003A4   0x2100             MOVS     R1,#+0
   \   000003A6   0x2300             MOVS     R3,#+0
   \   000003A8   0xF93B 0x0001      LDRSH    R0,[R11, R1]
   \   000003AC   0x....             LDR.N    R2,??DataTable7_16
   \   000003AE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    308           
    309          
    310                  BUTTON_SetTextAlign(E1MotorDir_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   000003B2   0xF9B4 0x0060      LDRSH    R0,[R4, #+96]
   \   000003B6   0x210C             MOVS     R1,#+12
   \   000003B8   0x.... 0x....      BL       BUTTON_SetTextAlign
    311                  BUTTON_SetTextAlign(E1MotorDir.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000003BC   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   000003C0   0x210E             MOVS     R1,#+14
   \   000003C2   0x.... 0x....      BL       BUTTON_SetTextAlign
    312          
    313                  button_previous.btnHandle = BUTTON_CreateEx(320,270,70,40,hMotorDirWnd,BUTTON_CF_SHOW,0,alloc_win_id());
   \   000003C6   0x.... 0x....      BL       alloc_win_id
   \   000003CA   0x9003             STR      R0,[SP, #+12]
   \   000003CC   0x2328             MOVS     R3,#+40
   \   000003CE   0x2000             MOVS     R0,#+0
   \   000003D0   0x9002             STR      R0,[SP, #+8]
   \   000003D2   0x2246             MOVS     R2,#+70
   \   000003D4   0x2002             MOVS     R0,#+2
   \   000003D6   0x9001             STR      R0,[SP, #+4]
   \   000003D8   0xF44F 0x7187      MOV      R1,#+270
   \   000003DC   0x5E28             LDRSH    R0,[R5, R0]
   \   000003DE   0x9000             STR      R0,[SP, #+0]
   \   000003E0   0xF44F 0x70A0      MOV      R0,#+320
   \   000003E4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000003E8   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    314                  BUTTON_SetBmpFileName(button_previous.btnHandle, "bmp_previous.bin",1); 
   \   000003EC   0x2201             MOVS     R2,#+1
   \   000003EE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_previous.bin">`
   \   000003F2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    315                  
    316                  BUTTON_SetBitmapEx(button_previous.btnHandle, 0, &bmp_struct70X40,0, 0);
   \   000003F6   0x....             LDR.N    R2,??DataTable7_17
   \   000003F8   0x2000             MOVS     R0,#+0
   \   000003FA   0x9000             STR      R0,[SP, #+0]
   \   000003FC   0x4603             MOV      R3,R0
   \   000003FE   0x4601             MOV      R1,R0
   \   00000400   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \                     ??draw_MotorDir_2: (+1)
   \   00000404   0x.... 0x....      BL       BUTTON_SetBitmapEx
    317                  
    318              }
    319          
    320               button_back.btnHandle = BUTTON_CreateEx(400,270,70,40,hMotorDirWnd,BUTTON_CF_SHOW,0,alloc_win_id());
   \   00000408   0x.... 0x....      BL       alloc_win_id
   \   0000040C   0x9003             STR      R0,[SP, #+12]
   \   0000040E   0x2328             MOVS     R3,#+40
   \   00000410   0x2000             MOVS     R0,#+0
   \   00000412   0x9002             STR      R0,[SP, #+8]
   \   00000414   0x2246             MOVS     R2,#+70
   \   00000416   0x2002             MOVS     R0,#+2
   \   00000418   0x9001             STR      R0,[SP, #+4]
   \   0000041A   0xF44F 0x7187      MOV      R1,#+270
   \   0000041E   0x5E28             LDRSH    R0,[R5, R0]
   \   00000420   0x9000             STR      R0,[SP, #+0]
   \   00000422   0xF44F 0x70C8      MOV      R0,#+400
   \   00000426   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000042A   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    321               
    322               BUTTON_SetBmpFileName(button_back.btnHandle, "bmp_back70x40.bin",1);        
   \   0000042E   0x2201             MOVS     R2,#+1
   \   00000430   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_back70x40.bin">`
   \   00000434   0x.... 0x....      BL       BUTTON_SetBmpFileName
    323               BUTTON_SetBitmapEx(button_back.btnHandle, 0, &bmp_struct70X40,0, 0);
   \   00000438   0x....             LDR.N    R2,??DataTable7_17
   \   0000043A   0x2000             MOVS     R0,#+0
   \   0000043C   0x9000             STR      R0,[SP, #+0]
   \   0000043E   0x4601             MOV      R1,R0
   \   00000440   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000444   0x2300             MOVS     R3,#+0
   \   00000446   0x.... 0x....      BL       BUTTON_SetBitmapEx
    324                  
    325               BUTTON_SetBkColor(button_next.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   0000044A   0x6BB2             LDR      R2,[R6, #+56]
   \   0000044C   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   00000450   0x2101             MOVS     R1,#+1
   \   00000452   0x.... 0x....      BL       BUTTON_SetBkColor
    326               BUTTON_SetBkColor(button_next.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color); 
   \   00000456   0x6BB2             LDR      R2,[R6, #+56]
   \   00000458   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   0000045C   0x2100             MOVS     R1,#+0
   \   0000045E   0x.... 0x....      BL       BUTTON_SetBkColor
    327               BUTTON_SetTextColor(button_next.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   00000462   0x6BF2             LDR      R2,[R6, #+60]
   \   00000464   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   00000468   0x2101             MOVS     R1,#+1
   \   0000046A   0x.... 0x....      BL       BUTTON_SetTextColor
    328               BUTTON_SetTextColor(button_next.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
   \   0000046E   0x6BF2             LDR      R2,[R6, #+60]
   \   00000470   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   00000474   0x2100             MOVS     R1,#+0
   \   00000476   0x.... 0x....      BL       BUTTON_SetTextColor
    329               BUTTON_SetBkColor(button_previous.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   0000047A   0x6BB2             LDR      R2,[R6, #+56]
   \   0000047C   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000480   0x2101             MOVS     R1,#+1
   \   00000482   0x.... 0x....      BL       BUTTON_SetBkColor
    330               BUTTON_SetBkColor(button_previous.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);    
   \   00000486   0x6BB2             LDR      R2,[R6, #+56]
   \   00000488   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000048C   0x2100             MOVS     R1,#+0
   \   0000048E   0x.... 0x....      BL       BUTTON_SetBkColor
    331               BUTTON_SetTextColor(button_previous.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   00000492   0x6BF2             LDR      R2,[R6, #+60]
   \   00000494   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000498   0x2101             MOVS     R1,#+1
   \   0000049A   0x.... 0x....      BL       BUTTON_SetTextColor
    332               BUTTON_SetTextColor(button_previous.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);    
   \   0000049E   0x6BF2             LDR      R2,[R6, #+60]
   \   000004A0   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000004A4   0x2100             MOVS     R1,#+0
   \   000004A6   0x.... 0x....      BL       BUTTON_SetTextColor
    333               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   000004AA   0x6BB2             LDR      R2,[R6, #+56]
   \   000004AC   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000004B0   0x2101             MOVS     R1,#+1
   \   000004B2   0x.... 0x....      BL       BUTTON_SetBkColor
    334               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color); 
   \   000004B6   0x6BB2             LDR      R2,[R6, #+56]
   \   000004B8   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000004BC   0x2100             MOVS     R1,#+0
   \   000004BE   0x.... 0x....      BL       BUTTON_SetBkColor
    335               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   000004C2   0x6BF2             LDR      R2,[R6, #+60]
   \   000004C4   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000004C8   0x2101             MOVS     R1,#+1
   \   000004CA   0x.... 0x....      BL       BUTTON_SetTextColor
    336               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor); 
   \   000004CE   0x6BF2             LDR      R2,[R6, #+60]
   \   000004D0   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000004D4   0x2100             MOVS     R1,#+0
   \   000004D6   0x.... 0x....      BL       BUTTON_SetTextColor
    337               
    338               BUTTON_SetTextAlign(button_next.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000004DA   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   000004DE   0x210E             MOVS     R1,#+14
   \   000004E0   0x.... 0x....      BL       BUTTON_SetTextAlign
    339               BUTTON_SetTextAlign(button_previous.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000004E4   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000004E8   0x210E             MOVS     R1,#+14
   \   000004EA   0x.... 0x....      BL       BUTTON_SetTextAlign
    340               BUTTON_SetTextAlign(button_back.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   000004EE   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000004F2   0x210E             MOVS     R1,#+14
   \   000004F4   0x.... 0x....      BL       BUTTON_SetTextAlign
    341          
    342               if(gCfgItems.multiple_language != 0)
   \   000004F8   0x....             LDR.N    R0,??DataTable7_4
   \   000004FA   0xF890 0x01CF      LDRB     R0,[R0, #+463]
   \   000004FE   0x2800             CMP      R0,#+0
   \   00000500   0xD05D             BEQ.N    ??draw_MotorDir_3
    343               {
    344                  if(current_page != 1)
   \   00000502   0x7828             LDRB     R0,[R5, #+0]
   \   00000504   0xF50A 0x76F0      ADD      R6,R10,#+480
   \   00000508   0x2801             CMP      R0,#+1
   \   0000050A   0xD038             BEQ.N    ??draw_MotorDir_4
    345                  {
    346                      BUTTON_SetText(XMotorDir_text.btnHandle, machine_menu.X_MotorDir);
   \   0000050C   0x6871             LDR      R1,[R6, #+4]
   \   0000050E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000512   0x.... 0x....      BL       BUTTON_SetText
    347                      BUTTON_SetText(YMotorDir_text.btnHandle, machine_menu.Y_MotorDir);
   \   00000516   0x68B1             LDR      R1,[R6, #+8]
   \   00000518   0xF9B4 0x0018      LDRSH    R0,[R4, #+24]
   \   0000051C   0x.... 0x....      BL       BUTTON_SetText
    348                      BUTTON_SetText(ZMotorDir_text.btnHandle, machine_menu.Z_MotorDir);
   \   00000520   0x68F1             LDR      R1,[R6, #+12]
   \   00000522   0xF9B4 0x0030      LDRSH    R0,[R4, #+48]
   \   00000526   0x.... 0x....      BL       BUTTON_SetText
    349                      BUTTON_SetText(E0MotorDir_text.btnHandle, machine_menu.E0_MotorDir);
   \   0000052A   0x6931             LDR      R1,[R6, #+16]
   \   0000052C   0xF9B4 0x0048      LDRSH    R0,[R4, #+72]
   \   00000530   0x.... 0x....      BL       BUTTON_SetText
    350                      BUTTON_SetText(button_next.btnHandle,machine_menu.next);
   \   00000534   0xF8DA 0x1004      LDR      R1,[R10, #+4]
   \   00000538   0xF9BB 0x0018      LDRSH    R0,[R11, #+24]
   \   0000053C   0x.... 0x....      BL       BUTTON_SetText
    351          
    352                      if(mksCfg.invert_x_dir==1)
   \   00000540   0x7839             LDRB     R1,[R7, #+0]
   \   00000542   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000546   0x2901             CMP      R1,#+1
   \   00000548   0xBF0C             ITE      EQ 
    353                          BUTTON_SetText(XMotorDir.btnHandle, machine_menu.Invert_1);//∑¥œÚ
   \   0000054A   0x69B1             LDREQ    R1,[R6, #+24]
    354                      else
    355                          BUTTON_SetText(XMotorDir.btnHandle, machine_menu.Invert_0);//’˝œÚ
   \   0000054C   0x69F1             LDRNE    R1,[R6, #+28]
   \   0000054E   0x.... 0x....      BL       BUTTON_SetText
    356                      if(mksCfg.invert_y_dir==1)
   \   00000552   0x7879             LDRB     R1,[R7, #+1]
   \   00000554   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000558   0x2901             CMP      R1,#+1
   \   0000055A   0xBF0C             ITE      EQ 
    357                          BUTTON_SetText(YMotorDir.btnHandle, machine_menu.Invert_1);
   \   0000055C   0x69B1             LDREQ    R1,[R6, #+24]
    358                      else
    359                          BUTTON_SetText(YMotorDir.btnHandle, machine_menu.Invert_0);
   \   0000055E   0x69F1             LDRNE    R1,[R6, #+28]
   \   00000560   0x.... 0x....      BL       BUTTON_SetText
    360                      if(mksCfg.invert_z_dir==1)
   \   00000564   0x78B9             LDRB     R1,[R7, #+2]
   \   00000566   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000056A   0x2901             CMP      R1,#+1
   \   0000056C   0xBF0C             ITE      EQ 
    361                          BUTTON_SetText(ZMotorDir.btnHandle, machine_menu.Invert_1);
   \   0000056E   0x69B1             LDREQ    R1,[R6, #+24]
    362                      else
    363                          BUTTON_SetText(ZMotorDir.btnHandle, machine_menu.Invert_0);
   \   00000570   0x69F1             LDRNE    R1,[R6, #+28]
   \   00000572   0x.... 0x....      BL       BUTTON_SetText
    364                      if(mksCfg.invert_e0_dir==1)
   \   00000576   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000057A   0x78F9             LDRB     R1,[R7, #+3]
   \   0000057C   0xE00D             B.N      ??draw_MotorDir_5
    365                          BUTTON_SetText(E0MotorDir.btnHandle, machine_menu.Invert_1); 
    366                      else
    367                          BUTTON_SetText(E0MotorDir.btnHandle, machine_menu.Invert_0);            
    368                  }
    369                  else
    370                  {
    371                      BUTTON_SetText(E1MotorDir_text.btnHandle,machine_menu.E1_MotorDir);
   \                     ??draw_MotorDir_4: (+1)
   \   0000057E   0x6971             LDR      R1,[R6, #+20]
   \   00000580   0xF9B4 0x0060      LDRSH    R0,[R4, #+96]
   \   00000584   0x.... 0x....      BL       BUTTON_SetText
    372                      BUTTON_SetText(button_previous.btnHandle,machine_menu.previous);
   \   00000588   0xF8DA 0x1008      LDR      R1,[R10, #+8]
   \   0000058C   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000590   0x.... 0x....      BL       BUTTON_SetText
    373          
    374                      if(mksCfg.invert_e1_dir==1)
   \   00000594   0xF9BB 0x0000      LDRSH    R0,[R11, #+0]
   \   00000598   0x7939             LDRB     R1,[R7, #+4]
   \                     ??draw_MotorDir_5: (+1)
   \   0000059A   0x2901             CMP      R1,#+1
   \   0000059C   0xD103             BNE.N    ??draw_MotorDir_6
    375                          BUTTON_SetText(E1MotorDir.btnHandle, machine_menu.Invert_1); 
   \   0000059E   0x69B1             LDR      R1,[R6, #+24]
   \   000005A0   0x.... 0x....      BL       BUTTON_SetText
   \   000005A4   0xE002             B.N      ??draw_MotorDir_7
    376                      else
    377                          BUTTON_SetText(E1MotorDir.btnHandle, machine_menu.Invert_0);			
   \                     ??draw_MotorDir_6: (+1)
   \   000005A6   0x69F1             LDR      R1,[R6, #+28]
   \   000005A8   0x.... 0x....      BL       BUTTON_SetText
    378                  }
    379                   
    380                  BUTTON_SetText(button_back.btnHandle,common_menu.text_back);
   \                     ??draw_MotorDir_7: (+1)
   \   000005AC   0x....             LDR.N    R0,??DataTable7_18
   \   000005AE   0x6801             LDR      R1,[R0, #+0]
   \   000005B0   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000005B4   0xB005             ADD      SP,SP,#+20
   \   000005B6   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000005BA   0x.... 0x....      B.W      BUTTON_SetText
    381                  
    382                        
    383               }
    384          
    385          }
   \                     ??draw_MotorDir_3: (+1)
   \   000005BE   0xB005             ADD      SP,SP,#+20
   \   000005C0   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    386          
    387          

   \                                 In section .text, align 2, keep-with-next
    388          void Clear_MotorDir()
    389          {
   \                     Clear_MotorDir: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    390          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable7_4
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    391          	if(WM_IsWindow(hMotorDirWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable7_1
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_MotorDir_0
    392          	{
    393          		WM_DeleteWindow(hMotorDirWnd);
   \   00000016   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    394          	}
    395          }
   \                     ??Clear_MotorDir_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x00FF5449         DC32     0xff5449

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     current_page

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     button_previous

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     E1MotorDir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     machine_menu+0x1F8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     machine_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     _ZN7Stepper19last_direction_bitsE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     ZMotorDir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     XMotorDir_text

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     gCfgItems+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     _Z13cbMotorDirWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     bmp_struct90X30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     bmp_struct70X40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_disable.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_disable.bin"
   \              0x70 0x5F    
   \              0x64 0x69    
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_enable.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_enable.bin"
   \              0x70 0x5F    
   \              0x65 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_next.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_next.bin"
   \              0x70 0x5F    
   \              0x6E 0x65    
   \              0x78 0x74    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_previous.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_previous.bin"
   \              0x70 0x5F    
   \              0x70 0x72    
   \              0x65 0x76    
   \              0x69 0x6F    
   \              0x75 0x73    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_back70x40.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_back70x40.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x37 0x30    
   \              0x78 0x34    
   \              0x30 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0
    396          
    397          
    398          
    399          
    400          
    401          
    402          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_MotorDir
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbMotorDirWin(WM_MESSAGE *)
        24   -> BUTTON_SetBmpFileName
        24   -> BUTTON_SetText
         0   -> GUI_FillRect
        24   -> GUI_FillRect
        24   -> GUI_SetBkColor
        24   -> GUI_SetColor
         0   -> WM_DefaultProc
        24   -> WM_DeleteWindow
        24   -> WM_IsWindow
         0   -> draw_MotorDir
         0   -> draw_return_ui
         0   -> epr_write_data
      56   draw_MotorDir
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> alloc_win_id


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "bmp_back70x40.bin">
      16  ?<Constant "bmp_disable.bin">
      16  ?<Constant "bmp_enable.bin">
      16  ?<Constant "bmp_next.bin">
      20  ?<Constant "bmp_previous.bin">
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      36  Clear_MotorDir
      48  E1MotorDir
          button_next
     120  XMotorDir_text
          YMotorDir_text
          ZMotorDir_text
          E0MotorDir_text
          E1MotorDir_text
      48  ZMotorDir
          E0MotorDir
      48  button_previous
          button_back
     854  cbMotorDirWin(WM_MESSAGE *)
      52  current_page
          hMotorDirWnd
          XMotorDir
          YMotorDir
    1476  draw_MotorDir
       1  -- Other

 
   316 bytes in section .bss
     1 byte  in section .rodata
 2 530 bytes in section .text
 
 2 530 bytes of CODE  memory
     0 bytes of CONST memory (+ 1 byte shared)
   316 bytes of DATA  memory

Errors: none
Warnings: 26
