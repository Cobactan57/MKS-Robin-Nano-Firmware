###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        13/Apr/2020  10:56:29
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp
#    Command line =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        -lA
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\
#        --debug --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/variant\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Drivers/libstmf4/include\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/Multi_language\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../User/ui/QRENCODE\
#        -I
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\..\Middlewares\GUI\
#        -Oh --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/List\draw_jerk.lst
#    Object file  =  
#        D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM\mksRobinNano/Obj\draw_jerk.o
#
###############################################################################

D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Inc\mks_cfg.h",626  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_en.h",337  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 315)

  #define DIALOG_UNBIND_PRINTER_CN            "Ëß£Èô§ÁªëÂÆö?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_s_cn.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 403)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ÂæÖÊâìÂç∞Ê©üÊö´ÂÅúÂêé,\nË´ãÊåâ<ÈÄ≤Êñô>Êàñ<ÈÄÄÊñô>"
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_t_cn.h",318  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 304)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_ru.h",231  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 226)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_fr.h",234  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 230)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_sp.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 114)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",134  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 114)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Language_it.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 225)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",899  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 892)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\Multi_language\Multi_language.h",1107  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 1101)

  #define Simple_Dec"ºı…Ÿ"
                    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",666  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",721  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          718)

  #define Complex_Speed "ÀŸ∂»"
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_ui.h",722  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          719)
      4          #include "Marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\Marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
      5          #include "cardreader.h"

  #define SD_DETECT_INVERTED false
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\EWARM/../M
          iddlewares/Third_Party/Marlin\Marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\Middleware
          s\Third_Party\Marlin\SdFatConfig.h")
      6          
      7          #ifndef GUI_FLASH
      8          #define GUI_FLASH
      9          #endif
     10          

   \                                 In section .bss, align 4
     11          static GUI_HWIN hJerkWnd;
   \                     hJerkWnd:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 4
     12          static BUTTON_STRUCT XJerk_text,YJerk_text,ZJerk_text,EJerk_text;
   \                     XJerk_text:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
   \   00000030                      DS8 24
   \   00000048                      DS8 24

   \                                 In section .bss, align 4
     13          static BUTTON_STRUCT XJerk_value,YJerk_value,ZJerk_value,EJerk_value;
   \                     ZJerk_value:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     14          static BUTTON_STRUCT XJerk_default,YJerk_default,ZJerk_default,EJerk_default;
     15          

   \                                 In section .bss, align 4
     16          static BUTTON_STRUCT button_back;
   \                     button_back:
   \   00000000                      DS8 24
     17          
     18          

   \                                 In section .text, align 2, keep-with-next
     19          static void cbJerkWin(WM_MESSAGE * pMsg) {
     20          
     21              struct PressEvt *press_event;
                                      ^
Warning[Pe550]: variable "press_event" was set but never used
     22              switch (pMsg->MsgId)
   \                     _Z9cbJerkWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbJerkWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbJerkWin_0: (+1)
   \   00000008   0xB510             PUSH     {R4,LR}
   \   0000000A   0x290D             CMP      R1,#+13
   \   0000000C   0xF000 0x80B7      BEQ.W    ??cbJerkWin_1
   \   00000010   0x290F             CMP      R1,#+15
   \   00000012   0xD002             BEQ.N    ??cbJerkWin_2
   \   00000014   0x2926             CMP      R1,#+38
   \   00000016   0xD022             BEQ.N    ??cbJerkWin_3
   \   00000018   0xE0AD             B.N      ??cbJerkWin_4
     23              {
     24              	case WM_PAINT:
     25          			GUI_SetColor(0xff5449);
   \                     ??cbJerkWin_2: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable5  ;; 0xff5449
   \   0000001E   0x.... 0x....      BL       GUI_SetColor
     26          
     27          			GUI_FillRect(10, 90, 470,90);
   \   00000022   0x235A             MOVS     R3,#+90
   \   00000024   0xF44F 0x72EB      MOV      R2,#+470
   \   00000028   0x215A             MOVS     R1,#+90
   \   0000002A   0x200A             MOVS     R0,#+10
   \   0000002C   0x.... 0x....      BL       GUI_FillRect
     28                   
     29                      GUI_FillRect(10, 140, 470,140);
   \   00000030   0x238C             MOVS     R3,#+140
   \   00000032   0xF44F 0x72EB      MOV      R2,#+470
   \   00000036   0x4619             MOV      R1,R3
   \   00000038   0x200A             MOVS     R0,#+10
   \   0000003A   0x.... 0x....      BL       GUI_FillRect
     30                      GUI_FillRect(10, 190, 470,190);
   \   0000003E   0x23BE             MOVS     R3,#+190
   \   00000040   0xF44F 0x72EB      MOV      R2,#+470
   \   00000044   0x4619             MOV      R1,R3
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0x.... 0x....      BL       GUI_FillRect
     31                      GUI_FillRect(10, 240, 470,240);
   \   0000004C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000050   0x23F0             MOVS     R3,#+240
   \   00000052   0xF44F 0x72EB      MOV      R2,#+470
   \   00000056   0x4619             MOV      R1,R3
   \   00000058   0x200A             MOVS     R0,#+10
   \   0000005A   0x.... 0x....      B.W      GUI_FillRect
     32            
     33          
     34              		break;
     35              	case WM_TOUCH:
     36              	 	press_event = (struct PressEvt *)pMsg->Data.p;
     37              		
     38              		break;
     39              	case WM_TOUCH_CHILD:
     40              		press_event = (struct PressEvt *)pMsg->Data.p;
     41          
     42              		break;
     43              		
     44              	case WM_NOTIFY_PARENT:
     45              		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \                     ??cbJerkWin_3: (+1)
   \   0000005E   0x6881             LDR      R1,[R0, #+8]
   \   00000060   0x2902             CMP      R1,#+2
   \   00000062   0xF040 0x808C      BNE.W    ??cbJerkWin_1
     46              		{
     47              			if(pMsg->hWinSrc == button_back.btnHandle)
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000006A   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000006E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000072   0x.... 0x....      LDR.W    R4,??DataTable5_2
   \   00000076   0x4288             CMP      R0,R1
   \   00000078   0xD115             BNE.N    ??cbJerkWin_5
     48              			{
     49              				last_disp_state = JERK_UI;
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000007E   0x2035             MOVS     R0,#+53
   \   00000080   0x7008             STRB     R0,[R1, #+0]
     50              				Clear_Jerk();
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000086   0x6940             LDR      R0,[R0, #+20]
   \   00000088   0x.... 0x....      BL       GUI_SetBkColor
   \   0000008C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000090   0x.... 0x....      BL       WM_IsWindow
   \   00000094   0xB118             CBZ.N    R0,??cbJerkWin_6
   \   00000096   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000009A   0x.... 0x....      BL       WM_DeleteWindow
     51              				draw_return_ui();
   \                     ??cbJerkWin_6: (+1)
   \   0000009E   0xE8BD 0x4010      POP      {R4,LR}
   \   000000A2   0x.... 0x....      B.W      draw_return_ui
     52              			}	              
     53              			else if(pMsg->hWinSrc == XJerk_value.btnHandle)
   \                     ??cbJerkWin_5: (+1)
   \   000000A6   0xF9B4 0x1004      LDRSH    R1,[R4, #+4]
   \   000000AA   0x4288             CMP      R0,R1
   \   000000AC   0xD113             BNE.N    ??cbJerkWin_7
     54              			{
     55              				last_disp_state = JERK_UI;
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   000000B2   0x2035             MOVS     R0,#+53
   \   000000B4   0x7008             STRB     R0,[R1, #+0]
     56                              Clear_Jerk();
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000BA   0x6940             LDR      R0,[R0, #+20]
   \   000000BC   0x.... 0x....      BL       GUI_SetBkColor
   \   000000C0   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000C4   0x.... 0x....      BL       WM_IsWindow
   \   000000C8   0xB118             CBZ.N    R0,??cbJerkWin_8
   \   000000CA   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000CE   0x.... 0x....      BL       WM_DeleteWindow
     57                				value=XJerk;
   \                     ??cbJerkWin_8: (+1)
   \   000000D2   0x202F             MOVS     R0,#+47
   \   000000D4   0xE048             B.N      ??cbJerkWin_9
     58                              draw_NumberKey();  
     59              				
     60              			}
     61              			else if(pMsg->hWinSrc == YJerk_value.btnHandle)
   \                     ??cbJerkWin_7: (+1)
   \   000000D6   0xF9B4 0x101C      LDRSH    R1,[R4, #+28]
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xD113             BNE.N    ??cbJerkWin_10
     62          
     63              			{
     64              				last_disp_state = JERK_UI;
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   000000E2   0x2035             MOVS     R0,#+53
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
     65              				Clear_Jerk();
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000000EA   0x6940             LDR      R0,[R0, #+20]
   \   000000EC   0x.... 0x....      BL       GUI_SetBkColor
   \   000000F0   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000F4   0x.... 0x....      BL       WM_IsWindow
   \   000000F8   0xB118             CBZ.N    R0,??cbJerkWin_11
   \   000000FA   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000FE   0x.... 0x....      BL       WM_DeleteWindow
     66                				value=YJerk;
   \                     ??cbJerkWin_11: (+1)
   \   00000102   0x2030             MOVS     R0,#+48
   \   00000104   0xE030             B.N      ??cbJerkWin_9
     67                              draw_NumberKey();                    
     68              				
     69              			}
     70              			else if(pMsg->hWinSrc == ZJerk_value.btnHandle)
   \                     ??cbJerkWin_10: (+1)
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000010A   0xF9B1 0x2000      LDRSH    R2,[R1, #+0]
   \   0000010E   0x4290             CMP      R0,R2
   \   00000110   0xD113             BNE.N    ??cbJerkWin_12
     71          
     72              			{
     73              				last_disp_state = JERK_UI;
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000116   0x2035             MOVS     R0,#+53
   \   00000118   0x7008             STRB     R0,[R1, #+0]
     74              				Clear_Jerk();
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000011E   0x6940             LDR      R0,[R0, #+20]
   \   00000120   0x.... 0x....      BL       GUI_SetBkColor
   \   00000124   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000128   0x.... 0x....      BL       WM_IsWindow
   \   0000012C   0xB118             CBZ.N    R0,??cbJerkWin_13
   \   0000012E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000132   0x.... 0x....      BL       WM_DeleteWindow
     75                				value=ZJerk;
   \                     ??cbJerkWin_13: (+1)
   \   00000136   0x2031             MOVS     R0,#+49
   \   00000138   0xE016             B.N      ??cbJerkWin_9
     76                              draw_NumberKey();            
     77              		
     78              			}       
     79              			else if(pMsg->hWinSrc == EJerk_value.btnHandle)
   \                     ??cbJerkWin_12: (+1)
   \   0000013A   0xF9B1 0x1018      LDRSH    R1,[R1, #+24]
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xD11D             BNE.N    ??cbJerkWin_1
     80          
     81              			{
     82              				last_disp_state = JERK_UI;
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000146   0x2035             MOVS     R0,#+53
   \   00000148   0x7008             STRB     R0,[R1, #+0]
     83              				Clear_Jerk();
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   0000014E   0x6940             LDR      R0,[R0, #+20]
   \   00000150   0x.... 0x....      BL       GUI_SetBkColor
   \   00000154   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000158   0x.... 0x....      BL       WM_IsWindow
   \   0000015C   0xB118             CBZ.N    R0,??cbJerkWin_14
   \   0000015E   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000162   0x.... 0x....      BL       WM_DeleteWindow
     84                				value=EJerk;
   \                     ??cbJerkWin_14: (+1)
   \   00000166   0x2032             MOVS     R0,#+50
   \                     ??cbJerkWin_9: (+1)
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable5_6
   \   0000016C   0x7008             STRB     R0,[R1, #+0]
     85                              draw_NumberKey();
   \   0000016E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000172   0x.... 0x....      B.W      draw_NumberKey
     86          
     87          
     88              			} 
     89                          #if 0
     90              			else if(pMsg->hWinSrc == XJerk_default.btnHandle)
     91          
     92              			{
     93              				last_disp_state = JERK_UI;
     94              				Clear_Jerk();
     95          
     96              			} 
     97              			else if(pMsg->hWinSrc == YJerk_default.btnHandle)
     98          
     99              			{
    100              				last_disp_state = JERK_UI;
    101              				Clear_Jerk();
    102          
    103              			}  
    104              			else if(pMsg->hWinSrc == ZJerk_default.btnHandle)
    105          
    106              			{
    107              				last_disp_state = JERK_UI;
    108              				Clear_Jerk();
    109          
    110              			} 
    111              			else if(pMsg->hWinSrc == EJerk_default.btnHandle)
    112          
    113              			{
    114              				last_disp_state = JERK_UI;
    115              				Clear_Jerk();
    116          
    117              			}   
    118                           #endif
    119              		}
    120              		break;
    121              		
    122              	default:
    123              		WM_DefaultProc(pMsg);
   \                     ??cbJerkWin_4: (+1)
   \   00000176   0xE8BD 0x4010      POP      {R4,LR}
   \   0000017A   0x.... 0x....      B.W      WM_DefaultProc
    124              	}
    125          }
   \                     ??cbJerkWin_1: (+1)
   \   0000017E   0xBD10             POP      {R4,PC}          ;; return
    126          
    127          

   \                                 In section .text, align 2, keep-with-next
    128          void draw_Jerk()
    129          {   
   \                     draw_Jerk: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    130              int i;
                         ^
Warning[Pe177]: variable "i" was declared but never referenced

  static BUTTON_STRUCT XJerk_default,YJerk_default,ZJerk_default,EJerk_default;
                       ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp",14  Warning[Pe177]: 
          variable "XJerk_default" was declared but never referenced

  static BUTTON_STRUCT XJerk_default,YJerk_default,ZJerk_default,EJerk_default;
                                     ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp",14  Warning[Pe177]: 
          variable "YJerk_default" was declared but never referenced

  static BUTTON_STRUCT XJerk_default,YJerk_default,ZJerk_default,EJerk_default;
                                                   ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp",14  Warning[Pe177]: 
          variable "ZJerk_default" was declared but never referenced

  static BUTTON_STRUCT XJerk_default,YJerk_default,ZJerk_default,EJerk_default;
                                                                 ^
"D:\MKS-Robin-Nano-Firmware-v2.x.x\MKS-Robin-Nano-Firmware\User\ui\draw_jerk.cpp",14  Warning[Pe177]: 
          variable "EJerk_default" was declared but never referenced
    131              
    132              if(disp_state_stack._disp_state[disp_state_stack._disp_index] != JERK_UI)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000008   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A35             CMP      R2,#+53
   \   00000012   0xD005             BEQ.N    ??draw_Jerk_0
    133              {
    134                  disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    135                  disp_state_stack._disp_state[disp_state_stack._disp_index] = JERK_UI;
   \   0000001A   0x2235             MOVS     R2,#+53
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    136              }
    137              disp_state = JERK_UI;
   \                     ??draw_Jerk_0: (+1)
   \   00000020   0x2035             MOVS     R0,#+53
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable5_8
    138              
    139              GUI_SetBkColor(gCfgItems.background_color);
   \   00000026   0x.... 0x....      LDR.W    R7,??DataTable5_4
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
   \   0000002C   0x1D3D             ADDS     R5,R7,#+4
   \   0000002E   0x6928             LDR      R0,[R5, #+16]
   \   00000030   0x.... 0x....      BL       GUI_SetBkColor
    140              GUI_SetColor(gCfgItems.title_color);
   \   00000034   0x6968             LDR      R0,[R5, #+20]
   \   00000036   0x.... 0x....      BL       GUI_SetColor
    141              GUI_Clear();
   \   0000003A   0x.... 0x....      BL       GUI_Clear
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000042   0xF8D0 0x01B4      LDR      R0,[R0, #+436]
   \   00000046   0x2205             MOVS     R2,#+5
   \   00000048   0x2103             MOVS     R1,#+3
    142              
    143              GUI_DispStringAt(machine_menu.JerkConfTitle, TITLE_XPOS, TITLE_YPOS);
   \   0000004A   0x.... 0x....      BL       GUI_DispStringAt
    144          
    145              hJerkWnd = WM_CreateWindow(0, 0, LCD_WIDTH, LCD_HEIGHT, WM_CF_SHOW, cbJerkWin, 0);
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x9002             STR      R0,[SP, #+8]
   \   00000052   0xF44F 0x73A0      MOV      R3,#+320
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   0000005A   0x.... 0x....      LDR.W    R4,??DataTable5_2
   \   0000005E   0x9001             STR      R0,[SP, #+4]
   \   00000060   0xF44F 0x72F0      MOV      R2,#+480
   \   00000064   0x2002             MOVS     R0,#+2
   \   00000066   0x9000             STR      R0,[SP, #+0]
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      BL       WM_CreateWindow
   \   00000070   0x8020             STRH     R0,[R4, #+0]
    146          
    147              XJerk_text.btnHandle = BUTTON_CreateEx(10,50,240,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000072   0x.... 0x....      BL       alloc_win_id
   \   00000076   0x9003             STR      R0,[SP, #+12]
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x9002             STR      R0,[SP, #+8]
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x9001             STR      R0,[SP, #+4]
   \   00000080   0x2328             MOVS     R3,#+40
   \   00000082   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000086   0x.... 0x....      LDR.W    R8,??DataTable5_11
   \   0000008A   0x9000             STR      R0,[SP, #+0]
   \   0000008C   0x22F0             MOVS     R2,#+240
   \   0000008E   0x2132             MOVS     R1,#+50
   \   00000090   0x200A             MOVS     R0,#+10
   \   00000092   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000096   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    148              //XJerk_value.btnHandle = BUTTON_CreateEx(270,50,90,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    149              XJerk_value.btnHandle = BUTTON_CreateEx(400,50+5,VALUE_DEFAULT_X,VALUE_DEFAULT_Y,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000009A   0x.... 0x....      BL       alloc_win_id
   \   0000009E   0x9003             STR      R0,[SP, #+12]
   \   000000A0   0x231C             MOVS     R3,#+28
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x9002             STR      R0,[SP, #+8]
   \   000000A6   0x2246             MOVS     R2,#+70
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x9001             STR      R0,[SP, #+4]
   \   000000AC   0x2137             MOVS     R1,#+55
   \   000000AE   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000B2   0x9000             STR      R0,[SP, #+0]
   \   000000B4   0xF44F 0x70C8      MOV      R0,#+400
   \   000000B8   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000BC   0x80A0             STRH     R0,[R4, #+4]
    150          
    151              YJerk_text.btnHandle = BUTTON_CreateEx(10,100,240,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000BE   0x.... 0x....      BL       alloc_win_id
   \   000000C2   0x9003             STR      R0,[SP, #+12]
   \   000000C4   0x2328             MOVS     R3,#+40
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x9002             STR      R0,[SP, #+8]
   \   000000CA   0x22F0             MOVS     R2,#+240
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x9001             STR      R0,[SP, #+4]
   \   000000D0   0x2164             MOVS     R1,#+100
   \   000000D2   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000D6   0x9000             STR      R0,[SP, #+0]
   \   000000D8   0x200A             MOVS     R0,#+10
   \   000000DA   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000DE   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    152              //YJerk_value.btnHandle = BUTTON_CreateEx(270,100,90,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    153              YJerk_value.btnHandle = BUTTON_CreateEx(400,100+5,VALUE_DEFAULT_X,VALUE_DEFAULT_Y,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000000E2   0x.... 0x....      BL       alloc_win_id
   \   000000E6   0x9003             STR      R0,[SP, #+12]
   \   000000E8   0x231C             MOVS     R3,#+28
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x9002             STR      R0,[SP, #+8]
   \   000000EE   0x2246             MOVS     R2,#+70
   \   000000F0   0x2002             MOVS     R0,#+2
   \   000000F2   0x9001             STR      R0,[SP, #+4]
   \   000000F4   0x2169             MOVS     R1,#+105
   \   000000F6   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000000FA   0x9000             STR      R0,[SP, #+0]
   \   000000FC   0xF44F 0x70C8      MOV      R0,#+400
   \   00000100   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000104   0x83A0             STRH     R0,[R4, #+28]
    154          
    155              ZJerk_text.btnHandle = BUTTON_CreateEx(10,150,240,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000106   0x.... 0x....      BL       alloc_win_id
   \   0000010A   0x9003             STR      R0,[SP, #+12]
   \   0000010C   0x2328             MOVS     R3,#+40
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x9002             STR      R0,[SP, #+8]
   \   00000112   0x22F0             MOVS     R2,#+240
   \   00000114   0x2002             MOVS     R0,#+2
   \   00000116   0x9001             STR      R0,[SP, #+4]
   \   00000118   0x2196             MOVS     R1,#+150
   \   0000011A   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000011E   0x9000             STR      R0,[SP, #+0]
   \   00000120   0x200A             MOVS     R0,#+10
   \   00000122   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000126   0xF8A8 0x0030      STRH     R0,[R8, #+48]
    156              //ZJerk_value.btnHandle = BUTTON_CreateEx(270,150,90,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    157              ZJerk_value.btnHandle = BUTTON_CreateEx(400,150+5,VALUE_DEFAULT_X,VALUE_DEFAULT_Y,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000012A   0x.... 0x....      BL       alloc_win_id
   \   0000012E   0x9003             STR      R0,[SP, #+12]
   \   00000130   0x2000             MOVS     R0,#+0
   \   00000132   0x9002             STR      R0,[SP, #+8]
   \   00000134   0x2002             MOVS     R0,#+2
   \   00000136   0x9001             STR      R0,[SP, #+4]
   \   00000138   0x231C             MOVS     R3,#+28
   \   0000013A   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000013E   0x....             LDR.N    R6,??DataTable5_5
   \   00000140   0x9000             STR      R0,[SP, #+0]
   \   00000142   0x2246             MOVS     R2,#+70
   \   00000144   0x219B             MOVS     R1,#+155
   \   00000146   0xF44F 0x70C8      MOV      R0,#+400
   \   0000014A   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000014E   0x8030             STRH     R0,[R6, #+0]
    158          
    159              EJerk_text.btnHandle = BUTTON_CreateEx(10,200,240,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000150   0x.... 0x....      BL       alloc_win_id
   \   00000154   0x9003             STR      R0,[SP, #+12]
   \   00000156   0x2328             MOVS     R3,#+40
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x9002             STR      R0,[SP, #+8]
   \   0000015C   0x22F0             MOVS     R2,#+240
   \   0000015E   0x2002             MOVS     R0,#+2
   \   00000160   0x9001             STR      R0,[SP, #+4]
   \   00000162   0x21C8             MOVS     R1,#+200
   \   00000164   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000168   0x9000             STR      R0,[SP, #+0]
   \   0000016A   0x200A             MOVS     R0,#+10
   \   0000016C   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000170   0xF8A8 0x0048      STRH     R0,[R8, #+72]
    160              //EJerk_value.btnHandle = BUTTON_CreateEx(270,200,90,40,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    161              EJerk_value.btnHandle = BUTTON_CreateEx(400,200+5,VALUE_DEFAULT_X,VALUE_DEFAULT_Y,hJerkWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000174   0x.... 0x....      BL       alloc_win_id
   \   00000178   0x9003             STR      R0,[SP, #+12]
   \   0000017A   0x231C             MOVS     R3,#+28
   \   0000017C   0x2000             MOVS     R0,#+0
   \   0000017E   0x9002             STR      R0,[SP, #+8]
   \   00000180   0x2246             MOVS     R2,#+70
   \   00000182   0x2002             MOVS     R0,#+2
   \   00000184   0x9001             STR      R0,[SP, #+4]
   \   00000186   0x21CD             MOVS     R1,#+205
   \   00000188   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000018C   0x9000             STR      R0,[SP, #+0]
   \   0000018E   0xF44F 0x70C8      MOV      R0,#+400
   \   00000192   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000196   0x8330             STRH     R0,[R6, #+24]
    162          
    163              BUTTON_SetBmpFileName(XJerk_value.btnHandle, "bmp_value_blank.bin",1);        
   \   00000198   0x2201             MOVS     R2,#+1
   \   0000019A   0x.... 0x....      ADR.W    R9,`?<Constant "bmp_value_blank.bin">`
   \   0000019E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000001A2   0x4649             MOV      R1,R9
   \   000001A4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    164              BUTTON_SetBmpFileName(YJerk_value.btnHandle, "bmp_value_blank.bin",1);
   \   000001A8   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000001AC   0x2201             MOVS     R2,#+1
   \   000001AE   0x4649             MOV      R1,R9
   \   000001B0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    165              BUTTON_SetBmpFileName(ZJerk_value.btnHandle, "bmp_value_blank.bin",1);
   \   000001B4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000001B8   0x2201             MOVS     R2,#+1
   \   000001BA   0x4649             MOV      R1,R9
   \   000001BC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    166              BUTTON_SetBmpFileName(EJerk_value.btnHandle, "bmp_value_blank.bin",1);
   \   000001C0   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000001C4   0x2201             MOVS     R2,#+1
   \   000001C6   0x4649             MOV      R1,R9
   \   000001C8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    167              //BUTTON_SetBmpFileName(XJerk_default.btnHandle, "bmp_default.bin",1);
    168              //BUTTON_SetBmpFileName(YJerk_default.btnHandle, "bmp_default.bin",1);     
    169              //BUTTON_SetBmpFileName(ZJerk_default.btnHandle, "bmp_default.bin",1);
    170              //BUTTON_SetBmpFileName(EJerk_default.btnHandle, "bmp_default.bin",1);  
    171              
    172              BUTTON_SetBmpFileName(XJerk_text.btnHandle,NULL,1);        
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x2201             MOVS     R2,#+1
   \   000001D0   0xF938 0x0001      LDRSH    R0,[R8, R1]
   \   000001D4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    173              BUTTON_SetBmpFileName(YJerk_text.btnHandle,NULL,1);
   \   000001D8   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   000001DC   0x2201             MOVS     R2,#+1
   \   000001DE   0x2100             MOVS     R1,#+0
   \   000001E0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    174              BUTTON_SetBmpFileName(ZJerk_text.btnHandle,NULL,1);
   \   000001E4   0xF9B8 0x0030      LDRSH    R0,[R8, #+48]
   \   000001E8   0x2201             MOVS     R2,#+1
   \   000001EA   0x2100             MOVS     R1,#+0
   \   000001EC   0x.... 0x....      BL       BUTTON_SetBmpFileName
    175              BUTTON_SetBmpFileName(EJerk_text.btnHandle,NULL,1);
   \   000001F0   0xF9B8 0x0048      LDRSH    R0,[R8, #+72]
   \   000001F4   0x2201             MOVS     R2,#+1
   \   000001F6   0x2100             MOVS     R1,#+0
   \   000001F8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    176              
    177              BUTTON_SetBitmapEx(XJerk_value.btnHandle,0,&bmp_struct70X28,0,0);
   \   000001FC   0x2000             MOVS     R0,#+0
   \   000001FE   0x9000             STR      R0,[SP, #+0]
   \   00000200   0x4603             MOV      R3,R0
   \   00000202   0x4601             MOV      R1,R0
   \   00000204   0x.... 0x....      LDR.W    R9,??DataTable5_12
   \   00000208   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000020C   0x464A             MOV      R2,R9
   \   0000020E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    178              BUTTON_SetBitmapEx(YJerk_value.btnHandle,0,&bmp_struct70X28,0,0);
   \   00000212   0x2000             MOVS     R0,#+0
   \   00000214   0x9000             STR      R0,[SP, #+0]
   \   00000216   0x4603             MOV      R3,R0
   \   00000218   0x4601             MOV      R1,R0
   \   0000021A   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000021E   0x464A             MOV      R2,R9
   \   00000220   0x.... 0x....      BL       BUTTON_SetBitmapEx
    179              BUTTON_SetBitmapEx(ZJerk_value.btnHandle,0,&bmp_struct70X28,0,0);
   \   00000224   0x2000             MOVS     R0,#+0
   \   00000226   0x9000             STR      R0,[SP, #+0]
   \   00000228   0x4603             MOV      R3,R0
   \   0000022A   0x4601             MOV      R1,R0
   \   0000022C   0x5E30             LDRSH    R0,[R6, R0]
   \   0000022E   0x464A             MOV      R2,R9
   \   00000230   0x.... 0x....      BL       BUTTON_SetBitmapEx
    180              BUTTON_SetBitmapEx(EJerk_value.btnHandle,0,&bmp_struct70X28,0,0); 
   \   00000234   0x2000             MOVS     R0,#+0
   \   00000236   0x9000             STR      R0,[SP, #+0]
   \   00000238   0x4603             MOV      R3,R0
   \   0000023A   0x4601             MOV      R1,R0
   \   0000023C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000240   0x464A             MOV      R2,R9
   \   00000242   0x.... 0x....      BL       BUTTON_SetBitmapEx
    181              //BUTTON_SetBitmapEx(XJerk_default.btnHandle,0,&bmp_struct90X30,0,5);
    182              //BUTTON_SetBitmapEx(YJerk_default.btnHandle,0,&bmp_struct90X30,0,5);
    183              //BUTTON_SetBitmapEx(ZJerk_default.btnHandle,0,&bmp_struct90X30,0,5);
    184              //BUTTON_SetBitmapEx(EJerk_default.btnHandle,0,&bmp_struct90X30,0,5); 
    185          
    186              
    187              BUTTON_SetTextAlign(XJerk_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   00000246   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000024A   0x210C             MOVS     R1,#+12
   \   0000024C   0x.... 0x....      BL       BUTTON_SetTextAlign
    188              BUTTON_SetTextAlign(YJerk_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   00000250   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000254   0x210C             MOVS     R1,#+12
   \   00000256   0x.... 0x....      BL       BUTTON_SetTextAlign
    189              BUTTON_SetTextAlign(ZJerk_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );
   \   0000025A   0xF9B8 0x0030      LDRSH    R0,[R8, #+48]
   \   0000025E   0x210C             MOVS     R1,#+12
   \   00000260   0x.... 0x....      BL       BUTTON_SetTextAlign
    190              BUTTON_SetTextAlign(EJerk_text.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER );   
   \   00000264   0xF9B8 0x0048      LDRSH    R0,[R8, #+72]
   \   00000268   0x210C             MOVS     R1,#+12
   \   0000026A   0x.... 0x....      BL       BUTTON_SetTextAlign
    191          
    192               BUTTON_SetTextAlign(XJerk_value.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   0000026E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000272   0x210E             MOVS     R1,#+14
   \   00000274   0x.... 0x....      BL       BUTTON_SetTextAlign
    193               BUTTON_SetTextAlign(YJerk_value.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   00000278   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000027C   0x210E             MOVS     R1,#+14
   \   0000027E   0x.... 0x....      BL       BUTTON_SetTextAlign
    194               BUTTON_SetTextAlign(ZJerk_value.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   00000282   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000286   0x210E             MOVS     R1,#+14
   \   00000288   0x.... 0x....      BL       BUTTON_SetTextAlign
    195               BUTTON_SetTextAlign(EJerk_value.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   0000028C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000290   0x210E             MOVS     R1,#+14
   \   00000292   0x.... 0x....      BL       BUTTON_SetTextAlign
    196               
    197               BUTTON_SetBkColor(XJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_bk_color);
   \   00000296   0x687A             LDR      R2,[R7, #+4]
   \   00000298   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000029C   0x2101             MOVS     R1,#+1
   \   0000029E   0x.... 0x....      BL       BUTTON_SetBkColor
    198               BUTTON_SetBkColor(XJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_bk_color); 
   \   000002A2   0x687A             LDR      R2,[R7, #+4]
   \   000002A4   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000002A8   0x2100             MOVS     R1,#+0
   \   000002AA   0x.... 0x....      BL       BUTTON_SetBkColor
    199               BUTTON_SetTextColor(XJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_text_color);
   \   000002AE   0x686A             LDR      R2,[R5, #+4]
   \   000002B0   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000002B4   0x2101             MOVS     R1,#+1
   \   000002B6   0x.... 0x....      BL       BUTTON_SetTextColor
    200               BUTTON_SetTextColor(XJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_text_color); 
   \   000002BA   0x686A             LDR      R2,[R5, #+4]
   \   000002BC   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   000002C0   0x2100             MOVS     R1,#+0
   \   000002C2   0x.... 0x....      BL       BUTTON_SetTextColor
    201          
    202               BUTTON_SetBkColor(YJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_bk_color);
   \   000002C6   0x687A             LDR      R2,[R7, #+4]
   \   000002C8   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000002CC   0x2101             MOVS     R1,#+1
   \   000002CE   0x.... 0x....      BL       BUTTON_SetBkColor
    203               BUTTON_SetBkColor(YJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_bk_color); 
   \   000002D2   0x687A             LDR      R2,[R7, #+4]
   \   000002D4   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000002D8   0x2100             MOVS     R1,#+0
   \   000002DA   0x.... 0x....      BL       BUTTON_SetBkColor
    204               BUTTON_SetTextColor(YJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_text_color);
   \   000002DE   0x686A             LDR      R2,[R5, #+4]
   \   000002E0   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000002E4   0x2101             MOVS     R1,#+1
   \   000002E6   0x.... 0x....      BL       BUTTON_SetTextColor
    205               BUTTON_SetTextColor(YJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_text_color); 
   \   000002EA   0x686A             LDR      R2,[R5, #+4]
   \   000002EC   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000002F0   0x2100             MOVS     R1,#+0
   \   000002F2   0x.... 0x....      BL       BUTTON_SetTextColor
    206          
    207               BUTTON_SetBkColor(ZJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_bk_color);
   \   000002F6   0x687A             LDR      R2,[R7, #+4]
   \   000002F8   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002FC   0x2101             MOVS     R1,#+1
   \   000002FE   0x.... 0x....      BL       BUTTON_SetBkColor
    208               BUTTON_SetBkColor(ZJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_bk_color); 
   \   00000302   0x2100             MOVS     R1,#+0
   \   00000304   0x687A             LDR      R2,[R7, #+4]
   \   00000306   0x5E70             LDRSH    R0,[R6, R1]
   \   00000308   0x.... 0x....      BL       BUTTON_SetBkColor
    209               BUTTON_SetTextColor(ZJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_text_color);
   \   0000030C   0x686A             LDR      R2,[R5, #+4]
   \   0000030E   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000312   0x2101             MOVS     R1,#+1
   \   00000314   0x.... 0x....      BL       BUTTON_SetTextColor
    210               BUTTON_SetTextColor(ZJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_text_color); 
   \   00000318   0x2100             MOVS     R1,#+0
   \   0000031A   0x686A             LDR      R2,[R5, #+4]
   \   0000031C   0x5E70             LDRSH    R0,[R6, R1]
   \   0000031E   0x.... 0x....      BL       BUTTON_SetTextColor
    211          
    212               BUTTON_SetBkColor(EJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_bk_color);
   \   00000322   0x687A             LDR      R2,[R7, #+4]
   \   00000324   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000328   0x2101             MOVS     R1,#+1
   \   0000032A   0x.... 0x....      BL       BUTTON_SetBkColor
    213               BUTTON_SetBkColor(EJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_bk_color); 
   \   0000032E   0x687A             LDR      R2,[R7, #+4]
   \   00000330   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000334   0x2100             MOVS     R1,#+0
   \   00000336   0x.... 0x....      BL       BUTTON_SetBkColor
    214               BUTTON_SetTextColor(EJerk_value.btnHandle, BUTTON_CI_PRESSED, gCfgItems.value_text_color);
   \   0000033A   0x686A             LDR      R2,[R5, #+4]
   \   0000033C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000340   0x2101             MOVS     R1,#+1
   \   00000342   0x.... 0x....      BL       BUTTON_SetTextColor
    215               BUTTON_SetTextColor(EJerk_value.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.value_text_color); 
   \   00000346   0x686A             LDR      R2,[R5, #+4]
   \   00000348   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000034C   0x2100             MOVS     R1,#+0
   \   0000034E   0x.... 0x....      BL       BUTTON_SetTextColor
    216          
    217               memset(cmd_code,0,sizeof(cmd_code));
   \   00000352   0x.... 0x....      LDR.W    R9,??DataTable5_13
   \   00000356   0x21C9             MOVS     R1,#+201
   \   00000358   0x4648             MOV      R0,R9
   \   0000035A   0x.... 0x....      BL       __aeabi_memclr
    218               sprintf(cmd_code,"%.1f",planner.max_jerk[X_AXIS]);
   \   0000035E   0x.... 0x....      LDR.W    R10,??DataTable5_14
   \   00000362   0x.... 0x....      ADR.W    R11,`?<Constant "%.1f">`
   \   00000366   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \   0000036A   0x.... 0x....      BL       __aeabi_f2d
   \   0000036E   0x4602             MOV      R2,R0
   \   00000370   0x460B             MOV      R3,R1
   \   00000372   0x4659             MOV      R1,R11
   \   00000374   0x4648             MOV      R0,R9
   \   00000376   0x.... 0x....      BL       sprintf
    219               BUTTON_SetText(XJerk_value.btnHandle,cmd_code); 
   \   0000037A   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000037E   0x4649             MOV      R1,R9
   \   00000380   0x.... 0x....      BL       BUTTON_SetText
    220               memset(cmd_code,0,sizeof(cmd_code));
   \   00000384   0x21C9             MOVS     R1,#+201
   \   00000386   0x4648             MOV      R0,R9
   \   00000388   0x.... 0x....      BL       __aeabi_memclr
    221               sprintf(cmd_code,"%.1f",planner.max_jerk[Y_AXIS]);
   \   0000038C   0xF8DA 0x0004      LDR      R0,[R10, #+4]
   \   00000390   0x.... 0x....      BL       __aeabi_f2d
   \   00000394   0x4602             MOV      R2,R0
   \   00000396   0x460B             MOV      R3,R1
   \   00000398   0x4659             MOV      R1,R11
   \   0000039A   0x4648             MOV      R0,R9
   \   0000039C   0x.... 0x....      BL       sprintf
    222               BUTTON_SetText(YJerk_value.btnHandle,cmd_code); 
   \   000003A0   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   000003A4   0x4649             MOV      R1,R9
   \   000003A6   0x.... 0x....      BL       BUTTON_SetText
    223               memset(cmd_code,0,sizeof(cmd_code));
   \   000003AA   0x21C9             MOVS     R1,#+201
   \   000003AC   0x4648             MOV      R0,R9
   \   000003AE   0x.... 0x....      BL       __aeabi_memclr
    224               sprintf(cmd_code,"%.1f",planner.max_jerk[Z_AXIS]);
   \   000003B2   0xF8DA 0x0008      LDR      R0,[R10, #+8]
   \   000003B6   0x.... 0x....      BL       __aeabi_f2d
   \   000003BA   0x4602             MOV      R2,R0
   \   000003BC   0x460B             MOV      R3,R1
   \   000003BE   0x4659             MOV      R1,R11
   \   000003C0   0x4648             MOV      R0,R9
   \   000003C2   0x.... 0x....      BL       sprintf
    225               BUTTON_SetText(ZJerk_value.btnHandle,cmd_code); 
   \   000003C6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000003CA   0x4649             MOV      R1,R9
   \   000003CC   0x.... 0x....      BL       BUTTON_SetText
    226               memset(cmd_code,0,sizeof(cmd_code));
   \   000003D0   0x21C9             MOVS     R1,#+201
   \   000003D2   0x4648             MOV      R0,R9
   \   000003D4   0x.... 0x....      BL       __aeabi_memclr
    227               sprintf(cmd_code,"%.1f",planner.max_jerk[E_AXIS]);
   \   000003D8   0xF8DA 0x000C      LDR      R0,[R10, #+12]
   \   000003DC   0x.... 0x....      BL       __aeabi_f2d
   \   000003E0   0x4602             MOV      R2,R0
   \   000003E2   0x460B             MOV      R3,R1
   \   000003E4   0x4659             MOV      R1,R11
   \   000003E6   0x4648             MOV      R0,R9
   \   000003E8   0x.... 0x....      BL       sprintf
    228               BUTTON_SetText(EJerk_value.btnHandle,cmd_code); 
   \   000003EC   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000003F0   0x4649             MOV      R1,R9
   \   000003F2   0x.... 0x....      BL       BUTTON_SetText
    229          
    230               button_back.btnHandle = BUTTON_CreateEx(400,270,70,40,hJerkWnd,BUTTON_CF_SHOW,0,alloc_win_id());
   \   000003F6   0x.... 0x....      BL       alloc_win_id
   \   000003FA   0x9003             STR      R0,[SP, #+12]
   \   000003FC   0x2328             MOVS     R3,#+40
   \   000003FE   0x2000             MOVS     R0,#+0
   \   00000400   0x9002             STR      R0,[SP, #+8]
   \   00000402   0x2246             MOVS     R2,#+70
   \   00000404   0x2002             MOVS     R0,#+2
   \   00000406   0x9001             STR      R0,[SP, #+4]
   \   00000408   0xF44F 0x7187      MOV      R1,#+270
   \   0000040C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000410   0x9000             STR      R0,[SP, #+0]
   \   00000412   0xF44F 0x70C8      MOV      R0,#+400
   \   00000416   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000041A   0x....             LDR.N    R4,??DataTable5_1
    231               
    232               BUTTON_SetBmpFileName(button_back.btnHandle, "bmp_back70x40.bin",1);        
   \   0000041C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_back70x40.bin">`
   \   00000420   0x8020             STRH     R0,[R4, #+0]
   \   00000422   0x2201             MOVS     R2,#+1
   \   00000424   0x.... 0x....      BL       BUTTON_SetBmpFileName
    233               BUTTON_SetBitmapEx(button_back.btnHandle, 0, &bmp_struct70X40,0, 0);
   \   00000428   0x2000             MOVS     R0,#+0
   \   0000042A   0x9000             STR      R0,[SP, #+0]
   \   0000042C   0x4603             MOV      R3,R0
   \   0000042E   0x4601             MOV      R1,R0
   \   00000430   0x5E20             LDRSH    R0,[R4, R0]
   \   00000432   0x....             LDR.N    R2,??DataTable5_15
   \   00000434   0x.... 0x....      BL       BUTTON_SetBitmapEx
    234                  
    235               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   00000438   0x6CAA             LDR      R2,[R5, #+72]
   \   0000043A   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000043E   0x2101             MOVS     R1,#+1
   \   00000440   0x.... 0x....      BL       BUTTON_SetBkColor
    236               BUTTON_SetBkColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color); 
   \   00000444   0x2100             MOVS     R1,#+0
   \   00000446   0x6CAA             LDR      R2,[R5, #+72]
   \   00000448   0x5E60             LDRSH    R0,[R4, R1]
   \   0000044A   0x.... 0x....      BL       BUTTON_SetBkColor
    237               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   0000044E   0x6CEA             LDR      R2,[R5, #+76]
   \   00000450   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000454   0x2101             MOVS     R1,#+1
   \   00000456   0x.... 0x....      BL       BUTTON_SetTextColor
    238               BUTTON_SetTextColor(button_back.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor); 
   \   0000045A   0x2100             MOVS     R1,#+0
   \   0000045C   0x6CEA             LDR      R2,[R5, #+76]
   \   0000045E   0x5E60             LDRSH    R0,[R4, R1]
   \   00000460   0x.... 0x....      BL       BUTTON_SetTextColor
    239               
    240               BUTTON_SetTextAlign(button_back.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER );
   \   00000464   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000468   0x210E             MOVS     R1,#+14
   \   0000046A   0x.... 0x....      BL       BUTTON_SetTextAlign
    241          
    242               if(gCfgItems.multiple_language != 0)
   \   0000046E   0xF897 0x01CF      LDRB     R0,[R7, #+463]
   \   00000472   0xB1E8             CBZ.N    R0,??draw_Jerk_1
    243               {
    244                      BUTTON_SetText(XJerk_text.btnHandle, machine_menu.X_Jerk);
   \   00000474   0x....             LDR.N    R6,??DataTable5_16
   \   00000476   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000047A   0x6871             LDR      R1,[R6, #+4]
   \   0000047C   0x.... 0x....      BL       BUTTON_SetText
    245                      BUTTON_SetText(YJerk_text.btnHandle, machine_menu.Y_Jerk);
   \   00000480   0x68B1             LDR      R1,[R6, #+8]
   \   00000482   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000486   0x.... 0x....      BL       BUTTON_SetText
    246                      BUTTON_SetText(ZJerk_text.btnHandle, machine_menu.Z_Jerk);
   \   0000048A   0x68F1             LDR      R1,[R6, #+12]
   \   0000048C   0xF9B8 0x0030      LDRSH    R0,[R8, #+48]
   \   00000490   0x.... 0x....      BL       BUTTON_SetText
    247                      BUTTON_SetText(EJerk_text.btnHandle, machine_menu.E_Jerk); 
   \   00000494   0x6931             LDR      R1,[R6, #+16]
   \   00000496   0xF9B8 0x0048      LDRSH    R0,[R8, #+72]
   \   0000049A   0x.... 0x....      BL       BUTTON_SetText
    248                   
    249                      BUTTON_SetText(button_back.btnHandle,common_menu.text_back);
   \   0000049E   0x....             LDR.N    R0,??DataTable5_17
   \   000004A0   0x6801             LDR      R1,[R0, #+0]
   \   000004A2   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   000004A6   0xB005             ADD      SP,SP,#+20
   \   000004A8   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   000004AC   0x.... 0x....      B.W      BUTTON_SetText
    250                  
    251                        
    252               }
    253          
    254          }
   \                     ??draw_Jerk_1: (+1)
   \   000004B0   0xB005             ADD      SP,SP,#+20
   \   000004B2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    255          
    256          

   \                                 In section .text, align 2, keep-with-next
    257          void Clear_Jerk()
    258          {
   \                     Clear_Jerk: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    259          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable5_4
   \   00000004   0x6940             LDR      R0,[R0, #+20]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    260          	if(WM_IsWindow(hJerkWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable5_2
   \   0000000C   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0xB128             CBZ.N    R0,??Clear_Jerk_0
    261          	{
    262          		WM_DeleteWindow(hJerkWnd);
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      WM_DeleteWindow
    263          	}
    264          }
   \                     ??Clear_Jerk_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x00FF5449         DC32     0xff5449

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     button_back

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     hJerkWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ZJerk_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     machine_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     _Z9cbJerkWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     XJerk_text

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     bmp_struct70X28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     cmd_code

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     _ZN7Planner8max_jerkE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x........         DC32     bmp_struct70X40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x........         DC32     machine_menu+0x1B4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_value_blank.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_value_blank.bin"
   \              0x70 0x5F    
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x5F    
   \              0x62 0x6C    
   \              0x61 0x6E    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.1f">`:
   \   00000000   0x25 0x2E          DC8 "%.1f"
   \              0x31 0x66    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_back70x40.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_back70x40.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x37 0x30    
   \              0x78 0x34    
   \              0x30 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0
    265          
    266          
    267          
    268          
    269          
    270          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_Jerk
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
       8   cbJerkWin(WM_MESSAGE *)
         0   -> GUI_FillRect
         8   -> GUI_FillRect
         8   -> GUI_SetBkColor
         8   -> GUI_SetColor
         0   -> WM_DefaultProc
         8   -> WM_DeleteWindow
         8   -> WM_IsWindow
         0   -> draw_NumberKey
         0   -> draw_return_ui
      56   draw_Jerk
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextAlign
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> __aeabi_f2d
        56   -> __aeabi_memclr
        56   -> alloc_win_id
        56   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "%.1f">
      20  ?<Constant "bmp_back70x40.bin">
      20  ?<Constant "bmp_value_blank.bin">
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      36  Clear_Jerk
      96  XJerk_text
          YJerk_text
          ZJerk_text
          EJerk_text
      48  ZJerk_value
          EJerk_value
      24  button_back
     384  cbJerkWin(WM_MESSAGE *)
    1206  draw_Jerk
      52  hJerkWnd
          XJerk_value
          YJerk_value
       1  -- Other

 
   220 bytes in section .bss
     1 byte  in section .rodata
 1 746 bytes in section .text
 
 1 746 bytes of CODE  memory
     0 bytes of CONST memory (+ 1 byte shared)
   220 bytes of DATA  memory

Errors: none
Warnings: 38
